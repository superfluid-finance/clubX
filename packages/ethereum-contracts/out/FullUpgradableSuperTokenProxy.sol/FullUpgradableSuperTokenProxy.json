{
  "abi": [
    {
      "inputs": [],
      "name": "FUSTP_ALREADY_INITIALIZED",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610213806100206000396000f3fe6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea264697066735822122086051d8034c00794367a023c07c3d84d94ab1ea218fd32b28aa2b64df7f6be1264736f6c63430008130033",
    "sourceMap": "296:1000:91:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100225760003560e01c80638129fc1c1461003957610031565b366100315761002f61004e565b005b61002f61004e565b34801561004557600080fd5b5061002f610060565b61005e6100596100d0565b610173565b565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546001600160a01b038116156100aa576040516305c5d81960e01b815260040160405180910390fd5b50337fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a055565b7fb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0546000906001600160a01b03811661010b5761010b610197565b806001600160a01b0316639470a5b26040518163ffffffff1660e01b8152600401602060405180830381865afa158015610149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016d91906101ad565b91505090565b3660008037600080366000845af43d6000803e808015610192573d6000f35b3d6000fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156101bf57600080fd5b81516001600160a01b03811681146101d657600080fd5b939250505056fea264697066735822122086051d8034c00794367a023c07c3d84d94ab1ea218fd32b28aa2b64df7f6be1264736f6c63430008130033",
    "sourceMap": "296:1000:91:-:0;;;;;;;;;;;;;;;;;;;;;;;2898:11:27;:9;:11::i;:::-;296:1000:91;;2675:11:27;:9;:11::i;605:368:91:-;;;;;;;;;;;;;:::i;2322:110:27:-;2397:28;2407:17;:15;:17::i;:::-;2397:9;:28::i;:::-;2322:110::o;605:368:91:-;738:13;732:20;-1:-1:-1;;;;;775:30:91;;;771:70;;814:27;;-1:-1:-1;;;814:27:91;;;;;;;;;;;771:70;-1:-1:-1;861:10:91;934:13;927:30;605:368::o;979:314::-;1161:13;1155:20;1038:12;;-1:-1:-1;;;;;1201:30:91;;1194:38;;;;:::i;:::-;1257:7;-1:-1:-1;;;;;1257:26:91;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1242:44;;;979:314;:::o;948:895:27:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;14:127:118;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:311;237:6;290:2;278:9;269:7;265:23;261:32;258:52;;;306:1;303;296:12;258:52;332:16;;-1:-1:-1;;;;;377:31:118;;367:42;;357:70;;423:1;420;413:12;357:70;446:5;146:311;-1:-1:-1;;;146:311:118:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "initialize()": "8129fc1c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FUSTP_ALREADY_INITIALIZED\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Superfluid\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Full upgradable super token proxy contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":\"FullUpgradableSuperTokenProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "FUSTP_ALREADY_INITIALIZED"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol": "FullUpgradableSuperTokenProxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol": {
        "keccak256": "0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99",
        "urls": [
          "bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660",
          "dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol",
    "id": 70743,
    "exportedSymbols": {
      "FullUpgradableSuperTokenProxy": [
        70742
      ],
      "ISuperTokenFactory": [
        67168
      ],
      "Proxy": [
        43827
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:1262:91",
    "nodes": [
      {
        "id": 70671,
        "nodeType": "PragmaDirective",
        "src": "35:23:91",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 70673,
        "nodeType": "ImportDirective",
        "src": "60:85:91",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol",
        "file": "../interfaces/superfluid/ISuperTokenFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70743,
        "sourceUnit": 67169,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70672,
              "name": "ISuperTokenFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67168,
              "src": "69:18:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70675,
        "nodeType": "ImportDirective",
        "src": "146:64:91",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 70743,
        "sourceUnit": 43828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 70674,
              "name": "Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43827,
              "src": "155:5:91",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 70742,
        "nodeType": "ContractDefinition",
        "src": "296:1000:91",
        "nodes": [
          {
            "id": 70681,
            "nodeType": "VariableDeclaration",
            "src": "450:108:91",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "_FACTORY_SLOT",
            "nameLocation": "476:13:91",
            "scope": 70742,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 70679,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "450:7:91",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307862386663643537313962336464663836323666333636343730356138396237666334373631323961353863316161356564613537633630306363313832316130",
              "id": 70680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:66:91",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_83672282734439866432251741803922881230589350856051288581439071895558452421024_by_1",
                "typeString": "int_const 8367...(69 digits omitted)...1024"
              },
              "value": "0xb8fcd5719b3ddf8626f3664705a89b7fc476129a58c1aa5eda57c600cc1821a0"
            },
            "visibility": "internal"
          },
          {
            "id": 70683,
            "nodeType": "ErrorDefinition",
            "src": "565:34:91",
            "nodes": [],
            "errorSelector": "05c5d819",
            "name": "FUSTP_ALREADY_INITIALIZED",
            "nameLocation": "571:25:91",
            "parameters": {
              "id": 70682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:2:91"
            }
          },
          {
            "id": 70710,
            "nodeType": "FunctionDefinition",
            "src": "605:368:91",
            "nodes": [],
            "body": {
              "id": 70709,
              "nodeType": "Block",
              "src": "640:333:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70687,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "658:7:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 70709,
                      "src": "650:15:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70686,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "650:7:91",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70688,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "650:15:91"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "684:78:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "721:31:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "738:13:91"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "732:5:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "732:20:91"
                        },
                        "variableNames": [
                          {
                            "name": "factory",
                            "nodeType": "YulIdentifier",
                            "src": "721:7:91"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 70681,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "738:13:91",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70687,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "721:7:91",
                      "valueSize": 1
                    }
                  ],
                  "id": 70689,
                  "nodeType": "InlineAssembly",
                  "src": "675:87:91"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 70698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 70692,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70687,
                          "src": "783:7:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 70691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "775:7:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 70690,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "775:7:91",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 70693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "775:16:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 70696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "803:1:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 70695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "795:7:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 70694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:7:91",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 70697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "795:10:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "775:30:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 70702,
                  "nodeType": "IfStatement",
                  "src": "771:70:91",
                  "trueBody": {
                    "errorCall": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 70699,
                        "name": "FUSTP_ALREADY_INITIALIZED",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70683,
                        "src": "814:25:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 70700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "814:27:91",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 70701,
                    "nodeType": "RevertStatement",
                    "src": "807:34:91"
                  }
                },
                {
                  "expression": {
                    "id": 70706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 70703,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70687,
                      "src": "851:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 70704,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "861:3:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "865:6:91",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "861:10:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "851:20:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 70707,
                  "nodeType": "ExpressionStatement",
                  "src": "851:20:91"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "890:77:91",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "934:13:91"
                            },
                            {
                              "name": "factory",
                              "nodeType": "YulIdentifier",
                              "src": "949:7:91"
                            }
                          ],
                          "functionName": {
                            "name": "sstore",
                            "nodeType": "YulIdentifier",
                            "src": "927:6:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "927:30:91"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "927:30:91"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 70681,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "934:13:91",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70687,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "949:7:91",
                      "valueSize": 1
                    }
                  ],
                  "id": 70708,
                  "nodeType": "InlineAssembly",
                  "src": "881:86:91"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "614:10:91",
            "parameters": {
              "id": 70684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:2:91"
            },
            "returnParameters": {
              "id": 70685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "640:0:91"
            },
            "scope": 70742,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 70741,
            "nodeType": "FunctionDefinition",
            "src": "979:314:91",
            "nodes": [],
            "body": {
              "id": 70740,
              "nodeType": "Block",
              "src": "1052:241:91",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    70718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70718,
                      "mutability": "mutable",
                      "name": "factory",
                      "nameLocation": "1081:7:91",
                      "nodeType": "VariableDeclaration",
                      "scope": 70740,
                      "src": "1062:26:91",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperTokenFactory_$67168",
                        "typeString": "contract ISuperTokenFactory"
                      },
                      "typeName": {
                        "id": 70717,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 70716,
                          "name": "ISuperTokenFactory",
                          "nameLocations": [
                            "1062:18:91"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 67168,
                          "src": "1062:18:91"
                        },
                        "referencedDeclaration": 67168,
                        "src": "1062:18:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperTokenFactory_$67168",
                          "typeString": "contract ISuperTokenFactory"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 70719,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1062:26:91"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1107:78:91",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1144:31:91",
                        "value": {
                          "arguments": [
                            {
                              "name": "_FACTORY_SLOT",
                              "nodeType": "YulIdentifier",
                              "src": "1161:13:91"
                            }
                          ],
                          "functionName": {
                            "name": "sload",
                            "nodeType": "YulIdentifier",
                            "src": "1155:5:91"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1155:20:91"
                        },
                        "variableNames": [
                          {
                            "name": "factory",
                            "nodeType": "YulIdentifier",
                            "src": "1144:7:91"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 70681,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1161:13:91",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70718,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1144:7:91",
                      "valueSize": 1
                    }
                  ],
                  "id": 70720,
                  "nodeType": "InlineAssembly",
                  "src": "1098:87:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 70730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 70724,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70718,
                              "src": "1209:7:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperTokenFactory_$67168",
                                "typeString": "contract ISuperTokenFactory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ISuperTokenFactory_$67168",
                                "typeString": "contract ISuperTokenFactory"
                              }
                            ],
                            "id": 70723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1201:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1201:7:91",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1201:16:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 70728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1229:1:91",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 70727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1221:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 70726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1221:7:91",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 70729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1221:10:91",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1201:30:91",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 70721,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1194:6:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 70731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:38:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70732,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:38:91"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 70735,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70718,
                            "src": "1257:7:91",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperTokenFactory_$67168",
                              "typeString": "contract ISuperTokenFactory"
                            }
                          },
                          "id": 70736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1265:18:91",
                          "memberName": "getSuperTokenLogic",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67075,
                          "src": "1257:26:91",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ISuperToken_$67038_$",
                            "typeString": "function () view external returns (contract ISuperToken)"
                          }
                        },
                        "id": 70737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1257:28:91",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$67038",
                          "typeString": "contract ISuperToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ISuperToken_$67038",
                          "typeString": "contract ISuperToken"
                        }
                      ],
                      "id": 70734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1249:7:91",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 70733,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1249:7:91",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 70738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:37:91",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 70715,
                  "id": 70739,
                  "nodeType": "Return",
                  "src": "1242:44:91"
                }
              ]
            },
            "baseFunctions": [
              43792
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "988:15:91",
            "overrides": {
              "id": 70712,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1015:8:91"
            },
            "parameters": {
              "id": 70711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:91"
            },
            "returnParameters": {
              "id": 70715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70714,
                  "mutability": "mutable",
                  "name": "impl",
                  "nameLocation": "1046:4:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 70741,
                  "src": "1038:12:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1038:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1037:14:91"
            },
            "scope": 70742,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 70677,
              "name": "Proxy",
              "nameLocations": [
                "338:5:91"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43827,
              "src": "338:5:91"
            },
            "id": 70678,
            "nodeType": "InheritanceSpecifier",
            "src": "338:5:91"
          }
        ],
        "canonicalName": "FullUpgradableSuperTokenProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 70676,
          "nodeType": "StructuredDocumentation",
          "src": "213:82:91",
          "text": " @title Full upgradable super token proxy contract\n @author Superfluid"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          70742,
          43827
        ],
        "name": "FullUpgradableSuperTokenProxy",
        "nameLocation": "305:29:91",
        "scope": 70743,
        "usedErrors": [
          70683
        ]
      }
    ],
    "license": "AGPLv3"
  },
  "id": 91
}