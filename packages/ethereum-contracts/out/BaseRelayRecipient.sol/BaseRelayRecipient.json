{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "versionRecipient",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "isTrustedForwarder(address)": "572b6c05",
    "versionRecipient()": "486ff0cd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"versionRecipient\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"A base contract to be inherited by any contract that want to receive relayed transactions      A subclass must use \\\"_msgSender()\\\" instead of \\\"msg.sender\\\"      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol\",\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"details\":\"Check if the forwarder is trusted\"},\"versionRecipient()\":{\"details\":\"EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771\"}},\"title\":\"Base relay recipient contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol\":\"BaseRelayRecipient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol\":{\"keccak256\":\"0x449c94dc19b806af3ff12ac121c2092a813337f9b8fc8d8df93d1e70fc9f8a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c81819d57bcefb0fa6a9729350ef595bdf7938bb02fac4306a6a7c3871a9085d\",\"dweb:/ipfs/QmRVAm5377PBv2Ct5BX4sfJJWixuhqYtkJ6MqQbPq3yzEa\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol\":{\"keccak256\":\"0x02f3971397edcb37fc2e814d3009d58fa1ad2d0ad04c608d54c6102518f128df\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5b0794a095f68a7cbc90e6f5f3e02532428f6f58dc2f0c6ca6618eb12b386ec9\",\"dweb:/ipfs/QmQZnjKatSYDrQkHPjN2fJc3vMLMWVcPTJhcNPSV7knXDn\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "forwarder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTrustedForwarder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "versionRecipient",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isTrustedForwarder(address)": {
            "details": "Check if the forwarder is trusted"
          },
          "versionRecipient()": {
            "details": "EIP 2771 version NOTE: - It is not clear if it is actually from the EIP 2771.... - https://docs.biconomy.io/guides/enable-gasless-transactions/eip-2771"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol": "BaseRelayRecipient"
      },
      "libraries": {}
    },
    "sources": {
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol": {
        "keccak256": "0x449c94dc19b806af3ff12ac121c2092a813337f9b8fc8d8df93d1e70fc9f8a2b",
        "urls": [
          "bzz-raw://c81819d57bcefb0fa6a9729350ef595bdf7938bb02fac4306a6a7c3871a9085d",
          "dweb:/ipfs/QmRVAm5377PBv2Ct5BX4sfJJWixuhqYtkJ6MqQbPq3yzEa"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol": {
        "keccak256": "0x02f3971397edcb37fc2e814d3009d58fa1ad2d0ad04c608d54c6102518f128df",
        "urls": [
          "bzz-raw://5b0794a095f68a7cbc90e6f5f3e02532428f6f58dc2f0c6ca6618eb12b386ec9",
          "dweb:/ipfs/QmQZnjKatSYDrQkHPjN2fJc3vMLMWVcPTJhcNPSV7knXDn"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol",
    "id": 68261,
    "exportedSymbols": {
      "BaseRelayRecipient": [
        68260
      ],
      "IRelayRecipient": [
        68195
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:1440:79",
    "nodes": [
      {
        "id": 68223,
        "nodeType": "PragmaDirective",
        "src": "35:23:79",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 68225,
        "nodeType": "ImportDirective",
        "src": "60:74:79",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol",
        "file": "../interfaces/utils/IRelayRecipient.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 68261,
        "sourceUnit": 68196,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68224,
              "name": "IRelayRecipient",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68195,
              "src": "69:15:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68260,
        "nodeType": "ContractDefinition",
        "src": "477:997:79",
        "nodes": [
          {
            "id": 68237,
            "nodeType": "FunctionDefinition",
            "src": "602:90:79",
            "nodes": [],
            "baseFunctions": [
              68188
            ],
            "documentation": {
              "id": 68229,
              "nodeType": "StructuredDocumentation",
              "src": "540:57:79",
              "text": " @dev Check if the forwarder is trusted"
            },
            "functionSelector": "572b6c05",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isTrustedForwarder",
            "nameLocation": "611:18:79",
            "overrides": {
              "id": 68233,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "669:8:79"
            },
            "parameters": {
              "id": 68232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68231,
                  "mutability": "mutable",
                  "name": "forwarder",
                  "nameLocation": "638:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 68237,
                  "src": "630:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:19:79"
            },
            "returnParameters": {
              "id": 68236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 68237,
                  "src": "686:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68234,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "686:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "685:6:79"
            },
            "scope": 68260,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 68259,
            "nodeType": "FunctionDefinition",
            "src": "967:504:79",
            "nodes": [],
            "body": {
              "id": 68258,
              "nodeType": "Block",
              "src": "1052:419:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 68253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 68248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 68244,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1070:3:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1074:4:79",
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "src": "1070:8:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 68246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1079:6:79",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1070:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "hexValue": "3234",
                            "id": 68247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1089:2:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_24_by_1",
                              "typeString": "int_const 24"
                            },
                            "value": "24"
                          },
                          "src": "1070:21:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68250,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1114:3:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 68251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1118:6:79",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1114:10:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 68249,
                            "name": "isTrustedForwarder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68237,
                            "src": "1095:18:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 68252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1095:30:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1070:55:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f74207472757374656420666f72776172646572",
                        "id": 68254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1127:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        },
                        "value": "Not trusted forwarder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c55544493bc7eeb535999264c70f56bda4911db54b18ae1e4ae3be74ec809c39",
                          "typeString": "literal_string \"Not trusted forwarder\""
                        }
                      ],
                      "id": 68243,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1062:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1062:89:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68256,
                  "nodeType": "ExpressionStatement",
                  "src": "1062:89:79"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1390:75:79",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1404:51:79",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1415:2:79",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "calldatasize",
                                        "nodeType": "YulIdentifier",
                                        "src": "1435:12:79"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1435:14:79"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1450:2:79",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sub",
                                    "nodeType": "YulIdentifier",
                                    "src": "1431:3:79"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1431:22:79"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1418:12:79"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1418:36:79"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1411:3:79"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1411:44:79"
                        },
                        "variableNames": [
                          {
                            "name": "ret",
                            "nodeType": "YulIdentifier",
                            "src": "1404:3:79"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [
                    {
                      "declaration": 68241,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1404:3:79",
                      "valueSize": 1
                    }
                  ],
                  "id": 68257,
                  "nodeType": "InlineAssembly",
                  "src": "1381:84:79"
                }
              ]
            },
            "documentation": {
              "id": 68238,
              "nodeType": "StructuredDocumentation",
              "src": "698:264:79",
              "text": " @dev Return the transaction signer of this call\n if the call came through our trusted forwarder, return the original sender.\n otherwise, return `msg.sender`.\n should be used in the contract anywhere instead of msg.sender"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getTransactionSigner",
            "nameLocation": "976:21:79",
            "parameters": {
              "id": 68239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:2:79"
            },
            "returnParameters": {
              "id": 68242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68241,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1047:3:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 68259,
                  "src": "1031:19:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 68240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:15:79",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1030:21:79"
            },
            "scope": 68260,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 68227,
              "name": "IRelayRecipient",
              "nameLocations": [
                "517:15:79"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68195,
              "src": "517:15:79"
            },
            "id": 68228,
            "nodeType": "InheritanceSpecifier",
            "src": "517:15:79"
          }
        ],
        "canonicalName": "BaseRelayRecipient",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68226,
          "nodeType": "StructuredDocumentation",
          "src": "137:339:79",
          "text": " @title Base relay recipient contract\n @author Superfluid\n @dev A base contract to be inherited by any contract that want to receive relayed transactions\n      A subclass must use \"_msgSender()\" instead of \"msg.sender\"\n      MODIFIED FROM: https://github.com/opengsn/forwarder/blob/master/contracts/BaseRelayRecipient.sol"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          68260,
          68195
        ],
        "name": "BaseRelayRecipient",
        "nameLocation": "495:18:79",
        "scope": 68261,
        "usedErrors": []
      }
    ],
    "license": "AGPLv3"
  },
  "id": 79
}