{
  "abi": [
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "activeAgreements",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getHost()": "20bc4425",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default.\"},\"approve(address,uint256)\":{\"custom:emits\":\"an {Approval} event.\",\"custom:note\":\"Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"custom:emits\":\"an {AuthorizedOperator} event.\",\"custom:requirements\":\"- `operator` cannot be calling address.\",\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\"- the caller must have at least `amount` tokens.\",\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"decimals()\":{\"custom:note\":\"SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\",\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\"- `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\",\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"Downgrade SuperToken to ERC20.It will call transfer to send tokens\",\"params\":{\"amount\":\"Number of tokens to be downgraded\"}},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"getUnderlyingToken()\":{\"details\":\"Return the underlying token contract\",\"returns\":{\"tokenAddr\":\"Underlying token address\"}},\"granularity()\":{\"custom:note\":\"For super token contracts, this value is always 1\",\"details\":\"Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number.\"},\"increaseAllowance(address,uint256)\":{\"custom:emits\":\"an {Approval} event indicating the updated allowance.\",\"custom:requirements\":\"- `spender` cannot be the zero address.\",\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the contract\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operationApprove(address,address,uint256)\":{\"custom:modifiers\":\"- onlyHost\",\"details\":\"Perform ERC20 approve by host contract.\",\"params\":{\"account\":\"The account owner to be approved.\",\"amount\":\"Number of tokens to be approved.\",\"spender\":\"The spender of account owner's funds.\"}},\"operationDowngrade(address,uint256)\":{\"custom:modifiers\":\"- onlyHost\",\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"custom:modifiers\":\"- onlyHost\",\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"- onlyHost\",\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"custom:modifiers\":\"- onlyHost\",\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Burned} event.\",\"custom:requirements\":\"- `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\",\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\"- `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"revokeOperator(address)\":{\"custom:emits\":\"a {RevokedOperator} event.\",\"custom:requirements\":\"- `operator` cannot be calling address.\",\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"custom:modifiers\":\"- onlySelf\",\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"custom:modifiers\":\"- onlySelf\",\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"selfMint(address,uint256,bytes)\":{\"custom:modifiers\":\"- onlySelf\",\"details\":\"Mint new tokens for the account If `userData` is not empty, the `tokensReceived` hook is invoked according to ERC777 semantics.\"},\"selfTransferFrom(address,address,address,uint256)\":{\"custom:modifiers\":\"- onlySelf\",\"details\":\"Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`.\"},\"send(address,uint256,bytes)\":{\"custom:emits\":\"a {Sent} event.\",\"custom:requirements\":\"- the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferAll(address)\":{\"details\":\"Transfer all available balance from `msg.sender` to `recipient`\"},\"transferFrom(address,address,uint256)\":{\"custom:emits\":\"a {Transfer} event.\",\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}},\"upgrade(uint256)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"details\":\"Upgrade ERC20 to SuperToken.\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"upgradeTo(address,uint256,bytes)\":{\"custom:note\":\"It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract\",\"custom:requirements\":\"- if `userData` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient   otherwise it reverts.\",\"custom:warning\":\"- there is potential of reentrancy IF the \\\"to\\\" account is a registered ERC777 recipient.\",\"details\":\"Upgrade ERC20 to SuperToken and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\",\"to\":\"The account to receive upgraded tokens\",\"userData\":\"User data for the TokensRecipient callback\"}}},\"title\":\"Super token (Superfluid Token + ERC20 + ERC777) interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"This value changes when {approve} or {transferFrom} are called.\"},\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":\"ISuperToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "activeAgreements",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "tokenAddr",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be         allowed to spend on behalf of `owner` through {transferFrom}. This is         zero by default."
          },
          "approve(address,uint256)": {
            "custom:emits": "an {Approval} event.",
            "custom:note": "Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "custom:emits": "an {AuthorizedOperator} event.",
            "custom:requirements": "- `operator` cannot be calling address.",
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "custom:emits": "a {Burned} event.",
            "custom:requirements": "- the caller must have at least `amount` tokens.",
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "decimals()": {
            "custom:note": "SuperToken always uses 18 decimals. This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.",
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "custom:emits": "an {Approval} event indicating the updated allowance.",
            "custom:requirements": "- `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "Downgrade SuperToken to ERC20.It will call transfer to send tokens",
            "params": {
              "amount": "Number of tokens to be downgraded"
            }
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "getAccountActiveAgreements(address)": {
            "details": "An active agreement is one that has state for the account",
            "params": {
              "account": "Account to query"
            },
            "returns": {
              "activeAgreements": "List of accounts that have non-zero states for the account"
            }
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "Get data of the agreement",
            "params": {
              "agreementClass": "Contract address of the agreement",
              "id": "Agreement ID"
            },
            "returns": {
              "data": "Data of the agreement"
            }
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "Get data of the slot of the state of an agreement",
            "params": {
              "account": "Account to query",
              "agreementClass": "Contract address of the agreement",
              "dataLength": "length of the state data",
              "slotId": "slot id of the state"
            }
          },
          "getHost()": {
            "details": "Get superfluid host contract address"
          },
          "getUnderlyingToken()": {
            "details": "Return the underlying token contract",
            "returns": {
              "tokenAddr": "Underlying token address"
            }
          },
          "granularity()": {
            "custom:note": "For super token contracts, this value is always 1",
            "details": "Returns the smallest part of the token that is not divisible. This         means all token operations (creation, movement and destruction) must have         amounts that are a multiple of this number."
          },
          "increaseAllowance(address,uint256)": {
            "custom:emits": "an {Approval} event indicating the updated allowance.",
            "custom:requirements": "- `spender` cannot be the zero address.",
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the contract"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
            "details": "Make liquidation payouts (v2)",
            "params": {
              "id": "Agreement ID",
              "liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
              "liquidatorAccount": "Address of the executor of the liquidation",
              "rewardAmount": "The amount the rewarded account will receive",
              "targetAccount": "Account to be liquidated",
              "targetAccountBalanceDelta": "The delta amount the target account balance should change by",
              "useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "operationApprove(address,address,uint256)": {
            "custom:modifiers": "- onlyHost",
            "details": "Perform ERC20 approve by host contract.",
            "params": {
              "account": "The account owner to be approved.",
              "amount": "Number of tokens to be approved.",
              "spender": "The spender of account owner's funds."
            }
          },
          "operationDowngrade(address,uint256)": {
            "custom:modifiers": "- onlyHost",
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "custom:modifiers": "- onlyHost",
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "custom:modifiers": "- onlyHost",
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "custom:modifiers": "- onlyHost",
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "custom:emits": "a {Burned} event.",
            "custom:requirements": "- `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.",
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "custom:emits": "a {Sent} event.",
            "custom:requirements": "- `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
            "params": {
              "account": "for the query",
              "timestamp": "Time of balance"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "realtimeBalanceOfNow(address)": {
            "details": "realtimeBalanceOf with timestamp equals to block timestamp",
            "params": {
              "account": "for the query"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "revokeOperator(address)": {
            "custom:emits": "a {RevokedOperator} event.",
            "custom:requirements": "- `operator` cannot be calling address.",
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "custom:modifiers": "- onlySelf",
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "custom:modifiers": "- onlySelf",
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "selfMint(address,uint256,bytes)": {
            "custom:modifiers": "- onlySelf",
            "details": "Mint new tokens for the account If `userData` is not empty, the `tokensReceived` hook is invoked according to ERC777 semantics."
          },
          "selfTransferFrom(address,address,address,uint256)": {
            "custom:modifiers": "- onlySelf",
            "details": "Transfer `amount` tokens from the `sender` to `recipient`. If `spender` isn't the same as `sender`, checks if `spender` has allowance to spend tokens of `sender`."
          },
          "send(address,uint256,bytes)": {
            "custom:emits": "a {Sent} event.",
            "custom:requirements": "- the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.",
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "details": "The agreement needs to make sure that the balance delta is balanced afterwards",
            "params": {
              "account": "Account to query.",
              "delta": "Amount of balance delta to be settled"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "Close the agreement",
            "params": {
              "id": "Agreement ID"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "custom:emits": "a {Transfer} event.",
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferAll(address)": {
            "details": "Transfer all available balance from `msg.sender` to `recipient`"
          },
          "transferFrom(address,address,uint256)": {
            "custom:emits": "a {Transfer} event.",
            "details": "Moves `amount` tokens from `sender` to `recipient` using the         allowance mechanism. `amount` is then deducted from the caller's         allowance.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "custom:note": " - To clear the storage out, provide zero-ed array of intended length",
            "details": "Update agreement state slot",
            "params": {
              "account": "Account to be updated"
            }
          },
          "upgrade(uint256)": {
            "custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
            "details": "Upgrade ERC20 to SuperToken.",
            "params": {
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "upgradeTo(address,uint256,bytes)": {
            "custom:note": "It will use `transferFrom` to get tokens. Before calling this function you should `approve` this contract",
            "custom:requirements": "- if `userData` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient   otherwise it reverts.",
            "custom:warning": "- there is potential of reentrancy IF the \"to\" account is a registered ERC777 recipient.",
            "details": "Upgrade ERC20 to SuperToken and transfer immediately",
            "params": {
              "amount": "Number of tokens to be upgraded (in 18 decimals)",
              "to": "The account to receive upgraded tokens",
              "userData": "User data for the TokensRecipient callback"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowance(address,address)": {
            "notice": "This value changes when {approve} or {transferFrom} are called."
          },
          "getAccountActiveAgreements(address)": {
            "notice": "Get a list of agreements that is active for the account"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "realtimeBalanceOfNow(address)": {
            "notice": "Calculate the realtime balance given the current host.getNow() value"
          },
          "settleBalance(address,int256)": {
            "notice": "Settle balance from an account by the agreement"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": "ISuperToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol",
    "id": 67039,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        66295
      ],
      "IConstantOutflowNFT": [
        66349
      ],
      "IERC20": [
        44661
      ],
      "IERC777": [
        45404
      ],
      "ISuperToken": [
        67038
      ],
      "ISuperfluidToken": [
        68136
      ],
      "TokenInfo": [
        68216
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:20380:69",
    "nodes": [
      {
        "id": 66572,
        "nodeType": "PragmaDirective",
        "src": "32:26:69",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 66574,
        "nodeType": "ImportDirective",
        "src": "60:58:69",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
        "file": "./ISuperfluidToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 68137,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66573,
              "name": "ISuperfluidToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68136,
              "src": "69:16:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66576,
        "nodeType": "ImportDirective",
        "src": "119:52:69",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol",
        "file": "../tokens/TokenInfo.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 68217,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66575,
              "name": "TokenInfo",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68216,
              "src": "128:9:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66578,
        "nodeType": "ImportDirective",
        "src": "172:75:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol",
        "file": "@openzeppelin/contracts/token/ERC777/IERC777.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 45405,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66577,
              "name": "IERC777",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45404,
              "src": "181:7:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66580,
        "nodeType": "ImportDirective",
        "src": "248:72:69",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 44662,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66579,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44661,
              "src": "257:6:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66582,
        "nodeType": "ImportDirective",
        "src": "321:64:69",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "file": "./IConstantOutflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 66350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66581,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66349,
              "src": "330:19:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66584,
        "nodeType": "ImportDirective",
        "src": "386:62:69",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "file": "./IConstantInflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67039,
        "sourceUnit": 66296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66583,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66295,
              "src": "395:18:69",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67038,
        "nodeType": "ContractDefinition",
        "src": "548:19863:69",
        "nodes": [
          {
            "id": 66595,
            "nodeType": "ErrorDefinition",
            "src": "799:54:69",
            "nodes": [],
            "errorSelector": "f7f02227",
            "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
            "nameLocation": "805:45:69",
            "parameters": {
              "id": 66594,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "850:2:69"
            }
          },
          {
            "id": 66597,
            "nodeType": "ErrorDefinition",
            "src": "878:48:69",
            "nodes": [],
            "errorSelector": "fe737d05",
            "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
            "nameLocation": "884:39:69",
            "parameters": {
              "id": 66596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "923:2:69"
            }
          },
          {
            "id": 66599,
            "nodeType": "ErrorDefinition",
            "src": "957:60:69",
            "nodes": [],
            "errorSelector": "e3e13698",
            "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
            "nameLocation": "963:51:69",
            "parameters": {
              "id": 66598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:2:69"
            }
          },
          {
            "id": 66601,
            "nodeType": "ErrorDefinition",
            "src": "1036:40:69",
            "nodes": [],
            "errorSelector": "f79cf656",
            "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
            "nameLocation": "1042:31:69",
            "parameters": {
              "id": 66600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1073:2:69"
            }
          },
          {
            "id": 66603,
            "nodeType": "ErrorDefinition",
            "src": "1115:30:69",
            "nodes": [],
            "errorSelector": "7ffa6648",
            "name": "SUPER_TOKEN_ONLY_SELF",
            "nameLocation": "1121:21:69",
            "parameters": {
              "id": 66602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1142:2:69"
            }
          },
          {
            "id": 66605,
            "nodeType": "ErrorDefinition",
            "src": "1194:30:69",
            "nodes": [],
            "errorSelector": "98f73704",
            "name": "SUPER_TOKEN_ONLY_HOST",
            "nameLocation": "1200:21:69",
            "parameters": {
              "id": 66604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1221:2:69"
            }
          },
          {
            "id": 66607,
            "nodeType": "ErrorDefinition",
            "src": "1273:35:69",
            "nodes": [],
            "errorSelector": "d9c7ed08",
            "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
            "nameLocation": "1279:26:69",
            "parameters": {
              "id": 66606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1305:2:69"
            }
          },
          {
            "id": 66609,
            "nodeType": "ErrorDefinition",
            "src": "1352:46:69",
            "nodes": [],
            "errorSelector": "81638627",
            "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
            "nameLocation": "1358:37:69",
            "parameters": {
              "id": 66608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1395:2:69"
            }
          },
          {
            "id": 66611,
            "nodeType": "ErrorDefinition",
            "src": "1431:44:69",
            "nodes": [],
            "errorSelector": "df070274",
            "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
            "nameLocation": "1437:35:69",
            "parameters": {
              "id": 66610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1472:2:69"
            }
          },
          {
            "id": 66613,
            "nodeType": "ErrorDefinition",
            "src": "1510:43:69",
            "nodes": [],
            "errorSelector": "ba2ab184",
            "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
            "nameLocation": "1516:34:69",
            "parameters": {
              "id": 66612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1550:2:69"
            }
          },
          {
            "id": 66615,
            "nodeType": "ErrorDefinition",
            "src": "1589:41:69",
            "nodes": [],
            "errorSelector": "0d243157",
            "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
            "nameLocation": "1595:32:69",
            "parameters": {
              "id": 66614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:69"
            }
          },
          {
            "id": 66617,
            "nodeType": "ErrorDefinition",
            "src": "1668:47:69",
            "nodes": [],
            "errorSelector": "eecd6c9b",
            "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
            "nameLocation": "1674:38:69",
            "parameters": {
              "id": 66616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1712:2:69"
            }
          },
          {
            "id": 66619,
            "nodeType": "ErrorDefinition",
            "src": "1747:45:69",
            "nodes": [],
            "errorSelector": "e219bd39",
            "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
            "nameLocation": "1753:36:69",
            "parameters": {
              "id": 66618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1789:2:69"
            }
          },
          {
            "id": 66621,
            "nodeType": "ErrorDefinition",
            "src": "1826:46:69",
            "nodes": [],
            "errorSelector": "ef1b6ddf",
            "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
            "nameLocation": "1832:37:69",
            "parameters": {
              "id": 66620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:2:69"
            }
          },
          {
            "id": 66634,
            "nodeType": "FunctionDefinition",
            "src": "1958:155:69",
            "nodes": [],
            "documentation": {
              "id": 66622,
              "nodeType": "StructuredDocumentation",
              "src": "1906:47:69",
              "text": " @dev Initialize the contract"
            },
            "functionSelector": "42fe0980",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1967:10:69",
            "parameters": {
              "id": 66632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66625,
                  "mutability": "mutable",
                  "name": "underlyingToken",
                  "nameLocation": "1994:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66634,
                  "src": "1987:22:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$44661",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 66624,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66623,
                      "name": "IERC20",
                      "nameLocations": [
                        "1987:6:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 44661,
                      "src": "1987:6:69"
                    },
                    "referencedDeclaration": 44661,
                    "src": "1987:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44661",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66627,
                  "mutability": "mutable",
                  "name": "underlyingDecimals",
                  "nameLocation": "2025:18:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66634,
                  "src": "2019:24:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 66626,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66629,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "2069:1:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66634,
                  "src": "2053:17:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66628,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66631,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "2096:1:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66634,
                  "src": "2080:17:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66630,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:126:69"
            },
            "returnParameters": {
              "id": 66633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2112:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66640,
            "nodeType": "FunctionDefinition",
            "src": "2358:76:69",
            "nodes": [],
            "functionSelector": "ef43d2c6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "CONSTANT_OUTFLOW_NFT",
            "nameLocation": "2367:20:69",
            "parameters": {
              "id": 66635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:2:69"
            },
            "returnParameters": {
              "id": 66639,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66638,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66640,
                  "src": "2413:19:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 66637,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66636,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "2413:19:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66349,
                      "src": "2413:19:69"
                    },
                    "referencedDeclaration": 66349,
                    "src": "2413:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2412:21:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66646,
            "nodeType": "FunctionDefinition",
            "src": "2492:74:69",
            "nodes": [],
            "functionSelector": "4c5c0c85",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "CONSTANT_INFLOW_NFT",
            "nameLocation": "2501:19:69",
            "parameters": {
              "id": 66641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:69"
            },
            "returnParameters": {
              "id": 66645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66644,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66646,
                  "src": "2546:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 66643,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 66642,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "2546:18:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66295,
                      "src": "2546:18:69"
                    },
                    "referencedDeclaration": 66295,
                    "src": "2546:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2545:20:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66655,
            "nodeType": "FunctionDefinition",
            "src": "2816:83:69",
            "nodes": [],
            "baseFunctions": [
              45290,
              68203
            ],
            "documentation": {
              "id": 66647,
              "nodeType": "StructuredDocumentation",
              "src": "2757:54:69",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2825:4:69",
            "overrides": {
              "id": 66651,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66649,
                  "name": "IERC777",
                  "nameLocations": [
                    "2855:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "2855:7:69"
                },
                {
                  "id": 66650,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "2864:9:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68216,
                  "src": "2864:9:69"
                }
              ],
              "src": "2846:28:69"
            },
            "parameters": {
              "id": 66648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:2:69"
            },
            "returnParameters": {
              "id": 66654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66653,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66655,
                  "src": "2884:13:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66652,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2884:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:15:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66664,
            "nodeType": "FunctionDefinition",
            "src": "3012:85:69",
            "nodes": [],
            "baseFunctions": [
              45296,
              68209
            ],
            "documentation": {
              "id": 66656,
              "nodeType": "StructuredDocumentation",
              "src": "2905:102:69",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3021:6:69",
            "overrides": {
              "id": 66660,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66658,
                  "name": "IERC777",
                  "nameLocations": [
                    "3053:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "3053:7:69"
                },
                {
                  "id": 66659,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "3062:9:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68216,
                  "src": "3062:9:69"
                }
              ],
              "src": "3044:28:69"
            },
            "parameters": {
              "id": 66657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:2:69"
            },
            "returnParameters": {
              "id": 66663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66662,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66664,
                  "src": "3082:13:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 66661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:6:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3081:15:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66672,
            "nodeType": "FunctionDefinition",
            "src": "3777:70:69",
            "nodes": [],
            "baseFunctions": [
              68215
            ],
            "documentation": {
              "id": 66665,
              "nodeType": "StructuredDocumentation",
              "src": "3103:669:69",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n @custom:note SuperToken always uses 18 decimals.\n This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3786:8:69",
            "overrides": {
              "id": 66668,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66667,
                  "name": "TokenInfo",
                  "nameLocations": [
                    "3820:9:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 68216,
                  "src": "3820:9:69"
                }
              ],
              "src": "3811:19:69"
            },
            "parameters": {
              "id": 66666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3794:2:69"
            },
            "returnParameters": {
              "id": 66671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66672,
                  "src": "3840:5:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 66669,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3840:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3839:7:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66681,
            "nodeType": "FunctionDefinition",
            "src": "4088:81:69",
            "nodes": [],
            "baseFunctions": [
              44610,
              45308
            ],
            "documentation": {
              "id": 66673,
              "nodeType": "StructuredDocumentation",
              "src": "4034:49:69",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "4097:11:69",
            "overrides": {
              "id": 66677,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66675,
                  "name": "IERC777",
                  "nameLocations": [
                    "4134:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "4134:7:69"
                },
                {
                  "id": 66676,
                  "name": "IERC20",
                  "nameLocations": [
                    "4143:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "4143:6:69"
                }
              ],
              "src": "4125:25:69"
            },
            "parameters": {
              "id": 66674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4108:2:69"
            },
            "returnParameters": {
              "id": 66680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66681,
                  "src": "4160:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4159:9:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66692,
            "nodeType": "FunctionDefinition",
            "src": "4263:101:69",
            "nodes": [],
            "baseFunctions": [
              44618,
              45316
            ],
            "documentation": {
              "id": 66682,
              "nodeType": "StructuredDocumentation",
              "src": "4175:83:69",
              "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4272:9:69",
            "overrides": {
              "id": 66688,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66686,
                  "name": "IERC777",
                  "nameLocations": [
                    "4322:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "4322:7:69"
                },
                {
                  "id": 66687,
                  "name": "IERC20",
                  "nameLocations": [
                    "4331:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "4331:6:69"
                }
              ],
              "src": "4313:25:69"
            },
            "parameters": {
              "id": 66685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66684,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4290:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66692,
                  "src": "4282:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4282:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4281:17:69"
            },
            "returnParameters": {
              "id": 66691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66690,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "4355:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66692,
                  "src": "4347:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4347:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4346:17:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66704,
            "nodeType": "FunctionDefinition",
            "src": "4780:94:69",
            "nodes": [],
            "baseFunctions": [
              44628
            ],
            "documentation": {
              "id": 66693,
              "nodeType": "StructuredDocumentation",
              "src": "4542:233:69",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
            },
            "functionSelector": "a9059cbb",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4789:8:69",
            "overrides": {
              "id": 66700,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66699,
                  "name": "IERC20",
                  "nameLocations": [
                    "4851:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "4851:6:69"
                }
              ],
              "src": "4842:16:69"
            },
            "parameters": {
              "id": 66698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66695,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4806:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66704,
                  "src": "4798:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4798:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66697,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4825:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66704,
                  "src": "4817:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4817:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4797:35:69"
            },
            "returnParameters": {
              "id": 66703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66704,
                  "src": "4868:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66701,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4868:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4867:6:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66716,
            "nodeType": "FunctionDefinition",
            "src": "5173:100:69",
            "nodes": [],
            "baseFunctions": [
              44638
            ],
            "documentation": {
              "id": 66705,
              "nodeType": "StructuredDocumentation",
              "src": "4880:288:69",
              "text": " @dev Returns the remaining number of tokens that `spender` will be\n         allowed to spend on behalf of `owner` through {transferFrom}. This is\n         zero by default.\n @notice This value changes when {approve} or {transferFrom} are called."
            },
            "functionSelector": "dd62ed3e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "5182:9:69",
            "overrides": {
              "id": 66712,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66711,
                  "name": "IERC20",
                  "nameLocations": [
                    "5242:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "5242:6:69"
                }
              ],
              "src": "5233:16:69"
            },
            "parameters": {
              "id": 66710,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66707,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "5200:5:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66716,
                  "src": "5192:13:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5192:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66709,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5215:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66716,
                  "src": "5207:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5207:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5191:32:69"
            },
            "returnParameters": {
              "id": 66715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66714,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66716,
                  "src": "5264:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5264:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5263:9:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66728,
            "nodeType": "FunctionDefinition",
            "src": "5952:91:69",
            "nodes": [],
            "baseFunctions": [
              44648
            ],
            "documentation": {
              "id": 66717,
              "nodeType": "StructuredDocumentation",
              "src": "5279:668:69",
              "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:note Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n @custom:emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "5961:7:69",
            "overrides": {
              "id": 66724,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66723,
                  "name": "IERC20",
                  "nameLocations": [
                    "6020:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "6020:6:69"
                }
              ],
              "src": "6011:16:69"
            },
            "parameters": {
              "id": 66722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66719,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "5977:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66728,
                  "src": "5969:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66718,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5969:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66721,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5994:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66728,
                  "src": "5986:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5986:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5968:33:69"
            },
            "returnParameters": {
              "id": 66727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66728,
                  "src": "6037:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66725,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6036:6:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66742,
            "nodeType": "FunctionDefinition",
            "src": "6390:114:69",
            "nodes": [],
            "baseFunctions": [
              44660
            ],
            "documentation": {
              "id": 66729,
              "nodeType": "StructuredDocumentation",
              "src": "6049:336:69",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n         allowance mechanism. `amount` is then deducted from the caller's\n         allowance.\n @return Returns Success a boolean value indicating whether the operation succeeded.\n @custom:emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "6399:12:69",
            "overrides": {
              "id": 66738,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66737,
                  "name": "IERC20",
                  "nameLocations": [
                    "6481:6:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44661,
                  "src": "6481:6:69"
                }
              ],
              "src": "6472:16:69"
            },
            "parameters": {
              "id": 66736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66731,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6420:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66742,
                  "src": "6412:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6412:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66733,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6436:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66742,
                  "src": "6428:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6428:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66735,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6455:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66742,
                  "src": "6447:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66734,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6447:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6411:51:69"
            },
            "returnParameters": {
              "id": 66741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66742,
                  "src": "6498:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6497:6:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66752,
            "nodeType": "FunctionDefinition",
            "src": "6907:88:69",
            "nodes": [],
            "documentation": {
              "id": 66743,
              "nodeType": "StructuredDocumentation",
              "src": "6510:392:69",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6916:17:69",
            "parameters": {
              "id": 66748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66745,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6942:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66752,
                  "src": "6934:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66744,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6934:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66747,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6959:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66752,
                  "src": "6951:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66746,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6951:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6933:37:69"
            },
            "returnParameters": {
              "id": 66751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66750,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66752,
                  "src": "6989:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66749,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6989:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6988:6:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66762,
            "nodeType": "FunctionDefinition",
            "src": "7491:93:69",
            "nodes": [],
            "documentation": {
              "id": 66753,
              "nodeType": "StructuredDocumentation",
              "src": "7001:484:69",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n @custom:emits an {Approval} event indicating the updated allowance.\n @custom:requirements\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "7500:17:69",
            "parameters": {
              "id": 66758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66755,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7526:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66762,
                  "src": "7518:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66754,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7518:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66757,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "7543:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66762,
                  "src": "7535:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7535:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7517:42:69"
            },
            "returnParameters": {
              "id": 66761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66760,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66762,
                  "src": "7578:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66759,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7578:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7577:6:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66770,
            "nodeType": "FunctionDefinition",
            "src": "8083:73:69",
            "nodes": [],
            "baseFunctions": [
              45302
            ],
            "documentation": {
              "id": 66763,
              "nodeType": "StructuredDocumentation",
              "src": "7763:315:69",
              "text": " @dev Returns the smallest part of the token that is not divisible. This\n         means all token operations (creation, movement and destruction) must have\n         amounts that are a multiple of this number.\n @custom:note For super token contracts, this value is always 1"
            },
            "functionSelector": "556f0dc7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "8092:11:69",
            "overrides": {
              "id": 66766,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66765,
                  "name": "IERC777",
                  "nameLocations": [
                    "8129:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "8129:7:69"
                }
              ],
              "src": "8120:17:69"
            },
            "parameters": {
              "id": 66764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8103:2:69"
            },
            "returnParameters": {
              "id": 66769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66770,
                  "src": "8147:7:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8147:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8146:9:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66782,
            "nodeType": "FunctionDefinition",
            "src": "8780:101:69",
            "nodes": [],
            "baseFunctions": [
              45326
            ],
            "documentation": {
              "id": 66771,
              "nodeType": "StructuredDocumentation",
              "src": "8162:613:69",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n @dev If send or receive hooks are registered for the caller and `recipient`,\n      the corresponding functions will be called with `userData` and empty\n      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "9bd9bbc6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "8789:4:69",
            "overrides": {
              "id": 66780,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66779,
                  "name": "IERC777",
                  "nameLocations": [
                    "8872:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "8872:7:69"
                }
              ],
              "src": "8863:17:69"
            },
            "parameters": {
              "id": 66778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66773,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8802:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66782,
                  "src": "8794:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8794:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66775,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8821:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66782,
                  "src": "8813:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8813:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66777,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "8844:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66782,
                  "src": "8829:23:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8829:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8793:60:69"
            },
            "returnParameters": {
              "id": 66781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8880:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66792,
            "nodeType": "FunctionDefinition",
            "src": "9368:82:69",
            "nodes": [],
            "baseFunctions": [
              45334
            ],
            "documentation": {
              "id": 66783,
              "nodeType": "StructuredDocumentation",
              "src": "8887:476:69",
              "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply and transfers the underlying token to the caller's account.\n If a send hook is registered for the caller, the corresponding function\n will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements\n - the caller must have at least `amount` tokens."
            },
            "functionSelector": "fe9d9303",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "9377:4:69",
            "overrides": {
              "id": 66790,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66789,
                  "name": "IERC777",
                  "nameLocations": [
                    "9441:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "9441:7:69"
                }
              ],
              "src": "9432:17:69"
            },
            "parameters": {
              "id": 66788,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66785,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9390:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66792,
                  "src": "9382:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9382:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66787,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "9413:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66792,
                  "src": "9398:23:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66786,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9398:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9381:41:69"
            },
            "returnParameters": {
              "id": 66791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9449:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66804,
            "nodeType": "FunctionDefinition",
            "src": "9710:109:69",
            "nodes": [],
            "baseFunctions": [
              45344
            ],
            "documentation": {
              "id": 66793,
              "nodeType": "StructuredDocumentation",
              "src": "9456:249:69",
              "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
            },
            "functionSelector": "d95b6371",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "9719:13:69",
            "overrides": {
              "id": 66800,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66799,
                  "name": "IERC777",
                  "nameLocations": [
                    "9790:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "9790:7:69"
                }
              ],
              "src": "9781:17:69"
            },
            "parameters": {
              "id": 66798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66795,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "9741:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66804,
                  "src": "9733:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66794,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9733:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66797,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "9759:11:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66804,
                  "src": "9751:19:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9751:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9732:39:69"
            },
            "returnParameters": {
              "id": 66803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66804,
                  "src": "9813:4:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66801,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9813:4:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9812:6:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66812,
            "nodeType": "FunctionDefinition",
            "src": "10072:72:69",
            "nodes": [],
            "baseFunctions": [
              45350
            ],
            "documentation": {
              "id": 66805,
              "nodeType": "StructuredDocumentation",
              "src": "9825:242:69",
              "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n @custom:emits an {AuthorizedOperator} event.\n @custom:requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "959b8c3f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "10081:17:69",
            "overrides": {
              "id": 66810,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66809,
                  "name": "IERC777",
                  "nameLocations": [
                    "10135:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "10135:7:69"
                }
              ],
              "src": "10126:17:69"
            },
            "parameters": {
              "id": 66808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66807,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10107:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66812,
                  "src": "10099:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66806,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10099:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10098:18:69"
            },
            "returnParameters": {
              "id": 66811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10143:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66820,
            "nodeType": "FunctionDefinition",
            "src": "10425:69:69",
            "nodes": [],
            "baseFunctions": [
              45356
            ],
            "documentation": {
              "id": 66813,
              "nodeType": "StructuredDocumentation",
              "src": "10150:270:69",
              "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n @custom:emits a {RevokedOperator} event.\n @custom:requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "fad8b32a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "10434:14:69",
            "overrides": {
              "id": 66818,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66817,
                  "name": "IERC777",
                  "nameLocations": [
                    "10485:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "10485:7:69"
                }
              ],
              "src": "10476:17:69"
            },
            "parameters": {
              "id": 66816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66815,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "10457:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66820,
                  "src": "10449:16:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10449:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10448:18:69"
            },
            "returnParameters": {
              "id": 66819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10493:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66829,
            "nodeType": "FunctionDefinition",
            "src": "10843:87:69",
            "nodes": [],
            "baseFunctions": [
              45363
            ],
            "documentation": {
              "id": 66821,
              "nodeType": "StructuredDocumentation",
              "src": "10500:338:69",
              "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
            },
            "functionSelector": "06e48538",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "10852:16:69",
            "overrides": {
              "id": 66824,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66823,
                  "name": "IERC777",
                  "nameLocations": [
                    "10889:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "10889:7:69"
                }
              ],
              "src": "10880:17:69"
            },
            "parameters": {
              "id": 66822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10868:2:69"
            },
            "returnParameters": {
              "id": 66828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66827,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66829,
                  "src": "10912:16:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 66825,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "10912:7:69",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 66826,
                    "nodeType": "ArrayTypeName",
                    "src": "10912:9:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10911:18:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66845,
            "nodeType": "FunctionDefinition",
            "src": "11668:200:69",
            "nodes": [],
            "baseFunctions": [
              45377
            ],
            "documentation": {
              "id": 66830,
              "nodeType": "StructuredDocumentation",
              "src": "10936:727:69",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `userData` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n @custom:emits a {Sent} event.\n @custom:requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "62ad1b83",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "11677:12:69",
            "overrides": {
              "id": 66843,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66842,
                  "name": "IERC777",
                  "nameLocations": [
                    "11859:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "11859:7:69"
                }
              ],
              "src": "11850:17:69"
            },
            "parameters": {
              "id": 66841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66832,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "11707:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66845,
                  "src": "11699:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66831,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11699:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66834,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "11731:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66845,
                  "src": "11723:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11723:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66836,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11758:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66845,
                  "src": "11750:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11750:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66838,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "11789:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66845,
                  "src": "11774:23:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66837,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11774:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66840,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "11822:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66845,
                  "src": "11807:27:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66839,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11807:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11689:151:69"
            },
            "returnParameters": {
              "id": 66844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11867:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66859,
            "nodeType": "FunctionDefinition",
            "src": "12424:174:69",
            "nodes": [],
            "baseFunctions": [
              45389
            ],
            "documentation": {
              "id": 66846,
              "nodeType": "StructuredDocumentation",
              "src": "11874:545:69",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `userData` and `operatorData`. See {IERC777Sender}.\n @custom:emits a {Burned} event.\n @custom:requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
            },
            "functionSelector": "fc673c4f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "12433:12:69",
            "overrides": {
              "id": 66857,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 66856,
                  "name": "IERC777",
                  "nameLocations": [
                    "12589:7:69"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45404,
                  "src": "12589:7:69"
                }
              ],
              "src": "12580:17:69"
            },
            "parameters": {
              "id": 66855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66848,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "12463:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66859,
                  "src": "12455:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66847,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12455:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66850,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12488:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66859,
                  "src": "12480:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12480:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66852,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12519:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66859,
                  "src": "12504:23:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66851,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12504:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66854,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12552:12:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66859,
                  "src": "12537:27:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66853,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12537:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12445:125:69"
            },
            "returnParameters": {
              "id": 66858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12597:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66869,
            "nodeType": "FunctionDefinition",
            "src": "13020:113:69",
            "nodes": [],
            "documentation": {
              "id": 66860,
              "nodeType": "StructuredDocumentation",
              "src": "12806:209:69",
              "text": " @dev Mint new tokens for the account\n If `userData` is not empty, the `tokensReceived` hook is invoked according to ERC777 semantics.\n @custom:modifiers\n  - onlySelf"
            },
            "functionSelector": "c68d4283",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfMint",
            "nameLocation": "13029:8:69",
            "parameters": {
              "id": 66867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66862,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "13055:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66869,
                  "src": "13047:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13047:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66864,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13080:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66869,
                  "src": "13072:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13072:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66866,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "13109:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66869,
                  "src": "13096:21:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66865,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13096:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13037:86:69"
            },
            "returnParameters": {
              "id": 66868,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13132:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66879,
            "nodeType": "FunctionDefinition",
            "src": "13348:109:69",
            "nodes": [],
            "documentation": {
              "id": 66870,
              "nodeType": "StructuredDocumentation",
              "src": "13138:206:69",
              "text": " @dev Burn existing tokens for the account\n If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\n @custom:modifiers\n  - onlySelf"
            },
            "functionSelector": "9d876741",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfBurn",
            "nameLocation": "13357:8:69",
            "parameters": {
              "id": 66877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66872,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "13382:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66879,
                  "src": "13374:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13374:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66874,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13406:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66879,
                  "src": "13398:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13398:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66876,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "13434:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66879,
                  "src": "13421:21:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66875,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13421:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13365:82:69"
            },
            "returnParameters": {
              "id": 66878,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13456:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66891,
            "nodeType": "FunctionDefinition",
            "src": "13710:140:69",
            "nodes": [],
            "documentation": {
              "id": 66880,
              "nodeType": "StructuredDocumentation",
              "src": "13462:244:69",
              "text": " @dev Transfer `amount` tokens from the `sender` to `recipient`.\n If `spender` isn't the same as `sender`, checks if `spender` has allowance to\n spend tokens of `sender`.\n @custom:modifiers\n  - onlySelf"
            },
            "functionSelector": "41b706be",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfTransferFrom",
            "nameLocation": "13719:16:69",
            "parameters": {
              "id": 66889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66882,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "13753:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66891,
                  "src": "13745:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13745:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66884,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "13777:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66891,
                  "src": "13769:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13769:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66886,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "13802:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66891,
                  "src": "13794:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13794:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66888,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13829:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66891,
                  "src": "13821:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66887,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13821:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13735:105:69"
            },
            "returnParameters": {
              "id": 66890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13849:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66901,
            "nodeType": "FunctionDefinition",
            "src": "14003:112:69",
            "nodes": [],
            "documentation": {
              "id": 66892,
              "nodeType": "StructuredDocumentation",
              "src": "13855:144:69",
              "text": " @dev Give `spender`, `amount` allowance to spend the tokens of\n `account`.\n @custom:modifiers\n  - onlySelf"
            },
            "functionSelector": "66a12fb6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "selfApproveFor",
            "nameLocation": "14012:14:69",
            "parameters": {
              "id": 66899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66894,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "14044:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66901,
                  "src": "14036:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14036:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66896,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14069:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66901,
                  "src": "14061:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14061:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66898,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "14094:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66901,
                  "src": "14086:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14086:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14026:79:69"
            },
            "returnParameters": {
              "id": 66900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14114:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66907,
            "nodeType": "FunctionDefinition",
            "src": "14408:49:69",
            "nodes": [],
            "documentation": {
              "id": 66902,
              "nodeType": "StructuredDocumentation",
              "src": "14316:87:69",
              "text": " @dev Transfer all available balance from `msg.sender` to `recipient`"
            },
            "functionSelector": "a3a7e7f3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferAll",
            "nameLocation": "14417:11:69",
            "parameters": {
              "id": 66905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66904,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "14437:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66907,
                  "src": "14429:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14429:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14428:19:69"
            },
            "returnParameters": {
              "id": 66906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14456:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66913,
            "nodeType": "FunctionDefinition",
            "src": "14761:71:69",
            "nodes": [],
            "documentation": {
              "id": 66908,
              "nodeType": "StructuredDocumentation",
              "src": "14646:110:69",
              "text": " @dev Return the underlying token contract\n @return tokenAddr Underlying token address"
            },
            "functionSelector": "ee719bc8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getUnderlyingToken",
            "nameLocation": "14770:18:69",
            "parameters": {
              "id": 66909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14788:2:69"
            },
            "returnParameters": {
              "id": 66912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66911,
                  "mutability": "mutable",
                  "name": "tokenAddr",
                  "nameLocation": "14821:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66913,
                  "src": "14813:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14813:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14812:19:69"
            },
            "scope": 67038,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66919,
            "nodeType": "FunctionDefinition",
            "src": "15105:42:69",
            "nodes": [],
            "documentation": {
              "id": 66914,
              "nodeType": "StructuredDocumentation",
              "src": "14838:262:69",
              "text": " @dev Upgrade ERC20 to SuperToken.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract"
            },
            "functionSelector": "45977d03",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgrade",
            "nameLocation": "15114:7:69",
            "parameters": {
              "id": 66917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66916,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15130:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66919,
                  "src": "15122:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15122:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15121:16:69"
            },
            "returnParameters": {
              "id": 66918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15146:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66929,
            "nodeType": "FunctionDefinition",
            "src": "15852:81:69",
            "nodes": [],
            "documentation": {
              "id": 66920,
              "nodeType": "StructuredDocumentation",
              "src": "15153:694:69",
              "text": " @dev Upgrade ERC20 to SuperToken and transfer immediately\n @param to The account to receive upgraded tokens\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @param userData User data for the TokensRecipient callback\n @custom:note It will use `transferFrom` to get tokens. Before calling this\n function you should `approve` this contract\n @custom:warning\n - there is potential of reentrancy IF the \"to\" account is a registered ERC777 recipient.\n @custom:requirements\n - if `userData` is NOT empty AND `to` is a contract, it MUST be a registered ERC777 recipient\n   otherwise it reverts."
            },
            "functionSelector": "5b9d09cc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "15861:9:69",
            "parameters": {
              "id": 66927,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66922,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15879:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66929,
                  "src": "15871:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15871:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66924,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15891:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66929,
                  "src": "15883:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15883:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66926,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15914:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66929,
                  "src": "15899:23:69",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 66925,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15899:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15870:53:69"
            },
            "returnParameters": {
              "id": 66928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15932:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66936,
            "nodeType": "EventDefinition",
            "src": "16110:83:69",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66930,
              "nodeType": "StructuredDocumentation",
              "src": "15939:166:69",
              "text": " @dev Token upgrade event\n @param account Account where tokens are upgraded to\n @param amount Amount of tokens upgraded (in 18 decimals)"
            },
            "eventSelector": "25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df",
            "name": "TokenUpgraded",
            "nameLocation": "16116:13:69",
            "parameters": {
              "id": 66935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66932,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16155:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66936,
                  "src": "16139:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16139:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66934,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16180:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66936,
                  "src": "16172:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16172:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16129:63:69"
            }
          },
          {
            "id": 66942,
            "nodeType": "FunctionDefinition",
            "src": "16362:44:69",
            "nodes": [],
            "documentation": {
              "id": 66937,
              "nodeType": "StructuredDocumentation",
              "src": "16199:158:69",
              "text": " @dev Downgrade SuperToken to ERC20.\n @dev It will call transfer to send tokens\n @param amount Number of tokens to be downgraded"
            },
            "functionSelector": "11bcc81e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "downgrade",
            "nameLocation": "16371:9:69",
            "parameters": {
              "id": 66940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66939,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16389:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66942,
                  "src": "16381:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16381:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16380:16:69"
            },
            "returnParameters": {
              "id": 66941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16405:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66950,
            "nodeType": "FunctionDefinition",
            "src": "16625:58:69",
            "nodes": [],
            "documentation": {
              "id": 66943,
              "nodeType": "StructuredDocumentation",
              "src": "16412:208:69",
              "text": " @dev Downgrade SuperToken to ERC20 and transfer immediately\n @param to The account to receive downgraded tokens\n @param amount Number of tokens to be downgraded (in 18 decimals)"
            },
            "functionSelector": "83ba2525",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "downgradeTo",
            "nameLocation": "16634:11:69",
            "parameters": {
              "id": 66948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66945,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16654:2:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66950,
                  "src": "16646:10:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16646:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66947,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16666:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66950,
                  "src": "16658:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66946,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16658:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16645:28:69"
            },
            "returnParameters": {
              "id": 66949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16682:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66957,
            "nodeType": "EventDefinition",
            "src": "16846:85:69",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66951,
              "nodeType": "StructuredDocumentation",
              "src": "16689:152:69",
              "text": " @dev Token downgrade event\n @param account Account whose tokens are downgraded\n @param amount Amount of tokens downgraded"
            },
            "eventSelector": "3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d",
            "name": "TokenDowngraded",
            "nameLocation": "16852:15:69",
            "parameters": {
              "id": 66956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66953,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16893:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66957,
                  "src": "16877:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16877:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66955,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16918:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66957,
                  "src": "16910:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16910:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16867:63:69"
            }
          },
          {
            "id": 66967,
            "nodeType": "FunctionDefinition",
            "src": "17401:115:69",
            "nodes": [],
            "documentation": {
              "id": 66958,
              "nodeType": "StructuredDocumentation",
              "src": "17120:276:69",
              "text": " @dev Perform ERC20 approve by host contract.\n @param account The account owner to be approved.\n @param spender The spender of account owner's funds.\n @param amount Number of tokens to be approved.\n @custom:modifiers\n  - onlyHost"
            },
            "functionSelector": "62aa5287",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationApprove",
            "nameLocation": "17410:16:69",
            "parameters": {
              "id": 66965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66960,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17444:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66967,
                  "src": "17436:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17436:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66962,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17469:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66967,
                  "src": "17461:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17461:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66964,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17494:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66967,
                  "src": "17486:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66963,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17486:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17426:80:69"
            },
            "returnParameters": {
              "id": 66966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17515:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66976,
            "nodeType": "FunctionDefinition",
            "src": "17522:129:69",
            "nodes": [],
            "functionSelector": "4b2763b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationIncreaseAllowance",
            "nameLocation": "17531:26:69",
            "parameters": {
              "id": 66974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66969,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17575:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "17567:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17567:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66971,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17600:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "17592:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17592:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66973,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "17625:10:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66976,
                  "src": "17617:18:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17617:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17557:84:69"
            },
            "returnParameters": {
              "id": 66975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17650:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66985,
            "nodeType": "FunctionDefinition",
            "src": "17657:134:69",
            "nodes": [],
            "functionSelector": "c780fd82",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationDecreaseAllowance",
            "nameLocation": "17666:26:69",
            "parameters": {
              "id": 66983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66978,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "17710:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66985,
                  "src": "17702:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17702:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66980,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17735:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66985,
                  "src": "17727:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17727:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66982,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "17760:15:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66985,
                  "src": "17752:23:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66981,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17752:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17692:89:69"
            },
            "returnParameters": {
              "id": 66984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17790:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66997,
            "nodeType": "FunctionDefinition",
            "src": "18144:147:69",
            "nodes": [],
            "documentation": {
              "id": 66986,
              "nodeType": "StructuredDocumentation",
              "src": "17797:342:69",
              "text": " @dev Perform ERC20 transferFrom by host contract.\n @param account The account to spend sender's funds.\n @param spender The account where the funds is sent from.\n @param recipient The recipient of the funds.\n @param amount Number of tokens to be transferred.\n @custom:modifiers\n  - onlyHost"
            },
            "functionSelector": "16d055d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationTransferFrom",
            "nameLocation": "18153:21:69",
            "parameters": {
              "id": 66995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66988,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "18192:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66997,
                  "src": "18184:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66987,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18184:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66990,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "18217:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66997,
                  "src": "18209:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18209:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66992,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18242:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66997,
                  "src": "18234:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18234:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66994,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18269:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 66997,
                  "src": "18261:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18261:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18174:107:69"
            },
            "returnParameters": {
              "id": 66996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18290:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67009,
            "nodeType": "FunctionDefinition",
            "src": "18630:145:69",
            "nodes": [],
            "documentation": {
              "id": 66998,
              "nodeType": "StructuredDocumentation",
              "src": "18297:328:69",
              "text": " @dev Perform ERC777 send by host contract.\n @param spender The account where the funds is sent from.\n @param recipient The recipient of the funds.\n @param amount Number of tokens to be transferred.\n @param userData Arbitrary user inputted data\n @custom:modifiers\n  - onlyHost"
            },
            "functionSelector": "ca0c1e7f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationSend",
            "nameLocation": "18639:13:69",
            "parameters": {
              "id": 67007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67000,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "18670:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67009,
                  "src": "18662:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18662:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67002,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "18695:9:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67009,
                  "src": "18687:17:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18687:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67004,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18722:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67009,
                  "src": "18714:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67003,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18714:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67006,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "18751:8:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67009,
                  "src": "18738:21:69",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67005,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18738:5:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18652:113:69"
            },
            "returnParameters": {
              "id": 67008,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18774:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67017,
            "nodeType": "FunctionDefinition",
            "src": "19018:68:69",
            "nodes": [],
            "documentation": {
              "id": 67010,
              "nodeType": "StructuredDocumentation",
              "src": "18781:232:69",
              "text": " @dev Upgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be upgraded (in 18 decimals)\n @custom:modifiers\n  - onlyHost"
            },
            "functionSelector": "ca789464",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationUpgrade",
            "nameLocation": "19027:16:69",
            "parameters": {
              "id": 67015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67012,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19052:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67017,
                  "src": "19044:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19044:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67014,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19069:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67017,
                  "src": "19061:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19061:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19043:33:69"
            },
            "returnParameters": {
              "id": 67016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19085:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67025,
            "nodeType": "FunctionDefinition",
            "src": "19333:70:69",
            "nodes": [],
            "documentation": {
              "id": 67018,
              "nodeType": "StructuredDocumentation",
              "src": "19092:236:69",
              "text": " @dev Downgrade ERC20 to SuperToken by host contract.\n @param account The account to be changed.\n @param amount Number of tokens to be downgraded (in 18 decimals)\n @custom:modifiers\n  - onlyHost"
            },
            "functionSelector": "245887fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operationDowngrade",
            "nameLocation": "19342:18:69",
            "parameters": {
              "id": 67023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67020,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19369:7:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67025,
                  "src": "19361:15:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19361:7:69",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67022,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "19386:6:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67025,
                  "src": "19378:14:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19378:7:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19360:33:69"
            },
            "returnParameters": {
              "id": 67024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19402:0:69"
            },
            "scope": 67038,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67031,
            "nodeType": "EventDefinition",
            "src": "19563:94:69",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67026,
              "nodeType": "StructuredDocumentation",
              "src": "19432:126:69",
              "text": " @dev Constant Outflow NFT proxy created event\n @param constantOutflowNFT constant outflow nft address"
            },
            "eventSelector": "cf554eb342edf010a94e07701ae91e99e90b769f649f03aeb1153654ddd43c01",
            "name": "ConstantOutflowNFTCreated",
            "nameLocation": "19569:25:69",
            "parameters": {
              "id": 67030,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67029,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "19632:18:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67031,
                  "src": "19604:46:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 67028,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67027,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "19604:19:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66349,
                      "src": "19604:19:69"
                    },
                    "referencedDeclaration": 66349,
                    "src": "19604:19:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19594:62:69"
            }
          },
          {
            "id": 67037,
            "nodeType": "EventDefinition",
            "src": "19791:91:69",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67032,
              "nodeType": "StructuredDocumentation",
              "src": "19663:123:69",
              "text": " @dev Constant Inflow NFT proxy created event\n @param constantInflowNFT constant inflow nft address"
            },
            "eventSelector": "8837af285f4d380af9227df9ebafa13d992b487fa6d7a4366bd4154576085b89",
            "name": "ConstantInflowNFTCreated",
            "nameLocation": "19797:24:69",
            "parameters": {
              "id": 67036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67035,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "19858:17:69",
                  "nodeType": "VariableDeclaration",
                  "scope": 67037,
                  "src": "19831:44:69",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 67034,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67033,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "19831:18:69"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66295,
                      "src": "19831:18:69"
                    },
                    "referencedDeclaration": 66295,
                    "src": "19831:18:69",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19821:60:69"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66586,
              "name": "ISuperfluidToken",
              "nameLocations": [
                "573:16:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68136,
              "src": "573:16:69"
            },
            "id": 66587,
            "nodeType": "InheritanceSpecifier",
            "src": "573:16:69"
          },
          {
            "baseName": {
              "id": 66588,
              "name": "TokenInfo",
              "nameLocations": [
                "591:9:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 68216,
              "src": "591:9:69"
            },
            "id": 66589,
            "nodeType": "InheritanceSpecifier",
            "src": "591:9:69"
          },
          {
            "baseName": {
              "id": 66590,
              "name": "IERC20",
              "nameLocations": [
                "602:6:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44661,
              "src": "602:6:69"
            },
            "id": 66591,
            "nodeType": "InheritanceSpecifier",
            "src": "602:6:69"
          },
          {
            "baseName": {
              "id": 66592,
              "name": "IERC777",
              "nameLocations": [
                "610:7:69"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45404,
              "src": "610:7:69"
            },
            "id": 66593,
            "nodeType": "InheritanceSpecifier",
            "src": "610:7:69"
          }
        ],
        "canonicalName": "ISuperToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 66585,
          "nodeType": "StructuredDocumentation",
          "src": "450:97:69",
          "text": " @title Super token (Superfluid Token + ERC20 + ERC777) interface\n @author Superfluid"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          67038,
          45404,
          44661,
          68216,
          68136
        ],
        "name": "ISuperToken",
        "nameLocation": "558:11:69",
        "scope": 67039,
        "usedErrors": [
          66595,
          66597,
          66599,
          66601,
          66603,
          66605,
          66607,
          66609,
          66611,
          66613,
          66615,
          66617,
          66619,
          66621,
          67857,
          67859,
          67861,
          67863,
          67865,
          67867
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 69
}