{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getInterfaceImplementer(address,bytes32)": "aabbb8ca",
    "getManager(address)": "3d584063",
    "implementsERC165Interface(address,bytes4)": "f712f3e8",
    "implementsERC165InterfaceNoCache(address,bytes4)": "b7056765",
    "interfaceHash(string)": "65ba36c1",
    "setInterfaceImplementer(address,bytes32,address)": "29965a1d",
    "setManager(address,address)": "5df8122f",
    "updateERC165Cache(address,bytes4)": "a41e7d51"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "interfaceHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "InterfaceImplementerSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ManagerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_interfaceHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getInterfaceImplementer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165Interface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "implementsERC165InterfaceNoCache",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "interfaceName",
              "type": "string"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "interfaceHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_interfaceHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "implementer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setInterfaceImplementer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "newManager",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setManager"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateERC165Cache"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getInterfaceImplementer(address,bytes32)": {
            "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
          },
          "getManager(address)": {
            "details": "Returns the manager for `account`. See {setManager}."
          },
          "implementsERC165Interface(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "returns": {
              "_0": "True if `account` implements `interfaceId`, false otherwise."
            }
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "params": {
              "account": "Address of the contract to check.",
              "interfaceId": "ERC165 interface to check."
            },
            "returns": {
              "_0": "True if `account` implements `interfaceId`, false otherwise."
            }
          },
          "interfaceHash(string)": {
            "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
          },
          "setInterfaceImplementer(address,bytes32,address)": {
            "details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
          },
          "setManager(address,address)": {
            "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
          },
          "updateERC165Cache(address,bytes4)": {
            "params": {
              "account": "Address of the contract for which to update the cache.",
              "interfaceId": "ERC165 interface for which to update the cache."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "implementsERC165Interface(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
          },
          "implementsERC165InterfaceNoCache(address,bytes4)": {
            "notice": "Checks whether a contract implements an ERC165 interface or not without using or updating the cache."
          },
          "updateERC165Cache(address,bytes4)": {
            "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": "IERC1820Registry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol",
    "id": 46113,
    "exportedSymbols": {
      "IERC1820Registry": [
        46112
      ]
    },
    "nodeType": "SourceUnit",
    "src": "124:4713:43",
    "nodes": [
      {
        "id": 46024,
        "nodeType": "PragmaDirective",
        "src": "124:23:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 46112,
        "nodeType": "ContractDefinition",
        "src": "769:4067:43",
        "nodes": [
          {
            "id": 46033,
            "nodeType": "EventDefinition",
            "src": "802:115:43",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db153",
            "name": "InterfaceImplementerSet",
            "nameLocation": "808:23:43",
            "parameters": {
              "id": 46032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46027,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "848:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46033,
                  "src": "832:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "832:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46029,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "873:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46033,
                  "src": "857:29:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46028,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46031,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "904:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46033,
                  "src": "888:27:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "888:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "831:85:43"
            }
          },
          {
            "id": 46039,
            "nodeType": "EventDefinition",
            "src": "923:74:43",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a4350",
            "name": "ManagerChanged",
            "nameLocation": "929:14:43",
            "parameters": {
              "id": 46038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46035,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "960:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46039,
                  "src": "944:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "944:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46037,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "985:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46039,
                  "src": "969:26:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46036,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "943:53:43"
            }
          },
          {
            "id": 46047,
            "nodeType": "FunctionDefinition",
            "src": "1453:66:43",
            "nodes": [],
            "documentation": {
              "id": 46040,
              "nodeType": "StructuredDocumentation",
              "src": "1003:445:43",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1462:10:43",
            "parameters": {
              "id": 46045,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46042,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1481:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46047,
                  "src": "1473:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1473:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46044,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1498:10:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46047,
                  "src": "1490:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1490:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1472:37:43"
            },
            "returnParameters": {
              "id": 46046,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:43"
            },
            "scope": 46112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46055,
            "nodeType": "FunctionDefinition",
            "src": "1620:69:43",
            "nodes": [],
            "documentation": {
              "id": 46048,
              "nodeType": "StructuredDocumentation",
              "src": "1525:90:43",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1629:10:43",
            "parameters": {
              "id": 46051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46050,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1648:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46055,
                  "src": "1640:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1639:17:43"
            },
            "returnParameters": {
              "id": 46054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46053,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46055,
                  "src": "1680:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:9:43"
            },
            "scope": 46112,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46065,
            "nodeType": "FunctionDefinition",
            "src": "2515:104:43",
            "nodes": [],
            "documentation": {
              "id": 46056,
              "nodeType": "StructuredDocumentation",
              "src": "1695:815:43",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2524:23:43",
            "parameters": {
              "id": 46063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46058,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2556:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46065,
                  "src": "2548:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2548:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46060,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2573:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46065,
                  "src": "2565:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46059,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46062,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2597:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46065,
                  "src": "2589:19:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2589:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2547:62:43"
            },
            "returnParameters": {
              "id": 46064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2618:0:43"
            },
            "scope": 46112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46075,
            "nodeType": "FunctionDefinition",
            "src": "3012:106:43",
            "nodes": [],
            "documentation": {
              "id": 46066,
              "nodeType": "StructuredDocumentation",
              "src": "2625:382:43",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "3021:23:43",
            "parameters": {
              "id": 46071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46068,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3053:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46075,
                  "src": "3045:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3045:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46070,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "3070:14:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46075,
                  "src": "3062:22:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3062:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3044:41:43"
            },
            "returnParameters": {
              "id": 46074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46073,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46075,
                  "src": "3109:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46072,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3109:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3108:9:43"
            },
            "scope": 46112,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46083,
            "nodeType": "FunctionDefinition",
            "src": "3325:86:43",
            "nodes": [],
            "documentation": {
              "id": 46076,
              "nodeType": "StructuredDocumentation",
              "src": "3124:196:43",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3334:13:43",
            "parameters": {
              "id": 46079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46078,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3364:13:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46083,
                  "src": "3348:29:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46077,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3348:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3347:31:43"
            },
            "returnParameters": {
              "id": 46082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46081,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46083,
                  "src": "3402:7:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 46080,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3402:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3401:9:43"
            },
            "scope": 46112,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46091,
            "nodeType": "FunctionDefinition",
            "src": "3682:73:43",
            "nodes": [],
            "documentation": {
              "id": 46084,
              "nodeType": "StructuredDocumentation",
              "src": "3417:260:43",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3691:17:43",
            "parameters": {
              "id": 46089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46086,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3717:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46091,
                  "src": "3709:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3709:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46088,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3733:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46091,
                  "src": "3726:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46087,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3726:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3708:37:43"
            },
            "returnParameters": {
              "id": 46090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3754:0:43"
            },
            "scope": 46112,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46101,
            "nodeType": "FunctionDefinition",
            "src": "4302:101:43",
            "nodes": [],
            "documentation": {
              "id": 46092,
              "nodeType": "StructuredDocumentation",
              "src": "3761:536:43",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4311:25:43",
            "parameters": {
              "id": 46097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46094,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4345:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46101,
                  "src": "4337:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46096,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4361:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46101,
                  "src": "4354:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46095,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4336:37:43"
            },
            "returnParameters": {
              "id": 46100,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46099,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46101,
                  "src": "4397:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46098,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4397:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4396:6:43"
            },
            "scope": 46112,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46111,
            "nodeType": "FunctionDefinition",
            "src": "4726:108:43",
            "nodes": [],
            "documentation": {
              "id": 46102,
              "nodeType": "StructuredDocumentation",
              "src": "4409:312:43",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using or updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4735:32:43",
            "parameters": {
              "id": 46107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46104,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4776:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46111,
                  "src": "4768:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4768:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46106,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4792:11:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 46111,
                  "src": "4785:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 46105,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4785:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4767:37:43"
            },
            "returnParameters": {
              "id": 46110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46111,
                  "src": "4828:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4828:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4827:6:43"
            },
            "scope": 46112,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 46025,
          "nodeType": "StructuredDocumentation",
          "src": "149:619:43",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          46112
        ],
        "name": "IERC1820Registry",
        "nameLocation": "779:16:43",
        "scope": 46113,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 43
}