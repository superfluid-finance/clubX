{
  "abi": [
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "activeAgreements",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getHost()": "20bc4425",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "settleBalance(address,int256)": "cf97256d",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"activeAgreements\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}}},\"kind\":\"dev\",\"methods\":{\"createAgreement(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"getAccountActiveAgreements(address)\":{\"details\":\"An active agreement is one that has state for the account\",\"params\":{\"account\":\"Account to query\"},\"returns\":{\"activeAgreements\":\"List of accounts that have non-zero states for the account\"}},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"Get data of the agreement\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"},\"returns\":{\"data\":\"Data of the agreement\"}},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"Get data of the slot of the state of an agreement\",\"params\":{\"account\":\"Account to query\",\"agreementClass\":\"Contract address of the agreement\",\"dataLength\":\"length of the state data\",\"slotId\":\"slot id of the state\"}},\"getHost()\":{\"details\":\"Get superfluid host contract address\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"custom:note\":\" - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount\",\"details\":\"Make liquidation payouts (v2)\",\"params\":{\"id\":\"Agreement ID\",\"liquidationTypeData\":\"Data regarding the version of the liquidation schema and the type\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the rewarded account will receive\",\"targetAccount\":\"Account to be liquidated\",\"targetAccountBalanceDelta\":\"The delta amount the target account balance should change by\",\"useDefaultRewardAccount\":\"Whether or not the default reward account receives the rewardAmount\"}},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"Calculate the real balance of a user, taking in consideration all agreements of the account\",\"params\":{\"account\":\"for the query\",\"timestamp\":\"Time of balance\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"realtimeBalanceOfNow(address)\":{\"details\":\"realtimeBalanceOf with timestamp equals to block timestamp\",\"params\":{\"account\":\"for the query\"},\"returns\":{\"availableBalance\":\"Real-time balance\",\"deposit\":\"Account deposit\",\"owedDeposit\":\"Account owed Deposit\"}},\"settleBalance(address,int256)\":{\"custom:modifiers\":\"  - onlyAgreement\",\"details\":\"The agreement needs to make sure that the balance delta is balanced afterwards\",\"params\":{\"account\":\"Account to query.\",\"delta\":\"Amount of balance delta to be settled\"}},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"Close the agreement\",\"params\":{\"id\":\"Agreement ID\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"Create a new agreement\",\"params\":{\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"custom:note\":\" - To clear the storage out, provide zero-ed array of intended length\",\"details\":\"Update agreement state slot\",\"params\":{\"account\":\"Account to be updated\"}}},\"title\":\"Superfluid token interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAccountActiveAgreements(address)\":{\"notice\":\"Get a list of agreements that is active for the account\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"realtimeBalanceOfNow(address)\":{\"notice\":\"Calculate the realtime balance given the current host.getNow() value\"},\"settleBalance(address,int256)\":{\"notice\":\"Settle balance from an account by the agreement\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":\"ISuperfluidToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "activeAgreements",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "createAgreement(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "getAccountActiveAgreements(address)": {
            "details": "An active agreement is one that has state for the account",
            "params": {
              "account": "Account to query"
            },
            "returns": {
              "activeAgreements": "List of accounts that have non-zero states for the account"
            }
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "Get data of the agreement",
            "params": {
              "agreementClass": "Contract address of the agreement",
              "id": "Agreement ID"
            },
            "returns": {
              "data": "Data of the agreement"
            }
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "Get data of the slot of the state of an agreement",
            "params": {
              "account": "Account to query",
              "agreementClass": "Contract address of the agreement",
              "dataLength": "length of the state data",
              "slotId": "slot id of the state"
            }
          },
          "getHost()": {
            "details": "Get superfluid host contract address"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "custom:note": " - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount",
            "details": "Make liquidation payouts (v2)",
            "params": {
              "id": "Agreement ID",
              "liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
              "liquidatorAccount": "Address of the executor of the liquidation",
              "rewardAmount": "The amount the rewarded account will receive",
              "targetAccount": "Account to be liquidated",
              "targetAccountBalanceDelta": "The delta amount the target account balance should change by",
              "useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
            }
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
            "params": {
              "account": "for the query",
              "timestamp": "Time of balance"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "realtimeBalanceOfNow(address)": {
            "details": "realtimeBalanceOf with timestamp equals to block timestamp",
            "params": {
              "account": "for the query"
            },
            "returns": {
              "availableBalance": "Real-time balance",
              "deposit": "Account deposit",
              "owedDeposit": "Account owed Deposit"
            }
          },
          "settleBalance(address,int256)": {
            "custom:modifiers": "  - onlyAgreement",
            "details": "The agreement needs to make sure that the balance delta is balanced afterwards",
            "params": {
              "account": "Account to query.",
              "delta": "Amount of balance delta to be settled"
            }
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "Close the agreement",
            "params": {
              "id": "Agreement ID"
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "Create a new agreement",
            "params": {
              "data": "Agreement data",
              "id": "Agreement ID"
            }
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "custom:note": " - To clear the storage out, provide zero-ed array of intended length",
            "details": "Update agreement state slot",
            "params": {
              "account": "Account to be updated"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getAccountActiveAgreements(address)": {
            "notice": "Get a list of agreements that is active for the account"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "realtimeBalanceOfNow(address)": {
            "notice": "Calculate the realtime balance given the current host.getNow() value"
          },
          "settleBalance(address,int256)": {
            "notice": "Settle balance from an account by the agreement"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": "ISuperfluidToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol",
    "id": 67905,
    "exportedSymbols": {
      "ISuperAgreement": [
        66224
      ],
      "ISuperfluidToken": [
        67904
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:15185:70",
    "nodes": [
      {
        "id": 67620,
        "nodeType": "PragmaDirective",
        "src": "32:26:70",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".11"
        ]
      },
      {
        "id": 67622,
        "nodeType": "ImportDirective",
        "src": "60:56:70",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol",
        "file": "./ISuperAgreement.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67905,
        "sourceUnit": 66225,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67621,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66224,
              "src": "69:15:70",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67904,
        "nodeType": "ContractDefinition",
        "src": "185:15031:70",
        "nodes": [
          {
            "id": 67625,
            "nodeType": "ErrorDefinition",
            "src": "393:42:70",
            "nodes": [],
            "errorSelector": "f05521f6",
            "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
            "nameLocation": "399:33:70",
            "parameters": {
              "id": 67624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "432:2:70"
            }
          },
          {
            "id": 67627,
            "nodeType": "ErrorDefinition",
            "src": "455:42:70",
            "nodes": [],
            "errorSelector": "dae18809",
            "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
            "nameLocation": "461:33:70",
            "parameters": {
              "id": 67626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:70"
            }
          },
          {
            "id": 67629,
            "nodeType": "ErrorDefinition",
            "src": "517:43:70",
            "nodes": [],
            "errorSelector": "10ecdf44",
            "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
            "nameLocation": "523:34:70",
            "parameters": {
              "id": 67628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "557:2:70"
            }
          },
          {
            "id": 67631,
            "nodeType": "ErrorDefinition",
            "src": "579:43:70",
            "nodes": [],
            "errorSelector": "2f4cb941",
            "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
            "nameLocation": "585:34:70",
            "parameters": {
              "id": 67630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "619:2:70"
            }
          },
          {
            "id": 67633,
            "nodeType": "ErrorDefinition",
            "src": "641:39:70",
            "nodes": [],
            "errorSelector": "c9ff6644",
            "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
            "nameLocation": "647:30:70",
            "parameters": {
              "id": 67632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "677:2:70"
            }
          },
          {
            "id": 67635,
            "nodeType": "ErrorDefinition",
            "src": "703:27:70",
            "nodes": [],
            "errorSelector": "c51efddd",
            "name": "SF_TOKEN_ONLY_HOST",
            "nameLocation": "709:18:70",
            "parameters": {
              "id": 67634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:70"
            }
          },
          {
            "id": 67641,
            "nodeType": "FunctionDefinition",
            "src": "1017:55:70",
            "nodes": [],
            "documentation": {
              "id": 67636,
              "nodeType": "StructuredDocumentation",
              "src": "952:60:70",
              "text": " @dev Get superfluid host contract address"
            },
            "functionSelector": "20bc4425",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getHost",
            "nameLocation": "1026:7:70",
            "parameters": {
              "id": 67637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1033:2:70"
            },
            "returnParameters": {
              "id": 67640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67639,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1066:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67641,
                  "src": "1058:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1058:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1057:14:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67646,
            "nodeType": "StructDefinition",
            "src": "1460:90:70",
            "nodes": [],
            "canonicalName": "ISuperfluidToken.LiquidationTypeData",
            "members": [
              {
                "constant": false,
                "id": 67643,
                "mutability": "mutable",
                "name": "version",
                "nameLocation": "1505:7:70",
                "nodeType": "VariableDeclaration",
                "scope": 67646,
                "src": "1497:15:70",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 67642,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1497:7:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 67645,
                "mutability": "mutable",
                "name": "liquidationType",
                "nameLocation": "1528:15:70",
                "nodeType": "VariableDeclaration",
                "scope": 67646,
                "src": "1522:21:70",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 67644,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1522:5:70",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LiquidationTypeData",
            "nameLocation": "1467:19:70",
            "scope": 67904,
            "visibility": "public"
          },
          {
            "id": 67660,
            "nodeType": "FunctionDefinition",
            "src": "2078:222:70",
            "nodes": [],
            "documentation": {
              "id": 67647,
              "nodeType": "StructuredDocumentation",
              "src": "1752:321:70",
              "text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
            },
            "functionSelector": "eb3537cc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "realtimeBalanceOf",
            "nameLocation": "2087:17:70",
            "parameters": {
              "id": 67652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67649,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2121:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67660,
                  "src": "2113:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67648,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67651,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2145:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67660,
                  "src": "2137:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2137:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2104:56:70"
            },
            "returnParameters": {
              "id": 67659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67654,
                  "mutability": "mutable",
                  "name": "availableBalance",
                  "nameLocation": "2220:16:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67660,
                  "src": "2213:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67653,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67656,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "2258:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67660,
                  "src": "2250:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2250:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67658,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "2287:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67660,
                  "src": "2279:19:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2199:100:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67674,
            "nodeType": "FunctionDefinition",
            "src": "2650:230:70",
            "nodes": [],
            "documentation": {
              "id": 67661,
              "nodeType": "StructuredDocumentation",
              "src": "2306:339:70",
              "text": " @notice Calculate the realtime balance given the current host.getNow() value\n @dev realtimeBalanceOf with timestamp equals to block timestamp\n @param account for the query\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
            },
            "functionSelector": "2ec8eec7",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "realtimeBalanceOfNow",
            "nameLocation": "2659:20:70",
            "parameters": {
              "id": 67664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67663,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2696:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67674,
                  "src": "2688:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2688:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2679:30:70"
            },
            "returnParameters": {
              "id": 67673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67666,
                  "mutability": "mutable",
                  "name": "availableBalance",
                  "nameLocation": "2769:16:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67674,
                  "src": "2762:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67665,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2762:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67668,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "2807:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67674,
                  "src": "2799:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2799:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67670,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "2836:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67674,
                  "src": "2828:19:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67669,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67672,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2869:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67674,
                  "src": "2861:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2861:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2748:131:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67684,
            "nodeType": "FunctionDefinition",
            "src": "3200:140:70",
            "nodes": [],
            "documentation": {
              "id": 67675,
              "nodeType": "StructuredDocumentation",
              "src": "2886:309:70",
              "text": " @notice Check if account is critical\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @param timestamp The time we'd like to check if the account is critical (should use future)\n @return isCritical Whether the account is critical"
            },
            "functionSelector": "d9d078d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountCritical",
            "nameLocation": "3209:17:70",
            "parameters": {
              "id": 67680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67677,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3244:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67684,
                  "src": "3236:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67679,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3269:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67684,
                  "src": "3261:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3261:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3226:58:70"
            },
            "returnParameters": {
              "id": 67683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67682,
                  "mutability": "mutable",
                  "name": "isCritical",
                  "nameLocation": "3328:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67684,
                  "src": "3323:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67681,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3323:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3322:17:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67692,
            "nodeType": "FunctionDefinition",
            "src": "3590:116:70",
            "nodes": [],
            "documentation": {
              "id": 67685,
              "nodeType": "StructuredDocumentation",
              "src": "3346:239:70",
              "text": " @notice Check if account is critical now (current host.getNow())\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @return isCritical Whether the account is critical"
            },
            "functionSelector": "79359f6f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountCriticalNow",
            "nameLocation": "3599:20:70",
            "parameters": {
              "id": 67688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67687,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3637:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67692,
                  "src": "3629:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3629:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3619:31:70"
            },
            "returnParameters": {
              "id": 67691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67690,
                  "mutability": "mutable",
                  "name": "isCritical",
                  "nameLocation": "3694:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67692,
                  "src": "3689:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67689,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3689:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3688:17:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67702,
            "nodeType": "FunctionDefinition",
            "src": "4100:138:70",
            "nodes": [],
            "documentation": {
              "id": 67693,
              "nodeType": "StructuredDocumentation",
              "src": "3712:383:70",
              "text": " @notice Check if account is solvent\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @param timestamp The time we'd like to check if the account is solvent (should use future)\n @return isSolvent True if the account is solvent, false otherwise"
            },
            "functionSelector": "b84cdd4a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountSolvent",
            "nameLocation": "4109:16:70",
            "parameters": {
              "id": 67698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67695,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4143:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67702,
                  "src": "4135:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4135:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67697,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "4168:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67702,
                  "src": "4160:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4160:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4125:58:70"
            },
            "returnParameters": {
              "id": 67701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67700,
                  "mutability": "mutable",
                  "name": "isSolvent",
                  "nameLocation": "4227:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67702,
                  "src": "4222:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67699,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4222:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4221:16:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67710,
            "nodeType": "FunctionDefinition",
            "src": "4538:114:70",
            "nodes": [],
            "documentation": {
              "id": 67703,
              "nodeType": "StructuredDocumentation",
              "src": "4244:289:70",
              "text": " @notice Check if account is solvent now\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @return isSolvent True if the account is solvent, false otherwise"
            },
            "functionSelector": "bb0d196e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountSolventNow",
            "nameLocation": "4547:19:70",
            "parameters": {
              "id": 67706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67705,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4584:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67710,
                  "src": "4576:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4576:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4566:31:70"
            },
            "returnParameters": {
              "id": 67709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67708,
                  "mutability": "mutable",
                  "name": "isSolvent",
                  "nameLocation": "4641:9:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67710,
                  "src": "4636:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67707,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4636:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4635:16:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67720,
            "nodeType": "FunctionDefinition",
            "src": "4940:132:70",
            "nodes": [],
            "documentation": {
              "id": 67711,
              "nodeType": "StructuredDocumentation",
              "src": "4658:277:70",
              "text": " @notice Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
            },
            "functionSelector": "386fa221",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountActiveAgreements",
            "nameLocation": "4949:26:70",
            "parameters": {
              "id": 67714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67713,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4984:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67720,
                  "src": "4976:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67712,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4976:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4975:17:70"
            },
            "returnParameters": {
              "id": 67719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67718,
                  "mutability": "mutable",
                  "name": "activeAgreements",
                  "nameLocation": "5054:16:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67720,
                  "src": "5029:41:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$66224_$dyn_memory_ptr",
                    "typeString": "contract ISuperAgreement[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67716,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 67715,
                        "name": "ISuperAgreement",
                        "nameLocations": [
                          "5029:15:70"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 66224,
                        "src": "5029:15:70"
                      },
                      "referencedDeclaration": 66224,
                      "src": "5029:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperAgreement_$66224",
                        "typeString": "contract ISuperAgreement"
                      }
                    },
                    "id": 67717,
                    "nodeType": "ArrayTypeName",
                    "src": "5029:17:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$66224_$dyn_storage_ptr",
                      "typeString": "contract ISuperAgreement[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:43:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67729,
            "nodeType": "FunctionDefinition",
            "src": "5393:101:70",
            "nodes": [],
            "documentation": {
              "id": 67721,
              "nodeType": "StructuredDocumentation",
              "src": "5278:110:70",
              "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "functionSelector": "12a6a3f8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createAgreement",
            "nameLocation": "5402:15:70",
            "parameters": {
              "id": 67727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67723,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5435:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67729,
                  "src": "5427:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67722,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5427:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67726,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5466:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67729,
                  "src": "5447:23:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67724,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5447:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67725,
                    "nodeType": "ArrayTypeName",
                    "src": "5447:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5417:59:70"
            },
            "returnParameters": {
              "id": 67728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5493:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67739,
            "nodeType": "EventDefinition",
            "src": "5678:113:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67730,
              "nodeType": "StructuredDocumentation",
              "src": "5499:174:70",
              "text": " @dev Agreement created event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "eventSelector": "770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d",
            "name": "AgreementCreated",
            "nameLocation": "5684:16:70",
            "parameters": {
              "id": 67738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67732,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "5726:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67739,
                  "src": "5710:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5710:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67734,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5758:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67739,
                  "src": "5750:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67733,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5750:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67737,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5780:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67739,
                  "src": "5770:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67735,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5770:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67736,
                    "nodeType": "ArrayTypeName",
                    "src": "5770:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5700:90:70"
            }
          },
          {
            "id": 67752,
            "nodeType": "FunctionDefinition",
            "src": "5986:170:70",
            "nodes": [],
            "documentation": {
              "id": 67740,
              "nodeType": "StructuredDocumentation",
              "src": "5797:184:70",
              "text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
            },
            "functionSelector": "6c2d9f2f",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementData",
            "nameLocation": "5995:16:70",
            "parameters": {
              "id": 67747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67742,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "6029:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67752,
                  "src": "6021:22:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6021:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67744,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6061:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67752,
                  "src": "6053:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67743,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6053:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67746,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "6078:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67752,
                  "src": "6073:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67745,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6073:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6011:83:70"
            },
            "returnParameters": {
              "id": 67751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67750,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6150:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67752,
                  "src": "6133:21:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67748,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6133:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67749,
                    "nodeType": "ArrayTypeName",
                    "src": "6133:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6132:23:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67761,
            "nodeType": "FunctionDefinition",
            "src": "6277:105:70",
            "nodes": [],
            "documentation": {
              "id": 67753,
              "nodeType": "StructuredDocumentation",
              "src": "6162:110:70",
              "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "functionSelector": "a1b2bf8b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgreementData",
            "nameLocation": "6286:19:70",
            "parameters": {
              "id": 67759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67755,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6323:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67761,
                  "src": "6315:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67754,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6315:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67758,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6354:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67761,
                  "src": "6335:23:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67756,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6335:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67757,
                    "nodeType": "ArrayTypeName",
                    "src": "6335:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6305:59:70"
            },
            "returnParameters": {
              "id": 67760,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6381:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67771,
            "nodeType": "EventDefinition",
            "src": "6566:113:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67762,
              "nodeType": "StructuredDocumentation",
              "src": "6387:174:70",
              "text": " @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "eventSelector": "0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca",
            "name": "AgreementUpdated",
            "nameLocation": "6572:16:70",
            "parameters": {
              "id": 67770,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67764,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "6614:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67771,
                  "src": "6598:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6598:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6646:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67771,
                  "src": "6638:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67765,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6638:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67769,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6668:4:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67771,
                  "src": "6658:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67767,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6658:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67768,
                    "nodeType": "ArrayTypeName",
                    "src": "6658:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6588:90:70"
            }
          },
          {
            "id": 67779,
            "nodeType": "FunctionDefinition",
            "src": "6763:96:70",
            "nodes": [],
            "documentation": {
              "id": 67772,
              "nodeType": "StructuredDocumentation",
              "src": "6685:73:70",
              "text": " @dev Close the agreement\n @param id Agreement ID"
            },
            "functionSelector": "27048397",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "terminateAgreement",
            "nameLocation": "6772:18:70",
            "parameters": {
              "id": 67777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67774,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6808:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67779,
                  "src": "6800:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67773,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6800:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67776,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "6825:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67779,
                  "src": "6820:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67775,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6820:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6790:51:70"
            },
            "returnParameters": {
              "id": 67778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6858:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67786,
            "nodeType": "EventDefinition",
            "src": "7012:92:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67780,
              "nodeType": "StructuredDocumentation",
              "src": "6864:143:70",
              "text": " @dev Agreement terminated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
            },
            "eventSelector": "71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b",
            "name": "AgreementTerminated",
            "nameLocation": "7018:19:70",
            "parameters": {
              "id": 67785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67782,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "7063:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67786,
                  "src": "7047:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67781,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7047:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67784,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "7095:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67786,
                  "src": "7087:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67783,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7087:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7037:66:70"
            }
          },
          {
            "id": 67797,
            "nodeType": "FunctionDefinition",
            "src": "7314:143:70",
            "nodes": [],
            "documentation": {
              "id": 67787,
              "nodeType": "StructuredDocumentation",
              "src": "7110:199:70",
              "text": " @dev Update agreement state slot\n @param account Account to be updated\n @custom:note \n - To clear the storage out, provide zero-ed array of intended length"
            },
            "functionSelector": "090c415e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgreementStateSlot",
            "nameLocation": "7323:24:70",
            "parameters": {
              "id": 67795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67789,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7365:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67797,
                  "src": "7357:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7357:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67791,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "7390:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67797,
                  "src": "7382:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7382:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67794,
                  "mutability": "mutable",
                  "name": "slotData",
                  "nameLocation": "7425:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67797,
                  "src": "7406:27:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67792,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7406:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67793,
                    "nodeType": "ArrayTypeName",
                    "src": "7406:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7347:92:70"
            },
            "returnParameters": {
              "id": 67796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7456:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67806,
            "nodeType": "EventDefinition",
            "src": "7681:131:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67798,
              "nodeType": "StructuredDocumentation",
              "src": "7462:214:70",
              "text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
            },
            "eventSelector": "30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d5985",
            "name": "AgreementStateUpdated",
            "nameLocation": "7687:21:70",
            "parameters": {
              "id": 67805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67800,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "7734:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67806,
                  "src": "7718:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7718:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67802,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7774:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67806,
                  "src": "7758:23:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67801,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7758:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67804,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "7799:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67806,
                  "src": "7791:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7791:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7708:103:70"
            }
          },
          {
            "id": 67821,
            "nodeType": "FunctionDefinition",
            "src": "8090:209:70",
            "nodes": [],
            "documentation": {
              "id": 67807,
              "nodeType": "StructuredDocumentation",
              "src": "7818:267:70",
              "text": " @dev Get data of the slot of the state of an agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
            },
            "functionSelector": "4b61cc33",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStateSlot",
            "nameLocation": "8099:21:70",
            "parameters": {
              "id": 67816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67809,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "8138:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67821,
                  "src": "8130:22:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8130:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67811,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8170:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67821,
                  "src": "8162:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67810,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8162:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67813,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "8195:6:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67821,
                  "src": "8187:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67812,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8187:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67815,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "8216:10:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67821,
                  "src": "8211:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67814,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8211:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8120:112:70"
            },
            "returnParameters": {
              "id": 67820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67819,
                  "mutability": "mutable",
                  "name": "slotData",
                  "nameLocation": "8289:8:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67821,
                  "src": "8272:25:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 67817,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "8272:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 67818,
                    "nodeType": "ArrayTypeName",
                    "src": "8272:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8271:27:70"
            },
            "scope": 67904,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67829,
            "nodeType": "FunctionDefinition",
            "src": "8630:93:70",
            "nodes": [],
            "documentation": {
              "id": 67822,
              "nodeType": "StructuredDocumentation",
              "src": "8305:320:70",
              "text": " @notice Settle balance from an account by the agreement\n @dev The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n @custom:modifiers \n  - onlyAgreement"
            },
            "functionSelector": "cf97256d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleBalance",
            "nameLocation": "8639:13:70",
            "parameters": {
              "id": 67827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67824,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "8670:7:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67829,
                  "src": "8662:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8662:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67826,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "8694:5:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67829,
                  "src": "8687:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67825,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8687:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8652:53:70"
            },
            "returnParameters": {
              "id": 67828,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8722:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67847,
            "nodeType": "FunctionDefinition",
            "src": "9888:292:70",
            "nodes": [],
            "documentation": {
              "id": 67830,
              "nodeType": "StructuredDocumentation",
              "src": "8729:1154:70",
              "text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account to be liquidated\n @param rewardAmount The amount the rewarded account will receive\n @param targetAccountBalanceDelta The delta amount the target account balance should change by\n @custom:note \n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n @custom:modifiers \n  - onlyAgreement"
            },
            "functionSelector": "1863e809",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "makeLiquidationPayoutsV2",
            "nameLocation": "9897:24:70",
            "parameters": {
              "id": 67845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67832,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9944:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "9936:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67831,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9936:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67834,
                  "mutability": "mutable",
                  "name": "liquidationTypeData",
                  "nameLocation": "9969:19:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "9956:32:70",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67833,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9956:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67836,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "10006:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "9998:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67835,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9998:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67838,
                  "mutability": "mutable",
                  "name": "useDefaultRewardAccount",
                  "nameLocation": "10038:23:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "10033:28:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 67837,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10033:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67840,
                  "mutability": "mutable",
                  "name": "targetAccount",
                  "nameLocation": "10079:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "10071:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67839,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10071:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67842,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "10110:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "10102:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67841,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10102:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67844,
                  "mutability": "mutable",
                  "name": "targetAccountBalanceDelta",
                  "nameLocation": "10139:25:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67847,
                  "src": "10132:32:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67843,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10132:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9926:244:70"
            },
            "returnParameters": {
              "id": 67846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10179:0:70"
            },
            "scope": 67904,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 67866,
            "nodeType": "EventDefinition",
            "src": "11702:321:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67848,
              "nodeType": "StructuredDocumentation",
              "src": "10185:1512:70",
              "text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAmountReceiver Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n @custom:note \n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
            },
            "eventSelector": "b8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f",
            "name": "AgreementLiquidatedV2",
            "nameLocation": "11708:21:70",
            "parameters": {
              "id": 67865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67850,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "11755:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11739:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67849,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11739:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67852,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "11787:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11779:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67851,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11779:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67854,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "11815:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11799:33:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11799:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67856,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetAccount",
                  "nameLocation": "11858:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11842:29:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11842:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67858,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmountReceiver",
                  "nameLocation": "11889:20:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11881:28:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11881:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67860,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "11927:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11919:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11919:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67862,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAccountBalanceDelta",
                  "nameLocation": "11956:25:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11949:32:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 67861,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11949:6:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67864,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidationTypeData",
                  "nameLocation": "11997:19:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67866,
                  "src": "11991:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 67863,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11991:5:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11729:293:70"
            }
          },
          {
            "id": 67879,
            "nodeType": "EventDefinition",
            "src": "13275:201:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67867,
              "nodeType": "StructuredDocumentation",
              "src": "12835:435:70",
              "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward\n @custom:deprecated Use AgreementLiquidatedV2 instead"
            },
            "eventSelector": "8505c3d8f1f184f032cf0bc4cd80ee61c8b9d94f8907c3281bf0101a2610fe80",
            "name": "AgreementLiquidated",
            "nameLocation": "13281:19:70",
            "parameters": {
              "id": 67878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67869,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "13326:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67879,
                  "src": "13310:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13310:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67871,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13358:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67879,
                  "src": "13350:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67870,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13350:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67873,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "penaltyAccount",
                  "nameLocation": "13386:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67879,
                  "src": "13370:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67872,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13370:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67875,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewardAccount",
                  "nameLocation": "13426:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67879,
                  "src": "13410:29:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67874,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13410:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67877,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "13457:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67879,
                  "src": "13449:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13449:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13300:175:70"
            }
          },
          {
            "id": 67886,
            "nodeType": "EventDefinition",
            "src": "13763:91:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67880,
              "nodeType": "StructuredDocumentation",
              "src": "13482:276:70",
              "text": " @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout\n @custom:deprecated Use AgreementLiquidatedV2 instead"
            },
            "eventSelector": "d6c9a04afc81e8c614310bbee6c9e84f5abe15b82038bf8347014ce0852e6ffd",
            "name": "Bailout",
            "nameLocation": "13769:7:70",
            "parameters": {
              "id": 67885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67882,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bailoutAccount",
                  "nameLocation": "13802:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67886,
                  "src": "13786:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13786:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67884,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bailoutAmount",
                  "nameLocation": "13834:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67886,
                  "src": "13826:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67883,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13826:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13776:77:70"
            }
          },
          {
            "id": 67903,
            "nodeType": "EventDefinition",
            "src": "14947:267:70",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 67887,
              "nodeType": "StructuredDocumentation",
              "src": "13860:1082:70",
              "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n @custom:deprecated Use AgreementLiquidatedV2 instead\n @custom:note \n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
            },
            "eventSelector": "5f22b60e58b1d6de858bc27c48d5a4653e052da99e083c1d88bb8c58e1abc8ef",
            "name": "AgreementLiquidatedBy",
            "nameLocation": "14953:21:70",
            "parameters": {
              "id": 67902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67889,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "14992:17:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "14984:25:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14984:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67891,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "15035:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15019:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15019:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67893,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "15067:2:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15059:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 67892,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "15059:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67895,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "penaltyAccount",
                  "nameLocation": "15095:14:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15079:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15079:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67897,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bondAccount",
                  "nameLocation": "15135:11:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15119:27:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 67896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15119:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67899,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "15164:12:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15156:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15156:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67901,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bailoutAmount",
                  "nameLocation": "15194:13:70",
                  "nodeType": "VariableDeclaration",
                  "scope": 67903,
                  "src": "15186:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67900,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15186:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14974:239:70"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISuperfluidToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 67623,
          "nodeType": "StructuredDocumentation",
          "src": "118:66:70",
          "text": " @title Superfluid token interface\n @author Superfluid"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          67904
        ],
        "name": "ISuperfluidToken",
        "nameLocation": "195:16:70",
        "scope": 67905,
        "usedErrors": [
          67625,
          67627,
          67629,
          67631,
          67633,
          67635
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 70
}