{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_TO_CALLER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_APPROVE_TO_CURRENT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_INVALID_TOKEN_ID",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_ONLY_SUPER_TOKEN_FACTORY",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CFA_NFT_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_FLOW_AGREEMENT_V1",
      "outputs": [
        {
          "internalType": "contract IConstantFlowAgreementV1",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_BASE_URI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "HOST",
      "outputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "flowDataByTokenId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowSender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "flowReceiver",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "flowStartDate",
              "type": "uint32"
            }
          ],
          "internalType": "struct IFlowNFTBase.FlowNFTData",
          "name": "flowData",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "superToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "nftName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "nftSymbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newTokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "triggerMetadataUpdate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620021ae380380620021ae8339810160408190526200003491620000fd565b6001600160a01b03821660a0819052604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3600482015283919063b6d200de90602401602060405180830381865afa158015620000a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c691906200013c565b6001600160a01b039081166080529190911660c05250620001639050565b6001600160a01b0381168114620000fa57600080fd5b50565b600080604083850312156200011157600080fd5b82516200011e81620000e4565b60208401519092506200013181620000e4565b809150509250929050565b6000602082840312156200014f57600080fd5b81516200015c81620000e4565b9392505050565b60805160a05160c051611ff8620001b66000396000818161045501528181610657015281816106c901526109c30152600081816102e4015261071401526000818161024b01526110cf0152611ff86000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806352d1902d116100f95780639903ad3811610097578063b88d4fde11610071578063b88d4fde14610417578063c87b56dd1461042a578063e985e9c51461043d578063ef43d2c61461045057600080fd5b80639903ad38146103f4578063a22cb465146103fc578063a497325b1461040f57600080fd5b806370a08231116100d357806370a082311461036c57806389f71d2d146103805780638d47859e1461039357806395d89b41146103ec57600080fd5b806352d1902d146103215780636352211e146103515780636c0360eb1461036457600080fd5b806340c10f1911610166578063469519541161014057806346951954146102cc57806349f289dc146102df5780634cd88b761461030657806350d75d251461031957600080fd5b806340c10f191461029357806342842e0e146102a657806342966c68146102b957600080fd5b8063095ea7b3116101a2578063095ea7b314610231578063181561011461024657806323b872dd1461026d5780632f3885601461028057600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004611680565b610477565b60405190151581526020015b60405180910390f35b6101f96104c9565b6040516101e891906116ce565b610219610214366004611701565b61055b565b6040516001600160a01b0390911681526020016101e8565b61024461023f36600461172f565b610582565b005b6102197f000000000000000000000000000000000000000000000000000000000000000081565b61024461027b36600461175b565b61060e565b61024461028e366004611701565b610640565b6102446102a136600461172f565b61064c565b6102446102b436600461175b565b6106a3565b6102446102c7366004611701565b6106be565b6102446102da36600461179c565b610710565b6102197f000000000000000000000000000000000000000000000000000000000000000081565b610244610314366004611886565b6107c8565b6102196108ae565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e5b6040519081526020016101e8565b61021961035f366004611701565b6108dd565b6101f9610912565b61034361037a36600461179c565b50600190565b61034361038e3660046118ea565b610932565b6103a66103a1366004611701565b610985565b6040805182516001600160a01b03908116825260208085015182169083015283830151169181019190915260609182015163ffffffff16918101919091526080016101e8565b6101f9610a2e565b610244610a3d565b61024461040a366004611935565b610aff565b6101f9610b0a565b610244610425366004611973565b610b26565b6101f9610438366004611701565b610b5f565b6101dc61044b3660046119f3565b610b6c565b6102197f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b0319831614806104a857506380ac58cd60e01b6001600160e01b03198316145b806104c35750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600180546104d890611a21565b80601f016020809104026020016040519081016040528092919081815260200182805461050490611a21565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b5050505050905090565b600061056682610b9a565b506000908152600360205260409020546001600160a01b031690565b600061058d826108dd565b9050806001600160a01b0316836001600160a01b0316036105c15760405163e4790b2560e01b815260040160405180910390fd5b336001600160a01b038216148015906105e157506105df8133610b6c565b155b156105ff5760405163519a92c160e11b815260040160405180910390fd5b6106098383610bc0565b505050565b6106183382610c2e565b610635576040516312a8eb0360e11b815260040160405180910390fd5b610609838383610c8c565b61064981610ca5565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106955760405163740f7abd60e11b815260040160405180910390fd5b61069f8282610cd5565b5050565b61060983838360405180602001604052806000815250610b26565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107075760405163740f7abd60e11b815260040160405180910390fd5b61064981610d11565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190611a5b565b9050336001600160a01b038216146107bf5760405163ebb7505b60e01b815260040160405180910390fd5b61069f82610d84565b600054610100900460ff16158080156107e85750600054600160ff909116105b806108025750303b158015610802575060005460ff166001145b6108275760405162461bcd60e51b815260040161081e90611a78565b60405180910390fd5b6000805460ff19166001179055801561084a576000805461ff0019166101001790555b60016108568482611b14565b5060026108638382611b14565b508015610609576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108d87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b6000806108e983610fbe565b90506001600160a01b0381166104c35760405163eab95e3b60e01b815260040160405180910390fd5b60606040518060600160405280602d8152602001611f96602d9139905090565b60408051466020808301919091526001600160a01b0380871683850152808616606084015284166080808401919091528351808403909101815260a090920190925280519101206000905b949350505050565b60408051608081018252600080825260208201819052818301819052606082015290516346a3c2cf60e11b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d47859e90602401608060405180830381865afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190611bd4565b6060600280546104d890611a21565b600054610100900460ff1615808015610a5d5750600054600160ff909116105b80610a775750303b158015610a77575060005460ff166001145b610a935760405162461bcd60e51b815260040161081e90611a78565b6000805460ff191660011790558015610ab6576000805461ff0019166101001790555b8015610649576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b61069f338383610fd5565b6040518060600160405280602d8152602001611f96602d913981565b610b303383610c2e565b610b4d576040516312a8eb0360e11b815260040160405180910390fd5b610b5984848484611074565b50505050565b60606104c382600161107f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b610ba3816111da565b6106495760405163eab95e3b60e01b815260040160405180910390fd5b600081815260036020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bf582610fbe565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c3a836108dd565b9050806001600160a01b0316846001600160a01b03161480610c615750610c618185610b6c565b8061097d5750836001600160a01b0316610c7a8461055b565b6001600160a01b031614949350505050565b60405163553a3f6560e11b815260040160405180910390fd5b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610af4565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610d1c82610985565b600083815260036020526040902080546001600160a01b031916905590508160006001600160a01b031682604001516001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000610dae7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031603610e045760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c65000000604482015260640161081e565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190611c62565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e14610ee05760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b606482015260840161081e565b6001600160a01b0381163003610f385760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f7000000000000000604482015260640161081e565b610f60817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e604080519182526001600160a01b038416602083015201610af4565b600080610fca83610985565b604001519392505050565b816001600160a01b0316836001600160a01b0316036110075760405163d3c7732960e01b815260040160405180910390fd5b6001600160a01b03838116600081815260046020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b59848484610c8c565b6060600061108c84610985565b805160208201516040808401519051631cd43d1160e31b81526001600160a01b0380851660048301529283166024820152908216604482015292935090916000917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa158015611116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113a9190611c7b565b5050915050611147610912565b61115e826bffffffffffffffffffffffff166111f7565b8661118557604051806040016040528060048152602001637472756560e01b8152506111a4565b6040518060400160405280600581526020016466616c736560d81b8152505b6111ad8961128a565b6040516020016111c09493929190611cdb565b604051602081830303815290604052935050505092915050565b6000806111e683610fbe565b6001600160a01b0316141592915050565b6060600061120483611405565b600101905060008167ffffffffffffffff811115611224576112246117b9565b6040519080825280601f01601f19166020018201604052801561124e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461125857509392505050565b6060600061129783610985565b90506112b181600001516001600160a01b031660146114dd565b6112ba466111f7565b82600001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113249190810190611d63565b61133c84602001516001600160a01b031660146114dd565b61135485604001516001600160a01b031660146114dd565b6113c586600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bd9190611dda565b60ff166111f7565b6113d8876060015163ffffffff166111f7565b6040516020016113ee9796959493929190611dfd565b604051602081830303815290604052915050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114445772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611470576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061148e57662386f26fc10000830492506010015b6305f5e10083106114a6576305f5e100830492506008015b61271083106114ba57612710830492506004015b606483106114cc576064830492506002015b600a83106104c35760010192915050565b606060006114ec836002611f3e565b6114f7906002611f55565b67ffffffffffffffff81111561150f5761150f6117b9565b6040519080825280601f01601f191660200182016040528015611539576020820181803683370190505b509050600360fc1b8160008151811061155457611554611f68565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061158357611583611f68565b60200101906001600160f81b031916908160001a90535060006115a7846002611f3e565b6115b2906001611f55565b90505b600181111561162a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106115e6576115e6611f68565b1a60f81b8282815181106115fc576115fc611f68565b60200101906001600160f81b031916908160001a90535060049490941c9361162381611f7e565b90506115b5565b5083156116795760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161081e565b9392505050565b60006020828403121561169257600080fd5b81356001600160e01b03198116811461167957600080fd5b60005b838110156116c55781810151838201526020016116ad565b50506000910152565b60208152600082518060208401526116ed8160408501602087016116aa565b601f01601f19169190910160400192915050565b60006020828403121561171357600080fd5b5035919050565b6001600160a01b038116811461064957600080fd5b6000806040838503121561174257600080fd5b823561174d8161171a565b946020939093013593505050565b60008060006060848603121561177057600080fd5b833561177b8161171a565b9250602084013561178b8161171a565b929592945050506040919091013590565b6000602082840312156117ae57600080fd5b81356116798161171a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117f8576117f86117b9565b604052919050565b600067ffffffffffffffff82111561181a5761181a6117b9565b50601f01601f191660200190565b600061183b61183684611800565b6117cf565b905082815283838301111561184f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261187757600080fd5b61167983833560208501611828565b6000806040838503121561189957600080fd5b823567ffffffffffffffff808211156118b157600080fd5b6118bd86838701611866565b935060208501359150808211156118d357600080fd5b506118e085828601611866565b9150509250929050565b6000806000606084860312156118ff57600080fd5b833561190a8161171a565b9250602084013561191a8161171a565b9150604084013561192a8161171a565b809150509250925092565b6000806040838503121561194857600080fd5b82356119538161171a565b91506020830135801515811461196857600080fd5b809150509250929050565b6000806000806080858703121561198957600080fd5b84356119948161171a565b935060208501356119a48161171a565b925060408501359150606085013567ffffffffffffffff8111156119c757600080fd5b8501601f810187136119d857600080fd5b6119e787823560208401611828565b91505092959194509250565b60008060408385031215611a0657600080fd5b8235611a118161171a565b915060208301356119688161171a565b600181811c90821680611a3557607f821691505b602082108103611a5557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a6d57600080fd5b81516116798161171a565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b601f82111561060957600081815260208120601f850160051c81016020861015611aed5750805b601f850160051c820191505b81811015611b0c57828155600101611af9565b505050505050565b815167ffffffffffffffff811115611b2e57611b2e6117b9565b611b4281611b3c8454611a21565b84611ac6565b602080601f831160018114611b775760008415611b5f5750858301515b600019600386901b1c1916600185901b178555611b0c565b600085815260208120601f198616915b82811015611ba657888601518255948401946001909101908401611b87565b5085821015611bc45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060808284031215611be657600080fd5b6040516080810181811067ffffffffffffffff82111715611c0957611c096117b9565b6040528251611c178161171a565b81526020830151611c278161171a565b60208201526040830151611c3a8161171a565b6040820152606083015163ffffffff81168114611c5657600080fd5b60608201529392505050565b600060208284031215611c7457600080fd5b5051919050565b60008060008060808587031215611c9157600080fd5b84519350602085015180600b0b8114611ca957600080fd5b6040860151606090960151949790965092505050565b60008151611cd18185602086016116aa565b9290920192915050565b60008551611ced818460208a016116aa565b693f666c6f77526174653d60b01b9083019081528551611d1481600a840160208a016116aa565b69266f7574676f696e673d60b01b600a92909101918201528451611d3f8160148401602089016116aa565b8451910190611d558160148401602088016116aa565b016014019695505050505050565b600060208284031215611d7557600080fd5b815167ffffffffffffffff811115611d8c57600080fd5b8201601f81018413611d9d57600080fd5b8051611dab61183682611800565b818152856020838501011115611dc057600080fd5b611dd18260208301602086016116aa565b95945050505050565b600060208284031215611dec57600080fd5b815160ff8116811461167957600080fd5b6e26746f6b656e5f616464726573733d60881b815260008851611e2781600f850160208d016116aa565b6926636861696e5f69643d60b01b600f918401918201528851611e51816019840160208d016116aa565b6d26746f6b656e5f73796d626f6c3d60901b601992909101918201528751611e80816027840160208c016116aa565b672673656e6465723d60c01b602792909101918201528651611ea981602f840160208b016116aa565b692672656365697665723d60b01b602f9290910191820152611f1a611f14611efc611ef6611eda603986018b611cbf565b6f26746f6b656e5f646563696d616c733d60801b815260100190565b88611cbf565b6b2673746172745f646174653d60a01b8152600c0190565b85611cbf565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104c3576104c3611f28565b808201808211156104c3576104c3611f28565b634e487b7160e01b600052603260045260246000fd5b600081611f8d57611f8d611f28565b50600019019056fe68747470733a2f2f6e66742e7375706572666c7569642e66696e616e63652f6366612f76322f6765746d657461a2646970667358221220814ecaa96cf9f88ea0066864bbbccbd79ac5feb94a507ec6c89577f6d6fcf36964736f6c63430008130033",
    "sourceMap": "743:3068:88:-:0;;;924:168;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4084:11:90;;;;;;4197:146;;-1:-1:-1;;;4197:146:90;;4254:71;4197:146;;;775:25:118;4084:11:90;;;4197:35;;748:18:118;;4197:146:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4105:262:90;;;;;1044:41:88;;;::::1;;::::0;-1:-1:-1;743:3068:88;;-1:-1:-1;743:3068:88;14:144:118;-1:-1:-1;;;;;102:31:118;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:461::-;292:6;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;401:9;395:16;420:44;458:5;420:44;:::i;:::-;533:2;518:18;;512:25;483:5;;-1:-1:-1;546:46:118;512:25;546:46;:::i;:::-;611:7;601:17;;;163:461;;;;;:::o;811:289::-;906:6;959:2;947:9;938:7;934:23;930:32;927:52;;;975:1;972;965:12;927:52;1007:9;1001:16;1026:44;1064:5;1026:44;:::i;:::-;1089:5;811:289;-1:-1:-1;;;811:289:118:o;:::-;743:3068:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806352d1902d116100f95780639903ad3811610097578063b88d4fde11610071578063b88d4fde14610417578063c87b56dd1461042a578063e985e9c51461043d578063ef43d2c61461045057600080fd5b80639903ad38146103f4578063a22cb465146103fc578063a497325b1461040f57600080fd5b806370a08231116100d357806370a082311461036c57806389f71d2d146103805780638d47859e1461039357806395d89b41146103ec57600080fd5b806352d1902d146103215780636352211e146103515780636c0360eb1461036457600080fd5b806340c10f1911610166578063469519541161014057806346951954146102cc57806349f289dc146102df5780634cd88b761461030657806350d75d251461031957600080fd5b806340c10f191461029357806342842e0e146102a657806342966c68146102b957600080fd5b8063095ea7b3116101a2578063095ea7b314610231578063181561011461024657806323b872dd1461026d5780632f3885601461028057600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004611680565b610477565b60405190151581526020015b60405180910390f35b6101f96104c9565b6040516101e891906116ce565b610219610214366004611701565b61055b565b6040516001600160a01b0390911681526020016101e8565b61024461023f36600461172f565b610582565b005b6102197f000000000000000000000000000000000000000000000000000000000000000081565b61024461027b36600461175b565b61060e565b61024461028e366004611701565b610640565b6102446102a136600461172f565b61064c565b6102446102b436600461175b565b6106a3565b6102446102c7366004611701565b6106be565b6102446102da36600461179c565b610710565b6102197f000000000000000000000000000000000000000000000000000000000000000081565b610244610314366004611886565b6107c8565b6102196108ae565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e5b6040519081526020016101e8565b61021961035f366004611701565b6108dd565b6101f9610912565b61034361037a36600461179c565b50600190565b61034361038e3660046118ea565b610932565b6103a66103a1366004611701565b610985565b6040805182516001600160a01b03908116825260208085015182169083015283830151169181019190915260609182015163ffffffff16918101919091526080016101e8565b6101f9610a2e565b610244610a3d565b61024461040a366004611935565b610aff565b6101f9610b0a565b610244610425366004611973565b610b26565b6101f9610438366004611701565b610b5f565b6101dc61044b3660046119f3565b610b6c565b6102197f000000000000000000000000000000000000000000000000000000000000000081565b60006301ffc9a760e01b6001600160e01b0319831614806104a857506380ac58cd60e01b6001600160e01b03198316145b806104c35750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600180546104d890611a21565b80601f016020809104026020016040519081016040528092919081815260200182805461050490611a21565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b5050505050905090565b600061056682610b9a565b506000908152600360205260409020546001600160a01b031690565b600061058d826108dd565b9050806001600160a01b0316836001600160a01b0316036105c15760405163e4790b2560e01b815260040160405180910390fd5b336001600160a01b038216148015906105e157506105df8133610b6c565b155b156105ff5760405163519a92c160e11b815260040160405180910390fd5b6106098383610bc0565b505050565b6106183382610c2e565b610635576040516312a8eb0360e11b815260040160405180910390fd5b610609838383610c8c565b61064981610ca5565b50565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106955760405163740f7abd60e11b815260040160405180910390fd5b61069f8282610cd5565b5050565b61060983838360405180602001604052806000815250610b26565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107075760405163740f7abd60e11b815260040160405180910390fd5b61064981610d11565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190611a5b565b9050336001600160a01b038216146107bf5760405163ebb7505b60e01b815260040160405180910390fd5b61069f82610d84565b600054610100900460ff16158080156107e85750600054600160ff909116105b806108025750303b158015610802575060005460ff166001145b6108275760405162461bcd60e51b815260040161081e90611a78565b60405180910390fd5b6000805460ff19166001179055801561084a576000805461ff0019166101001790555b60016108568482611b14565b5060026108638382611b14565b508015610609576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60006108d87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b905090565b6000806108e983610fbe565b90506001600160a01b0381166104c35760405163eab95e3b60e01b815260040160405180910390fd5b60606040518060600160405280602d8152602001611f96602d9139905090565b60408051466020808301919091526001600160a01b0380871683850152808616606084015284166080808401919091528351808403909101815260a090920190925280519101206000905b949350505050565b60408051608081018252600080825260208201819052818301819052606082015290516346a3c2cf60e11b8152600481018390526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638d47859e90602401608060405180830381865afa158015610a0a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c39190611bd4565b6060600280546104d890611a21565b600054610100900460ff1615808015610a5d5750600054600160ff909116105b80610a775750303b158015610a77575060005460ff166001145b610a935760405162461bcd60e51b815260040161081e90611a78565b6000805460ff191660011790558015610ab6576000805461ff0019166101001790555b8015610649576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b61069f338383610fd5565b6040518060600160405280602d8152602001611f96602d913981565b610b303383610c2e565b610b4d576040516312a8eb0360e11b815260040160405180910390fd5b610b5984848484611074565b50505050565b60606104c382600161107f565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b610ba3816111da565b6106495760405163eab95e3b60e01b815260040160405180910390fd5b600081815260036020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610bf582610fbe565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610c3a836108dd565b9050806001600160a01b0316846001600160a01b03161480610c615750610c618185610b6c565b8061097d5750836001600160a01b0316610c7a8461055b565b6001600160a01b031614949350505050565b60405163553a3f6560e11b815260040160405180910390fd5b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610af4565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610d1c82610985565b600083815260036020526040902080546001600160a01b031916905590508160006001600160a01b031682604001516001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6000610dae7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031603610e045760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c65000000604482015260640161081e565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e669190611c62565b7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e14610ee05760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b606482015260840161081e565b6001600160a01b0381163003610f385760405162461bcd60e51b815260206004820152601960248201527f5555505350726f786961626c653a2070726f7879206c6f6f7000000000000000604482015260640161081e565b610f60817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc7f9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e604080519182526001600160a01b038416602083015201610af4565b600080610fca83610985565b604001519392505050565b816001600160a01b0316836001600160a01b0316036110075760405163d3c7732960e01b815260040160405180910390fd5b6001600160a01b03838116600081815260046020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b59848484610c8c565b6060600061108c84610985565b805160208201516040808401519051631cd43d1160e31b81526001600160a01b0380851660048301529283166024820152908216604482015292935090916000917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa158015611116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113a9190611c7b565b5050915050611147610912565b61115e826bffffffffffffffffffffffff166111f7565b8661118557604051806040016040528060048152602001637472756560e01b8152506111a4565b6040518060400160405280600581526020016466616c736560d81b8152505b6111ad8961128a565b6040516020016111c09493929190611cdb565b604051602081830303815290604052935050505092915050565b6000806111e683610fbe565b6001600160a01b0316141592915050565b6060600061120483611405565b600101905060008167ffffffffffffffff811115611224576112246117b9565b6040519080825280601f01601f19166020018201604052801561124e576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461125857509392505050565b6060600061129783610985565b90506112b181600001516001600160a01b031660146114dd565b6112ba466111f7565b82600001516001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa1580156112fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113249190810190611d63565b61133c84602001516001600160a01b031660146114dd565b61135485604001516001600160a01b031660146114dd565b6113c586600001516001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611399573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113bd9190611dda565b60ff166111f7565b6113d8876060015163ffffffff166111f7565b6040516020016113ee9796959493929190611dfd565b604051602081830303815290604052915050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114445772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611470576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061148e57662386f26fc10000830492506010015b6305f5e10083106114a6576305f5e100830492506008015b61271083106114ba57612710830492506004015b606483106114cc576064830492506002015b600a83106104c35760010192915050565b606060006114ec836002611f3e565b6114f7906002611f55565b67ffffffffffffffff81111561150f5761150f6117b9565b6040519080825280601f01601f191660200182016040528015611539576020820181803683370190505b509050600360fc1b8160008151811061155457611554611f68565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061158357611583611f68565b60200101906001600160f81b031916908160001a90535060006115a7846002611f3e565b6115b2906001611f55565b90505b600181111561162a576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106115e6576115e6611f68565b1a60f81b8282815181106115fc576115fc611f68565b60200101906001600160f81b031916908160001a90535060049490941c9361162381611f7e565b90506115b5565b5083156116795760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161081e565b9392505050565b60006020828403121561169257600080fd5b81356001600160e01b03198116811461167957600080fd5b60005b838110156116c55781810151838201526020016116ad565b50506000910152565b60208152600082518060208401526116ed8160408501602087016116aa565b601f01601f19169190910160400192915050565b60006020828403121561171357600080fd5b5035919050565b6001600160a01b038116811461064957600080fd5b6000806040838503121561174257600080fd5b823561174d8161171a565b946020939093013593505050565b60008060006060848603121561177057600080fd5b833561177b8161171a565b9250602084013561178b8161171a565b929592945050506040919091013590565b6000602082840312156117ae57600080fd5b81356116798161171a565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156117f8576117f86117b9565b604052919050565b600067ffffffffffffffff82111561181a5761181a6117b9565b50601f01601f191660200190565b600061183b61183684611800565b6117cf565b905082815283838301111561184f57600080fd5b828260208301376000602084830101529392505050565b600082601f83011261187757600080fd5b61167983833560208501611828565b6000806040838503121561189957600080fd5b823567ffffffffffffffff808211156118b157600080fd5b6118bd86838701611866565b935060208501359150808211156118d357600080fd5b506118e085828601611866565b9150509250929050565b6000806000606084860312156118ff57600080fd5b833561190a8161171a565b9250602084013561191a8161171a565b9150604084013561192a8161171a565b809150509250925092565b6000806040838503121561194857600080fd5b82356119538161171a565b91506020830135801515811461196857600080fd5b809150509250929050565b6000806000806080858703121561198957600080fd5b84356119948161171a565b935060208501356119a48161171a565b925060408501359150606085013567ffffffffffffffff8111156119c757600080fd5b8501601f810187136119d857600080fd5b6119e787823560208401611828565b91505092959194509250565b60008060408385031215611a0657600080fd5b8235611a118161171a565b915060208301356119688161171a565b600181811c90821680611a3557607f821691505b602082108103611a5557634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611a6d57600080fd5b81516116798161171a565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b601f82111561060957600081815260208120601f850160051c81016020861015611aed5750805b601f850160051c820191505b81811015611b0c57828155600101611af9565b505050505050565b815167ffffffffffffffff811115611b2e57611b2e6117b9565b611b4281611b3c8454611a21565b84611ac6565b602080601f831160018114611b775760008415611b5f5750858301515b600019600386901b1c1916600185901b178555611b0c565b600085815260208120601f198616915b82811015611ba657888601518255948401946001909101908401611b87565b5085821015611bc45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060808284031215611be657600080fd5b6040516080810181811067ffffffffffffffff82111715611c0957611c096117b9565b6040528251611c178161171a565b81526020830151611c278161171a565b60208201526040830151611c3a8161171a565b6040820152606083015163ffffffff81168114611c5657600080fd5b60608201529392505050565b600060208284031215611c7457600080fd5b5051919050565b60008060008060808587031215611c9157600080fd5b84519350602085015180600b0b8114611ca957600080fd5b6040860151606090960151949790965092505050565b60008151611cd18185602086016116aa565b9290920192915050565b60008551611ced818460208a016116aa565b693f666c6f77526174653d60b01b9083019081528551611d1481600a840160208a016116aa565b69266f7574676f696e673d60b01b600a92909101918201528451611d3f8160148401602089016116aa565b8451910190611d558160148401602088016116aa565b016014019695505050505050565b600060208284031215611d7557600080fd5b815167ffffffffffffffff811115611d8c57600080fd5b8201601f81018413611d9d57600080fd5b8051611dab61183682611800565b818152856020838501011115611dc057600080fd5b611dd18260208301602086016116aa565b95945050505050565b600060208284031215611dec57600080fd5b815160ff8116811461167957600080fd5b6e26746f6b656e5f616464726573733d60881b815260008851611e2781600f850160208d016116aa565b6926636861696e5f69643d60b01b600f918401918201528851611e51816019840160208d016116aa565b6d26746f6b656e5f73796d626f6c3d60901b601992909101918201528751611e80816027840160208c016116aa565b672673656e6465723d60c01b602792909101918201528651611ea981602f840160208b016116aa565b692672656365697665723d60b01b602f9290910191820152611f1a611f14611efc611ef6611eda603986018b611cbf565b6f26746f6b656e5f646563696d616c733d60801b815260100190565b88611cbf565b6b2673746172745f646174653d60a01b8152600c0190565b85611cbf565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104c3576104c3611f28565b808201808211156104c3576104c3611f28565b634e487b7160e01b600052603260045260246000fd5b600081611f8d57611f8d611f28565b50600019019056fe68747470733a2f2f6e66742e7375706572666c7569642e66696e616e63652f6366612f76322f6765746d657461a2646970667358221220814ecaa96cf9f88ea0066864bbbccbd79ac5feb94a507ec6c89577f6d6fcf36964736f6c63430008130033",
    "sourceMap": "743:3068:88:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5582:360:90;;;;;;:::i;:::-;;:::i;:::-;;;470:14:118;;463:22;445:41;;433:2;418:18;5582:360:90;;;;;;;;6677:100;;;:::i;:::-;;;;;;;:::i;10632:181::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1502:32:118;;;1484:51;;1472:2;1457:18;10632:181:90;1338:203:118;9656:416:90;;;;;;:::i;:::-;;:::i;:::-;;1715:68;;;;;11274:309;;;;;;:::i;:::-;;:::i;5124:105::-;;;;;;:::i;:::-;;:::i;1711:138:88:-;;;;;;:::i;:::-;;:::i;11617:181:90:-;;;;;;:::i;:::-;;:::i;2185:94:88:-;;;;;;:::i;:::-;;:::i;4625:317:90:-;;;;;;:::i;:::-;;:::i;1839:33::-;;;;;4380:239;;;;;;:::i;:::-;;:::i;400:122:98:-;;;:::i;1098:208:88:-;1191:108;1098:208;;;5054:25:118;;;5042:2;5027:18;1098:208:88;4908:177:118;5976:259:90;;;;;;:::i;:::-;;:::i;1383:83::-;;;:::i;6391:119::-;;;;;;:::i;:::-;-1:-1:-1;6502:1:90;;6391:119;10111:212;;;;;;:::i;:::-;;:::i;2285:255:88:-;;;;;;:::i;:::-;;:::i;:::-;;;;6073:13:118;;-1:-1:-1;;;;;6069:22:118;;;6051:41;;6152:4;6140:17;;;6134:24;6130:33;;6108:20;;;6101:63;6212:17;;;6206:24;6202:33;6180:20;;;6173:63;;;;6296:4;6284:17;;;6278:24;6304:10;6274:41;6252:20;;;6245:71;;;;6000:3;5985:19;2285:255:88;5806:516:118;6929:104:90;;;:::i;731:44:98:-;;;:::i;10847:175:90:-;;;;;;:::i;:::-;;:::i;1287:89::-;;;:::i;11832:348::-;;;;;;:::i;:::-;;:::i;2546:210:88:-;;;;;;:::i;:::-;;:::i;11056:184:90:-;;;;;;:::i;:::-;;:::i;811:57:88:-;;;;;5582:360:90;5683:4;-1:-1:-1;;;;;;;;;5718:25:90;;;;:100;;-1:-1:-1;;;;;;;;;;5793:25:90;;;5718:100;:175;;;-1:-1:-1;;;;;;;;;;5868:25:90;;;5718:175;5699:194;5582:360;-1:-1:-1;;5582:360:90:o;6677:100::-;6733:13;6765:5;6758:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6677:100;:::o;10632:181::-;10722:7;10741:23;10756:7;10741:14;:23::i;:::-;-1:-1:-1;10782:24:90;;;;:15;:24;;;;;;-1:-1:-1;;;;;10782:24:90;;10632:181::o;9656:416::-;9736:13;9752:28;9772:7;9752:19;:28::i;:::-;9736:44;;9800:5;-1:-1:-1;;;;;9794:11:90;:2;-1:-1:-1;;;;;9794:11:90;;9790:83;;9828:34;;-1:-1:-1;;;9828:34:90;;;;;;;;;;;9790:83;9887:10;-1:-1:-1;;;;;9887:19:90;;;;;;:59;;;9911:35;9928:5;9935:10;9911:16;:35::i;:::-;9910:36;9887:59;9883:151;;;9969:54;;-1:-1:-1;;;9969:54:90;;;;;;;;;;;9883:151;10044:21;10053:2;10057:7;10044:8;:21::i;:::-;9726:346;9656:416;;:::o;11274:309::-;11410:39;11429:10;11441:7;11410:18;:39::i;:::-;11405:133;;11472:55;;-1:-1:-1;;;11472:55:90;;;;;;;;;;;11405:133;11548:28;11558:4;11564:2;11568:7;11548:9;:28::i;5124:105::-;5191:31;5214:7;5191:22;:31::i;:::-;5124:105;:::o;1711:138:88:-;3684:10;-1:-1:-1;;;;;3706:20:88;3684:43;;3680:112;;3750:31;;-1:-1:-1;;;3750:31:88;;;;;;;;;;;3680:112;1821:21:::1;1827:2;1831:10;1821:5;:21::i;:::-;1711:138:::0;;:::o;11617:181:90:-;11752:39;11769:4;11775:2;11779:7;11752:39;;;;;;;;;;;;:16;:39::i;2185:94:88:-;3684:10;-1:-1:-1;;;;;3706:20:88;3684:43;;3680:112;;3750:31;;-1:-1:-1;;;3750:31:88;;;;;;;;;;;3680:112;2258:14:::1;2264:7;2258:5;:14::i;4625:317:90:-:0;4693:36;4732:4;-1:-1:-1;;;;;4732:25:90;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4693:66;-1:-1:-1;4773:10:90;-1:-1:-1;;;;;4773:40:90;;;4769:112;;4836:34;;-1:-1:-1;;;4836:34:90;;;;;;;;;;;4769:112;4891:44;4924:10;4891:32;:44::i;4380:239::-;3268:19:28;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:28;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:28;1702:19:39;:23;;;3376:55:28;;-1:-1:-1;3414:12:28;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:28;;;;;;;:::i;:::-;;;;;;;;;3514:12;:16;;-1:-1:-1;;3514:16:28;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:28;;;;;3540:65;4568:5:90::1;:15;4576:7:::0;4568:5;:15:::1;:::i;:::-;-1:-1:-1::0;4593:7:90::1;:19;4603:9:::0;4593:7;:19:::1;:::i;:::-;;3629:14:28::0;3625:99;;;3675:5;3659:21;;-1:-1:-1;;3659:21:28;;;3699:14;;-1:-1:-1;11618:36:118;;3699:14:28;;11606:2:118;11591:18;3699:14:28;;;;;;;3258:472;4380:239:90;;:::o;400:122:98:-;447:19;489:26;751:20:100;745:27;;618:170;489:26:98;482:33;;400:122;:::o;5976:259:90:-;6062:7;6081:13;6097:17;6106:7;6097:8;:17::i;:::-;6081:33;-1:-1:-1;;;;;;6128:19:90;;6124:83;;6170:26;;-1:-1:-1;;;6170:26:90;;;;;;;;;;;1383:83;1423:13;1447:16;;;;;;;;;;;;;;;;;1440:23;;1383:83;:::o;10111:212::-;10525:55;;;10536:13;10525:55;;;;14429:25:118;;;;-1:-1:-1;;;;;14528:15:118;;;14508:18;;;14501:43;14580:15;;;14560:18;;;14553:43;14632:15;;14612:18;;;;14605:43;;;;10525:55:90;;;;;;;;;;14401:19:118;;;;10525:55:90;;;10515:66;;;;;10238:15;;10275:41;10265:51;10111:212;-1:-1:-1;;;;10111:212:90:o;2285:255:88:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:47:88;;-1:-1:-1;;;2486:47:88;;;;;5054:25:118;;;-1:-1:-1;;;;;2486:20:88;:38;;;;5027:18:118;;2486:47:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6929:104:90:-;6987:13;7019:7;7012:14;;;;;:::i;731:44:98:-;3268:19:28;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:28;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:28;1702:19:39;:23;;;3376:55:28;;-1:-1:-1;3414:12:28;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:28;;;;;;;:::i;:::-;3514:12;:16;;-1:-1:-1;;3514:16:28;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:28;;;;;3540:65;3629:14;3625:99;;;3675:5;3659:21;;-1:-1:-1;;3659:21:28;;;3699:14;;-1:-1:-1;11618:36:118;;3699:14:28;;11606:2:118;11591:18;3699:14:28;;;;;;;;3258:472;731:44:98:o;10847:175:90:-;10965:50;10984:10;10996:8;11006;10965:18;:50::i;1287:89::-;;;;;;;;;;;;;;;;;;;:::o;11832:348::-;11997:39;12016:10;12028:7;11997:18;:39::i;:::-;11992:133;;12059:55;;-1:-1:-1;;;12059:55:90;;;;;;;;;;;11992:133;12135:38;12149:4;12155:2;12159:7;12168:4;12135:13;:38::i;:::-;11832:348;;;;:::o;2546:210:88:-;2689:13;2725:24;2735:7;2744:4;2725:9;:24::i;11056:184:90:-;-1:-1:-1;;;;;11198:25:90;;;11175:4;11198:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;11056:184::o;12905:128::-;12975:16;12983:7;12975;:16::i;:::-;12970:56;;13000:26;;-1:-1:-1;;;13000:26:90;;;;;;;;;;;13725:158;13791:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;13791:29:90;-1:-1:-1;;;;;13791:29:90;;;;;;;;:24;;13845:17;13791:24;13845:8;:17::i;:::-;-1:-1:-1;;;;;13836:40:90;;;;;;;;;;;13725:158;;:::o;12476:304::-;12583:4;12599:13;12615:28;12635:7;12615:19;:28::i;:::-;12599:44;;12672:5;-1:-1:-1;;;;;12661:16:90;:7;-1:-1:-1;;;;;12661:16:90;;:64;;;;12693:32;12710:5;12717:7;12693:16;:32::i;:::-;12661:111;;;;12765:7;-1:-1:-1;;;;;12741:31:90;:20;12753:7;12741:11;:20::i;:::-;-1:-1:-1;;;;;12741:31:90;;12653:120;12476:304;-1:-1:-1;;;;12476:304:90:o;3096:186:88:-;3242:33;;-1:-1:-1;;;3242:33:88;;;;;;;;;;;13616:103:90;13689:23;;5054:25:118;;;13689:23:90;;5042:2:118;5027:18;13689:23:90;4908:177:118;3288:114:88;3359:36;;3384:10;;-1:-1:-1;;;;;3359:36:88;;;3376:1;;3359:36;;3376:1;;3359:36;3288:114;;:::o;3408:222::-;3468:27;3498:26;3516:7;3498:17;:26::i;:::-;15388:24:90;;;;:15;:24;;;;;15381:31;;-1:-1:-1;;;;;;15381:31:90;;;3468:56:88;-1:-1:-1;3615:7:88;3611:1;-1:-1:-1;;;;;3571:52:88;3580:8;:21;;;-1:-1:-1;;;;;3571:52:88;;;;;;;;;;;3458:172;3408:222;:::o;1289:576:98:-;1457:1;1419:26;751:20:100;745:27;;618:170;1419:26:98;-1:-1:-1;;;;;1419:40:98;;1411:82;;;;-1:-1:-1;;;1411:82:98;;12816:2:118;1411:82:98;;;12798:21:118;12855:2;12835:18;;;12828:30;12894:31;12874:18;;;12867:59;12943:18;;1411:82:98;12614:353:118;1411:82:98;1557:10;-1:-1:-1;;;;;1543:39:98;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1191:108:88;1524:60:98;1503:142;;;;-1:-1:-1;;;1503:142:98;;13363:2:118;1503:142:98;;;13345:21:118;13402:2;13382:18;;;13375:30;13441:34;13421:18;;;13414:62;-1:-1:-1;;;13492:18:118;;;13485:33;13535:19;;1503:142:98;13161:399:118;1503:142:98;-1:-1:-1;;;;;1676:27:98;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:98;;13767:2:118;1655:99:98;;;13749:21:118;13806:2;13786:18;;;13779:30;13845:27;13825:18;;;13818:55;13890:18;;1655:99:98;13565:349:118;1655:99:98;1764:39;1792:10;988:20:100;964:87;839:228;1764:39:98;1818:40;1191:108:88;1818:40:98;;;14093:25:118;;;-1:-1:-1;;;;;14154:32:118;;14149:2;14134:18;;14127:60;14066:18;1818:40:98;13919:274:118;2794:209:88;2883:7;2902:27;2932:26;2950:7;2932:17;:26::i;:::-;2975:21;;;;2794:209;-1:-1:-1;;;2794:209:88:o;13889:303:90:-;14027:8;-1:-1:-1;;;;;14018:17:90;:5;-1:-1:-1;;;;;14018:17:90;;14014:57;;14044:27;;-1:-1:-1;;;14044:27:90;;;;;;;;;;;14014:57;-1:-1:-1;;;;;14082:25:90;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;14082:46:90;;;;;;;;;;14144:41;;445::118;;;14144::90;;418:18:118;14144:41:90;;;;;;;13889:303;;;:::o;14956:188::-;15109:28;15119:4;15125:2;15129:7;15109:9;:28::i;7356:776::-;7460:13;7485:27;7515:26;7533:7;7515:17;:26::i;:::-;7584:19;;7707;;;;7740:21;;;;;7640:131;;-1:-1:-1;;;7640:131:90;;-1:-1:-1;;;;;14938:15:118;;;7640:131:90;;;14920:34:118;14990:15;;;14970:18;;;14963:43;15042:15;;;15022:18;;;15015:43;7584:19:90;;-1:-1:-1;7584:19:90;;7552:17;;7640:26;:34;;;;14855:18:118;;7640:131:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7615:156;;;;;7863:9;:7;:9::i;:::-;7928:36;7943:8;7928:25;;:34;:36::i;:::-;8020:8;:27;;;;;;;;;;;;;;;-1:-1:-1;;;8020:27:90;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;8020:27:90;;;;8069:24;8085:7;8069:15;:24::i;:::-;7825:286;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7782:343;;;;;7356:776;;;;:::o;13492:118::-;13549:4;;13572:17;13581:7;13572:8;:17::i;:::-;-1:-1:-1;;;;;13572:31:90;;;;13492:118;-1:-1:-1;;13492:118:90:o;447:696:41:-;503:13;552:14;569:17;580:5;569:10;:17::i;:::-;589:1;569:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;627:18:41;-1:-1:-1;604:41:41;-1:-1:-1;765:28:41;;;781:2;765:28;820:280;-1:-1:-1;;851:5:41;-1:-1:-1;;;985:2:41;974:14;;969:30;851:5;956:44;1044:2;1035:11;;;-1:-1:-1;1064:21:41;820:280;1064:21;-1:-1:-1;1120:6:41;447:696;-1:-1:-1;;;447:696:41:o;8138:1484:90:-;8217:13;8242:27;8272:26;8290:7;8272:17;:26::i;:::-;8242:56;;8597:132;8658:8;:19;;;-1:-1:-1;;;;;8642:37:90;8705:2;8597:19;:132::i;:::-;8785:24;:13;:22;:24::i;:::-;8881:8;:19;;;-1:-1:-1;;;;;8869:39:90;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8869:41:90;;;;;;;;;;;;:::i;:::-;8964:132;9025:8;:19;;;-1:-1:-1;;;;;9009:37:90;9072:2;8964:19;:132::i;:::-;9152:134;9213:8;:21;;;-1:-1:-1;;;;;9197:39:90;9262:2;9152:19;:134::i;:::-;9348:88;9368:8;:19;;;-1:-1:-1;;;;;9356:41:90;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9348:52;;:86;:88::i;:::-;9541:42;9549:8;:22;;;9541:31;;:40;:42::i;:::-;8520:1081;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8477:1138;;;8138:1484;;;:::o;10139:916:45:-;10192:7;;-1:-1:-1;;;10267:17:45;;10263:103;;-1:-1:-1;;;10304:17:45;;;-1:-1:-1;10349:2:45;10339:12;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;-1:-1:-1;10465:2:45;10455:12;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;-1:-1:-1;10581:2:45;10571:12;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;-1:-1:-1;10695:1:45;10685:11;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;-1:-1:-1;10808:1:45;10798:11;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;-1:-1:-1;10921:1:45;10911:11;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;11042:6;10139:916;-1:-1:-1;;10139:916:45:o;1818:437:41:-;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:41;;1918:47;;-1:-1:-1;;;1975:6:41;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:41;;;;;;;;;-1:-1:-1;;;2000:6:41;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:41;;;;;;;;-1:-1:-1;2030:9:41;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:41;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:41;;;;;;;;-1:-1:-1;2141:1:41;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:41;;2162:55;;;;-1:-1:-1;;;2162:55:41;;21349:2:118;2162:55:41;;;21331:21:118;;;21368:18;;;21361:30;21427:34;21407:18;;;21400:62;21479:18;;2162:55:41;21147:356:118;2162:55:41;2241:6;1818:437;-1:-1:-1;;;1818:437:41:o;14:286:118:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:118;;209:43;;199:71;;266:1;263;256:12;497:250;582:1;592:113;606:6;603:1;600:13;592:113;;;682:11;;;676:18;663:11;;;656:39;628:2;621:10;592:113;;;-1:-1:-1;;739:1:118;721:16;;714:27;497:250::o;752:396::-;901:2;890:9;883:21;864:4;933:6;927:13;976:6;971:2;960:9;956:18;949:34;992:79;1064:6;1059:2;1048:9;1044:18;1039:2;1031:6;1027:15;992:79;:::i;:::-;1132:2;1111:15;-1:-1:-1;;1107:29:118;1092:45;;;;1139:2;1088:54;;752:396;-1:-1:-1;;752:396:118:o;1153:180::-;1212:6;1265:2;1253:9;1244:7;1240:23;1236:32;1233:52;;;1281:1;1278;1271:12;1233:52;-1:-1:-1;1304:23:118;;1153:180;-1:-1:-1;1153:180:118:o;1546:131::-;-1:-1:-1;;;;;1621:31:118;;1611:42;;1601:70;;1667:1;1664;1657:12;1682:315;1750:6;1758;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1866:9;1853:23;1885:31;1910:5;1885:31;:::i;:::-;1935:5;1987:2;1972:18;;;;1959:32;;-1:-1:-1;;;1682:315:118:o;2244:456::-;2321:6;2329;2337;2390:2;2378:9;2369:7;2365:23;2361:32;2358:52;;;2406:1;2403;2396:12;2358:52;2445:9;2432:23;2464:31;2489:5;2464:31;:::i;:::-;2514:5;-1:-1:-1;2571:2:118;2556:18;;2543:32;2584:33;2543:32;2584:33;:::i;:::-;2244:456;;2636:7;;-1:-1:-1;;;2690:2:118;2675:18;;;;2662:32;;2244:456::o;2705:247::-;2764:6;2817:2;2805:9;2796:7;2792:23;2788:32;2785:52;;;2833:1;2830;2823:12;2785:52;2872:9;2859:23;2891:31;2916:5;2891:31;:::i;3186:127::-;3247:10;3242:3;3238:20;3235:1;3228:31;3278:4;3275:1;3268:15;3302:4;3299:1;3292:15;3318:275;3389:2;3383:9;3454:2;3435:13;;-1:-1:-1;;3431:27:118;3419:40;;3489:18;3474:34;;3510:22;;;3471:62;3468:88;;;3536:18;;:::i;:::-;3572:2;3565:22;3318:275;;-1:-1:-1;3318:275:118:o;3598:187::-;3647:4;3680:18;3672:6;3669:30;3666:56;;;3702:18;;:::i;:::-;-1:-1:-1;3768:2:118;3747:15;-1:-1:-1;;3743:29:118;3774:4;3739:40;;3598:187::o;3790:338::-;3855:5;3884:53;3900:36;3929:6;3900:36;:::i;:::-;3884:53;:::i;:::-;3875:62;;3960:6;3953:5;3946:21;4000:3;3991:6;3986:3;3982:16;3979:25;3976:45;;;4017:1;4014;4007:12;3976:45;4066:6;4061:3;4054:4;4047:5;4043:16;4030:43;4120:1;4113:4;4104:6;4097:5;4093:18;4089:29;4082:40;3790:338;;;;;:::o;4133:222::-;4176:5;4229:3;4222:4;4214:6;4210:17;4206:27;4196:55;;4247:1;4244;4237:12;4196:55;4269:80;4345:3;4336:6;4323:20;4316:4;4308:6;4304:17;4269:80;:::i;4360:543::-;4448:6;4456;4509:2;4497:9;4488:7;4484:23;4480:32;4477:52;;;4525:1;4522;4515:12;4477:52;4565:9;4552:23;4594:18;4635:2;4627:6;4624:14;4621:34;;;4651:1;4648;4641:12;4621:34;4674:50;4716:7;4707:6;4696:9;4692:22;4674:50;:::i;:::-;4664:60;;4777:2;4766:9;4762:18;4749:32;4733:48;;4806:2;4796:8;4793:16;4790:36;;;4822:1;4819;4812:12;4790:36;;4845:52;4889:7;4878:8;4867:9;4863:24;4845:52;:::i;:::-;4835:62;;;4360:543;;;;;:::o;5272:529::-;5349:6;5357;5365;5418:2;5406:9;5397:7;5393:23;5389:32;5386:52;;;5434:1;5431;5424:12;5386:52;5473:9;5460:23;5492:31;5517:5;5492:31;:::i;:::-;5542:5;-1:-1:-1;5599:2:118;5584:18;;5571:32;5612:33;5571:32;5612:33;:::i;:::-;5664:7;-1:-1:-1;5723:2:118;5708:18;;5695:32;5736:33;5695:32;5736:33;:::i;:::-;5788:7;5778:17;;;5272:529;;;;;:::o;6327:416::-;6392:6;6400;6453:2;6441:9;6432:7;6428:23;6424:32;6421:52;;;6469:1;6466;6459:12;6421:52;6508:9;6495:23;6527:31;6552:5;6527:31;:::i;:::-;6577:5;-1:-1:-1;6634:2:118;6619:18;;6606:32;6676:15;;6669:23;6657:36;;6647:64;;6707:1;6704;6697:12;6647:64;6730:7;6720:17;;;6327:416;;;;;:::o;6748:795::-;6843:6;6851;6859;6867;6920:3;6908:9;6899:7;6895:23;6891:33;6888:53;;;6937:1;6934;6927:12;6888:53;6976:9;6963:23;6995:31;7020:5;6995:31;:::i;:::-;7045:5;-1:-1:-1;7102:2:118;7087:18;;7074:32;7115:33;7074:32;7115:33;:::i;:::-;7167:7;-1:-1:-1;7221:2:118;7206:18;;7193:32;;-1:-1:-1;7276:2:118;7261:18;;7248:32;7303:18;7292:30;;7289:50;;;7335:1;7332;7325:12;7289:50;7358:22;;7411:4;7403:13;;7399:27;-1:-1:-1;7389:55:118;;7440:1;7437;7430:12;7389:55;7463:74;7529:7;7524:2;7511:16;7506:2;7502;7498:11;7463:74;:::i;:::-;7453:84;;;6748:795;;;;;;;:::o;7548:388::-;7616:6;7624;7677:2;7665:9;7656:7;7652:23;7648:32;7645:52;;;7693:1;7690;7683:12;7645:52;7732:9;7719:23;7751:31;7776:5;7751:31;:::i;:::-;7801:5;-1:-1:-1;7858:2:118;7843:18;;7830:32;7871:33;7830:32;7871:33;:::i;8178:380::-;8257:1;8253:12;;;;8300;;;8321:61;;8375:4;8367:6;8363:17;8353:27;;8321:61;8428:2;8420:6;8417:14;8397:18;8394:38;8391:161;;8474:10;8469:3;8465:20;8462:1;8455:31;8509:4;8506:1;8499:15;8537:4;8534:1;8527:15;8391:161;;8178:380;;;:::o;8563:279::-;8661:6;8714:2;8702:9;8693:7;8689:23;8685:32;8682:52;;;8730:1;8727;8720:12;8682:52;8762:9;8756:16;8781:31;8806:5;8781:31;:::i;8847:410::-;9049:2;9031:21;;;9088:2;9068:18;;;9061:30;9127:34;9122:2;9107:18;;9100:62;-1:-1:-1;;;9193:2:118;9178:18;;9171:44;9247:3;9232:19;;8847:410::o;9388:545::-;9490:2;9485:3;9482:11;9479:448;;;9526:1;9551:5;9547:2;9540:17;9596:4;9592:2;9582:19;9666:2;9654:10;9650:19;9647:1;9643:27;9637:4;9633:38;9702:4;9690:10;9687:20;9684:47;;;-1:-1:-1;9725:4:118;9684:47;9780:2;9775:3;9771:12;9768:1;9764:20;9758:4;9754:31;9744:41;;9835:82;9853:2;9846:5;9843:13;9835:82;;;9898:17;;;9879:1;9868:13;9835:82;;;9839:3;;;9388:545;;;:::o;10109:1352::-;10235:3;10229:10;10262:18;10254:6;10251:30;10248:56;;;10284:18;;:::i;:::-;10313:97;10403:6;10363:38;10395:4;10389:11;10363:38;:::i;:::-;10357:4;10313:97;:::i;:::-;10465:4;;10529:2;10518:14;;10546:1;10541:663;;;;11248:1;11265:6;11262:89;;;-1:-1:-1;11317:19:118;;;11311:26;11262:89;-1:-1:-1;;10066:1:118;10062:11;;;10058:24;10054:29;10044:40;10090:1;10086:11;;;10041:57;11364:81;;10511:944;;10541:663;9335:1;9328:14;;;9372:4;9359:18;;-1:-1:-1;;10577:20:118;;;10695:236;10709:7;10706:1;10703:14;10695:236;;;10798:19;;;10792:26;10777:42;;10890:27;;;;10858:1;10846:14;;;;10725:19;;10695:236;;;10699:3;10959:6;10950:7;10947:19;10944:201;;;11020:19;;;11014:26;-1:-1:-1;;11103:1:118;11099:14;;;11115:3;11095:24;11091:37;11087:42;11072:58;11057:74;;10944:201;-1:-1:-1;;;;;11191:1:118;11175:14;;;11171:22;11158:36;;-1:-1:-1;10109:1352:118:o;11665:944::-;11765:6;11818:3;11806:9;11797:7;11793:23;11789:33;11786:53;;;11835:1;11832;11825:12;11786:53;11868:2;11862:9;11910:3;11902:6;11898:16;11980:6;11968:10;11965:22;11944:18;11932:10;11929:34;11926:62;11923:88;;;11991:18;;:::i;:::-;12027:2;12020:22;12064:16;;12089:31;12064:16;12089:31;:::i;:::-;12129:21;;12195:2;12180:18;;12174:25;12208:33;12174:25;12208:33;:::i;:::-;12269:2;12257:15;;12250:32;12327:2;12312:18;;12306:25;12340:33;12306:25;12340:33;:::i;:::-;12401:2;12389:15;;12382:32;12459:2;12444:18;;12438:25;12507:10;12494:24;;12482:37;;12472:65;;12533:1;12530;12523:12;12472:65;12565:2;12553:15;;12546:32;12557:6;11665:944;-1:-1:-1;;;11665:944:118:o;12972:184::-;13042:6;13095:2;13083:9;13074:7;13070:23;13066:32;13063:52;;;13111:1;13108;13101:12;13063:52;-1:-1:-1;13134:16:118;;12972:184;-1:-1:-1;12972:184:118:o;15069:462::-;15164:6;15172;15180;15188;15241:3;15229:9;15220:7;15216:23;15212:33;15209:53;;;15258:1;15255;15248:12;15209:53;15287:9;15281:16;15271:26;;15340:2;15329:9;15325:18;15319:25;15388:5;15384:2;15373:21;15366:5;15363:32;15353:60;;15409:1;15406;15399:12;15353:60;15477:2;15462:18;;15456:25;15521:2;15506:18;;;15500:25;15069:462;;15432:5;;-1:-1:-1;15069:462:118;-1:-1:-1;;;15069:462:118:o;15536:198::-;15578:3;15616:5;15610:12;15631:65;15689:6;15684:3;15677:4;15670:5;15666:16;15631:65;:::i;:::-;15712:16;;;;;15536:198;-1:-1:-1;;15536:198:118:o;15739:1208::-;16216:3;16254:6;16248:13;16270:66;16329:6;16324:3;16317:4;16309:6;16305:17;16270:66;:::i;:::-;-1:-1:-1;;;16358:16:118;;;16383:27;;;16435:13;;16457:79;16435:13;16522:2;16511:14;;16504:4;16492:17;;16457:79;:::i;:::-;-1:-1:-1;;;16599:2:118;16555:20;;;;16591:11;;;16584:33;16642:13;;16664:76;16642:13;16726:2;16718:11;;16711:4;16699:17;;16664:76;:::i;:::-;16801:13;;16759:17;;;16823:76;16801:13;16885:2;16877:11;;16870:4;16858:17;;16823:76;:::i;:::-;16919:17;16938:2;16915:26;;15739:1208;-1:-1:-1;;;;;;15739:1208:118:o;17084:649::-;17164:6;17217:2;17205:9;17196:7;17192:23;17188:32;17185:52;;;17233:1;17230;17223:12;17185:52;17266:9;17260:16;17299:18;17291:6;17288:30;17285:50;;;17331:1;17328;17321:12;17285:50;17354:22;;17407:4;17399:13;;17395:27;-1:-1:-1;17385:55:118;;17436:1;17433;17426:12;17385:55;17465:2;17459:9;17490:49;17506:32;17535:2;17506:32;:::i;17490:49::-;17562:2;17555:5;17548:17;17602:7;17597:2;17592;17588;17584:11;17580:20;17577:33;17574:53;;;17623:1;17620;17613:12;17574:53;17636:67;17700:2;17695;17688:5;17684:14;17679:2;17675;17671:11;17636:67;:::i;:::-;17722:5;17084:649;-1:-1:-1;;;;;17084:649:118:o;17738:273::-;17806:6;17859:2;17847:9;17838:7;17834:23;17830:32;17827:52;;;17875:1;17872;17865:12;17827:52;17907:9;17901:16;17957:4;17950:5;17946:16;17939:5;17936:27;17926:55;;17977:1;17974;17967:12;18282:2152;-1:-1:-1;;;19433:3:118;19426:30;19408:3;19485:6;19479:13;19501:75;19569:6;19564:2;19559:3;19555:12;19548:4;19540:6;19536:17;19501:75;:::i;:::-;-1:-1:-1;;;19635:2:118;19595:16;;;19627:11;;;19620:33;19678:13;;19700:76;19678:13;19762:2;19754:11;;19747:4;19735:17;;19700:76;:::i;:::-;-1:-1:-1;;;19836:2:118;19795:17;;;;19828:11;;;19821:37;19883:13;;19905:76;19883:13;19967:2;19959:11;;19952:4;19940:17;;19905:76;:::i;:::-;-1:-1:-1;;;20041:2:118;20000:17;;;;20033:11;;;20026:31;20082:13;;20104:76;20082:13;20166:2;20158:11;;20151:4;20139:17;;20104:76;:::i;:::-;-1:-1:-1;;;20240:2:118;20199:17;;;;20232:11;;;20225:33;20274:154;20300:127;20330:96;20356:69;20386:38;20420:2;20412:11;;20404:6;20386:38;:::i;:::-;-1:-1:-1;;;18081:31:118;;18137:2;18128:12;;18016:130;20356:69;20348:6;20330:96;:::i;:::-;-1:-1:-1;;;18216:27:118;;18268:2;18259:12;;18151:126;20300:127;20292:6;20274:154;:::i;:::-;20267:161;18282:2152;-1:-1:-1;;;;;;;;;;18282:2152:118:o;20439:127::-;20500:10;20495:3;20491:20;20488:1;20481:31;20531:4;20528:1;20521:15;20555:4;20552:1;20545:15;20571:168;20644:9;;;20675;;20692:15;;;20686:22;;20672:37;20662:71;;20713:18;;:::i;20744:125::-;20809:9;;;20830:10;;;20827:36;;;20843:18;;:::i;20874:127::-;20935:10;20930:3;20926:20;20923:1;20916:31;20966:4;20963:1;20956:15;20990:4;20987:1;20980:15;21006:136;21045:3;21073:5;21063:39;;21082:18;;:::i;:::-;-1:-1:-1;;;21118:18:118;;21006:136::o",
    "linkReferences": {},
    "immutableReferences": {
      "69254": [
        {
          "start": 1109,
          "length": 32
        },
        {
          "start": 1623,
          "length": 32
        },
        {
          "start": 1737,
          "length": 32
        },
        {
          "start": 2499,
          "length": 32
        }
      ],
      "69861": [
        {
          "start": 587,
          "length": 32
        },
        {
          "start": 4303,
          "length": 32
        }
      ],
      "69865": [
        {
          "start": 740,
          "length": 32
        },
        {
          "start": 1812,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_FLOW_AGREEMENT_V1()": "18156101",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "DEFAULT_BASE_URI()": "a497325b",
    "HOST()": "49f289dc",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseURI()": "6c0360eb",
    "burn(uint256)": "42966c68",
    "castrate()": "9903ad38",
    "flowDataByTokenId(uint256)": "8d47859e",
    "getApproved(uint256)": "081812fc",
    "getCodeAddress()": "50d75d25",
    "getTokenId(address,address,address)": "89f71d2d",
    "initialize(string,string)": "4cd88b76",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "proxiableUUID()": "52d1902d",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "triggerMetadataUpdate(uint256)": "2f388560",
    "updateCode(address)": "46951954"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_TO_CALLER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_APPROVE_TO_CURRENT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_INVALID_TOKEN_ID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_ONLY_SUPER_TOKEN_FACTORY\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_IS_NOT_ALLOWED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CFA_NFT_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CIF_NFT_ONLY_CONSTANT_OUTFLOW\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_FLOW_AGREEMENT_V1\",\"outputs\":[{\"internalType\":\"contract IConstantFlowAgreementV1\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_BASE_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"HOST\",\"outputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"flowDataByTokenId\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"flowReceiver\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"flowStartDate\",\"type\":\"uint32\"}],\"internalType\":\"struct IFlowNFTBase.FlowNFTData\",\"name\":\"flowData\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"superToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"nftName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"nftSymbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newTokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"triggerMetadataUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Superfluid\",\"details\":\"This contract does not hold any storage, but references the ConstantOutflowNFT contract storage.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event comes from https://eips.ethereum.org/EIPS/eip-4906\",\"params\":{\"tokenId\":\"the id of the token that should have its metadata updated\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"We always return 1 to avoid the need for additional mapping\",\"returns\":{\"balance\":\"= 1\"}},\"burn(uint256)\":{\"details\":\"We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT\",\"params\":{\"tokenId\":\"desired token id to burn\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getTokenId(address,address,address)\":{\"details\":\"tokenId = uint256(keccak256(abi.encode(block.chainId, superToken, flowSender, flowReceiver)))\",\"params\":{\"flowReceiver\":\"the flow receiver\",\"flowSender\":\"the flow sender\",\"superToken\":\"the super token\"},\"returns\":{\"tokenId\":\"the tokenId\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint(address,uint256)\":{\"details\":\"We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT\",\"params\":{\"newTokenId\":\"the new token id\",\"to\":\"the receiver of the inflow nft and desired flow receiver\"}},\"name()\":{\"details\":\"Should follow the naming convention: TOKENx Constant Outflow/Inflow NFT\",\"returns\":{\"_0\":\"name of the NFT\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"This is part of the Standard Interface Detection EIP: https://eips.ethereum.org/EIPS/eip-165\",\"params\":{\"interfaceId\":\"the XOR of all function selectors in the interface\"},\"returns\":{\"_0\":\"boolean true if the interface is supported\"}},\"symbol()\":{\"details\":\"Should follow the naming convention: TOKENx(COF/CIF)\",\"returns\":{\"_0\":\"symbol of the NFT\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"triggerMetadataUpdate(uint256)\":{\"details\":\"Callable by anyone.\",\"params\":{\"tokenId\":\"the token id to trigger a metaupdate for\"}}},\"title\":\"ConstantInflowNFT Contract (CIF NFT)\",\"version\":1},\"userdoc\":{\"events\":{\"MetadataUpdate(uint256)\":{\"notice\":\"Informs third-party platforms that NFT metadata should be updated\"}},\"kind\":\"user\",\"methods\":{\"CONSTANT_FLOW_AGREEMENT_V1()\":{\"notice\":\"ConstantFlowAgreementV1 contract address\"},\"HOST()\":{\"notice\":\"Superfluid host contract address\"},\"balanceOf(address)\":{\"notice\":\"Returns a hardcoded balance of 1\"},\"burn(uint256)\":{\"notice\":\"This burn function emits the \\\"burn\\\" `Transfer` event.\"},\"getTokenId(address,address,address)\":{\"notice\":\"An external function for computing the deterministic tokenId\"},\"mint(address,uint256)\":{\"notice\":\"The mint function emits the \\\"mint\\\" `Transfer` event.\"},\"name()\":{\"notice\":\"Returns the name of the NFT\"},\"supportsInterface(bytes4)\":{\"notice\":\"This contract supports IERC165, IERC721 and IERC721Metadata\"},\"symbol()\":{\"notice\":\"Returns the symbol of the NFT\"},\"triggerMetadataUpdate(uint256)\":{\"notice\":\"Emits the MetadataUpdate event with `tokenId` as the argument.\"}},\"notice\":\"The ConstantInflowNFT contract to be minted to the flow sender on flow creation.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol\":\"ConstantInflowNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0xf9b058c4009abed832187589f6a398cce384589be52b7c7150dc47689bb4c6c2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fa9a61d5a2dfa905290d770ed467f34b1d21429a301bec5acddcb7b60cf27958\",\"dweb:/ipfs/QmbYXP3oQmeEBN2vYDo3k7BzYAKgkD45xJdP3mZwD4ULVh\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0x84a0beb06890d7b278943493bc4e960b84482d4e2850739b2f43a4b33815498f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c244d35343f22955f3184b522d4b7f8975964939d394b8f88a7673ee195d1baa\",\"dweb:/ipfs/QmedA3kyPDKetqAXXeszi9w7Ymc38VgMNajL5aw3xLWiTK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_TO_CALLER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_APPROVE_TO_CURRENT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_INVALID_TOKEN_ID"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_ONLY_SUPER_TOKEN_FACTORY"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_CALLER_NOT_OWNER_OR_APPROVED_FOR_ALL"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_FROM_INCORRECT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CFA_NFT_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_FLOW_AGREEMENT_V1",
          "outputs": [
            {
              "internalType": "contract IConstantFlowAgreementV1",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_BASE_URI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "HOST",
          "outputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "baseURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "flowDataByTokenId",
          "outputs": [
            {
              "internalType": "struct IFlowNFTBase.FlowNFTData",
              "name": "flowData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "superToken",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowSender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "flowReceiver",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "flowStartDate",
                  "type": "uint32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "superToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTokenId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nftName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "nftSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "newTokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "triggerMetadataUpdate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "We always return 1 to avoid the need for additional mapping",
            "returns": {
              "balance": "= 1"
            }
          },
          "burn(uint256)": {
            "details": "We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT",
            "params": {
              "tokenId": "desired token id to burn"
            }
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getTokenId(address,address,address)": {
            "details": "tokenId = uint256(keccak256(abi.encode(block.chainId, superToken, flowSender, flowReceiver)))",
            "params": {
              "flowReceiver": "the flow receiver",
              "flowSender": "the flow sender",
              "superToken": "the super token"
            },
            "returns": {
              "tokenId": "the tokenId"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "mint(address,uint256)": {
            "details": "We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose is to inform clients that search for events. Only callable by ConstantOutflowNFT",
            "params": {
              "newTokenId": "the new token id",
              "to": "the receiver of the inflow nft and desired flow receiver"
            }
          },
          "name()": {
            "details": "Should follow the naming convention: TOKENx Constant Outflow/Inflow NFT",
            "returns": {
              "_0": "name of the NFT"
            }
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "This is part of the Standard Interface Detection EIP: https://eips.ethereum.org/EIPS/eip-165",
            "params": {
              "interfaceId": "the XOR of all function selectors in the interface"
            },
            "returns": {
              "_0": "boolean true if the interface is supported"
            }
          },
          "symbol()": {
            "details": "Should follow the naming convention: TOKENx(COF/CIF)",
            "returns": {
              "_0": "symbol of the NFT"
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          },
          "triggerMetadataUpdate(uint256)": {
            "details": "Callable by anyone.",
            "params": {
              "tokenId": "the token id to trigger a metaupdate for"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONSTANT_FLOW_AGREEMENT_V1()": {
            "notice": "ConstantFlowAgreementV1 contract address"
          },
          "HOST()": {
            "notice": "Superfluid host contract address"
          },
          "balanceOf(address)": {
            "notice": "Returns a hardcoded balance of 1"
          },
          "burn(uint256)": {
            "notice": "This burn function emits the \"burn\" `Transfer` event."
          },
          "getTokenId(address,address,address)": {
            "notice": "An external function for computing the deterministic tokenId"
          },
          "mint(address,uint256)": {
            "notice": "The mint function emits the \"mint\" `Transfer` event."
          },
          "name()": {
            "notice": "Returns the name of the NFT"
          },
          "supportsInterface(bytes4)": {
            "notice": "This contract supports IERC165, IERC721 and IERC721Metadata"
          },
          "symbol()": {
            "notice": "Returns the symbol of the NFT"
          },
          "triggerMetadataUpdate(uint256)": {
            "notice": "Emits the MetadataUpdate event with `tokenId` as the argument."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol": "ConstantInflowNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol": {
        "keccak256": "0xf9b058c4009abed832187589f6a398cce384589be52b7c7150dc47689bb4c6c2",
        "urls": [
          "bzz-raw://fa9a61d5a2dfa905290d770ed467f34b1d21429a301bec5acddcb7b60cf27958",
          "dweb:/ipfs/QmbYXP3oQmeEBN2vYDo3k7BzYAKgkD45xJdP3mZwD4ULVh"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol": {
        "keccak256": "0x84a0beb06890d7b278943493bc4e960b84482d4e2850739b2f43a4b33815498f",
        "urls": [
          "bzz-raw://c244d35343f22955f3184b522d4b7f8975964939d394b8f88a7673ee195d1baa",
          "dweb:/ipfs/QmedA3kyPDKetqAXXeszi9w7Ymc38VgMNajL5aw3xLWiTK"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol",
    "id": 69446,
    "exportedSymbols": {
      "ConstantInflowNFT": [
        69445
      ],
      "FlowNFTBase": [
        70669
      ],
      "IConstantInflowNFT": [
        66295
      ],
      "IConstantOutflowNFT": [
        66349
      ],
      "IERC721Metadata": [
        45241
      ],
      "IFlowNFTBase": [
        66421
      ],
      "ISuperfluid": [
        67711
      ]
    },
    "nodeType": "SourceUnit",
    "src": "35:3777:88",
    "nodes": [
      {
        "id": 69235,
        "nodeType": "PragmaDirective",
        "src": "35:23:88",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 69237,
        "nodeType": "ImportDirective",
        "src": "60:102:88",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69446,
        "sourceUnit": 45242,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69236,
              "name": "IERC721Metadata",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45241,
              "src": "69:15:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69239,
        "nodeType": "ImportDirective",
        "src": "163:87:88",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol",
        "file": "../interfaces/superfluid/IConstantOutflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69446,
        "sourceUnit": 66350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69238,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66349,
              "src": "172:19:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69241,
        "nodeType": "ImportDirective",
        "src": "251:85:88",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol",
        "file": "../interfaces/superfluid/IConstantInflowNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69446,
        "sourceUnit": 66296,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69240,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66295,
              "src": "260:18:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69243,
        "nodeType": "ImportDirective",
        "src": "337:71:88",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "../interfaces/superfluid/ISuperfluid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69446,
        "sourceUnit": 67712,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69242,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67711,
              "src": "346:11:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69246,
        "nodeType": "ImportDirective",
        "src": "409:62:88",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol",
        "file": "./FlowNFTBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69446,
        "sourceUnit": 70670,
        "symbolAliases": [
          {
            "foreign": {
              "id": 69244,
              "name": "FlowNFTBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 70669,
              "src": "418:11:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 69245,
              "name": "IFlowNFTBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66421,
              "src": "431:12:88",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69445,
        "nodeType": "ContractDefinition",
        "src": "743:3068:88",
        "nodes": [
          {
            "id": 69254,
            "nodeType": "VariableDeclaration",
            "src": "811:57:88",
            "nodes": [],
            "constant": false,
            "functionSelector": "ef43d2c6",
            "mutability": "immutable",
            "name": "CONSTANT_OUTFLOW_NFT",
            "nameLocation": "848:20:88",
            "scope": 69445,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
              "typeString": "contract IConstantOutflowNFT"
            },
            "typeName": {
              "id": 69253,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 69252,
                "name": "IConstantOutflowNFT",
                "nameLocations": [
                  "811:19:88"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66349,
                "src": "811:19:88"
              },
              "referencedDeclaration": 66349,
              "src": "811:19:88",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                "typeString": "contract IConstantOutflowNFT"
              }
            },
            "visibility": "public"
          },
          {
            "id": 69271,
            "nodeType": "FunctionDefinition",
            "src": "924:168:88",
            "nodes": [],
            "body": {
              "id": 69270,
              "nodeType": "Block",
              "src": "1034:58:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 69268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69266,
                      "name": "CONSTANT_OUTFLOW_NFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69254,
                      "src": "1044:20:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 69267,
                      "name": "constantOutflowNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69260,
                      "src": "1067:18:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                        "typeString": "contract IConstantOutflowNFT"
                      }
                    },
                    "src": "1044:41:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "id": 69269,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:41:88"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 69263,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 69257,
                    "src": "1028:4:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  }
                ],
                "id": 69264,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 69262,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "1016:11:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70669,
                  "src": "1016:11:88"
                },
                "nodeType": "ModifierInvocation",
                "src": "1016:17:88"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 69261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69257,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "957:4:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69271,
                  "src": "945:16:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 69256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69255,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "945:11:88"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67711,
                      "src": "945:11:88"
                    },
                    "referencedDeclaration": 67711,
                    "src": "945:11:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69260,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "991:18:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69271,
                  "src": "971:38:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 69259,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69258,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "971:19:88"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66349,
                      "src": "971:19:88"
                    },
                    "referencedDeclaration": 66349,
                    "src": "971:19:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:80:88"
            },
            "returnParameters": {
              "id": 69265,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1034:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69282,
            "nodeType": "FunctionDefinition",
            "src": "1098:208:88",
            "nodes": [],
            "body": {
              "id": 69281,
              "nodeType": "Block",
              "src": "1162:144:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e436f6e7374616e74496e666c6f774e46542e696d706c656d656e746174696f6e",
                        "id": 69278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:67:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.ConstantInflowNFT.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.ConstantInflowNFT.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9a61ea3469d742a522f41a67608e442d2c27902bed81123f00ba6d3e12e9871e",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.ConstantInflowNFT.implementation\""
                        }
                      ],
                      "id": 69277,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1191:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 69279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:108:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 69276,
                  "id": 69280,
                  "nodeType": "Return",
                  "src": "1172:127:88"
                }
              ]
            },
            "baseFunctions": [
              77512
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "1107:13:88",
            "overrides": {
              "id": 69273,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1135:8:88"
            },
            "parameters": {
              "id": 69272,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:2:88"
            },
            "returnParameters": {
              "id": 69276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69275,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69282,
                  "src": "1153:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 69274,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:9:88"
            },
            "scope": 69445,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69298,
            "nodeType": "FunctionDefinition",
            "src": "1711:138:88",
            "nodes": [],
            "body": {
              "id": 69297,
              "nodeType": "Block",
              "src": "1811:38:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69293,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69285,
                        "src": "1827:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69294,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69287,
                        "src": "1831:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69292,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69398,
                      "src": "1821:5:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 69295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:21:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69296,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:21:88"
                }
              ]
            },
            "baseFunctions": [
              66288
            ],
            "documentation": {
              "id": 69283,
              "nodeType": "StructuredDocumentation",
              "src": "1312:394:88",
              "text": "@notice The mint function emits the \"mint\" `Transfer` event.\n @dev We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose\n is to inform clients that search for events.\n Only callable by ConstantOutflowNFT\n @param to the receiver of the inflow nft and desired flow receiver\n @param newTokenId the new token id"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69290,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 69289,
                  "name": "onlyConstantOutflowNFT",
                  "nameLocations": [
                    "1788:22:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69444,
                  "src": "1788:22:88"
                },
                "nodeType": "ModifierInvocation",
                "src": "1788:22:88"
              }
            ],
            "name": "mint",
            "nameLocation": "1720:4:88",
            "parameters": {
              "id": 69288,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69285,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1742:2:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69298,
                  "src": "1734:10:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69284,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69287,
                  "mutability": "mutable",
                  "name": "newTokenId",
                  "nameLocation": "1762:10:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69298,
                  "src": "1754:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69286,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1724:54:88"
            },
            "returnParameters": {
              "id": 69291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1811:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69311,
            "nodeType": "FunctionDefinition",
            "src": "2185:94:88",
            "nodes": [],
            "body": {
              "id": 69310,
              "nodeType": "Block",
              "src": "2248:31:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69307,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69301,
                        "src": "2264:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69306,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        69428
                      ],
                      "referencedDeclaration": 69428,
                      "src": "2258:5:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 69308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:14:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69309,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:14:88"
                }
              ]
            },
            "baseFunctions": [
              66294
            ],
            "documentation": {
              "id": 69299,
              "nodeType": "StructuredDocumentation",
              "src": "1855:325:88",
              "text": "@notice This burn function emits the \"burn\" `Transfer` event.\n @dev We don't modify storage as this is handled in ConstantOutflowNFT.sol and this function's sole purpose\n is to inform clients that search for events.\n Only callable by ConstantOutflowNFT\n @param tokenId desired token id to burn"
            },
            "functionSelector": "42966c68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 69304,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 69303,
                  "name": "onlyConstantOutflowNFT",
                  "nameLocations": [
                    "2225:22:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 69444,
                  "src": "2225:22:88"
                },
                "nodeType": "ModifierInvocation",
                "src": "2225:22:88"
              }
            ],
            "name": "burn",
            "nameLocation": "2194:4:88",
            "parameters": {
              "id": 69302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69301,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2207:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69311,
                  "src": "2199:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2199:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2198:17:88"
            },
            "returnParameters": {
              "id": 69305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2248:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69330,
            "nodeType": "FunctionDefinition",
            "src": "2285:255:88",
            "nodes": [],
            "body": {
              "id": 69329,
              "nodeType": "Block",
              "src": "2465:75:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 69327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 69322,
                      "name": "flowData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69320,
                      "src": "2475:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 69325,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69313,
                          "src": "2525:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 69323,
                          "name": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69254,
                          "src": "2486:20:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        },
                        "id": 69324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2507:17:88",
                        "memberName": "flowDataByTokenId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66396,
                        "src": "2486:38:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$66364_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct IFlowNFTBase.FlowNFTData memory)"
                        }
                      },
                      "id": 69326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2486:47:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "src": "2475:58:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "id": 69328,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:58:88"
                }
              ]
            },
            "baseFunctions": [
              66396,
              70621
            ],
            "functionSelector": "8d47859e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "flowDataByTokenId",
            "nameLocation": "2294:17:88",
            "overrides": {
              "id": 69317,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69315,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "2388:11:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70669,
                  "src": "2388:11:88"
                },
                {
                  "id": 69316,
                  "name": "IFlowNFTBase",
                  "nameLocations": [
                    "2401:12:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66421,
                  "src": "2401:12:88"
                }
              ],
              "src": "2379:35:88"
            },
            "parameters": {
              "id": 69314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69313,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2329:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69330,
                  "src": "2321:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2321:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2311:31:88"
            },
            "returnParameters": {
              "id": 69321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69320,
                  "mutability": "mutable",
                  "name": "flowData",
                  "nameLocation": "2451:8:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69330,
                  "src": "2432:27:88",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                    "typeString": "struct IFlowNFTBase.FlowNFTData"
                  },
                  "typeName": {
                    "id": 69319,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 69318,
                      "name": "FlowNFTData",
                      "nameLocations": [
                        "2432:11:88"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66364,
                      "src": "2432:11:88"
                    },
                    "referencedDeclaration": 66364,
                    "src": "2432:11:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$66364_storage_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2431:29:88"
            },
            "scope": 69445,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 69346,
            "nodeType": "FunctionDefinition",
            "src": "2546:210:88",
            "nodes": [],
            "body": {
              "id": 69345,
              "nodeType": "Block",
              "src": "2708:48:88",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69341,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69332,
                        "src": "2735:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 69342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2744:4:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 69340,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70161,
                      "src": "2725:9:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bool_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256,bool) view returns (string memory)"
                      }
                    },
                    "id": 69343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:24:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 69339,
                  "id": 69344,
                  "nodeType": "Return",
                  "src": "2718:31:88"
                }
              ]
            },
            "baseFunctions": [
              45240,
              70098
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2555:8:88",
            "overrides": {
              "id": 69336,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 69334,
                  "name": "FlowNFTBase",
                  "nameLocations": [
                    "2642:11:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 70669,
                  "src": "2642:11:88"
                },
                {
                  "id": 69335,
                  "name": "IERC721Metadata",
                  "nameLocations": [
                    "2655:15:88"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45241,
                  "src": "2655:15:88"
                }
              ],
              "src": "2633:38:88"
            },
            "parameters": {
              "id": 69333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69332,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2581:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69346,
                  "src": "2573:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2563:31:88"
            },
            "returnParameters": {
              "id": 69339,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69338,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69346,
                  "src": "2689:13:88",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69337,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:6:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2688:15:88"
            },
            "scope": 69445,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69366,
            "nodeType": "FunctionDefinition",
            "src": "2794:209:88",
            "nodes": [],
            "body": {
              "id": 69365,
              "nodeType": "Block",
              "src": "2892:111:88",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    69357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69357,
                      "mutability": "mutable",
                      "name": "flowData",
                      "nameLocation": "2921:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 69365,
                      "src": "2902:27:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData"
                      },
                      "typeName": {
                        "id": 69356,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69355,
                          "name": "FlowNFTData",
                          "nameLocations": [
                            "2902:11:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66364,
                          "src": "2902:11:88"
                        },
                        "referencedDeclaration": 66364,
                        "src": "2902:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowNFTData_$66364_storage_ptr",
                          "typeString": "struct IFlowNFTBase.FlowNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69361,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 69359,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69349,
                        "src": "2950:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69358,
                      "name": "flowDataByTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        69330
                      ],
                      "referencedDeclaration": 69330,
                      "src": "2932:17:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$66364_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct IFlowNFTBase.FlowNFTData memory)"
                      }
                    },
                    "id": 69360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:26:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2902:56:88"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 69362,
                      "name": "flowData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69357,
                      "src": "2975:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                      }
                    },
                    "id": 69363,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2984:12:88",
                    "memberName": "flowReceiver",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 66361,
                    "src": "2975:21:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 69354,
                  "id": 69364,
                  "nodeType": "Return",
                  "src": "2968:28:88"
                }
              ]
            },
            "baseFunctions": [
              70629
            ],
            "documentation": {
              "id": 69347,
              "nodeType": "StructuredDocumentation",
              "src": "2762:27:88",
              "text": "@inheritdoc FlowNFTBase"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerOf",
            "nameLocation": "2803:8:88",
            "overrides": {
              "id": 69351,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2865:8:88"
            },
            "parameters": {
              "id": 69350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69349,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2829:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69366,
                  "src": "2821:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2811:31:88"
            },
            "returnParameters": {
              "id": 69354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69353,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69366,
                  "src": "2883:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2883:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2882:9:88"
            },
            "scope": 69445,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 69381,
            "nodeType": "FunctionDefinition",
            "src": "3096:186:88",
            "nodes": [],
            "body": {
              "id": 69380,
              "nodeType": "Block",
              "src": "3225:57:88",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69377,
                      "name": "CFA_NFT_TRANSFER_IS_NOT_ALLOWED",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66380,
                      "src": "3242:31:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 69378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3242:33:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69379,
                  "nodeType": "RevertStatement",
                  "src": "3235:40:88"
                }
              ]
            },
            "baseFunctions": [
              70638
            ],
            "documentation": {
              "id": 69367,
              "nodeType": "StructuredDocumentation",
              "src": "3009:82:88",
              "text": "@notice Transfer is currently not allowed.\n @dev Will revert currently."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "3105:9:88",
            "overrides": {
              "id": 69375,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3216:8:88"
            },
            "parameters": {
              "id": 69374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69369,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69381,
                  "src": "3124:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69368,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3124:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69371,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69381,
                  "src": "3150:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3150:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69373,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69381,
                  "src": "3174:7:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3174:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3114:84:88"
            },
            "returnParameters": {
              "id": 69376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3225:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 69398,
            "nodeType": "FunctionDefinition",
            "src": "3288:114:88",
            "nodes": [],
            "body": {
              "id": 69397,
              "nodeType": "Block",
              "src": "3344:58:88",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 69391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3376:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 69390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3368:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3368:7:88",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 69392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3368:10:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69393,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69383,
                        "src": "3380:2:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69394,
                        "name": "newTokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69385,
                        "src": "3384:10:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69388,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45113,
                      "src": "3359:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 69395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3359:36:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69396,
                  "nodeType": "EmitStatement",
                  "src": "3354:41:88"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "3297:5:88",
            "parameters": {
              "id": 69386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69383,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3311:2:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69398,
                  "src": "3303:10:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 69382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3303:7:88",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69385,
                  "mutability": "mutable",
                  "name": "newTokenId",
                  "nameLocation": "3323:10:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69398,
                  "src": "3315:18:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3315:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3302:32:88"
            },
            "returnParameters": {
              "id": 69387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3344:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 69428,
            "nodeType": "FunctionDefinition",
            "src": "3408:222:88",
            "nodes": [],
            "body": {
              "id": 69427,
              "nodeType": "Block",
              "src": "3458:172:88",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    69406
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69406,
                      "mutability": "mutable",
                      "name": "flowData",
                      "nameLocation": "3487:8:88",
                      "nodeType": "VariableDeclaration",
                      "scope": 69427,
                      "src": "3468:27:88",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                        "typeString": "struct IFlowNFTBase.FlowNFTData"
                      },
                      "typeName": {
                        "id": 69405,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 69404,
                          "name": "FlowNFTData",
                          "nameLocations": [
                            "3468:11:88"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 66364,
                          "src": "3468:11:88"
                        },
                        "referencedDeclaration": 66364,
                        "src": "3468:11:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowNFTData_$66364_storage_ptr",
                          "typeString": "struct IFlowNFTBase.FlowNFTData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69410,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 69408,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69400,
                        "src": "3516:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69407,
                      "name": "flowDataByTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        69330
                      ],
                      "referencedDeclaration": 69330,
                      "src": "3498:17:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_FlowNFTData_$66364_memory_ptr_$",
                        "typeString": "function (uint256) view returns (struct IFlowNFTBase.FlowNFTData memory)"
                      }
                    },
                    "id": 69409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3498:26:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                      "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3468:56:88"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 69414,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69400,
                        "src": "3547:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 69411,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3535:5:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ConstantInflowNFT_$69445_$",
                          "typeString": "type(contract super ConstantInflowNFT)"
                        }
                      },
                      "id": 69413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3541:5:88",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70668,
                      "src": "3535:11:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 69415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3535:20:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69416,
                  "nodeType": "ExpressionStatement",
                  "src": "3535:20:88"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69418,
                          "name": "flowData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69406,
                          "src": "3580:8:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FlowNFTData_$66364_memory_ptr",
                            "typeString": "struct IFlowNFTBase.FlowNFTData memory"
                          }
                        },
                        "id": 69419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3589:12:88",
                        "memberName": "flowReceiver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 66361,
                        "src": "3580:21:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 69422,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3611:1:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 69421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3603:7:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69420,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3603:7:88",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 69423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3603:10:88",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 69424,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69400,
                        "src": "3615:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 69417,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45113,
                      "src": "3571:8:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 69425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3571:52:88",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69426,
                  "nodeType": "EmitStatement",
                  "src": "3566:57:88"
                }
              ]
            },
            "baseFunctions": [
              70668
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "3417:5:88",
            "overrides": {
              "id": 69402,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3449:8:88"
            },
            "parameters": {
              "id": 69401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 69400,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3431:7:88",
                  "nodeType": "VariableDeclaration",
                  "scope": 69428,
                  "src": "3423:15:88",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3423:7:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3422:17:88"
            },
            "returnParameters": {
              "id": 69403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3458:0:88"
            },
            "scope": 69445,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 69444,
            "nodeType": "ModifierDefinition",
            "src": "3636:173:88",
            "nodes": [],
            "body": {
              "id": 69443,
              "nodeType": "Block",
              "src": "3670:139:88",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 69436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 69430,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3684:3:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 69431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3688:6:88",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3684:10:88",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 69434,
                          "name": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 69254,
                          "src": "3706:20:88",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                            "typeString": "contract IConstantOutflowNFT"
                          }
                        ],
                        "id": 69433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3698:7:88",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 69432,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3698:7:88",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 69435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3698:29:88",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3684:43:88",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69441,
                  "nodeType": "IfStatement",
                  "src": "3680:112:88",
                  "trueBody": {
                    "id": 69440,
                    "nodeType": "Block",
                    "src": "3729:63:88",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 69437,
                            "name": "CIF_NFT_ONLY_CONSTANT_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66280,
                            "src": "3750:29:88",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 69438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3750:31:88",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69439,
                        "nodeType": "RevertStatement",
                        "src": "3743:38:88"
                      }
                    ]
                  }
                },
                {
                  "id": 69442,
                  "nodeType": "PlaceholderStatement",
                  "src": "3801:1:88"
                }
              ]
            },
            "name": "onlyConstantOutflowNFT",
            "nameLocation": "3645:22:88",
            "parameters": {
              "id": 69429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3667:2:88"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 69248,
              "name": "FlowNFTBase",
              "nameLocations": [
                "773:11:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 70669,
              "src": "773:11:88"
            },
            "id": 69249,
            "nodeType": "InheritanceSpecifier",
            "src": "773:11:88"
          },
          {
            "baseName": {
              "id": 69250,
              "name": "IConstantInflowNFT",
              "nameLocations": [
                "786:18:88"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66295,
              "src": "786:18:88"
            },
            "id": 69251,
            "nodeType": "InheritanceSpecifier",
            "src": "786:18:88"
          }
        ],
        "canonicalName": "ConstantInflowNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 69247,
          "nodeType": "StructuredDocumentation",
          "src": "473:270:88",
          "text": "@title ConstantInflowNFT Contract (CIF NFT)\n @author Superfluid\n @notice The ConstantInflowNFT contract to be minted to the flow sender on flow creation.\n @dev This contract does not hold any storage, but references the ConstantOutflowNFT contract storage."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69445,
          66295,
          70669,
          66421,
          45241,
          45214,
          46061,
          77572,
          43996
        ],
        "name": "ConstantInflowNFT",
        "nameLocation": "752:17:88",
        "scope": 69446,
        "usedErrors": [
          66280,
          66366,
          66368,
          66370,
          66372,
          66374,
          66376,
          66378,
          66380,
          66382
        ]
      }
    ],
    "license": "AGPLv3"
  },
  "id": 88
}