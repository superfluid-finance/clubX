{
  "abi": [
    {
      "inputs": [],
      "name": "INVALID_TEST_SUPER_TOKEN_TYPE",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SECONDS_IN_A_DAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "club",
      "outputs": [
        {
          "internalType": "contract SuperfluidClub",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clubAsToken",
      "outputs": [
        {
          "internalType": "contract ISuperToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddProtegeL0",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAddProtegeL1",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testAllocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testDeployment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetFlowRateAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetMaxFlowRateByLevel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testInitOnlyOnce",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOnlyOwnerCanTransferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testReceiveEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "$836f3661f552aa3d46ab242591622d7b50$__9063a9442e409062000680908b908b908b908b908b908b9060040162002fda565b602060405180830381865af41580156200069e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006c491906200301e565b915060008686604051602001620006dd9291906200303e565b60408051601f1981840301815290829052600c549092506001600160a01b03169063431f14819085906001906200071b908c908c9060200162003054565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016200074c949392919062003076565b6020604051808303816000875af11580156200076c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200079291906200301e565b915060006040518060400160405280600c81526020016b3a37b5b2b739973a32b9ba1760a11b815250846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620007fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008249190810190620030d3565b6040516020016200083792919062003172565b6040516020818303038152906040529050620008566001828662001056565b60006040518060400160405280601181526020017039bab832b93a37b5b2b739973a32b9ba1760791b815250846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015620008c1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620008eb9190810190620030d3565b604051602001620008fe92919062003172565b60405160208183030381529060405290506200091d6001828662001056565b505050965096945050505050565b6200050e81620010f5565b6200050e8162000ebe565b600c546000906001600160a01b03166200096e57604051635006ee6d60e11b815260040160405180910390fd5b731820a4b7618bde71dce8cdc73aab6c95905fad243b620009a157604051622b682760e71b815260040160405180910390fd5b600073__$836f3661f552aa3d46ab242591622d7b50$__63f7c3bdc96040518163ffffffff1660e01b8152600401602060405180830381865af4158015620009ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a1391906200301e565b600c54604051633504b4d160e21b81526001600160a01b03808416600483015292945084935091169063d412d34490602401600060405180830381600087803b15801562000a6057600080fd5b505af115801562000a75573d6000803e3d6000fd5b50506040516285fc1360e71b81526001600160a01b03851692506342fe0980915062000ab2906000906012908b908b908b908b90600401620031a5565b600060405180830381600087803b15801562000acd57600080fd5b505af115801562000ae2573d6000803e3d6000fd5b5050505060006040518060400160405280601181526020017039bab832b93a37b5b2b739973a32b9ba1760791b815250858560405160200162000b2893929190620031f7565b604051602081830303815290604052905062000b476001828562001056565b5050949350505050565b60015460405163f2fde38b60e01b81526001600160a01b0383811660048301526101009092049091169063f2fde38b90602401600060405180830381600087803b15801562000b9f57600080fd5b505af115801562000bb4573d6000803e3d6000fd5b5050505050565b600c546000906001600160a01b031662000be857604051635006ee6d60e11b815260040160405180910390fd5b731820a4b7618bde71dce8cdc73aab6c95905fad243b62000c1b57604051622b682760e71b815260040160405180910390fd5b600073__$836f3661f552aa3d46ab242591622d7b50$__631f2d18966040518163ffffffff1660e01b8152600401602060405180830381865af415801562000c67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c8d91906200301e565b600c54604051633504b4d160e21b81526001600160a01b03808416600483015292935091169063d412d34490602401600060405180830381600087803b15801562000cd757600080fd5b505af115801562000cec573d6000803e3d6000fd5b505060405163588ca48760e11b81526001600160a01b038416925063b119490e915062000d26908a908a908a908a908a9060040162003221565b600060405180830381600087803b15801562000d4157600080fd5b505af115801562000d56573d6000803e3d6000fd5b5050505080915062000db960016040518060400160405280601181526020017039bab832b93a37b5b2b739973a32b9ba1760791b815250878760405160200162000da393929190620031f7565b6040516020818303038152906040528462001056565b60405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801562000e07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e2d91906200325f565b505095945050505050565b6002546001600160a01b031662000e6257604051633b8034db60e11b815260040160405180910390fd5b62000e6c620012cd565b620004b762001372565b6002546001600160a01b031662000ea05760405163bb57a2c760e01b815260040160405180910390fd5b62000eaa62001417565b62000eb462001921565b620004b7620019dd565b62000ec93062001aa4565b6200050e8160000151826020015162001ba6565b6002546001600160a01b031662000f075760405163608e9db560e01b815260040160405180910390fd5b62000f123062001c4a565b62000f1c62001cec565b600e54604051637048027560e01b81523360048201526001600160a01b0390911690637048027590602401600060405180830381600087803b15801562000f6257600080fd5b505af115801562000f77573d6000803e3d6000fd5b5050505062000f8562001d91565b62000f8f62001e36565b62000f9e8160c0015162001ed9565b6003546001600160a01b031662000fc8576040516302a9c2c560e61b815260040160405180910390fd5b6200050e62001f18565b62000fdd8162000ebe565b62000fe762001f93565b62001005816060015182608001518360a00151846040015162001ffe565b6200100f62000e38565b620010196200207b565b6200102362000e76565b6200102d6200235b565b620010388162000edd565b62001042620024a9565b6200104c620024f5565b6200050e62002541565b600e546001600160a01b0316620010805760405163521c4a7d60e01b815260040160405180910390fd5b8215620010f057600e5460405163a815ff1560e01b81526001600160a01b039091169063a815ff1590620010bb90859085906004016200327f565b600060405180830381600087803b158015620010d657600080fd5b505af1158015620010eb573d6000803e3d6000fd5b505050505b505050565b60015460ff828116911614620011435760405162461bcd60e51b815260206004820152600e60248201526d0496e636f727265637420737465760941b60448201526064015b60405180910390fd5b8060ff1660000362001160576200115a3062001aa4565b6200129c565b8060ff166001036200117a576200115a60016000620027d7565b8060ff1660020362001190576200115a62002860565b8060ff16600303620011b057620011a662002874565b6200115a62002888565b600460ff8216146200129c578060ff16600503620011d2576200115a62001417565b8060ff16600603620011e8576200115a6200289c565b8060ff166007036200126457620011ff30620028b0565b600e54604051637048027560e01b81523360048201526001600160a01b0390911690637048027590602401600060405180830381600087803b1580156200124557600080fd5b505af11580156200125a573d6000803e3d6000fd5b505050506200129c565b60405162461bcd60e51b815260206004820152600c60248201526b0496e76616c696420737465760a41b60448201526064016200113a565b6001805460ff16906000620012b183620032ab565b91906101000a81548160ff021916908360ff1602179055505050565b600254604051630dbabbff60e11b81526001600160a01b03909116600482015273__$d412c98dbcef62e4a5e577aa712fa982a3$__90631b7577fe90602401602060405180830381865af41580156200132a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200135091906200301e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600254604051630cce0ce360e31b81526001600160a01b03909116600482015273__$5d450739ee6302481014c8888f319cbb05$__90636670671890602401602060405180830381865af4158015620013cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013f591906200301e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b600073__$1b2510be4c6ffe8748904f5f776507ce3a$__63c465e06c6040518163ffffffff1660e01b8152600401602060405180830381865af415801562001463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200148991906200301e565b9050600073__$1b2510be4c6ffe8748904f5f776507ce3a$__63c465e06c6040518163ffffffff1660e01b8152600401602060405180830381865af4158015620014d7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014fd91906200301e565b600254604051635e1673bb60e11b81526001600160a01b039182166004820152908216602482015290915073__$052521eaae40fa43960a2c5a8d896a28e2$__9063bc2ce77690604401602060405180830381865af415801562001565573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200158b91906200301e565b600780546001600160a01b0319166001600160a01b039290921691821790556040805163132075a760e31b81529051639903ad389160048082019260009290919082900301818387803b158015620015e257600080fd5b505af1158015620015f7573d6000803e3d6000fd5b50506002546040516326c043d360e11b81526001600160a01b039182166004820152908516602482015273__$052521eaae40fa43960a2c5a8d896a28e2$__9250634d8087a69150604401602060405180830381865af415801562001660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200168691906200301e565b600880546001600160a01b0319166001600160a01b039290921691821790556040805163132075a760e31b81529051639903ad389160048082019260009290919082900301818387803b158015620016dd57600080fd5b505af1158015620016f2573d6000803e3d6000fd5b5050600754604051634a0687ef60e01b81526001600160a01b0391821660048201529085169250634a0687ef9150602401600060405180830381600087803b1580156200173e57600080fd5b505af115801562001753573d6000803e3d6000fd5b5050600854604051634a0687ef60e01b81526001600160a01b0391821660048201529084169250634a0687ef9150602401600060405180830381600087803b1580156200179f57600080fd5b505af1158015620017b4573d6000803e3d6000fd5b50506040805163266c45bb60e11b81526004810191909152601460448201527310dbdb9cdd185b9d0813dd5d199b1bddc813919560621b606482015260806024820152600360848201526221a7a360e91b60a48201526001600160a01b0385169250634cd88b76915060c401600060405180830381600087803b1580156200183b57600080fd5b505af115801562001850573d6000803e3d6000fd5b50506040805163266c45bb60e11b81526004810191909152601360448201527210dbdb9cdd185b9d08125b999b1bddc8139195606a1b606482015260806024820152600360848201526221a4a360e91b60a48201526001600160a01b0384169250634cd88b76915060c401600060405180830381600087803b158015620018d657600080fd5b505af1158015620018eb573d6000803e3d6000fd5b5050600980546001600160a01b039586166001600160a01b031991821617909155600a8054949095169316929092179092555050565b600254600954600a54604051630e07777960e31b81526001600160a01b039384166004820152918316602483015291909116604482015273__$11bab9f39d2a090f71d030c5089fd7ebe6$__9063703bbbc890606401602060405180830381865af415801562001995573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019bb91906200301e565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600254600b54600754600854604051630243059d60e01b81526001600160a01b0394851660048201529284166024840152908316604483015291909116606482015273__$87aa05c2eb3f6f4a9d1b2a30ab6857af1a$__90630243059d90608401602060405180830381865af415801562001a5c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8291906200301e565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b73__$ec364b5f847687f411f7aac97ee63693c7$__63c3acf1b36040518163ffffffff1660e01b8152600401602060405180830381865af415801562001aee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b1491906200301e565b60018054610100600160a81b0319166101006001600160a01b0393841681029190911791829055604051633f5b172b60e11b8152910482166004820152908216602482015273__$ec364b5f847687f411f7aac97ee63693c7$__90637eb62e569060440160006040518083038186803b15801562001b9157600080fd5b505af415801562000bb4573d6000803e3d6000fd5b604051638a25422160e01b81528215156004820152811515602482015273__$b64dc458336693064dc03316c87e5ccace$__90638a25422190604401602060405180830381865af415801562001c00573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c2691906200301e565b600280546001600160a01b0319166001600160a01b03929092169190911790555050565b604051632f0f279d60e01b81526001600160a01b038216600482015273__$87aa05c2eb3f6f4a9d1b2a30ab6857af1a$__90632f0f279d90602401602060405180830381865af415801562001ca3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cc991906200301e565b600e80546001600160a01b0319166001600160a01b039290921691909117905550565b600e54604051630b5bd8c560e01b81526001600160a01b03909116600482015273__$d8594478a12b92450a3093a92fdc39b391$__90630b5bd8c590602401602060405180830381865af415801562001d49573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d6f91906200301e565b600f80546001600160a01b0319166001600160a01b0392909216919091179055565b60025460405163269c683160e11b81526001600160a01b03909116600482015273__$fc84b0432f3e058b09e50f9d35a0fabfa6$__90634d38d06290602401602060405180830381865af415801562001dee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e1491906200301e565b601080546001600160a01b0319166001600160a01b0392909216919091179055565b600254604051623b2bcd60e01b81526001600160a01b03909116600482015273__$8e0f7691e0f43a60839c100eec89c3f84c$__90623b2bcd90602401602060405180830381865af415801562001e91573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001eb791906200301e565b601180546001600160a01b0319166001600160a01b0392909216919091179055565b731820a4b7618bde71dce8cdc73aab6c95905fad243b62001f0d57604051630c9b12e760e01b815260040160405180910390fd5b6200050e81620028c5565b6002546003546040516001600160a01b03928316929091169062001f3c9062002984565b6001600160a01b03928316815291166020820152604001604051809103906000f08015801562001f70573d6000803e3d6000fd5b50601280546001600160a01b0319166001600160a01b0392909216919091179055565b60025460015460405163189acdbd60e31b81526001600160a01b036101009092048216600482015291169063c4d66de8906024015b600060405180830381600087803b15801562001fe357600080fd5b505af115801562001ff8573d6000803e3d6000fd5b50505050565b600154600254604051630b520f0360e31b81526001600160a01b03610100909304831692635a90781892620020419291169088908890889088906004016200331f565b600060405180830381600087803b1580156200205c57600080fd5b505af115801562002071573d6000803e3d6000fd5b5050505050505050565b6001546002546004805460405163cadf8f8560e01b81526001600160a01b039384169281019290925282166024820152610100909204169063cadf8f8590604401600060405180830381600087803b158015620020d757600080fd5b505af1158015620020ec573d6000803e3d6000fd5b50506002546004805460408051633b982ccf60e11b815290516001600160a01b03948516965063b6d200de95509390911692637730599e928281019260209291908290030181865afa15801562002147573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200216d91906200335b565b6040518263ffffffff1660e01b81526004016200218c91815260200190565b602060405180830381865afa158015620021aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021d091906200301e565b600380546001600160a01b0319166001600160a01b0392831617905560015460025460065460405163cadf8f8560e01b81529184166004830152831660248201526101009091049091169063cadf8f8590604401600060405180830381600087803b1580156200223f57600080fd5b505af115801562002254573d6000803e3d6000fd5b505060025460065460408051633b982ccf60e11b815290516001600160a01b03938416955063b6d200de94509190921691637730599e9160048083019260209291908290030181865afa158015620022b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022d691906200335b565b6040518263ffffffff1660e01b8152600401620022f591815260200190565b602060405180830381865afa15801562002313573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200233991906200301e565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001546002546001600160a01b0361010090920482169163427942a49116600080604051908082528060200260200182016040528015620023a6578160200160208202803683370190505b50600d546040516001600160e01b031960e087901b168152620023d9949392916001600160a01b03169060040162003375565b600060405180830381600087803b158015620023f457600080fd5b505af115801562002409573d6000803e3d6000fd5b50505050600260009054906101000a90046001600160a01b03166001600160a01b031663731aed6e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200248791906200301e565b600c80546001600160a01b0319166001600160a01b0392909216919091179055565b6001546002546010546040516355c2378d60e11b81526001600160a01b039283166004820152600060248201529082166044820152610100909204169063ab846f1a9060640162001fc8565b6001546002546011546040516355c2378d60e11b81526001600160a01b039283166004820152600060248201529082166044820152610100909204169063ab846f1a9060640162001fc8565b600e546001546040805163a815ff1560e01b81526004810191909152601360448201527215195cdd11dbdd995c9b985b98d94b9d195cdd606a1b60648201526001600160a01b036101009092048216602482015291169063a815ff1590608401600060405180830381600087803b158015620025bc57600080fd5b505af1158015620025d1573d6000803e3d6000fd5b5050600e546002546040805163a815ff1560e01b81526004810191909152600f60448201526e14dd5c195c999b1d5a590b9d195cdd608a1b60648201526001600160a01b0391821660248201529116925063a815ff159150608401600060405180830381600087803b1580156200264757600080fd5b505af11580156200265c573d6000803e3d6000fd5b5050600e54600f546040805163a815ff1560e01b8152600481019190915260136044820152725375706572666c7569644c6f616465722d763160681b60648201526001600160a01b0391821660248201529116925063a815ff159150608401600060405180830381600087803b158015620026d657600080fd5b505af1158015620026eb573d6000803e3d6000fd5b5050600e80546010546040805163a815ff1560e01b8152600481019190915260448101939093526d21a320bb18a337b93bb0b93232b960911b60648401526001600160a01b03908116602484015216925063a815ff159150608401600060405180830381600087803b1580156200276157600080fd5b505af115801562002776573d6000803e3d6000fd5b5050600e80546011546040805163a815ff1560e01b8152600481019190915260448101939093526d24a220bb18a337b93bb0b93232b960911b60648401526001600160a01b03908116602484015216925063a815ff15915060840162001fc8565b620027e3828262001ba6565b620027ed62001f93565b6200285c604561384061070860008054806020026020016040519081016040528092919081815260200182805480156200285157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162002832575b505050505062001ffe565b5050565b6200286a62000e62565b620004b76200207b565b6200287e62001d91565b620004b7620024a9565b6200289262001e36565b620004b7620024f5565b620028a662000eaa565b620004b76200235b565b620028bb8162001c4a565b6200104c62001cec565b6002546040516001600160a01b03909116908290620028e49062002992565b6001600160a01b0390921682526020820152604001604051809103906000f08015801562002916573d6000803e3d6000fd5b50601380546001600160a01b0319166001600160a01b039290921691909117905550565b6040518060e001604052806000151581526020016000151581526020016060815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b610a2a80620033b683390190565b6118338062003de083390190565b600060208284031215620029b357600080fd5b5035919050565b60005b83811015620029d7578181015183820152602001620029bd565b50506000910152565b60008151808452620029fa816020860160208601620029ba565b601f01601f19169290920160200192915050565b60208152600062002a236020830184620029e0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171562002a665762002a6662002a2a565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002a985762002a9862002a2a565b604052919050565b80151581146200050e57600080fd5b803562002abc8162002aa0565b919050565b6001600160a01b03811681146200050e57600080fd5b803562002abc8162002ac1565b600082601f83011262002af657600080fd5b8135602067ffffffffffffffff82111562002b155762002b1562002a2a565b8160051b62002b2682820162002a6c565b928352848101820192828101908785111562002b4157600080fd5b83870192505b8483101562002b6d57823562002b5d8162002ac1565b8252918301919083019062002b47565b979650505050505050565b60006020828403121562002b8b57600080fd5b813567ffffffffffffffff8082111562002ba457600080fd5b9083019060e0828603121562002bb957600080fd5b62002bc362002a40565b62002bce8362002aaf565b815262002bde6020840162002aaf565b602082015260408301358281111562002bf657600080fd5b62002c048782860162002ae4565b60408301525062002c186060840162002ad7565b60608201526080830135608082015260a083013560a082015260c083013560c082015280935050505092915050565b60008083601f84011262002c5a57600080fd5b50813567ffffffffffffffff81111562002c7357600080fd5b60208301915083602082850101111562002c8c57600080fd5b9250929050565b803560ff8116811462002abc57600080fd5b6000806000806000806080878903121562002cbf57600080fd5b863567ffffffffffffffff8082111562002cd857600080fd5b62002ce68a838b0162002c47565b9098509650602089013591508082111562002d0057600080fd5b5062002d0f89828a0162002c47565b909550935062002d2490506040880162002c93565b9150606087013590509295509295509295565b60006020828403121562002d4a57600080fd5b62002a238262002c93565b6000806000806040858703121562002d6c57600080fd5b843567ffffffffffffffff8082111562002d8557600080fd5b62002d938883890162002c47565b9096509450602087013591508082111562002dad57600080fd5b5062002dbc8782880162002c47565b95989497509550505050565b81516001600160a01b031681526101c08101602083015162002df560208401826001600160a01b03169052565b50604083015162002e1160408401826001600160a01b03169052565b50606083015162002e3b606084018280516001600160a01b03908116835260209182015116910152565b5060808301516001600160a01b03811660a08401525060a083015180516001600160a01b0390811660c085015260208201511660e08401525060c083015161010062002e91818501836001600160a01b03169052565b60e0850151915061012062002eb0818601846001600160a01b03169052565b9085015191506101409062002ecf858301846001600160a01b03169052565b850151915061016062002eec858201846001600160a01b03169052565b908501516001600160a01b039081166101808601529401519093166101a090920191909152919050565b60006020828403121562002f2957600080fd5b813562002a238162002ac1565b60008060008060006060868803121562002f4f57600080fd5b853567ffffffffffffffff8082111562002f6857600080fd5b62002f7689838a0162002c47565b9097509550602088013591508082111562002f9057600080fd5b5062002f9f8882890162002c47565b96999598509660400135949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60808152600062002ff060808301888a62002fb1565b82810360208401526200300581878962002fb1565b60ff959095166040840152505060600152949350505050565b6000602082840312156200303157600080fd5b815162002a238162002ac1565b81838237600f60fb1b9101908152600101919050565b65029bab832b9160d51b81528183600683013760009101600601908152919050565b6001600160a01b0385168152600060038510620030a357634e487b7160e01b600052602160045260246000fd5b84602083015260806040830152620030bf6080830185620029e0565b828103606084015262002b6d8185620029e0565b600060208284031215620030e657600080fd5b815167ffffffffffffffff80821115620030ff57600080fd5b818401915084601f8301126200311457600080fd5b81518181111562003129576200312962002a2a565b6200313e601f8201601f191660200162002a6c565b91508082528560208285010111156200315657600080fd5b62003169816020840160208601620029ba565b50949350505050565b6000835162003186818460208801620029ba565b8351908301906200319c818360208801620029ba565b01949350505050565b6001600160a01b038716815260ff86166020820152608060408201819052600090620031d5908301868862002fb1565b8281036060840152620031ea81858762002fb1565b9998505050505050505050565b600084516200320b818460208901620029ba565b8201838582376000930192835250909392505050565b6060815260006200323760608301878962002fb1565b82810360208401526200324c81868862002fb1565b9150508260408301529695505050505050565b6000602082840312156200327257600080fd5b815162002a238162002aa0565b604081526000620032946040830185620029e0565b905060018060a01b03831660208301529392505050565b600060ff821660ff8103620032d057634e487b7160e01b600052601160045260246000fd5b60010192915050565b600081518084526020808501945080840160005b83811015620033145781516001600160a01b031687529582019590820190600101620032ed565b509495945050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009062002b6d90830184620032d9565b6000602082840312156200336e57600080fd5b5051919050565b600060018060a01b038087168352808616602084015260806040840152620033a16080840186620032d9565b91508084166060840152509594505050505056fe60c060405234801561001057600080fd5b50604051610a2a380380610a2a83398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a0516109486100e26000396000818160560152818161013a015281816103d701526103f801526000818160d00152818161010e0152818161037e01526103a801526109486000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631054df8c146100515780638dc7d29c146100955780638f95895f146100aa578063f437bc59146100cb575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a3366004610688565b6100f2565b005b6100bd6100b8366004610717565b61034c565b60405190815260200161008c565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040805160008082526020820190925281906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169182916339255d5b917f00000000000000000000000000000000000000000000000000000000000000009182169063b4b333c690610176908c908c908c90604481016107e8565b60408051601f19818403018152918152602080830180516001600160e01b031660e09590951b9490941790935280516000815292830190526101be9392509060448101610826565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b9390931790925290516101f6925061085c565b6000604051808303816000865af19150503d8060008114610233576040519150601f19603f3d011682016040523d82523d6000602084013e610238565b606091505b50915091508161025857805160000361025057600080fd5b805181602001fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa15801561029f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c39190610878565b90508015610344576040516323b872dd60e01b8152306004820152336024820152604481018290526001600160a01b038716906323b872dd906064016020604051808303816000875af115801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103429190610891565b505b505050505050565b60008382811461036f5760405163277c943f60e21b815260040160405180910390fd5b60005b818110156105745760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166339255d5b7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b4b333c68e8e8e8a818110610438576104386108ba565b905060200201602081019061044d91906108d0565b8d8d8b81811061045f5761045f6108ba565b905060200201602081019061047491906108d0565b60408051600081526020810190915261049393929190604481016107e8565b60408051601f19818403018152918152602080830180516001600160e01b031660e09590951b9490941790935280516000815292830190526104db9392509060448101610826565b60408051601f198184030181529181526020820180516001600160e01b031660e09490941b939093179092529051610513925061085c565b6000604051808303816000865af19150503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b50509050801561056b57610568846108eb565b93505b50600101610372565b506040516370a0823160e01b81523060048201526000906001600160a01b038916906370a0823190602401602060405180830381865afa1580156105bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e09190610878565b90508015610661576040516323b872dd60e01b8152306004820152336024820152604481018290526001600160a01b038916906323b872dd906064016020604051808303816000875af115801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190610891565b505b505095945050505050565b80356001600160a01b038116811461068357600080fd5b919050565b60008060006060848603121561069d57600080fd5b6106a68461066c565b92506106b46020850161066c565b91506106c26040850161066c565b90509250925092565b60008083601f8401126106dd57600080fd5b50813567ffffffffffffffff8111156106f557600080fd5b6020830191508360208260051b850101111561071057600080fd5b9250929050565b60008060008060006060868803121561072f57600080fd5b6107388661066c565b9450602086013567ffffffffffffffff8082111561075557600080fd5b61076189838a016106cb565b9096509450604088013591508082111561077a57600080fd5b50610787888289016106cb565b969995985093965092949392505050565b60005b838110156107b357818101518382015260200161079b565b50506000910152565b600081518084526107d4816020860160208601610798565b601f01601f19169290920160200192915050565b6001600160a01b03858116825284811660208301528316604082015260806060820181905260009061081c908301846107bc565b9695505050505050565b6001600160a01b038416815260606020820181905260009061084a908301856107bc565b828103604084015261081c81856107bc565b6000825161086e818460208701610798565b9190910192915050565b60006020828403121561088a57600080fd5b5051919050565b6000602082840312156108a357600080fd5b815180151581146108b357600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156108e257600080fd5b6108b38261066c565b60006001820161090b57634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220615f91019342961138924d79a31177944d3b979afcca0b39dedc695acd83102a64736f6c6343000813003360e06040523480156200001157600080fd5b5060405162001833380380620018338339810160408190526200003491620002b5565b6001600160a01b038216608081905260c0829052604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3600482015263b6d200de90602401602060405180830381865afa158015620000a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c89190620002e6565b6001600160a01b031660a0526040516329965a1d60e01b815230600482018190527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248301819052604483019190915290731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200015457600080fd5b505af115801562000169573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527fece6fc2bcfc93e4c34c28aeaa114be1a6161decb8268f79cbe7c3c7f31b1e8c660248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001e757600080fd5b505af1158015620001fc573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527fca6323f8f0faf3d4f41f2397ee46c8d85bed576d54aadeb20b6cf7b45b3a696460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b1580156200027a57600080fd5b505af11580156200028f573d6000803e3d6000fd5b505050505050506200030d565b6001600160a01b0381168114620002b257600080fd5b50565b60008060408385031215620002c957600080fd5b8251620002d6816200029c565b6020939093015192949293505050565b600060208284031215620002f957600080fd5b815162000306816200029c565b9392505050565b60805160a05160c05161148d620003a66000396000818161011d015281816102dd0152818161074201528181610792015261093501526000818161037e0152818161043f0152818161058f0152818161061e015281816107fa01528181610a5601528181610b170152610ce701526000818161041501528181610565015281816105f401528181610aed0152610cbd015261148d6000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c8063362910631161005b57806336291063146100d457806360dfa69514610118578063b8a140331461014d578063bf8903dd1461016057600080fd5b806223de291461008157806302f3c6c51461009657806316e23b9f146100a9575b600080fd5b61009461008f366004610fc0565b61019b565b005b6100946100a4366004611080565b610243565b6100bc6100b73660046110b9565b610735565b604051600b9190910b81526020015b60405180910390f35b6101006100e23660046110e5565b6001600160a01b039081166000908152602081905260409020541690565b6040516001600160a01b0390911681526020016100cb565b61013f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100cb565b6100bc61015b3660046110b9565b610785565b61017361016e3660046110e5565b6107b7565b604080516001600160a01b0390941684526020840192909252600b0b908201526060016100cb565b336000818152602081905260409020546001600160a01b038981169116146101f457600084156101d6576101d185870187611109565b6101e0565b6101e08288610735565b90506101ee828a898461089b565b50610238565b806001600160a01b03167fb9c1b85a7ee70d95c61aca7cda03ef957abc5265a191ca74cc335faf594095668760405161022f91815260200190565b60405180910390a25b505050505050505050565b6001600160a01b03808316600090815260208190526040902054163381146102ab5760405162461bcd60e51b81526020600482015260166024820152751513d1d04e881bdb9b1e48141250c8185b1b1bddd95960521b60448201526064015b60405180910390fd5b600082600b0b12156102cf5760405162461bcd60e51b81526004016102a290611126565b6102d883610e28565b6103067f0000000000000000000000000000000000000000000000000000000000000000600b85900b61117f565b111561034e5760405162461bcd60e51b81526020600482015260176024820152760a89e8e827440caf0d2e8a4c2e8ca40e8dede40d0d2ced604b1b60448201526064016102a2565b604051631cd43d1160e31b81526001600160a01b03848116600483015230602483015282811660448301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a1e88890606401608060405180830381865afa1580156103c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103eb9190611196565b5050915050600081600b0b1380156104065750600083600b0b135b15610540576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906339255d5b907f00000000000000000000000000000000000000000000000000000000000000009081166350209a6288878960005b6040519080825280601f01601f191660200182016040528015610496576020820181803683370190505b506040516024016104aa949392919061123a565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526104f39392509060040161127a565b6000604051808303816000875af1158015610512573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261053a91908101906112c1565b506106ed565b80600b0b60001480156105565750600083600b0b135b156105c0576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116906339255d5b907f00000000000000000000000000000000000000000000000000000000000000009081166362fc305e888789600061046c565b600081600b0b1380156105d6575082600b0b6000145b156106ed576040805160008152602081019091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116916339255d5b917f0000000000000000000000000000000000000000000000000000000000000000919082169063b4b333c69061065b908a9030908a906044810161136e565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526106a49392509060040161127a565b6000604051808303816000875af11580156106c3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106eb91908101906112c1565b505b604051600b84900b81526001600160a01b038516907f0988aefa675e81e1db7fca08264db5dc2a1cc2a604f2a78d902a9747146a56719060200160405180910390a250505050565b600061077c6107776107687f0000000000000000000000000000000000000000000000000000000000000000600461117f565b61077290856113a2565b610ec9565b610f37565b90505b92915050565b600061077c6107776107727f0000000000000000000000000000000000000000000000000000000000000000856113a2565b6001600160a01b03818116600081815260208190526040808220549051631cd43d1160e31b815260048101939093523060248401528316604483015291829182917f0000000000000000000000000000000000000000000000000000000000000000169063e6a1e88890606401608060405180830381865afa158015610841573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108659190611196565b50506001600160a01b0380871660009081526020819052604090205491935016905061089085610e28565b925092509193909250565b6001600160a01b038416600090815260208190526040902054600160a01b900460ff161561090b5760405162461bcd60e51b815260206004820152601c60248201527f544f47413a207265656e7472616e6379206e6f7420616c6c6f7765640000000060448201526064016102a2565b600081600b0b121561092f5760405162461bcd60e51b81526004016102a290611126565b8161095e7f0000000000000000000000000000000000000000000000000000000000000000600b84900b61117f565b11156109a65760405162461bcd60e51b81526020600482015260176024820152760a89e8e827440caf0d2e8a4c2e8ca40e8dede40d0d2ced604b1b60448201526064016102a2565b6000826109b286610e28565b6109bc91906113c4565b9050808311610a015760405162461bcd60e51b8152602060048201526011602482015270544f47413a2062696420746f6f206c6f7760781b60448201526064016102a2565b6001600160a01b038581166000818152602081905260408082208054600160a01b60ff60a01b198216179091559051631cd43d1160e31b815260048101939093523060248401528316604483018190529290917f00000000000000000000000000000000000000000000000000000000000000009091169063e6a1e88890606401608060405180830381865afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac39190611196565b5050915050600081600b0b1315610be6576040805160008152602081019091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116916339255d5b917f0000000000000000000000000000000000000000000000000000000000000000919082169063b4b333c690610b54908d9030908a906044810161136e565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610b9d9392509060040161127a565b6000604051808303816000875af1158015610bbc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610be491908101906112c1565b505b6001600160a01b03821615610c6a5760405163a9059cbb60e01b81526001600160a01b0383811660048301526024820185905288169063a9059cbb906044016020604051808303816000875af1158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6891906113d7565b505b6001600160a01b03878116600090815260208190526040812080546001600160a01b03191692891692909217909155600b85900b1315610db6576040805160008152602081019091526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116916339255d5b917f000000000000000000000000000000000000000000000000000000000000000091908216906362fc305e90610d24908d908d908c906044810161123a565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610d6d9392509060040161127a565b6000604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610db491908101906112c1565b505b6001600160a01b0387811660008181526020818152604091829020805460ff60a01b191690558151938a1684528301889052600b87900b90830152907f836808e57755d5535898b7203c7d68b1bfb2701b1943ecb133c675e0d00780159060600160405180910390a250505050505050565b604051632ec8eec760e01b8152306004820152600090819081906001600160a01b03851690632ec8eec790602401608060405180830381865afa158015610e73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9791906113f9565b50509150915060008183610eab919061142f565b13610eb7576000610ec1565b610ec1818361142f565b949350505050565b60006001600160ff1b03821115610f335760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016102a2565b5090565b60006b7fffffffffffffffffffffff8212610f33576b7fffffffffffffffffffffff92915050565b6001600160a01b0381168114610f7457600080fd5b50565b60008083601f840112610f8957600080fd5b50813567ffffffffffffffff811115610fa157600080fd5b602083019150836020828501011115610fb957600080fd5b9250929050565b60008060008060008060008060c0898b031215610fdc57600080fd5b8835610fe781610f5f565b97506020890135610ff781610f5f565b9650604089013561100781610f5f565b955060608901359450608089013567ffffffffffffffff8082111561102b57600080fd5b6110378c838d01610f77565b909650945060a08b013591508082111561105057600080fd5b5061105d8b828c01610f77565b999c989b5096995094979396929594505050565b80600b0b8114610f7457600080fd5b6000806040838503121561109357600080fd5b823561109e81610f5f565b915060208301356110ae81611071565b809150509250929050565b600080604083850312156110cc57600080fd5b82356110d781610f5f565b946020939093013593505050565b6000602082840312156110f757600080fd5b813561110281610f5f565b9392505050565b60006020828403121561111b57600080fd5b813561110281611071565b60208082526023908201527f544f47413a206e65676174697665206578697452617465206e6f7420616c6c6f6040820152621dd95960ea1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761077f5761077f611169565b600080600080608085870312156111ac57600080fd5b8451935060208501516111be81611071565b6040860151606090960151949790965092505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156112055781810151838201526020016111ed565b50506000910152565b600081518084526112268160208601602086016111ea565b601f01601f19169290920160200192915050565b6001600160a01b03858116825284166020820152600b83900b60408201526080606082018190526000906112709083018461120e565b9695505050505050565b6001600160a01b038316815260606020820181905260009061129e9083018461120e565b8281036040938401526002815261060f60f31b6020820152919091019392505050565b6000602082840312156112d357600080fd5b815167ffffffffffffffff808211156112eb57600080fd5b818401915084601f8301126112ff57600080fd5b815181811115611311576113116111d4565b604051601f8201601f19908116603f01168101908382118183101715611339576113396111d4565b8160405282815287602084870101111561135257600080fd5b6113638360208301602088016111ea565b979650505050505050565b6001600160a01b0385811682528481166020830152831660408201526080606082018190526000906112709083018461120e565b6000826113bf57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561077f5761077f611169565b6000602082840312156113e957600080fd5b8151801515811461110257600080fd5b6000806000806080858703121561140f57600080fd5b505082516020840151604085015160609095015191969095509092509050565b808201828112600083128015821682158216171561144f5761144f611169565b50509291505056fea2646970667358221220cd826090b374fb124decb0aca08a0637f2a0f990ce0e96e15355db8b0be577e864736f6c63430008130033a264697066735822122092fc2215ed752519bde24a238741767dbfc5983bc02f23e0784eb0635d30a73564736f6c63430008130033608060405234801561001057600080fd5b50600436106100a5576000357c010000000000000000000000000000000000000000000000000000000090048063a41e7d5111610078578063a41e7d51146101d4578063aabbb8ca1461020a578063b705676514610236578063f712f3e814610280576100a5565b806329965a1d146100aa5780633d584063146100e25780635df8122f1461012457806365ba36c114610152575b600080fd5b6100e0600480360360608110156100c057600080fd5b50600160a060020a038135811691602081013591604090910135166102b6565b005b610108600480360360208110156100f857600080fd5b5035600160a060020a0316610570565b60408051600160a060020a039092168252519081900360200190f35b6100e06004803603604081101561013a57600080fd5b50600160a060020a03813581169160200135166105bc565b6101c26004803603602081101561016857600080fd5b81019060208101813564010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b5090925090506106b3565b60408051918252519081900360200190f35b6100e0600480360360408110156101ea57600080fd5b508035600160a060020a03169060200135600160e060020a0319166106ee565b6101086004803603604081101561022057600080fd5b50600160a060020a038135169060200135610778565b61026c6004803603604081101561024c57600080fd5b508035600160a060020a03169060200135600160e060020a0319166107ef565b604080519115158252519081900360200190f35b61026c6004803603604081101561029657600080fd5b508035600160a060020a03169060200135600160e060020a0319166108aa565b6000600160a060020a038416156102cd57836102cf565b335b9050336102db82610570565b600160a060020a031614610339576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b6103428361092a565b15610397576040805160e560020a62461bcd02815260206004820152601a60248201527f4d757374206e6f7420626520616e204552433136352068617368000000000000604482015290519081900360640190fd5b600160a060020a038216158015906103b85750600160a060020a0382163314155b156104ff5760405160200180807f455243313832305f4143434550545f4d4147494300000000000000000000000081525060140190506040516020818303038152906040528051906020012082600160a060020a031663249cb3fa85846040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200182600160a060020a0316600160a060020a031681526020019250505060206040518083038186803b15801561047e57600080fd5b505afa158015610492573d6000803e3d6000fd5b505050506040513d60208110156104a857600080fd5b5051146104ff576040805160e560020a62461bcd02815260206004820181905260248201527f446f6573206e6f7420696d706c656d656e742074686520696e74657266616365604482015290519081900360640190fd5b600160a060020a03818116600081815260208181526040808320888452909152808220805473ffffffffffffffffffffffffffffffffffffffff19169487169485179055518692917f93baa6efbd2244243bfee6ce4cfdd1d04fc4c0e9a786abd3a41313bd352db15391a450505050565b600160a060020a03818116600090815260016020526040812054909116151561059a5750806105b7565b50600160a060020a03808216600090815260016020526040902054165b919050565b336105c683610570565b600160a060020a031614610624576040805160e560020a62461bcd02815260206004820152600f60248201527f4e6f7420746865206d616e616765720000000000000000000000000000000000604482015290519081900360640190fd5b81600160a060020a031681600160a060020a0316146106435780610646565b60005b600160a060020a03838116600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff19169585169590951790945592519184169290917f605c2dbf762e5f7d60a546d42e7205dcb1b011ebc62a61736a57c9089d3a43509190a35050565b600082826040516020018083838082843780830192505050925050506040516020818303038152906040528051906020012090505b92915050565b6106f882826107ef565b610703576000610705565b815b600160a060020a03928316600081815260208181526040808320600160e060020a031996909616808452958252808320805473ffffffffffffffffffffffffffffffffffffffff19169590971694909417909555908152600284528181209281529190925220805460ff19166001179055565b600080600160a060020a038416156107905783610792565b335b905061079d8361092a565b156107c357826107ad82826108aa565b6107b85760006107ba565b815b925050506106e8565b600160a060020a0390811660009081526020818152604080832086845290915290205416905092915050565b6000808061081d857f01ffc9a70000000000000000000000000000000000000000000000000000000061094c565b909250905081158061082d575080155b1561083d576000925050506106e8565b61084f85600160e060020a031961094c565b909250905081158061086057508015155b15610870576000925050506106e8565b61087a858561094c565b909250905060018214801561088f5750806001145b1561089f576001925050506106e8565b506000949350505050565b600160a060020a0382166000908152600260209081526040808320600160e060020a03198516845290915281205460ff1615156108f2576108eb83836107ef565b90506106e8565b50600160a060020a03808316600081815260208181526040808320600160e060020a0319871684529091529020549091161492915050565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff161590565b6040517f01ffc9a7000000000000000000000000000000000000000000000000000000008082526004820183905260009182919060208160248189617530fa90519096909550935050505056fea165627a7a72305820377f4a2d4301ede9949f163f319021a6e9c687c292a5e2b2c4734c126b524e6c0029",
    "sourceMap": "1572:26:3:-:0;;;1594:4;-1:-1:-1;;1572:26:3;;;;;;;;3126:44:6;;;;;;;;;;;3682:98:112;496:4676:114;3682:98:112;3191:5;496:4676:114;3682:98:112;;;3245:5;1572:26:3;3682:98:112;3297:5;3682:98;;3351:5;3682:98;;3403:5;3682:98;;3455:5;3682:98;;3509:5;3682:98;;3563:5;3682:98;;3617:5;3682:98;;3670:5;3682:98;;;;;;;;:::i;:::-;;496:4676:114;;;;;;;;;;551:2;317:28:4;309:37;;-1:-1:-1;;;;;5534:7:112;;326:42:81;405:5014;;;;;;;;;;;;;;;;;5534:64:112;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6009:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5996:46:112;;;;;6052:32;;;-1:-1:-1;;;6052:32:112;;;;:30;;:32;;;;;;;;;;;;;;;;5996:46;6052:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6099:10;;-1:-1:-1;;;;;6099:23:112;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6094:30;;:2;:30;;-1:-1:-1;;;;;;6094:30:112;;;-1:-1:-1;;;;;6094:30:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6155:13;:20;6143:32;;;;;6135:61;;;;-1:-1:-1;;;6135:61:112;;3943:2:115;6135:61:112;;;3925:21:115;3982:2;3962:18;;;3955:30;-1:-1:-1;;;4001:18:115;;;3994:46;4057:18;;6135:61:112;;;;;;;;6206:20;;;;;6315:18;;;;;;;;;;;-1:-1:-1;;;6315:18:112;;;;;;;;6335:23;;;;;;;;;;-1:-1:-1;;;6335:23:112;;;;;;;6306:53;;-1:-1:-1;;;6306:53:112;;6280:23;;6306:8;;;;:53;;6335:23;6306:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6306:53:112;;;;;;;;;;;;:::i;:::-;6280:79;;6369:23;6416:9;6405:21;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6405:21:112;;;;;;6395:32;;6405:21;6395:32;;;;6458:7;;11198:14;:28;;;;;;;-1:-1:-1;11198:28:112;;;;;;;;-1:-1:-1;;;;;;11198:28:112;-1:-1:-1;;;;;6458:7:112;;;11198:28;;;;;;6395:32;-1:-1:-1;6658:33:112;;;;;;5800:2:115;5782:21;;;5839:2;5819:18;;;5812:30;-1:-1:-1;;;5873:2:115;5858:18;;5851:49;5932:2;5917:18;;5598:343;6658:33:112;;;;;;;;;;;;;6648:44;;;;;;6629:15;:63;:802;;6789:38;;;;;;6148:2:115;6130:21;;;6187:2;6167:18;;;6160:30;6226:26;6221:2;6206:18;;6199:54;6285:2;6270:18;;5946:348;6789:38:112;;;;;;;;;;;;;6779:49;;;;;;6760:15;:68;:671;;6938:30;;;;;;6501:2:115;6483:21;;;6540:2;6520:18;;;6513:30;-1:-1:-1;;;6574:2:115;6559:18;;6552:46;6630:2;6615:18;;6299:340;6938:30:112;;;;;;;;;;;;;6928:41;;;;;;6909:15;:60;:522;;7079:40;;;;;;6846:2:115;6828:21;;;6885:2;6865:18;;;6858:30;6924:28;6919:2;6904:18;;6897:56;6985:2;6970:18;;6644:350;7079:40:112;;;;;;;;;;;;;7069:51;;;;;;7050:15;:70;:381;;7248:37;;;;;;7201:2:115;7183:21;;;7240:2;7220:18;;;7213:30;7279:25;7274:2;7259:18;;7252:53;7337:2;7322:18;;6999:347;7248:37:112;;;;;;;;;;;;;7238:48;;;;;;7219:15;:67;:212;;7390:41;6629:802;;7219:212;7317:42;6629:802;;7050:381;7147:45;6629:802;;6909:522;6992:35;6629:802;;6760:671;6847:43;6629:802;;;6707:38;6629:802;6608:823;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;7468:41:112;7446:18;;:63;;;;;;;;:::i;:::-;;7442:107;;7518:31;;-1:-1:-1;;;7518:31:112;;;;;;;;;;;7442:107;5489:2067;;5461:2095;496:4676:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;496:4676:114;-1:-1:-1;;;;;496:4676:114;;;;;;;;;;;-1:-1:-1;496:4676:114;;;;;;;-1:-1:-1;496:4676:114;;;-1:-1:-1;496:4676:114;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:250:115;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:115;238:16;;231:27;14:250::o;269:270::-;310:3;348:5;342:12;375:6;370:3;363:19;391:76;460:6;453:4;448:3;444:14;437:4;430:5;426:16;391:76;:::i;:::-;521:2;500:15;-1:-1:-1;;496:29:115;487:39;;;;528:4;483:50;;269:270;-1:-1:-1;;269:270:115:o;544:314::-;-1:-1:-1;;;;;719:32:115;;701:51;;788:2;783;768:18;;761:30;;;-1:-1:-1;;808:44:115;;833:18;;825:6;808:44;:::i;:::-;800:52;544:314;-1:-1:-1;;;;544:314:115:o;863:127::-;924:10;919:3;915:20;912:1;905:31;955:4;952:1;945:15;979:4;976:1;969:15;995:250;1062:2;1056:9;1104:6;1092:19;;-1:-1:-1;;;;;1126:34:115;;1162:22;;;1123:62;1120:88;;;1188:18;;:::i;:::-;1224:2;1217:22;995:250;:::o;1250:147::-;-1:-1:-1;;;;;1341:31:115;;1331:42;;1321:70;;1387:1;1384;1377:12;1321:70;1250:147;:::o;1402:170::-;1497:13;;1519:47;1497:13;1519:47;:::i;:::-;1402:170;;;:::o;1577:652::-;1643:5;1691:4;1679:9;1674:3;1670:19;1666:30;1663:50;;;1709:1;1706;1699:12;1663:50;1742:4;1736:11;;;1774:17;;-1:-1:-1;;;;;1806:34:115;;1842:22;;;1803:62;1800:88;;;1868:18;;:::i;:::-;1910:10;1904:4;1897:24;;1939:6;1930:15;;1975:9;1969:16;1994:49;2035:7;1994:49;:::i;:::-;2052:23;;2120:2;2105:18;;2099:25;2133:49;2099:25;2133:49;:::i;:::-;2210:2;2198:15;;;;2191:32;1577:652;;-1:-1:-1;;1577:652:115:o;2234:1502::-;2332:6;2385:3;2373:9;2364:7;2360:23;2356:33;2353:53;;;2402:1;2399;2392:12;2353:53;2428:17;;:::i;:::-;2468:56;2514:9;2468:56;:::i;:::-;2461:5;2454:71;2557:65;2618:2;2607:9;2603:18;2557:65;:::i;:::-;2552:2;2545:5;2541:14;2534:89;2655:65;2716:2;2705:9;2701:18;2655:65;:::i;:::-;2650:2;2643:5;2639:14;2632:89;2753:66;2811:7;2806:2;2795:9;2791:18;2753:66;:::i;:::-;2748:2;2741:5;2737:14;2730:90;2854:66;2915:3;2904:9;2900:19;2854:66;:::i;:::-;2847:4;2840:5;2836:16;2829:92;2954:67;3013:7;3007:3;2996:9;2992:19;2954:67;:::i;:::-;2948:3;2941:5;2937:15;2930:92;3041:3;3077:65;3138:2;3127:9;3123:18;3077:65;:::i;:::-;3071:3;3064:5;3060:15;3053:90;3162:3;3199:65;3260:2;3249:9;3245:18;3199:65;:::i;:::-;3192:4;3185:5;3181:16;3174:91;3284:3;3319:65;3380:2;3369:9;3365:18;3319:65;:::i;:::-;3314:2;3307:5;3303:14;3296:89;3404:3;3394:13;;3439:65;3500:2;3489:9;3485:18;3439:65;:::i;:::-;3434:2;3427:5;3423:14;3416:89;3537:69;3598:6;3587:9;3583:22;3537:69;:::i;:::-;3521:14;;;3514:93;-1:-1:-1;3639:66:115;3700:3;3685:19;;3639:66;:::i;:::-;3623:14;;;3616:90;3627:5;2234:1502;-1:-1:-1;;;2234:1502:115:o;4086:381::-;4283:2;4272:9;4265:21;4246:4;4309:44;4349:2;4338:9;4334:18;4326:6;4309:44;:::i;:::-;4401:9;4393:6;4389:22;4384:2;4373:9;4369:18;4362:50;4429:32;4454:6;4446;4429:32;:::i;:::-;4421:40;4086:381;-1:-1:-1;;;;;4086:381:115:o;4472:897::-;4552:6;4605:2;4593:9;4584:7;4580:23;4576:32;4573:52;;;4621:1;4618;4611:12;4573:52;4648:16;;-1:-1:-1;;;;;4713:14:115;;;4710:34;;;4740:1;4737;4730:12;4710:34;4778:6;4767:9;4763:22;4753:32;;4823:7;4816:4;4812:2;4808:13;4804:27;4794:55;;4845:1;4842;4835:12;4794:55;4874:2;4868:9;4896:2;4892;4889:10;4886:36;;;4902:18;;:::i;:::-;4977:2;4971:9;4945:2;5031:13;;-1:-1:-1;;5027:22:115;;;5051:2;5023:31;5019:40;5007:53;;;5075:18;;;5095:22;;;5072:46;5069:72;;;5121:18;;:::i;:::-;5161:10;5157:2;5150:22;5196:2;5188:6;5181:18;5236:7;5231:2;5226;5222;5218:11;5214:20;5211:33;5208:53;;;5257:1;5254;5247:12;5208:53;5270:68;5335:2;5330;5322:6;5318:15;5313:2;5309;5305:11;5270:68;:::i;:::-;5357:6;4472:897;-1:-1:-1;;;;;;;4472:897:115:o;5374:219::-;5523:2;5512:9;5505:21;5486:4;5543:44;5583:2;5572:9;5568:18;5560:6;5543:44;:::i;:::-;5535:52;5374:219;-1:-1:-1;;;5374:219:115:o;7351:127::-;7412:10;7407:3;7403:20;7400:1;7393:31;7443:4;7440:1;7433:15;7467:4;7464:1;7457:15;7351:127;496:4676:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeploymentSteps.sol": {
        "CFAv1ForwarderDeployerLibrary": [
          {
            "start": 33261,
            "length": 20
          }
        ],
        "IDAv1ForwarderDeployerLibrary": [
          {
            "start": 33425,
            "length": 20
          }
        ],
        "ProxyDeployerLibrary": [
          {
            "start": 30805,
            "length": 20
          },
          {
            "start": 30921,
            "length": 20
          }
        ],
        "SuperTokenDeployerLibrary": [
          {
            "start": 32148,
            "length": 20
          }
        ],
        "SuperfluidCFAv1DeployerLibrary": [
          {
            "start": 30505,
            "length": 20
          }
        ],
        "SuperfluidGovDeployerLibrary": [
          {
            "start": 32480,
            "length": 20
          },
          {
            "start": 32661,
            "length": 20
          }
        ],
        "SuperfluidHostDeployerLibrary": [
          {
            "start": 32767,
            "length": 20
          }
        ],
        "SuperfluidIDAv1DeployerLibrary": [
          {
            "start": 30670,
            "length": 20
          }
        ],
        "SuperfluidLoaderDeployerLibrary": [
          {
            "start": 33096,
            "length": 20
          }
        ],
        "SuperfluidNFTLogicDeployerLibrary": [
          {
            "start": 31076,
            "length": 20
          },
          {
            "start": 31325,
            "length": 20
          }
        ],
        "SuperfluidPeripheryDeployerLibrary": [
          {
            "start": 32347,
            "length": 20
          },
          {
            "start": 32930,
            "length": 20
          }
        ],
        "TokenDeployerLibrary": [
          {
            "start": 27270,
            "length": 20
          },
          {
            "start": 28127,
            "length": 20
          },
          {
            "start": 28761,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "496:4676:114:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;733:206;;;:::i;:::-;;664:26;;;;;-1:-1:-1;;;;;664:26:114;;;;;;-1:-1:-1;;;;;210:32:115;;;192:51;;180:2;165:18;664:26:114;;;;;;;;4534:636;;;:::i;2170:134:9:-;;;:::i;:::-;;;;;;;:::i;1943:160:114:-;;;:::i;945:379::-;;;:::i;2939:133:9:-;;;:::i;2640:141::-;;;:::i;1330:146:114:-;;;:::i;3959:569::-;;;:::i;2533:202::-;;;:::i;2456:178:9:-;;;:::i;:::-;;;;;;;:::i;2109:418:114:-;;;:::i;2310:140:9:-;;;:::i;:::-;;;;;;;:::i;1482:187:114:-;;;:::i;2787:146:9:-;;;:::i;3512:441:114:-;;;:::i;696:30::-;;;;;-1:-1:-1;;;;;696:30:114;;;1875:141:9;;;:::i;1819:584:3:-;;;:::i;:::-;;;4222:14:115;;4215:22;4197:41;;4185:2;4170:18;1819:584:3;4057:187:115;1675:262:114;;;:::i;2741:765::-;;;:::i;2022:142:9:-;;;:::i;609:48:114:-;;652:5;609:48;;;;;4395:25:115;;;4383:2;4368:18;609:48:114;4249:177:115;1572:26:3;;;;;;;;;733:206:114;776:13;:11;:13::i;:::-;806:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;799:4:114;:27;;-1:-1:-1;;;;;;799:27:114;-1:-1:-1;;;;;799:27:114;;;;;;;;;860:20;;836:46;;-1:-1:-1;;;836:46:114;;860:20;;836:46;;;192:51:115;799:27:114;836:15;;165:18:115;;836:46:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;926:4:114;;892:11;:40;;-1:-1:-1;;;;;;892:40:114;-1:-1:-1;;;;;926:4:114;;;892:40;;;;;;-1:-1:-1;;733:206:114:o;4534:636::-;4761:4;;:46;;-1:-1:-1;;;4761:46:114;;3245:5:112;4761:46:114;;;192:51:115;;;3297:5:112;4603:20:114;;;3245:5:112;;3297;;-1:-1:-1;;;;;4761:4:114;;:12;;4781:9;;165:18:115;;4761:46:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4817:20:114;;-1:-1:-1;;;4817:20:114;;3245:5:112;4817:20:114;;;192:51:115;-1:-1:-1;;;;;;;;;;;4817:13:114;-1:-1:-1;4817:13:114;;-1:-1:-1;165:18:115;;;-1:-1:-1;4817:20:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4847:4:114;;:45;;-1:-1:-1;;;4847:45:114;;-1:-1:-1;;;;;210:32:115;;;4847:45:114;;;192:51:115;4847:4:114;;;;-1:-1:-1;4847:12:114;;-1:-1:-1;4867:10:114;;165:18:115;;4847:45:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4977:4:114;;4945:11;;4903:24;;-1:-1:-1;4945:43:114;;-1:-1:-1;;;;;;4945:11:114;;;;-1:-1:-1;4977:4:114;3297:5:112;4945:23:114;:43::i;:::-;4930:60;;;-1:-1:-1;5000:23:114;5026:29;652:5;5026:10;:29;:::i;:::-;5000:55;;5065:43;5074:16;5092:15;5065:8;:43::i;:::-;5118:45;3297:5:112;5127:20:114;5149:13;5118:8;:45::i;:::-;4569:601;;;;;4534:636::o;2170:134:9:-;2217:33;2281:16;2262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2262:35:9;;;;;;;;;;;;;;;;;;;;;;;2170:134;:::o;1943:160:114:-;1991:7;1986:111;2008:1;2004;:5;;;1986:111;;;2039:4;;:21;;-1:-1:-1;;;2039:21:114;;5389:4:115;5377:17;;2039:21:114;;;5359:36:115;2030:56:114;;-1:-1:-1;;;;;2039:4:114;;:18;;5332::115;;2039:21:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2078:6;2083:1;2078;:6;:::i;:::-;2062:23;;:12;:23;:::i;:::-;2030:8;:56::i;:::-;2011:3;;;;:::i;:::-;;;;1986:111;;;;1943:160::o;945:379::-;997:11;;:18;;;-1:-1:-1;;;997:18:114;;;;988:37;;-1:-1:-1;;;;;997:11:114;;:16;;:18;;;;;:11;;:18;;;;;;;:11;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;997:18:114;;;;;;;;;;;;:::i;:::-;988:37;;;;;;;;;;;;;-1:-1:-1;;;988:37:114;;;:8;:37::i;:::-;1044:11;;:20;;;-1:-1:-1;;;1044:20:114;;;;1035:39;;-1:-1:-1;;;;;1044:11:114;;:18;;:20;;;;;:11;;:20;;;;;;;:11;:20;;;;;;;;;;;;;;1035:39;1093:11;;:25;;;-1:-1:-1;;;1093:25:114;;;;1084:67;;-1:-1:-1;;;;;1093:11:114;;:23;;:25;;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1120:30;1084:8;:67::i;:::-;1170:11;;1200:4;;1170:36;;-1:-1:-1;;;1170:36:114;;-1:-1:-1;;;;;1200:4:114;;;1170:36;;;192:51:115;1161:78:114;;1170:11;;;;;:21;;165:18:115;;1170:36:114;;;;;;;;;;;;;;;;;;;;;;1161:78;1289:4;;:12;;;-1:-1:-1;;;1289:12:114;;;;1280:37;;-1:-1:-1;;;;;1289:4:114;;:10;;:12;;;;;;;;;;;;;;:4;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1311:4;1280:8;:37::i;:::-;945:379::o;2939:133:9:-;2985:33;3049:16;3030:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3030:35:9;;;;;;;;;;;;;;;;;;;;;;2939:133;:::o;2640:141::-;2688:35;2756:18;2735:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2735:39:9;;;;;;;;;;;;;;;;;;;;;;2640:141;:::o;1330:146:114:-;1375:38;;-1:-1:-1;;;1375:38:114;;8785:2:115;1375:38:114;;;8767:21:115;8824:2;8804:18;;;8797:30;-1:-1:-1;;;8843:18:115;;;8836:49;-1:-1:-1;;;;;;;;;;;1375:15:114;;;8902:18:115;;1375:38:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1423:4:114;;1447:20;;1423:46;;-1:-1:-1;;;1423:46:114;;-1:-1:-1;;;;;1447:20:114;;;1423:46;;;192:51:115;1423:4:114;;;-1:-1:-1;1423:15:114;;-1:-1:-1;165:18:115;;1423:46:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1330:146::o;3959:569::-;4126:4;;:46;;-1:-1:-1;;;4126:46:114;;3245:5:112;4126:46:114;;;192:51:115;;;4028:22:114;;;3245:5:112;;-1:-1:-1;;;;;4126:4:114;;;;:12;;4146:9;;165:18:115;;4126:46:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4259:4:114;;4227:11;;4183:26;;-1:-1:-1;4227:45:114;;-1:-1:-1;;;;;;4227:11:114;;;;-1:-1:-1;4259:4:114;3245:5:112;4227:23:114;:45::i;:::-;4212:62;;;-1:-1:-1;4284:25:114;4312:28;652:5;4312:9;:28;:::i;:::-;4284:56;;4350:47;4359:18;4379:17;4350:8;:47::i;:::-;4407:61;3245:5:112;4416:22:114;4440:27;:13;4457:10;4440:27;:::i;4407:61::-;4495:4;;4478:43;;-1:-1:-1;;;;;4495:4:114;4487:21;4510:10;4478:8;:43::i;2533:202::-;2588:7;2583:146;2605:1;2601;:5;;;2583:146;;;2632:8;2627:92;2650:1;2646;:5;;;2627:92;;;2676:4;;:28;;-1:-1:-1;;;2676:28:114;;9259:4:115;9247:17;;2676:28:114;;;9229:36:115;9313:10;9301:23;;9281:18;;;9274:51;-1:-1:-1;;;;;2676:4:114;;;;:22;;9202:18:115;;2676:28:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2653:3:114;;;;:::i;:::-;;;;2627:92;;;-1:-1:-1;2608:3:114;;;;:::i;:::-;;;;2583:146;;2456:178:9;2512:48;2601:26;2572:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2572:55:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2456:178;:::o;2109:418:114:-;2172:4;;:29;;-1:-1:-1;;;2172:29:114;;:4;:29;;;5359:36:115;2163:50:114;;-1:-1:-1;;;;;2172:4:114;;:26;;5332:18:115;;2172:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2163:50;;2203:9;2163:8;:50::i;:::-;2232:4;;:29;;-1:-1:-1;;;2232:29:114;;2259:1;2232:29;;;5359:36:115;2223:51:114;;-1:-1:-1;;;;;2232:4:114;;:26;;5332:18:115;;2232:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2223:51;;2263:10;2223:8;:51::i;:::-;2293:4;;:29;;-1:-1:-1;;;2293:29:114;;2320:1;2293:29;;;5359:36:115;2284:51:114;;-1:-1:-1;;;;;2293:4:114;;:26;;5332:18:115;;2293:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2284:51;;2324:10;2284:8;:51::i;:::-;2354:4;;:29;;-1:-1:-1;;;2354:29:114;;2381:1;2354:29;;;5359:36:115;2345:51:114;;-1:-1:-1;;;;;2354:4:114;;:26;;5332:18:115;;2354:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:51;;2385:10;2345:8;:51::i;:::-;2415:4;;:29;;-1:-1:-1;;;2415:29:114;;2442:1;2415:29;;;5359:36:115;2406:52:114;;-1:-1:-1;;;;;2415:4:114;;:26;;5332:18:115;;2415:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2406:52;;2446:11;2406:8;:52::i;:::-;2477:4;;:29;;-1:-1:-1;;;2477:29:114;;2504:1;2477:29;;;5359:36:115;2468:52:114;;-1:-1:-1;;;;;2477:4:114;;:26;;5332:18:115;;2477:29:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2468:52;;2508:11;2468:8;:52::i;2310:140:9:-;2358:34;2425:18;2404:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:187:114;1544:20;;-1:-1:-1;;;1544:20:114;;3245:5:112;1544:20:114;;;192:51:115;-1:-1:-1;;;;;;;;;;;1544:13:114;;;165:18:115;;1544:20:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:51:114;;-1:-1:-1;;;1574:51:114;;-1:-1:-1;;;;;;;;;;;1574:15:114;-1:-1:-1;1574:15:114;;-1:-1:-1;1574:51:114;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1635:4:114;;:27;;-1:-1:-1;;;1635:27:114;;3297:5:112;1635:27:114;;;192:51:115;-1:-1:-1;;;;;1635:4:114;;;;-1:-1:-1;1635:22:114;;-1:-1:-1;165:18:115;;1635:27:114;14:235:115;2787:146:9;2835:40;2908:18;2887:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2887:39:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3512:441:114;3549:20;;-1:-1:-1;;;3549:20:114;;3245:5:112;3549:20:114;;;192:51:115;-1:-1:-1;;;;;;;;;;;3549:13:114;;;165:18:115;;3549:20:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3579:51:114;;-1:-1:-1;;;3579:51:114;;-1:-1:-1;;;;;;;;;;;3579:15:114;-1:-1:-1;3579:15:114;;-1:-1:-1;3579:51:114;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3640:4:114;;:15;;-1:-1:-1;;;3640:15:114;;3650:4;3640:15;;;4395:25:115;-1:-1:-1;;;;;3640:4:114;;;;-1:-1:-1;3640:9:114;;-1:-1:-1;4368:18:115;;3640:15:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:4;;-1:-1:-1;;;;;3665:12:114;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3734:4:114;;:21;;-1:-1:-1;;;3734:21:114;;3744:10;3734:21;;;4395:25:115;-1:-1:-1;;;;;3734:4:114;;;;-1:-1:-1;3734:9:114;;-1:-1:-1;4368:18:115;;3734:21:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3765:80;3774:11;;;;;;;;;-1:-1:-1;;;;;3774:11:114;-1:-1:-1;;;;;3774:23:114;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3801:43;3765:8;:80::i;:::-;3864:11;;3894:4;;3864:36;;-1:-1:-1;;;3864:36:114;;-1:-1:-1;;;;;3894:4:114;;;3864:36;;;192:51:115;3855:91:114;;3864:11;;;;;:21;;165:18:115;;3864:36:114;;;;;;;;;;;;;;;;;;;;;;1875:141:9;1924:34;1991:18;1970:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:3;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:3;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:3;3066:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:3;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:3;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:3;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:3;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:3:o;1675:262:114:-;1752:4;;1839:28;;-1:-1:-1;;;;;1752:4:114;;;1744:21;;;1752:4;;1720:21;;1862:4;;1720:21;1839:28;1720:21;1839:28;1862:4;1752;1720:21;1839:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;1894:4:114;;1877:53;;-1:-1:-1;;;;;1894:4:114;1886:21;1909:20;:13;1925:4;1909:20;:::i;1877:53::-;1710:227;;1675:262::o;2741:765::-;2782:20;;-1:-1:-1;;;2782:20:114;;3245:5:112;2782:20:114;;;192:51:115;-1:-1:-1;;;;;;;;;;;2782:13:114;;;165:18:115;;2782:20:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2812:51:114;;-1:-1:-1;;;2812:51:114;;-1:-1:-1;;;;;;;;;;;2812:15:114;-1:-1:-1;2812:15:114;;-1:-1:-1;2812:51:114;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2873:4:114;;:26;;-1:-1:-1;;;2873:26:114;;-1:-1:-1;;;;;2873:4:114;;;;-1:-1:-1;2873:13:114;;-1:-1:-1;2873:26:114;;3245:5:112;;2894:4:114;;2873:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:4;;-1:-1:-1;;;;;2909:12:114;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2934:35:114;;-1:-1:-1;;;2934:35:114;;13997:2:115;2934:35:114;;;13979:21:115;14036:2;14016:18;;;14009:30;-1:-1:-1;;;14055:18:115;;;14048:46;-1:-1:-1;;;;;;;;;;;2934:15:114;-1:-1:-1;2934:15:114;;-1:-1:-1;14111:18:115;;2934:35:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2979:4:114;;:31;;-1:-1:-1;;;2979:31:114;;-1:-1:-1;;;;;2979:4:114;;;;-1:-1:-1;2979:13:114;;-1:-1:-1;2979:31:114;;:4;;3005;;2979:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3021:33:114;;-1:-1:-1;;;3021:33:114;;14341:2:115;3021:33:114;;;14323:21:115;14380:2;14360:18;;;14353:30;-1:-1:-1;;;14399:18:115;;;14392:44;-1:-1:-1;;;;;;;;;;;3021:15:114;-1:-1:-1;3021:15:114;;-1:-1:-1;14453:18:115;;3021:33:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3064:4:114;;:21;;-1:-1:-1;;;3064:21:114;;-1:-1:-1;;;;;3064:4:114;;;;-1:-1:-1;3064:13:114;;-1:-1:-1;3064:21:114;;3297:5:112;;3064:4:114;;:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3096:37:114;;-1:-1:-1;;;3096:37:114;;14970:2:115;3096:37:114;;;14952:21:115;15009:2;14989:18;;;14982:30;-1:-1:-1;;;15028:18:115;;;15021:48;-1:-1:-1;;;;;;;;;;;3096:15:114;-1:-1:-1;3096:15:114;;-1:-1:-1;15086:18:115;;3096:37:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3143:4:114;;:25;;-1:-1:-1;;;3143:25:114;;-1:-1:-1;;;;;3143:4:114;;;;-1:-1:-1;3143:13:114;;-1:-1:-1;3143:25:114;;3297:5:112;;3162::114;;3143:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3261:4:114;;3277:28;;-1:-1:-1;;;;;3261:4:114;;;;-1:-1:-1;3261:4:114;;-1:-1:-1;3213:29:114;;3300:4;;3213:29;3277:28;3213:29;3277:28;3300:4;3261;3213:29;3277:28;;;;;;;;;;;;;;;;;;;-1:-1:-1;3409:4:114;;:26;;-1:-1:-1;;;3409:26:114;;3245:5:112;3377:22:114;;;-1:-1:-1;;;;;3409:4:114;;:13;;:26;;3430:4;;3409:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3445:54:114;;-1:-1:-1;;3245:5:112;3454:22:114;;-1:-1:-1;3478:20:114;:13;3494:4;3478:20;:::i;2022:142:9:-;2071:35;2139:18;2118:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2118:39:9;;;;;;;;;;;;;;;;;;;;;;2022:142;:::o;7775:67:112:-;7817:18;:16;:18::i;26861:262:55:-;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:55;;-1:-1:-1;;;;;15685:15:115;;;27080:36:55;;;15667:34:115;15737:15;;;15717:18;;;15710:43;15789:15;;;15769:18;;;15762:43;26995:56:55;;-1:-1:-1;27080:11:55;;;;-1:-1:-1;27080:11:55;;15602:18:115;;27080:36:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:55;;26861:262;-1:-1:-1;;;;;;;26861:262:55:o;5209::3:-;5271:1;5266;:6;5262:203;;-1:-1:-1;;;;;;;;;;;5293:41:3;;;;16411:2:115;16393:21;;;16450:2;16430:18;;;16423:30;16489:34;16484:2;16469:18;;16462:62;-1:-1:-1;;;16555:2:115;16540:18;;16533:32;16597:3;16582:19;;16209:398;5293:41:3;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;17902:344::-;18038:1;18021:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;18011:30;;;;;;18004:1;17987:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;17977:30;;;;;;:64;17973:267;;-1:-1:-1;;;;;;;;;;;18062:43:3;;;;18142:2:115;18124:21;;;18181:2;18161:18;;;18154:30;18220:34;18215:2;18200:18;;18193:62;-1:-1:-1;;;18286:2:115;18271:18;;18264:34;18330:3;18315:19;;17940:400;18062:43:3;;;;;;;;18124:33;18155:1;18124:33;;;;;;:::i;:::-;;;;;;;;18176;18207:1;18176:33;;;;;;:::i;3622:277::-;3690:1;-1:-1:-1;;;;;3685:6:3;:1;-1:-1:-1;;;;;3685:6:3;;3681:212;;-1:-1:-1;;;;;;;;;;;3712:44:3;;;;19437:2:115;19419:21;;;19476:2;19456:18;;;19449:30;19515:34;19510:2;19495:18;;19488:62;-1:-1:-1;;;19581:2:115;19566:18;;19559:35;19626:3;19611:19;;19235:401;3712:44:3;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;4766:257::-;4826:1;4821;:6;4817:200;;-1:-1:-1;;;;;;;;;;;4848:40:3;;;;20601:2:115;20583:21;;;20640:2;20620:18;;;20613:30;20679:34;20674:2;20659:18;;20652:62;-1:-1:-1;;;20745:2:115;20730:18;;20723:31;20786:3;20771:19;;20399:397;4848:40:3;;;;;;;;4907:30;4935:1;4907:30;;;;;;:::i;:::-;;;;;;;;4956;4984:1;4956:30;;;;;;:::i;10272:812:112:-;10345:38;10323:18;:60;;;;;;;;:::i;:::-;;10319:759;;10399:25;:23;:25::i;10319:759::-;10467:43;10445:18;:65;;;;;;;;:::i;:::-;;10441:637;;10526:29;:27;:29::i;10441:637::-;10598:35;10576:18;:57;;;;;;;;:::i;:::-;;10572:506;;10649:22;:20;:22::i;10572:506::-;10776:45;10754:18;:67;;;;;;;;:::i;:::-;10750:328;;;10914:42;10892:18;:64;;;;;;;;:::i;:::-;10888:190;;;11034:33;;-1:-1:-1;;;11034:33:112;;21837:2:115;11034:33:112;;;21819:21:115;21876:2;21856:18;;;21849:30;21915:25;21895:18;;;21888:53;21958:18;;11034:33:112;;;;;;;60355:828:55;60600:10;60594:17;60637:9;60631:16;-1:-1:-1;;;;;60670:26:55;;60666:422;;-1:-1:-1;;;;;60801:27:55;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:55;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:55;;61003:71;60950:125;;;4395:25:115;-1:-1:-1;;;;;60950:35:55;;;;;4368:18:115;;60950:125:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:55;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:55;;61142:34;;;;:::i;:::-;60355:828;;;:::o;2409:432:3:-;-1:-1:-1;;;;;;;;;;;2985:55:3;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:3;;;22784:51:115;;;-1:-1:-1;;;22851:18:115;;;22844:34;;;;2712:4:3;22894:18:115;;;22887:34;2489:11:3;;1671:64;2586:43;;22757:18:115;;2652:67:3;;;-1:-1:-1;;2652:67:3;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:3;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:3;2820:7;:14;;-1:-1:-1;;2820:14:3;;;;;2409:432::o;7961:690:112:-;8037:71;;-1:-1:-1;;;8037:71:112;;-1:-1:-1;;;;;8037:10:112;:34;;;;:71;;8086:2;;-1:-1:-1;;8090:17:112;8037:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8023:10;8015:93;;-1:-1:-1;;;;;8015:93:112;;;-1:-1:-1;;;;;;8015:93:112;;;;;;;8016:5;8015:93;;;;;;;;;;;;;;8016:5;8147:15;:13;:15::i;:::-;8119:43;;8177:9;8172:473;8196:8;:15;8192:1;:19;8172:473;;;8232:15;8250:8;8259:1;8250:11;;;;;;;;:::i;:::-;;;;;;;;;;;8275:5;;:39;;-1:-1:-1;;;8275:39:112;;8250:11;;-1:-1:-1;;;;;;8275:5:112;;:10;;:39;;8250:11;;-1:-1:-1;;;;;2908:17:112;8275:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8329:22:112;;-1:-1:-1;;;8329:22:112;;-1:-1:-1;;;;;210:32:115;;8329:22:112;;;192:51:115;-1:-1:-1;;;;;;;;;;;8329:13:112;;;165:18:115;;8329:22:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8365:5:112;;8387:10;;8365:60;;-1:-1:-1;;;8365:60:112;;-1:-1:-1;;;;;8365:5:112;;;;-1:-1:-1;8365:13:112;;-1:-1:-1;8365:60:112;;8387:10;;;;2984:16;;8365:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8439:10:112;;:44;;-1:-1:-1;;;8439:44:112;;2984:16;8439:44;;;4395:25:115;-1:-1:-1;;;;;8439:10:112;;;;:18;;4368::115;;8439:44:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2984:16;8521:24;;8497:20;;:48;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:4;;-1:-1:-1;;;;;8559:12:112;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8614:10:112;;8587:47;;-1:-1:-1;;;;;;8614:10:112;;-1:-1:-1;8626:7:112;8587:26;:47::i;:::-;-1:-1:-1;8213:3:112;;;:::i;:::-;;;8172:473;;8821:637;8894:59;;-1:-1:-1;;;8894:59:112;;-1:-1:-1;;;;;8894:10:112;:38;;;;:59;;;;25035:2:115;25017:21;;;25074:1;25054:18;;;25047:29;-1:-1:-1;;;25107:2:115;25092:18;;25085:39;25162:3;25155:4;25140:20;;25133:33;;;25203:1;25182:19;;;25175:30;-1:-1:-1;;;25236:3:115;25221:19;;25214:35;25281:3;25266:19;;24732:559;8894:59:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8880:10;8879:74;;-1:-1:-1;;;;;;8879:74:112;-1:-1:-1;;;;;8879:74:112;;;;;;;;;;-1:-1:-1;8991:15:112;:13;:15::i;:::-;8963:43;;9021:9;9016:436;9040:8;:15;9036:1;:19;9016:436;;;9076:15;9094:8;9103:1;9094:11;;;;;;;;:::i;:::-;;;;;;;;;;;9119:22;;-1:-1:-1;;;9119:22:112;;-1:-1:-1;;;;;210:32:115;;9119:22:112;;;192:51:115;9094:11:112;;-1:-1:-1;;;;;;;;;;;;9119:13:112;;;165:18:115;;9119:22:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9155:36:112;;-1:-1:-1;;;9155:36:112;;-1:-1:-1;;;;;;;;;;;9155:7:112;-1:-1:-1;9155:7:112;;-1:-1:-1;9155:36:112;;9163:7;;-1:-1:-1;;;;;2908:17:112;9155:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9219:10:112;;9205:76;;;-1:-1:-1;;;9205:76:112;;;;-1:-1:-1;;;;;9219:10:112;;;;-1:-1:-1;9205:39:112;;-1:-1:-1;2984:16:112;;9205:76;;;;;9219:10;;9205:76;;;;;;;2984:16;9219:10;9205:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2984:16;9319:24;;9295:20;;:48;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;;;;;;;309:37:4;;-1:-1:-1;;;;;9357:12:112;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9412:10:112;;9424:13;:16;;9385:56;;-1:-1:-1;;;;;;9412:10:112;;;;-1:-1:-1;9424:13:112;9438:1;;9424:16;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;9424:16:112;9385:26;:56::i;:::-;-1:-1:-1;9057:3:112;;;:::i;:::-;;;9016:436;;9636:552;9687:25;9715:15;:13;:15::i;:::-;9792;;9687:43;;-1:-1:-1;9741:21:112;;9765:42;;2984:16;9765:42;:::i;:::-;9832:65;;-1:-1:-1;;;9832:65:112;;26071:2:115;9832:65:112;;;26053:21:115;26110:1;26090:18;;;26083:29;-1:-1:-1;;;26128:19:115;;;26121:39;26198:3;26176:20;;;26169:33;26239:1;26218:19;;;26211:30;-1:-1:-1;;;26257:19:115;;;26250:34;26336:18;;;26329:34;;;9741:66:112;;-1:-1:-1;9832:10:112;-1:-1:-1;;;;;9832:31:112;;;;26301:19:115;;9832:65:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9818:10;9817:80;;-1:-1:-1;;;;;;9817:80:112;-1:-1:-1;;;;;9817:80:112;;;;;;;;;;9907:20;:36;;;-1:-1:-1;9953:229:112;9977:8;:15;9973:1;:19;9953:229;;;10013:15;10031:8;10040:1;10031:11;;;;;;;;:::i;:::-;;;;;;;;;;;10056:10;;:54;;-1:-1:-1;;;10056:54:112;;10031:11;;-1:-1:-1;;;;;;10056:10:112;;:19;;:54;;10031:11;;2984:16;;10056:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10151:10:112;;10124:47;;-1:-1:-1;;;;;10151:10:112;10163:7;10124:26;:47::i;:::-;-1:-1:-1;9994:3:112;;;:::i;:::-;;;9953:229;;;;9677:511;;9636:552::o;11239:387::-;11361:14;:21;11287:25;;11349:33;;:9;:33;:::i;:::-;11335:48;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11335:48:112;;11324:59;;11398:6;11393:101;11414:9;11410:1;:13;11393:101;;;11466:13;11480:1;11466:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11466:16:112;11444:8;11453:1;11444:11;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11444:39:112;;;:11;;;;;;;;;;;:39;11425:3;;;:::i;:::-;;;11393:101;;;;11508:6;11503:117;11524:14;:21;11520:25;;11503:117;;;11592:14;11607:1;11592:17;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;11592:17:112;11566:8;11575:13;11579:9;11575:1;:13;:::i;:::-;11566:23;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11566:43:112;;;:23;;;;;;;;;;;:43;11547:3;;;:::i;:::-;;;11503:117;;;;11239:387;:::o;27119:378::-;27283:41;;-1:-1:-1;;;27283:41:112;;-1:-1:-1;;;;;210:32:115;;;27283:41:112;;;192:51:115;27217:10:112;;;;;;;;27283:32;;;;;165:18:115;;27283:41:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27375:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27433:30:112;;;27334:38;27433:30;;;:17;:30;;;;;:39;;;;;;;;;;;;;;:57;;;;;;;;;;;;;;;-1:-1:-1;;27433:57:112;;;;;;;;;;-1:-1:-1;;27119:378:112:o;-1:-1:-1:-;;;;;;;;:::o;254:658:115:-;425:2;477:21;;;547:13;;450:18;;;569:22;;;396:4;;425:2;648:15;;;;622:2;607:18;;;396:4;691:195;705:6;702:1;699:13;691:195;;;770:13;;-1:-1:-1;;;;;766:39:115;754:52;;861:15;;;;826:12;;;;802:1;720:9;691:195;;;-1:-1:-1;903:3:115;;254:658;-1:-1:-1;;;;;;254:658:115:o;917:1567::-;1119:4;1148:2;1188;1177:9;1173:18;1218:2;1207:9;1200:21;1241:6;1276;1270:13;1307:6;1299;1292:22;1333:2;1323:12;;1366:2;1355:9;1351:18;1344:25;;1428:2;1418:6;1415:1;1411:14;1400:9;1396:30;1392:39;1466:2;1458:6;1454:15;1487:1;1508;1518:937;1534:6;1529:3;1526:15;1518:937;;;1603:22;;;-1:-1:-1;;1599:36:115;1587:49;;1659:13;;1746:9;;-1:-1:-1;;;;;1742:35:115;1727:51;;1817:11;;1811:18;1849:15;;;1842:27;;;1930:19;;1699:15;;;1962:24;;;2052:21;;;;2097:1;;2020:2;2008:15;;;2111:236;2127:8;2122:3;2119:17;2111:236;;;2208:15;;-1:-1:-1;;;;;;2204:42:115;2190:57;;2316:17;;;;2155:1;2146:11;;;;;2273:14;;;;2111:236;;;-1:-1:-1;2433:12:115;;;;2370:5;-1:-1:-1;;;2398:15:115;;;;1560:1;1551:11;1518:937;;;-1:-1:-1;2472:6:115;;917:1567;-1:-1:-1;;;;;;;;;917:1567:115:o;2489:250::-;2574:1;2584:113;2598:6;2595:1;2592:13;2584:113;;;2674:11;;;2668:18;2655:11;;;2648:39;2620:2;2613:10;2584:113;;;-1:-1:-1;;2731:1:115;2713:16;;2706:27;2489:250::o;2744:271::-;2786:3;2824:5;2818:12;2851:6;2846:3;2839:19;2867:76;2936:6;2929:4;2924:3;2920:14;2913:4;2906:5;2902:16;2867:76;:::i;:::-;2997:2;2976:15;-1:-1:-1;;2972:29:115;2963:39;;;;3004:4;2959:50;;2744:271;-1:-1:-1;;2744:271:115:o;3020:803::-;3182:4;3211:2;3251;3240:9;3236:18;3281:2;3270:9;3263:21;3304:6;3339;3333:13;3370:6;3362;3355:22;3408:2;3397:9;3393:18;3386:25;;3470:2;3460:6;3457:1;3453:14;3442:9;3438:30;3434:39;3420:53;;3508:2;3500:6;3496:15;3529:1;3539:255;3553:6;3550:1;3547:13;3539:255;;;3646:2;3642:7;3630:9;3622:6;3618:22;3614:36;3609:3;3602:49;3674:40;3707:6;3698;3692:13;3674:40;:::i;:::-;3664:50;-1:-1:-1;3772:12:115;;;;3737:15;;;;3575:1;3568:9;3539:255;;;-1:-1:-1;3811:6:115;;3020:803;-1:-1:-1;;;;;;;3020:803:115:o;4863:127::-;4924:10;4919:3;4915:20;4912:1;4905:31;4955:4;4952:1;4945:15;4979:4;4976:1;4969:15;4995:217;5035:1;5061;5051:132;;5105:10;5100:3;5096:20;5093:1;5086:31;5140:4;5137:1;5130:15;5168:4;5165:1;5158:15;5051:132;-1:-1:-1;5197:9:115;;4995:217::o;5406:184::-;5476:6;5529:2;5517:9;5508:7;5504:23;5500:32;5497:52;;;5545:1;5542;5535:12;5497:52;-1:-1:-1;5568:16:115;;5406:184;-1:-1:-1;5406:184:115:o;5595:422::-;5684:1;5727:5;5684:1;5741:270;5762:7;5752:8;5749:21;5741:270;;;5821:4;5817:1;5813:6;5809:17;5803:4;5800:27;5797:53;;;5830:18;;:::i;:::-;5880:7;5870:8;5866:22;5863:55;;;5900:16;;;;5863:55;5979:22;;;;5939:15;;;;5741:270;;;5745:3;5595:422;;;;;:::o;6022:806::-;6071:5;6101:8;6091:80;;-1:-1:-1;6142:1:115;6156:5;;6091:80;6190:4;6180:76;;-1:-1:-1;6227:1:115;6241:5;;6180:76;6272:4;6290:1;6285:59;;;;6358:1;6353:130;;;;6265:218;;6285:59;6315:1;6306:10;;6329:5;;;6353:130;6390:3;6380:8;6377:17;6374:43;;;6397:18;;:::i;:::-;-1:-1:-1;;6453:1:115;6439:16;;6468:5;;6265:218;;6567:2;6557:8;6554:16;6548:3;6542:4;6539:13;6535:36;6529:2;6519:8;6516:16;6511:2;6505:4;6502:12;6498:35;6495:77;6492:159;;;-1:-1:-1;6604:19:115;;;6636:5;;6492:159;6683:34;6708:8;6702:4;6683:34;:::i;:::-;6753:6;6749:1;6745:6;6741:19;6732:7;6729:32;6726:58;;;6764:18;;:::i;:::-;6802:20;;-1:-1:-1;6022:806:115;;;;;:::o;6833:140::-;6891:5;6920:47;6961:4;6951:8;6947:19;6941:4;6920:47;:::i;:::-;6911:56;6833:140;-1:-1:-1;;;6833:140:115:o;6978:175::-;7015:3;7059:4;7052:5;7048:16;7088:4;7079:7;7076:17;7073:43;;7096:18;;:::i;:::-;7145:1;7132:15;;6978:175;-1:-1:-1;;6978:175:115:o;7158:127::-;7219:10;7214:3;7210:20;7207:1;7200:31;7250:4;7247:1;7240:15;7274:4;7271:1;7264:15;7290:897;7370:6;7423:2;7411:9;7402:7;7398:23;7394:32;7391:52;;;7439:1;7436;7429:12;7391:52;7472:9;7466:16;7501:18;7542:2;7534:6;7531:14;7528:34;;;7558:1;7555;7548:12;7528:34;7596:6;7585:9;7581:22;7571:32;;7641:7;7634:4;7630:2;7626:13;7622:27;7612:55;;7663:1;7660;7653:12;7612:55;7692:2;7686:9;7714:2;7710;7707:10;7704:36;;;7720:18;;:::i;:::-;7795:2;7789:9;7763:2;7849:13;;-1:-1:-1;;7845:22:115;;;7869:2;7841:31;7837:40;7825:53;;;7893:18;;;7913:22;;;7890:46;7887:72;;;7939:18;;:::i;:::-;7979:10;7975:2;7968:22;8014:2;8006:6;7999:18;8054:7;8049:2;8044;8040;8036:11;8032:20;8029:33;8026:53;;;8075:1;8072;8065:12;8026:53;8088:68;8153:2;8148;8140:6;8136:15;8131:2;8127;8123:11;8088:68;:::i;:::-;8175:6;7290:897;-1:-1:-1;;;;;;;7290:897:115:o;8192:131::-;-1:-1:-1;;;;;8267:31:115;;8257:42;;8247:70;;8313:1;8310;8303:12;8328:251;8398:6;8451:2;8439:9;8430:7;8426:23;8422:32;8419:52;;;8467:1;8464;8457:12;8419:52;8499:9;8493:16;8518:31;8543:5;8518:31;:::i;8931:125::-;8996:9;;;9017:10;;;9014:36;;;9030:18;;:::i;9336:165::-;9413:13;;9466:2;9455:21;;;9445:32;;9435:60;;9491:1;9488;9481:12;9506:204;9574:6;9627:2;9615:9;9606:7;9602:23;9598:32;9595:52;;;9643:1;9640;9633:12;9595:52;9666:38;9694:9;9666:38;:::i;9715:201::-;9753:3;9781:10;9826:2;9819:5;9815:14;9853:2;9844:7;9841:15;9838:41;;9859:18;;:::i;:::-;9908:1;9895:15;;9715:201;-1:-1:-1;;;9715:201:115:o;11115:380::-;11194:1;11190:12;;;;11237;;;11258:61;;11312:4;11304:6;11300:17;11290:27;;11258:61;11365:2;11357:6;11354:14;11334:18;11331:38;11328:161;;11411:10;11406:3;11402:20;11399:1;11392:31;11446:4;11443:1;11436:15;11474:4;11471:1;11464:15;11328:161;;11115:380;;;:::o;11500:355::-;11701:2;11683:21;;;11720:18;;;11713:30;11779:34;11774:2;11759:18;;11752:62;11846:2;11831:18;;11500:355::o;12264:274::-;-1:-1:-1;;;;;12456:32:115;;;;12438:51;;12520:2;12505:18;;12498:34;12426:2;12411:18;;12264:274::o;12543:384::-;-1:-1:-1;;;;;;12728:33:115;;12716:46;;12785:13;;12698:3;;12807:74;12785:13;12870:1;12861:11;;12854:4;12842:17;;12807:74;:::i;:::-;12901:16;;;;12919:1;12897:24;;12543:384;-1:-1:-1;;;12543:384:115:o;12932:287::-;13061:3;13099:6;13093:13;13115:66;13174:6;13169:3;13162:4;13154:6;13150:17;13115:66;:::i;:::-;13197:16;;;;;12932:287;-1:-1:-1;;12932:287:115:o;13224:277::-;13291:6;13344:2;13332:9;13323:7;13319:23;13315:32;13312:52;;;13360:1;13357;13350:12;13312:52;13392:9;13386:16;13445:5;13438:13;13431:21;13424:5;13421:32;13411:60;;13467:1;13464;13457:12;15816:388;15911:6;15919;15927;15935;15988:3;15976:9;15967:7;15963:23;15959:33;15956:53;;;16005:1;16002;15995:12;15956:53;16034:9;16028:16;16018:26;;16063:47;16106:2;16095:9;16091:18;16063:47;:::i;:::-;16150:2;16135:18;;16129:25;16194:2;16179:18;;;16173:25;15816:388;;16053:57;;-1:-1:-1;15816:388:115;-1:-1:-1;;;15816:388:115:o;16776:348::-;17006:2;16995:9;16988:21;16969:4;17026:49;17071:2;17060:9;17056:18;16689:2;16677:15;;-1:-1:-1;;;16717:4:115;16708:14;;16701:36;16762:2;16753:12;;16612:159;17026:49;17018:57;;17111:6;17106:2;17095:9;17091:18;17084:34;16776:348;;;;:::o;17293:::-;17523:2;17512:9;17505:21;17486:4;17543:49;17588:2;17577:9;17573:18;17206:2;17194:15;;-1:-1:-1;;;17234:4:115;17225:14;;17218:36;17279:2;17270:12;;17129:159;18345:440;18595:2;18584:9;18577:21;18558:4;18621:49;18666:2;18655:9;18651:18;16689:2;16677:15;;-1:-1:-1;;;16717:4:115;16708:14;;16701:36;16762:2;16753:12;;16612:159;18621:49;18718:9;18710:6;18706:22;18701:2;18690:9;18686:18;18679:50;18746:33;18772:6;18764;18746:33;:::i;:::-;18738:41;18345:440;-1:-1:-1;;;;18345:440:115:o;18790:::-;19040:2;19029:9;19022:21;19003:4;19066:49;19111:2;19100:9;19096:18;17206:2;17194:15;;-1:-1:-1;;;17234:4:115;17225:14;;17218:36;17279:2;17270:12;;17129:159;19641:374;19871:2;19860:9;19853:21;19834:4;19891:49;19936:2;19925:9;19921:18;16689:2;16677:15;;-1:-1:-1;;;16717:4:115;16708:14;;16701:36;16762:2;16753:12;;16612:159;19891:49;-1:-1:-1;;;;;19976:32:115;;;;19971:2;19956:18;;;;19949:60;;;;-1:-1:-1;19883:57:115;19641:374::o;20020:::-;20250:2;20239:9;20232:21;20213:4;20270:49;20315:2;20304:9;20300:18;17206:2;17194:15;;-1:-1:-1;;;17234:4:115;17225:14;;17218:36;17279:2;17270:12;;17129:159;21503:127;21564:10;21559:3;21555:20;21552:1;21545:31;21595:4;21592:1;21585:15;21619:4;21616:1;21609:15;22450:127;22511:10;22506:3;22502:20;22499:1;22492:31;22542:4;22539:1;22532:15;22566:4;22563:1;22556:15;23088:659;23454:3;23443:9;23436:22;23417:4;23481:50;23526:3;23515:9;23511:19;23009:1;22997:14;;-1:-1:-1;;;23036:4:115;23027:14;;23020:29;23074:2;23065:12;;22932:151;23481:50;23579:9;23571:6;23567:22;23562:2;23551:9;23547:18;23540:50;23607:37;23637:6;23009:1;22997:14;;-1:-1:-1;;;23036:4:115;23027:14;;23020:29;23074:2;23065:12;;22932:151;23607:37;23692:4;23680:17;;;;23675:2;23660:18;;23653:45;-1:-1:-1;;23729:2:115;23714:18;23707:34;23599:45;23088:659::o;23752:424::-;23870:6;23878;23931:2;23919:9;23910:7;23906:23;23902:32;23899:52;;;23947:1;23944;23937:12;23899:52;23979:9;23973:16;23998:31;24023:5;23998:31;:::i;:::-;24098:2;24083:18;;24077:25;24048:5;;-1:-1:-1;24111:33:115;24077:25;24111:33;:::i;:::-;24163:7;24153:17;;;23752:424;;;;;:::o;24181:127::-;24242:10;24237:3;24233:20;24230:1;24223:31;24273:4;24270:1;24263:15;24297:4;24294:1;24287:15;24592:135;24631:3;24652:17;;;24649:43;;24672:18;;:::i;:::-;-1:-1:-1;24719:1:115;24708:13;;24592:135::o;25567:168::-;25640:9;;;25671;;25688:15;;;25682:22;;25668:37;25658:71;;25709:18;;:::i;26655:367::-;26751:6;26759;26767;26775;26828:3;26816:9;26807:7;26803:23;26799:33;26796:53;;;26845:1;26842;26835:12;26796:53;-1:-1:-1;;26868:16:115;;26924:2;26909:18;;26903:25;26968:2;26953:18;;26947:25;27012:2;26997:18;;;26991:25;26868:16;;26903:25;;-1:-1:-1;26991:25:115;;-1:-1:-1;26655:367:115;-1:-1:-1;26655:367:115:o",
    "linkReferences": {},
    "immutableReferences": {
      "82432": [
        {
          "start": 9954,
          "length": 32
        },
        {
          "start": 10875,
          "length": 32
        },
        {
          "start": 11829,
          "length": 32
        }
      ],
      "82435": [
        {
          "start": 8860,
          "length": 32
        },
        {
          "start": 8931,
          "length": 32
        },
        {
          "start": 9002,
          "length": 32
        },
        {
          "start": 9073,
          "length": 32
        },
        {
          "start": 9134,
          "length": 32
        }
      ],
      "82538": [
        {
          "start": 12227,
          "length": 32
        },
        {
          "start": 12341,
          "length": 32
        },
        {
          "start": 12561,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "SECONDS_IN_A_DAY()": "f9cfa06f",
    "club()": "0efd0973",
    "clubAsToken()": "a62dfac0",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testAddProtegeL0()": "45897090",
    "testAddProtegeL1()": "1860d537",
    "testAllocation()": "22e74602",
    "testDeployment()": "23f8603a",
    "testGetFlowRateAmount()": "5f988f3c",
    "testGetMaxFlowRateByLevel()": "8496a1fe",
    "testInitOnlyOnce()": "4580ab0c",
    "testMint()": "9642ddaf",
    "testOnlyOwnerCanTransferOwnership()": "8fb6dd52",
    "testReceiveEther()": "cdc85519",
    "testWithdraw()": "d509b16c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"INVALID_TEST_SUPER_TOKEN_TYPE\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_IN_A_DAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"club\",\"outputs\":[{\"internalType\":\"contract SuperfluidClub\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clubAsToken\",\"outputs\":[{\"internalType\":\"contract ISuperToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddProtegeL0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAddProtegeL1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testDeployment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetFlowRateAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetMaxFlowRateByLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testInitOnlyOnce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOnlyOwnerCanTransferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testReceiveEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/SuperfluidClub.t.sol\":\"SuperfluidClubTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/custom-supertokens/contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"lib/custom-supertokens/contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"lib/custom-supertokens/contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d\",\"dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a\",\"dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c\",\"dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26\",\"dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140\",\"dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb\",\"dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c\",\"dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol\":{\"keccak256\":\"0x5cb9d45e9b3753ab7f8c19e1a52da400893a93792ddf8a09bd8f06948e16d792\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://db309803ee144a4adf10e8a09da704cdf23471fa3815bbe0c88dc8c904b4e113\",\"dweb:/ipfs/QmXKQnXURdZ4Es3hsQYFgnu7VjL1uJy1FfMEjDXyeckt6L\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementLibrary.sol\":{\"keccak256\":\"0xb109af522348da7f6be2fadaefff21f89d4ab0e8e0ffdb68870ac3f6a8f4eaeb\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9bb5be8672bcb61e612ecd5523b9caee89566d6d8ad18ad7099a168b995e2af\",\"dweb:/ipfs/QmWG8kq6PqVq2K5Pup2qeAwuC37xypoLs6eFdwsDwBBVwM\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/ConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x19745a4c6572b521fe344cee9c2634f7f5136c7be9d887bea199358e3b955255\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://df09c94eea8740af4bd9ab617ee85849d26ceb22f477b833b8efde272058e514\",\"dweb:/ipfs/QmarkXVmMFGZ7zu9uKpv8aSemtGcTiZesFDwHZeGhvMw3D\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/InstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xd7dc1e69a9b75d09fa649d0ac4857d91af1569c639c7ee64ee50af4fa4e9dc17\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://dc7457011c2c9379a9996e942e095ea5d3fda9e06286150694959a8484eb45b8\",\"dweb:/ipfs/QmPguPhozEKerMhk9qPyT61LEzNWKJNtF7ypGgK2hSKF9D\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/CFAv1Library.sol\":{\"keccak256\":\"0x8e090c93d97520fbca57f31ab1aaa4484c1683b2e5b57384c75fcdcab2df17e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf3fd0cf24340ad900d3ac4c85328848adbc3c294df5940b24ebaff6cb613a9\",\"dweb:/ipfs/QmNNUVtX8KjakCrPNWfFyYEp93si3DxMX53sPBHvLfmm57\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/IDAv1Library.sol\":{\"keccak256\":\"0x9259e390974b6d35316e46ddf189cabef6b86f3143f77dd8476cccd7db138498\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://def9f008db3b9d8e2f0383d566af4a9931c193eaff3aa0b7ebe02c2f5e84ffb8\",\"dweb:/ipfs/QmP6TEF52o4zreuRb58Jg45E3EGPuCvUCGetfzzGTU9YBE\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceBase.sol\":{\"keccak256\":\"0xed336f9dace3de4f955f3b7589a9341ef81270edc616205fdbb3ce181a804f41\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://451ba24b9987a16624223d4c620722a072bab937a0d5ae2f9db93a1b99ee2fe7\",\"dweb:/ipfs/QmT8nBsYKemB9Mfh7A6o7dUgSgLeNpSUL29VcSCTWQqTrs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol\":{\"keccak256\":\"0xb2930ab4127c971a5317e251797036bb4f5249ad5b125cceaf72767748764913\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://119dc8081d86c9adb327b8319908a32d9d327e7657e0f1dfcd4691af414e25fe\",\"dweb:/ipfs/QmQ7SPj4AvL3eUL3Lq9GCPM8DvAZYwTR8ECLH9zakgSgLi\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/IPureSuperToken.sol\":{\"keccak256\":\"0x34a07331eeabea0a6a6624da47779c43a7673331740f06ea3c0b0e0bf1d3db52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a1bbac766bda5ef38dd5e4a36531a7da224a0e89e5891bf9bfda0c9cd38c97\",\"dweb:/ipfs/QmYnEAHjAQ3EEfmEzZ3EHpbozmjenWVr6x3h7MzZmR5aqb\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol\":{\"keccak256\":\"0x449c94dc19b806af3ff12ac121c2092a813337f9b8fc8d8df93d1e70fc9f8a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c81819d57bcefb0fa6a9729350ef595bdf7938bb02fac4306a6a7c3871a9085d\",\"dweb:/ipfs/QmRVAm5377PBv2Ct5BX4sfJJWixuhqYtkJ6MqQbPq3yzEa\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IResolver.sol\":{\"keccak256\":\"0xf38c6d48ce4b36d05d3d9395c2ce43d9c761770e8dadeb86f5b3bc96e51b7150\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec68f2563e0b1ef2f599709e3196d61d5a9462d74582c801ff27a755e3e5937e\",\"dweb:/ipfs/Qmcof4dwJGTxC8siHAcsmfmphPkQPUYWVuQfPqwsSyXE3P\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol\":{\"keccak256\":\"0x02f3971397edcb37fc2e814d3009d58fa1ad2d0ad04c608d54c6102518f128df\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5b0794a095f68a7cbc90e6f5f3e02532428f6f58dc2f0c6ca6618eb12b386ec9\",\"dweb:/ipfs/QmQZnjKatSYDrQkHPjN2fJc3vMLMWVcPTJhcNPSV7knXDn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/CallUtils.sol\":{\"keccak256\":\"0x869a5dfef801719beca44c46ac2b8714ef0dc64666350ba5341877570df1f824\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://80e24aaa06dff5eb32050b1658158411bce22840423f1a1e8b9d619b576312f7\",\"dweb:/ipfs/QmT37VDqALYuRd67kwFxDuXUPZdVDhLXqjHb4C94rTaFoK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC1820RegistryCompiled.sol\":{\"keccak256\":\"0xf696a09355edbf1972830801a99851f5a68f9ecef46a31185bc13a0fad9d0394\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://74f473b4b1edb04f4758061a51a540a30af5a67a93a1d6696437493c3ace5d4c\",\"dweb:/ipfs/Qmcu4xzvoxoRdactzuKZ5fHnoTuFnzPmtDgGzC8eEH38Xc\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/SafeGasLibrary.sol\":{\"keccak256\":\"0x7abd4d1f45d303f80a042d8f67122662a56ae17b70bd6e263beb691064efc85e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://cc8615b2d9740bb2e73812264f176d38b022a80c3f9ef2a358c129e129a92a23\",\"dweb:/ipfs/QmUjaGTJKnvQPx1L9AikP7uYTTnbRCtTZKFdY1fp3ErAqq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/SlotsBitmapLibrary.sol\":{\"keccak256\":\"0xbd8819553096b1459b03709e4806b80781262fba2ea2feb5299bf60aab0f1638\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://12ded145d853d1e9491d733c05772ae432f53f9da7d1f50ce0effa9ddeb74f38\",\"dweb:/ipfs/QmWgwDjF1dnp4tyrE2DRQsubhHZ741ifc92qvgEdWR3FRb\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol\":{\"keccak256\":\"0xf9b058c4009abed832187589f6a398cce384589be52b7c7150dc47689bb4c6c2\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fa9a61d5a2dfa905290d770ed467f34b1d21429a301bec5acddcb7b60cf27958\",\"dweb:/ipfs/QmbYXP3oQmeEBN2vYDo3k7BzYAKgkD45xJdP3mZwD4ULVh\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantOutflowNFT.sol\":{\"keccak256\":\"0xa669328bd9f0718bd65500e76a6f91bd1d59dd2eb532a06c47d3a2d463653c1e\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://8f41fd65689a2a49d1f271d6f1e70dd89560ff8b3ae2a9c2c0286b35a7919fe4\",\"dweb:/ipfs/QmV2sb4NWshVop8KarbVcqbxFiyb8kDgbAaejTXPpRdjZu\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol\":{\"keccak256\":\"0x84a0beb06890d7b278943493bc4e960b84482d4e2850739b2f43a4b33815498f\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c244d35343f22955f3184b522d4b7f8975964939d394b8f88a7673ee195d1baa\",\"dweb:/ipfs/QmedA3kyPDKetqAXXeszi9w7Ymc38VgMNajL5aw3xLWiTK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol\":{\"keccak256\":\"0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660\",\"dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol\":{\"keccak256\":\"0x92417784efc981ea1bb61effa99458efc65bfd0d9cbae18b71fdbbb72be94bc1\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://45e824e2b0ba82f2379dbb5300452f0cd494783c80dbd8c74c6529b123485c48\",\"dweb:/ipfs/Qme18icw9Hdc4BwWWMmhLykjVQSm6dAsXFo1PuGec2J8iy\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol\":{\"keccak256\":\"0x5d3852b772f5ffa23ab0ec38a6101c309226a0a5c0be56406ecf2267ec4f1662\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://382afd8b3dcda89b0ee3325b9d017dfeacd36bd8199acaf02ad3f94fc18bfccf\",\"dweb:/ipfs/QmRBtRhm1DGTJ56x93sq8ykFx1Ksyg7gmczEZiTo1CZwJD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/Superfluid.sol\":{\"keccak256\":\"0x2faccd48b93b0fe2d322e623e9d2f8af3bb861c5e648f13d5efd5ecff7fccaa6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://e1989396a880dbb0f6d76e7a4c7c0ad54cc076f8c307a51f8c1353ed3b5c604d\",\"dweb:/ipfs/QmRiFUFEdhhYu1CAXAUJjEcqijaL774aWKxReSgfVBgTGi\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/tokens/PureSuperToken.sol\":{\"keccak256\":\"0x0e53b1a0a025244e219d440eec775c0675f9385a5f140e3a0e0063951691db21\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5e06ba098daff93ca1ccd2015509da1b54afbe74fc1521f023f6aad3b587fa3a\",\"dweb:/ipfs/Qmc7eYAR6XRFsxftRbify2dodfmyXsKLbQGJwaWzVXaY6M\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/tokens/SETH.sol\":{\"keccak256\":\"0xab19145343aff8f9108707eec0b5a2ca5455717f749de25e9edf84ca54fe4ff8\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://ee4ae5efcd198010bb7a11c02b69639cbf0f7906d3be969eeedd51016505fa08\",\"dweb:/ipfs/QmSFxLdhrjSqxXMpwpQAreRa6JdgK92K8UB5i6Wr8zRaPQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996\",\"dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/BatchLiquidator.sol\":{\"keccak256\":\"0xd4757cdb23317b4c6b46db9dfd6cc37ce64ccfed0efb461ce19d90aeb5cea842\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b4f4ea83793ca5477996b35742694f52ab122fe2f1cbdfc1cf2a488488d858ab\",\"dweb:/ipfs/QmRxFh12tVZ5cRDiq5kviuNw6i8Qs7YdkGshqf8ZDaDAVc\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol\":{\"keccak256\":\"0x588b5916ca05526f5086faf0daf7c7980f2613c1949ba39d39d38b6aa2f5a516\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://404b22f63a4ea100b72283a64c62a85872ee68d601d569e2ddebf19de9e571fc\",\"dweb:/ipfs/QmXeU8vThukiAUnzVb2AbstgPttmJi6pwRjmjSY4mwGdVS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/ForwarderBase.sol\":{\"keccak256\":\"0x7dd9de2456b709bf5d6ec03e004dc1037643cea8c6ee1ecad2ac052310b83b11\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://459522368edb5ca4d34e642192bf6b4fdfaf3c8dcaf7c23f118bb8f18ad33c7b\",\"dweb:/ipfs/QmPwGJV4qT9jwPTh2wLhrXgqSB7fdCPPU62fthif79SXXw\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/IDAv1Forwarder.sol\":{\"keccak256\":\"0x32f576bd41901378ef96e3a2ff1e19c9780ce0f16b8109169f38f7e34fe4f18c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://4d2824f7adbdb7ddab374d5b41a93213b4d76df29a2c57b64034709b753e0986\",\"dweb:/ipfs/QmTHh11dvycAkyadazDnfef4JVPZAwCE4hnigXT9yByBtx\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/Resolver.sol\":{\"keccak256\":\"0x616e66051c20604231d6c747ed9ebe2bd087c10f2122c0ab599d4edb4f032529\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://97549d739db711c2c3920050aa96b8cc3676dbd112ec5ea76ece727c889634ca\",\"dweb:/ipfs/QmfMoTwGPLD2eWGxropspWFdLAZUCJEQsJbhztDRmEV14D\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeployer.sol\":{\"keccak256\":\"0x6b8a965883e34a22bfe8a7863f3ef23ff013a2d92131a956d9ffd0e1f7283726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23db9eba92d586e58209a6ffc6238c335979e8ae20320222ca16efbe0b395c\",\"dweb:/ipfs/QmXRtxTC9Fw4APbZ5DXCoavCgzQa43cisNsX6mzL75UYRs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeploymentSteps.sol\":{\"keccak256\":\"0x6981b89a429c235e3c5027c083404f9082ca4fd379a4c84cca4bf284dfeffc58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21d5bcef7a2ba3e1fae128211ef2b27e962144a8ebb789fef014dd98f0ff806c\",\"dweb:/ipfs/QmNeYYsZ6xSqFJMKYpftyBTi3Eqm8gvD6wgs3uWfNJvUru\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidLoader.sol\":{\"keccak256\":\"0x9dd41d9dbd458372706a3710192731b17c321d0e3b287704a22756fdac1638d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://776f0892481f8441fdaf917619ba1f2d6df2e6945916980be90320bc3e601b61\",\"dweb:/ipfs/QmVrwtS4y5tEauKAdT5dF379MN5DFuayZmMrZs3V7qxU7j\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TOGA.sol\":{\"keccak256\":\"0x0b2838d159d7ae6e79273420e25fac1c678040e4fa1ee6d6e04bfb9631be9d8c\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://c5a162b609a429c62ac0d4dfcf34e487ddc61a53ef86940b797dc3a30904a4a8\",\"dweb:/ipfs/QmTWbw3B6Box6wXiv9D2Bn71CAWaHxpW9TkpcswqsvDRV1\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestGovernance.sol\":{\"keccak256\":\"0xe1cb0a525c3c0a257985927bb9ca3919cdaaf3fec29e2a272760a40338297eeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d79026a00e9244fccb7bcad259b2defd1eb80cb1b05b5ba8a38bfbad7931047\",\"dweb:/ipfs/QmbLAbCjVPVrg4ohkwgrko8jtTwzWueihZsnM89b2zp5Kz\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestResolver.sol\":{\"keccak256\":\"0xc9507231f674a2146555c443d3d1354d549a5578bcb3d12225525129381c373f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f102b024dc00e1d980b3ac13b9828f5a613f725b0b2cf89b90ce69784a9cab7\",\"dweb:/ipfs/QmQpLjS6GzXq574f4eUxxvy5uvBTNFSXQXsbYfBMkFU2Ti\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestToken.sol\":{\"keccak256\":\"0xcb8b3b0c8f8473e9481bcca698c2d2b4932adf0d90fcb2aa3e3cc5db647a1f6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://586ac278ce8aabacee69c056cfa2e6aa9ec318dc89c0d98b2fc3fdd7d23414d7\",\"dweb:/ipfs/QmT38dQzgV6ZNJx9pV1Sv81SSGZMxoAXquCSaCC2JMCowP\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/test/foundry/FoundrySuperfluidTester.sol\":{\"keccak256\":\"0xe36015781e4935edd723c22121f9277c645bf10fdf347269fc1095aa4dac4697\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b809055527f1a539f3a512f970f78180448ae2fff5881b0284fbf6c12cfe088d\",\"dweb:/ipfs/QmPkBKEz7v5AJLPYkaTVU3ZDGtoxZKkHjPRQVTTbbECcaU\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x22fa71e63887fac892e90d7e5a35b25bd318e90e53840079b8e781c9236c4be1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d0aec0156b7fb31ddf74985b3e4bfb84300197645f94364dd80a48a5594df32\",\"dweb:/ipfs/QmR1VLbZoUUrSNdvVjgDF7WjJnYPvvVKWA6MbRGmn3yBAW\"]},\"test/SuperfluidClub.t.sol\":{\"keccak256\":\"0x6e28aab5ec0751c872dfde1b563ec217c42797e1530b851cd0d06a81be68509c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ce9c9d69c0a939d5363672afe3af244560cce907537603a3511c21bdde2758d8\",\"dweb:/ipfs/Qmaet4mG3DLLa9V3NUqPre6LUsay1cB36CwCfyoihKL5TQ\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_TEST_SUPER_TOKEN_TYPE"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SECONDS_IN_A_DAY",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "club",
          "outputs": [
            {
              "internalType": "contract SuperfluidClub",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "clubAsToken",
          "outputs": [
            {
              "internalType": "contract ISuperToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddProtegeL0"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddProtegeL1"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAllocation"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeployment"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetFlowRateAmount"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetMaxFlowRateByLevel"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testInitOnlyOnce"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOnlyOwnerCanTransferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testReceiveEther"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/SuperfluidClub.t.sol": "SuperfluidClubTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/custom-supertokens/contracts/base/SuperTokenBase.sol": {
        "keccak256": "0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571",
        "urls": [
          "bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c",
          "dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/SuperTokenStorage.sol": {
        "keccak256": "0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687",
        "urls": [
          "bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26",
          "dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/UUPSProxy.sol": {
        "keccak256": "0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca",
        "urls": [
          "bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa",
          "dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1"
        ],
        "license": "AGPLv3"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x51e6eb138fc953fac1ac78012a39b3f16d9289ce06a222ba93bb0621768f96e6",
        "urls": [
          "bzz-raw://653c577e054cf578594148a07b286571d494f401b6d4a940d3ccabd47b29233d",
          "dweb:/ipfs/QmTWDVvR4m82MGXWYY8BCaVN89TguQJSLqRgzHzrMkFHtx"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x2e1b4b99283c16efaf155f7e55ea357943cf6e61fc02aad060534349f63b6cd5",
        "urls": [
          "bzz-raw://d471a35903e8a367a145ca5b5955caf691c723fe1117c6dcffd928d9f8d7c95a",
          "dweb:/ipfs/QmXGnFUGiX9APL8xit7NZQEYBoEL3wWyW1YyFoJQd2pGPe"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xf5762db8ef95099bbe77578cd9349511ed77f4dd63ec98cc6b7cd711447830c1",
        "urls": [
          "bzz-raw://a6b0360806a9804eac0f7e07492b5db9c4953c521dabb9a11b17dd610d5b804c",
          "dweb:/ipfs/QmUFozSt3W7drBRdm1cdRow61EABqSLJtkvYZXWmoHUPss"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x391a28a2e54aea51a6fb03a3a48035304ca4d24bc669ddf3d4c152c7162e514d",
        "urls": [
          "bzz-raw://475fd0d87ccb0fdc4418dea2babffb4adb4aafb817e61f7ef31c2303f10c6c26",
          "dweb:/ipfs/QmQgcgtZxpkW6DRmbJszN1F8mU6zhaTZGdWWsj77yCuWN9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x8758c42ba9d9e46868b796e2330ac239006ede07bd438a4b36dd6f2c47d27dc1",
        "urls": [
          "bzz-raw://11f5752e0187b1e3631b875efdbe05d45929d05f1c1717105a9115d0a6628140",
          "dweb:/ipfs/QmUKkx9jfsUvjyYBw45RvrW1hTFXDXi2Jv5tbHP86mnzpi"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xf3b62c75cea11a0e8ef8e6526e5e5c74ae47a892b9bcefc0e98d76066e1ffd24",
        "urls": [
          "bzz-raw://a41faaf836453e02c71fc272c80b3c90a614b30c9ba636512db0d033c7b93beb",
          "dweb:/ipfs/QmeQAreYYaxztQtFLQdHCzCPEorj9T5foSu2hQmxk7xT5x"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb569d0b4398fad95f508fb854e832143edf69a897af4250f5f60fe195a2066c5",
        "urls": [
          "bzz-raw://84b722ada97ea7bb841cdc0fa556aa36a02ff2d380fa24f6dc0717a71c6d9c7c",
          "dweb:/ipfs/QmfCH9Q4tvJhPM286GFsE4UCP4YncLpRu4Nwa2ZkHdRfbw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementBase.sol": {
        "keccak256": "0x5cb9d45e9b3753ab7f8c19e1a52da400893a93792ddf8a09bd8f06948e16d792",
        "urls": [
          "bzz-raw://db309803ee144a4adf10e8a09da704cdf23471fa3815bbe0c88dc8c904b4e113",
          "dweb:/ipfs/QmXKQnXURdZ4Es3hsQYFgnu7VjL1uJy1FfMEjDXyeckt6L"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/AgreementLibrary.sol": {
        "keccak256": "0xb109af522348da7f6be2fadaefff21f89d4ab0e8e0ffdb68870ac3f6a8f4eaeb",
        "urls": [
          "bzz-raw://a9bb5be8672bcb61e612ecd5523b9caee89566d6d8ad18ad7099a168b995e2af",
          "dweb:/ipfs/QmWG8kq6PqVq2K5Pup2qeAwuC37xypoLs6eFdwsDwBBVwM"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/ConstantFlowAgreementV1.sol": {
        "keccak256": "0x19745a4c6572b521fe344cee9c2634f7f5136c7be9d887bea199358e3b955255",
        "urls": [
          "bzz-raw://df09c94eea8740af4bd9ab617ee85849d26ceb22f477b833b8efde272058e514",
          "dweb:/ipfs/QmarkXVmMFGZ7zu9uKpv8aSemtGcTiZesFDwHZeGhvMw3D"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/agreements/InstantDistributionAgreementV1.sol": {
        "keccak256": "0xd7dc1e69a9b75d09fa649d0ac4857d91af1569c639c7ee64ee50af4fa4e9dc17",
        "urls": [
          "bzz-raw://dc7457011c2c9379a9996e942e095ea5d3fda9e06286150694959a8484eb45b8",
          "dweb:/ipfs/QmPguPhozEKerMhk9qPyT61LEzNWKJNtF7ypGgK2hSKF9D"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/CFAv1Library.sol": {
        "keccak256": "0x8e090c93d97520fbca57f31ab1aaa4484c1683b2e5b57384c75fcdcab2df17e2",
        "urls": [
          "bzz-raw://ecf3fd0cf24340ad900d3ac4c85328848adbc3c294df5940b24ebaff6cb613a9",
          "dweb:/ipfs/QmNNUVtX8KjakCrPNWfFyYEp93si3DxMX53sPBHvLfmm57"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/IDAv1Library.sol": {
        "keccak256": "0x9259e390974b6d35316e46ddf189cabef6b86f3143f77dd8476cccd7db138498",
        "urls": [
          "bzz-raw://def9f008db3b9d8e2f0383d566af4a9931c193eaff3aa0b7ebe02c2f5e84ffb8",
          "dweb:/ipfs/QmP6TEF52o4zreuRb58Jg45E3EGPuCvUCGetfzzGTU9YBE"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/gov/SuperfluidGovernanceBase.sol": {
        "keccak256": "0xed336f9dace3de4f955f3b7589a9341ef81270edc616205fdbb3ce181a804f41",
        "urls": [
          "bzz-raw://451ba24b9987a16624223d4c620722a072bab937a0d5ae2f9db93a1b99ee2fe7",
          "dweb:/ipfs/QmT8nBsYKemB9Mfh7A6o7dUgSgLeNpSUL29VcSCTWQqTrs"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/CustomSuperTokenBase.sol": {
        "keccak256": "0xb2930ab4127c971a5317e251797036bb4f5249ad5b125cceaf72767748764913",
        "urls": [
          "bzz-raw://119dc8081d86c9adb327b8319908a32d9d327e7657e0f1dfcd4691af414e25fe",
          "dweb:/ipfs/QmQ7SPj4AvL3eUL3Lq9GCPM8DvAZYwTR8ECLH9zakgSgLi"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/IPureSuperToken.sol": {
        "keccak256": "0x34a07331eeabea0a6a6624da47779c43a7673331740f06ea3c0b0e0bf1d3db52",
        "urls": [
          "bzz-raw://c6a1bbac766bda5ef38dd5e4a36531a7da224a0e89e5891bf9bfda0c9cd38c97",
          "dweb:/ipfs/QmYnEAHjAQ3EEfmEzZ3EHpbozmjenWVr6x3h7MzZmR5aqb"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IRelayRecipient.sol": {
        "keccak256": "0x449c94dc19b806af3ff12ac121c2092a813337f9b8fc8d8df93d1e70fc9f8a2b",
        "urls": [
          "bzz-raw://c81819d57bcefb0fa6a9729350ef595bdf7938bb02fac4306a6a7c3871a9085d",
          "dweb:/ipfs/QmRVAm5377PBv2Ct5BX4sfJJWixuhqYtkJ6MqQbPq3yzEa"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/utils/IResolver.sol": {
        "keccak256": "0xf38c6d48ce4b36d05d3d9395c2ce43d9c761770e8dadeb86f5b3bc96e51b7150",
        "urls": [
          "bzz-raw://ec68f2563e0b1ef2f599709e3196d61d5a9462d74582c801ff27a755e3e5937e",
          "dweb:/ipfs/Qmcof4dwJGTxC8siHAcsmfmphPkQPUYWVuQfPqwsSyXE3P"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/BaseRelayRecipient.sol": {
        "keccak256": "0x02f3971397edcb37fc2e814d3009d58fa1ad2d0ad04c608d54c6102518f128df",
        "urls": [
          "bzz-raw://5b0794a095f68a7cbc90e6f5f3e02532428f6f58dc2f0c6ca6618eb12b386ec9",
          "dweb:/ipfs/QmQZnjKatSYDrQkHPjN2fJc3vMLMWVcPTJhcNPSV7knXDn"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/CallUtils.sol": {
        "keccak256": "0x869a5dfef801719beca44c46ac2b8714ef0dc64666350ba5341877570df1f824",
        "urls": [
          "bzz-raw://80e24aaa06dff5eb32050b1658158411bce22840423f1a1e8b9d619b576312f7",
          "dweb:/ipfs/QmT37VDqALYuRd67kwFxDuXUPZdVDhLXqjHb4C94rTaFoK"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC1820RegistryCompiled.sol": {
        "keccak256": "0xf696a09355edbf1972830801a99851f5a68f9ecef46a31185bc13a0fad9d0394",
        "urls": [
          "bzz-raw://74f473b4b1edb04f4758061a51a540a30af5a67a93a1d6696437493c3ace5d4c",
          "dweb:/ipfs/Qmcu4xzvoxoRdactzuKZ5fHnoTuFnzPmtDgGzC8eEH38Xc"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/SafeGasLibrary.sol": {
        "keccak256": "0x7abd4d1f45d303f80a042d8f67122662a56ae17b70bd6e263beb691064efc85e",
        "urls": [
          "bzz-raw://cc8615b2d9740bb2e73812264f176d38b022a80c3f9ef2a358c129e129a92a23",
          "dweb:/ipfs/QmUjaGTJKnvQPx1L9AikP7uYTTnbRCtTZKFdY1fp3ErAqq"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/SlotsBitmapLibrary.sol": {
        "keccak256": "0xbd8819553096b1459b03709e4806b80781262fba2ea2feb5299bf60aab0f1638",
        "urls": [
          "bzz-raw://12ded145d853d1e9491d733c05772ae432f53f9da7d1f50ce0effa9ddeb74f38",
          "dweb:/ipfs/QmWgwDjF1dnp4tyrE2DRQsubhHZ741ifc92qvgEdWR3FRb"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantInflowNFT.sol": {
        "keccak256": "0xf9b058c4009abed832187589f6a398cce384589be52b7c7150dc47689bb4c6c2",
        "urls": [
          "bzz-raw://fa9a61d5a2dfa905290d770ed467f34b1d21429a301bec5acddcb7b60cf27958",
          "dweb:/ipfs/QmbYXP3oQmeEBN2vYDo3k7BzYAKgkD45xJdP3mZwD4ULVh"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/ConstantOutflowNFT.sol": {
        "keccak256": "0xa669328bd9f0718bd65500e76a6f91bd1d59dd2eb532a06c47d3a2d463653c1e",
        "urls": [
          "bzz-raw://8f41fd65689a2a49d1f271d6f1e70dd89560ff8b3ae2a9c2c0286b35a7919fe4",
          "dweb:/ipfs/QmV2sb4NWshVop8KarbVcqbxFiyb8kDgbAaejTXPpRdjZu"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FlowNFTBase.sol": {
        "keccak256": "0x84a0beb06890d7b278943493bc4e960b84482d4e2850739b2f43a4b33815498f",
        "urls": [
          "bzz-raw://c244d35343f22955f3184b522d4b7f8975964939d394b8f88a7673ee195d1baa",
          "dweb:/ipfs/QmedA3kyPDKetqAXXeszi9w7Ymc38VgMNajL5aw3xLWiTK"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/FullUpgradableSuperTokenProxy.sol": {
        "keccak256": "0x6e66ecd16b8d015b1fdee6964f5502b8e88a227ba66b6e8f8a9c0fcc5dbe9d99",
        "urls": [
          "bzz-raw://7f8ea8d9359fefb181cb32a4ffc4a4e9e69b1a06d81be273bb84850ed3138660",
          "dweb:/ipfs/QmSyDFmna8P5oMhTo3NGYNHmM4LJGKcqWPQun6A274FyyK"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperToken.sol": {
        "keccak256": "0x92417784efc981ea1bb61effa99458efc65bfd0d9cbae18b71fdbbb72be94bc1",
        "urls": [
          "bzz-raw://45e824e2b0ba82f2379dbb5300452f0cd494783c80dbd8c74c6529b123485c48",
          "dweb:/ipfs/Qme18icw9Hdc4BwWWMmhLykjVQSm6dAsXFo1PuGec2J8iy"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperTokenFactory.sol": {
        "keccak256": "0x5d3852b772f5ffa23ab0ec38a6101c309226a0a5c0be56406ecf2267ec4f1662",
        "urls": [
          "bzz-raw://382afd8b3dcda89b0ee3325b9d017dfeacd36bd8199acaf02ad3f94fc18bfccf",
          "dweb:/ipfs/QmRBtRhm1DGTJ56x93sq8ykFx1Ksyg7gmczEZiTo1CZwJD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/Superfluid.sol": {
        "keccak256": "0x2faccd48b93b0fe2d322e623e9d2f8af3bb861c5e648f13d5efd5ecff7fccaa6",
        "urls": [
          "bzz-raw://e1989396a880dbb0f6d76e7a4c7c0ad54cc076f8c307a51f8c1353ed3b5c604d",
          "dweb:/ipfs/QmRiFUFEdhhYu1CAXAUJjEcqijaL774aWKxReSgfVBgTGi"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/tokens/PureSuperToken.sol": {
        "keccak256": "0x0e53b1a0a025244e219d440eec775c0675f9385a5f140e3a0e0063951691db21",
        "urls": [
          "bzz-raw://5e06ba098daff93ca1ccd2015509da1b54afbe74fc1521f023f6aad3b587fa3a",
          "dweb:/ipfs/Qmc7eYAR6XRFsxftRbify2dodfmyXsKLbQGJwaWzVXaY6M"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/tokens/SETH.sol": {
        "keccak256": "0xab19145343aff8f9108707eec0b5a2ca5455717f749de25e9edf84ca54fe4ff8",
        "urls": [
          "bzz-raw://ee4ae5efcd198010bb7a11c02b69639cbf0f7906d3be969eeedd51016505fa08",
          "dweb:/ipfs/QmSFxLdhrjSqxXMpwpQAreRa6JdgK92K8UB5i6Wr8zRaPQ"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxy.sol": {
        "keccak256": "0x556040f5f2bfda069dd867d52b67b4b6a8e3d2955beac16d4156d91559bbdeac",
        "urls": [
          "bzz-raw://13d190401b4f36f3c0977e0eadb9c774173bcbc2552d72de5bd6e7803d67c996",
          "dweb:/ipfs/QmfBTdKGzmbbjRxca5XLwpE2FX3S8onGLNHNpMpqWqjY4m"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/BatchLiquidator.sol": {
        "keccak256": "0xd4757cdb23317b4c6b46db9dfd6cc37ce64ccfed0efb461ce19d90aeb5cea842",
        "urls": [
          "bzz-raw://b4f4ea83793ca5477996b35742694f52ab122fe2f1cbdfc1cf2a488488d858ab",
          "dweb:/ipfs/QmRxFh12tVZ5cRDiq5kviuNw6i8Qs7YdkGshqf8ZDaDAVc"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/CFAv1Forwarder.sol": {
        "keccak256": "0x588b5916ca05526f5086faf0daf7c7980f2613c1949ba39d39d38b6aa2f5a516",
        "urls": [
          "bzz-raw://404b22f63a4ea100b72283a64c62a85872ee68d601d569e2ddebf19de9e571fc",
          "dweb:/ipfs/QmXeU8vThukiAUnzVb2AbstgPttmJi6pwRjmjSY4mwGdVS"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/ForwarderBase.sol": {
        "keccak256": "0x7dd9de2456b709bf5d6ec03e004dc1037643cea8c6ee1ecad2ac052310b83b11",
        "urls": [
          "bzz-raw://459522368edb5ca4d34e642192bf6b4fdfaf3c8dcaf7c23f118bb8f18ad33c7b",
          "dweb:/ipfs/QmPwGJV4qT9jwPTh2wLhrXgqSB7fdCPPU62fthif79SXXw"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/IDAv1Forwarder.sol": {
        "keccak256": "0x32f576bd41901378ef96e3a2ff1e19c9780ce0f16b8109169f38f7e34fe4f18c",
        "urls": [
          "bzz-raw://4d2824f7adbdb7ddab374d5b41a93213b4d76df29a2c57b64034709b753e0986",
          "dweb:/ipfs/QmTHh11dvycAkyadazDnfef4JVPZAwCE4hnigXT9yByBtx"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/Resolver.sol": {
        "keccak256": "0x616e66051c20604231d6c747ed9ebe2bd087c10f2122c0ab599d4edb4f032529",
        "urls": [
          "bzz-raw://97549d739db711c2c3920050aa96b8cc3676dbd112ec5ea76ece727c889634ca",
          "dweb:/ipfs/QmfMoTwGPLD2eWGxropspWFdLAZUCJEQsJbhztDRmEV14D"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeployer.sol": {
        "keccak256": "0x6b8a965883e34a22bfe8a7863f3ef23ff013a2d92131a956d9ffd0e1f7283726",
        "urls": [
          "bzz-raw://7d23db9eba92d586e58209a6ffc6238c335979e8ae20320222ca16efbe0b395c",
          "dweb:/ipfs/QmXRtxTC9Fw4APbZ5DXCoavCgzQa43cisNsX6mzL75UYRs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidFrameworkDeploymentSteps.sol": {
        "keccak256": "0x6981b89a429c235e3c5027c083404f9082ca4fd379a4c84cca4bf284dfeffc58",
        "urls": [
          "bzz-raw://21d5bcef7a2ba3e1fae128211ef2b27e962144a8ebb789fef014dd98f0ff806c",
          "dweb:/ipfs/QmNeYYsZ6xSqFJMKYpftyBTi3Eqm8gvD6wgs3uWfNJvUru"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/SuperfluidLoader.sol": {
        "keccak256": "0x9dd41d9dbd458372706a3710192731b17c321d0e3b287704a22756fdac1638d5",
        "urls": [
          "bzz-raw://776f0892481f8441fdaf917619ba1f2d6df2e6945916980be90320bc3e601b61",
          "dweb:/ipfs/QmVrwtS4y5tEauKAdT5dF379MN5DFuayZmMrZs3V7qxU7j"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TOGA.sol": {
        "keccak256": "0x0b2838d159d7ae6e79273420e25fac1c678040e4fa1ee6d6e04bfb9631be9d8c",
        "urls": [
          "bzz-raw://c5a162b609a429c62ac0d4dfcf34e487ddc61a53ef86940b797dc3a30904a4a8",
          "dweb:/ipfs/QmTWbw3B6Box6wXiv9D2Bn71CAWaHxpW9TkpcswqsvDRV1"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestGovernance.sol": {
        "keccak256": "0xe1cb0a525c3c0a257985927bb9ca3919cdaaf3fec29e2a272760a40338297eeb",
        "urls": [
          "bzz-raw://0d79026a00e9244fccb7bcad259b2defd1eb80cb1b05b5ba8a38bfbad7931047",
          "dweb:/ipfs/QmbLAbCjVPVrg4ohkwgrko8jtTwzWueihZsnM89b2zp5Kz"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestResolver.sol": {
        "keccak256": "0xc9507231f674a2146555c443d3d1354d549a5578bcb3d12225525129381c373f",
        "urls": [
          "bzz-raw://3f102b024dc00e1d980b3ac13b9828f5a613f725b0b2cf89b90ce69784a9cab7",
          "dweb:/ipfs/QmQpLjS6GzXq574f4eUxxvy5uvBTNFSXQXsbYfBMkFU2Ti"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/utils/TestToken.sol": {
        "keccak256": "0xcb8b3b0c8f8473e9481bcca698c2d2b4932adf0d90fcb2aa3e3cc5db647a1f6d",
        "urls": [
          "bzz-raw://586ac278ce8aabacee69c056cfa2e6aa9ec318dc89c0d98b2fc3fdd7d23414d7",
          "dweb:/ipfs/QmT38dQzgV6ZNJx9pV1Sv81SSGZMxoAXquCSaCC2JMCowP"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/test/foundry/FoundrySuperfluidTester.sol": {
        "keccak256": "0xe36015781e4935edd723c22121f9277c645bf10fdf347269fc1095aa4dac4697",
        "urls": [
          "bzz-raw://b809055527f1a539f3a512f970f78180448ae2fff5881b0284fbf6c12cfe088d",
          "dweb:/ipfs/QmPkBKEz7v5AJLPYkaTVU3ZDGtoxZKkHjPRQVTTbbECcaU"
        ],
        "license": "MIT"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x22fa71e63887fac892e90d7e5a35b25bd318e90e53840079b8e781c9236c4be1",
        "urls": [
          "bzz-raw://1d0aec0156b7fb31ddf74985b3e4bfb84300197645f94364dd80a48a5594df32",
          "dweb:/ipfs/QmR1VLbZoUUrSNdvVjgDF7WjJnYPvvVKWA6MbRGmn3yBAW"
        ],
        "license": "MIT"
      },
      "test/SuperfluidClub.t.sol": {
        "keccak256": "0x6e28aab5ec0751c872dfde1b563ec217c42797e1530b851cd0d06a81be68509c",
        "urls": [
          "bzz-raw://ce9c9d69c0a939d5363672afe3af244560cce907537603a3511c21bdde2758d8",
          "dweb:/ipfs/Qmaet4mG3DLLa9V3NUqPre6LUsay1cB36CwCfyoihKL5TQ"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/SuperfluidClub.t.sol",
    "id": 87967,
    "exportedSymbols": {
      "ConstantFlowAgreementV1": [
        54513
      ],
      "DSTest": [
        2523
      ],
      "ERC1820RegistryCompiled": [
        68415
      ],
      "EnumerableSet": [
        49549
      ],
      "FoundrySuperfluidTester": [
        86638
      ],
      "ISETH": [
        68155
      ],
      "ISuperToken": [
        66999
      ],
      "SafeCast": [
        48519
      ],
      "StdAssertions": [
        4016
      ],
      "StdChains": [
        4709
      ],
      "StdCheats": [
        7527
      ],
      "StdInvariant": [
        7817
      ],
      "StdStorage": [
        8567
      ],
      "StdStyle": [
        11231
      ],
      "StdUtils": [
        12079
      ],
      "SuperToken": [
        72499
      ],
      "SuperTokenV1Library": [
        63572
      ],
      "SuperfluidClub": [
        87322
      ],
      "SuperfluidClubTest": [
        87966
      ],
      "SuperfluidFrameworkDeployer": [
        79964
      ],
      "SuperfluidLoader": [
        81326
      ],
      "Test": [
        12130
      ],
      "TestBase": [
        2589
      ],
      "TestResolver": [
        82285
      ],
      "TestToken": [
        82356
      ],
      "UUPSProxy": [
        77590
      ],
      "Vm": [
        13657
      ],
      "console": [
        21721
      ],
      "console2": [
        29846
      ],
      "safeconsole": [
        43084
      ],
      "stdError": [
        7593
      ],
      "stdJson": [
        8393
      ],
      "stdMath": [
        8535
      ],
      "stdStorage": [
        10020
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5134:114",
    "nodes": [
      {
        "id": 87324,
        "nodeType": "PragmaDirective",
        "src": "39:24:114",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 87327,
        "nodeType": "ImportDirective",
        "src": "65:50:114",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87967,
        "sourceUnit": 12131,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87325,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 12130,
              "src": "73:4:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 87326,
              "name": "console2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29846,
              "src": "79:8:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87329,
        "nodeType": "ImportDirective",
        "src": "116:57:114",
        "nodes": [],
        "absolutePath": "src/SuperfluidClub.sol",
        "file": "../src/SuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87967,
        "sourceUnit": 87323,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87328,
              "name": "SuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87322,
              "src": "124:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87331,
        "nodeType": "ImportDirective",
        "src": "174:115:114",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87967,
        "sourceUnit": 67673,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87330,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66999,
              "src": "182:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87333,
        "nodeType": "ImportDirective",
        "src": "290:114:114",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87967,
        "sourceUnit": 63573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 87332,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63572,
              "src": "298:19:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87334,
        "nodeType": "ImportDirective",
        "src": "405:89:114",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/test/foundry/FoundrySuperfluidTester.sol",
        "file": "@superfluid-finance/ethereum-contracts/test/foundry/FoundrySuperfluidTester.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87967,
        "sourceUnit": 86639,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87966,
        "nodeType": "ContractDefinition",
        "src": "496:4676:114",
        "nodes": [
          {
            "id": 87341,
            "nodeType": "UsingForDirective",
            "src": "561:42:114",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 87338,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "567:19:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63572,
              "src": "567:19:114"
            },
            "typeName": {
              "id": 87340,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87339,
                "name": "ISuperToken",
                "nameLocations": [
                  "591:11:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66999,
                "src": "591:11:114"
              },
              "referencedDeclaration": 66999,
              "src": "591:11:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 87344,
            "nodeType": "VariableDeclaration",
            "src": "609:48:114",
            "nodes": [],
            "constant": true,
            "functionSelector": "f9cfa06f",
            "mutability": "constant",
            "name": "SECONDS_IN_A_DAY",
            "nameLocation": "633:16:114",
            "scope": 87966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87342,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "609:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 87343,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "652:5:114",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "public"
          },
          {
            "id": 87347,
            "nodeType": "VariableDeclaration",
            "src": "664:26:114",
            "nodes": [],
            "constant": false,
            "functionSelector": "0efd0973",
            "mutability": "mutable",
            "name": "club",
            "nameLocation": "686:4:114",
            "scope": 87966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
              "typeString": "contract SuperfluidClub"
            },
            "typeName": {
              "id": 87346,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87345,
                "name": "SuperfluidClub",
                "nameLocations": [
                  "664:14:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 87322,
                "src": "664:14:114"
              },
              "referencedDeclaration": 87322,
              "src": "664:14:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                "typeString": "contract SuperfluidClub"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87350,
            "nodeType": "VariableDeclaration",
            "src": "696:30:114",
            "nodes": [],
            "constant": false,
            "functionSelector": "a62dfac0",
            "mutability": "mutable",
            "name": "clubAsToken",
            "nameLocation": "715:11:114",
            "scope": 87966,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISuperToken_$66999",
              "typeString": "contract ISuperToken"
            },
            "typeName": {
              "id": 87349,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 87348,
                "name": "ISuperToken",
                "nameLocations": [
                  "696:11:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66999,
                "src": "696:11:114"
              },
              "referencedDeclaration": 66999,
              "src": "696:11:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                "typeString": "contract ISuperToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 87386,
            "nodeType": "FunctionDefinition",
            "src": "733:206:114",
            "nodes": [],
            "body": {
              "id": 87385,
              "nodeType": "Block",
              "src": "766:173:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87354,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "776:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SuperfluidClubTest_$87966_$",
                          "typeString": "type(contract super SuperfluidClubTest)"
                        }
                      },
                      "id": 87356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "782:5:114",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 82741,
                      "src": "776:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 87357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "776:13:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87358,
                  "nodeType": "ExpressionStatement",
                  "src": "776:13:114"
                },
                {
                  "expression": {
                    "id": 87364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87359,
                      "name": "club",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87347,
                      "src": "799:4:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                        "typeString": "contract SuperfluidClub"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 87362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "806:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SuperfluidClub_$87322_$",
                          "typeString": "function () returns (contract SuperfluidClub)"
                        },
                        "typeName": {
                          "id": 87361,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 87360,
                            "name": "SuperfluidClub",
                            "nameLocations": [
                              "810:14:114"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 87322,
                            "src": "810:14:114"
                          },
                          "referencedDeclaration": 87322,
                          "src": "810:14:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        }
                      },
                      "id": 87363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "806:20:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                        "typeString": "contract SuperfluidClub"
                      }
                    },
                    "src": "799:27:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                      "typeString": "contract SuperfluidClub"
                    }
                  },
                  "id": 87365,
                  "nodeType": "ExpressionStatement",
                  "src": "799:27:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87371,
                              "name": "sf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82541,
                              "src": "860:2:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Framework_$80086_storage",
                                "typeString": "struct SuperfluidFrameworkDeploymentSteps.Framework storage ref"
                              }
                            },
                            "id": 87372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "863:17:114",
                            "memberName": "superTokenFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80070,
                            "src": "860:20:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$73243",
                              "typeString": "contract SuperTokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$73243",
                              "typeString": "contract SuperTokenFactory"
                            }
                          ],
                          "id": 87370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "852:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87369,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "852:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "852:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87366,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "836:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87368,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "841:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86698,
                      "src": "836:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:46:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87375,
                  "nodeType": "ExpressionStatement",
                  "src": "836:46:114"
                },
                {
                  "expression": {
                    "id": 87383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87376,
                      "name": "clubAsToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87350,
                      "src": "892:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$66999",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87380,
                              "name": "club",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87347,
                              "src": "926:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "918:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87378,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "918:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "918:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87377,
                        "name": "ISuperToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66999,
                        "src": "906:11:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                          "typeString": "type(contract ISuperToken)"
                        }
                      },
                      "id": 87382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "906:26:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperToken_$66999",
                        "typeString": "contract ISuperToken"
                      }
                    },
                    "src": "892:40:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperToken_$66999",
                      "typeString": "contract ISuperToken"
                    }
                  },
                  "id": 87384,
                  "nodeType": "ExpressionStatement",
                  "src": "892:40:114"
                }
              ]
            },
            "baseFunctions": [
              82741
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "742:5:114",
            "overrides": {
              "id": 87352,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "757:8:114"
            },
            "parameters": {
              "id": 87351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:2:114"
            },
            "returnParameters": {
              "id": 87353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "766:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87432,
            "nodeType": "FunctionDefinition",
            "src": "945:379:114",
            "nodes": [],
            "body": {
              "id": 87431,
              "nodeType": "Block",
              "src": "978:346:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87390,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "997:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1009:4:114",
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66616,
                          "src": "997:16:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 87392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "997:18:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "436c756258",
                        "id": 87393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1017:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13bcd0773fed2df6f1c1110c8a23dee2039a652f0e38682761f85b82c3297885",
                          "typeString": "literal_string \"ClubX\""
                        },
                        "value": "ClubX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13bcd0773fed2df6f1c1110c8a23dee2039a652f0e38682761f85b82c3297885",
                          "typeString": "literal_string \"ClubX\""
                        }
                      ],
                      "id": 87389,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 2244,
                      "src": "988:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 87394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87395,
                  "nodeType": "ExpressionStatement",
                  "src": "988:37:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87397,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "1044:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1056:6:114",
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66625,
                          "src": "1044:18:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 87399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1044:20:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "436c756258",
                        "id": 87400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1066:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_13bcd0773fed2df6f1c1110c8a23dee2039a652f0e38682761f85b82c3297885",
                          "typeString": "literal_string \"ClubX\""
                        },
                        "value": "ClubX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_13bcd0773fed2df6f1c1110c8a23dee2039a652f0e38682761f85b82c3297885",
                          "typeString": "literal_string \"ClubX\""
                        }
                      ],
                      "id": 87396,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 2244,
                      "src": "1035:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 87401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:39:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87402,
                  "nodeType": "ExpressionStatement",
                  "src": "1035:39:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87404,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "1093:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1105:11:114",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66642,
                          "src": "1093:23:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 87406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1093:25:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 87407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:30:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      ],
                      "id": 87403,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "1084:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:67:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87409,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:67:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87415,
                                "name": "club",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87347,
                                "src": "1200:4:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1192:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87413,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1192:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1192:13:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87411,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "1170:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1182:9:114",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66653,
                          "src": "1170:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1170:36:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 87418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1208:30:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      ],
                      "id": 87410,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "1161:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:78:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87420,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:78:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87422,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "1289:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1294:5:114",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43664,
                          "src": "1289:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 87424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1289:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 87427,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1311:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClubTest_$87966",
                              "typeString": "contract SuperfluidClubTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClubTest_$87966",
                              "typeString": "contract SuperfluidClubTest"
                            }
                          ],
                          "id": 87426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1303:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87425,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1303:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1303:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87421,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 552,
                      "src": "1280:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 87429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87430,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:37:114"
                }
              ]
            },
            "functionSelector": "23f8603a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeployment",
            "nameLocation": "954:14:114",
            "parameters": {
              "id": 87387,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:2:114"
            },
            "returnParameters": {
              "id": 87388,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87452,
            "nodeType": "FunctionDefinition",
            "src": "1330:146:114",
            "nodes": [],
            "body": {
              "id": 87451,
              "nodeType": "Block",
              "src": "1365:111:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 87438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1391:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "expression": {
                        "id": 87435,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "1375:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1378:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "1375:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:38:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87440,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:38:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87446,
                              "name": "sf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82541,
                              "src": "1447:2:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Framework_$80086_storage",
                                "typeString": "struct SuperfluidFrameworkDeploymentSteps.Framework storage ref"
                              }
                            },
                            "id": 87447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1450:17:114",
                            "memberName": "superTokenFactory",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80070,
                            "src": "1447:20:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$73243",
                              "typeString": "contract SuperTokenFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperTokenFactory_$73243",
                              "typeString": "contract SuperTokenFactory"
                            }
                          ],
                          "id": 87445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1439:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87444,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1439:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1439:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87441,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "1423:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1428:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86698,
                      "src": "1423:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:46:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87450,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:46:114"
                }
              ]
            },
            "functionSelector": "4580ab0c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testInitOnlyOnce",
            "nameLocation": "1339:16:114",
            "parameters": {
              "id": 87433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1355:2:114"
            },
            "returnParameters": {
              "id": 87434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1365:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87474,
            "nodeType": "FunctionDefinition",
            "src": "1482:187:114",
            "nodes": [],
            "body": {
              "id": 87473,
              "nodeType": "Block",
              "src": "1534:135:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87458,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "1558:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87455,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "1544:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1547:10:114",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13260,
                      "src": "1544:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87460,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:20:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 87464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1590:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 87461,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "1574:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1577:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "1574:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1574:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87466,
                  "nodeType": "ExpressionStatement",
                  "src": "1574:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87470,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82476,
                        "src": "1658:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87467,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "1635:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1640:17:114",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43715,
                      "src": "1635:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:27:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87472,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:27:114"
                }
              ]
            },
            "functionSelector": "8fb6dd52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOnlyOwnerCanTransferOwnership",
            "nameLocation": "1491:33:114",
            "parameters": {
              "id": 87453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1524:2:114"
            },
            "returnParameters": {
              "id": 87454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87513,
            "nodeType": "FunctionDefinition",
            "src": "1675:262:114",
            "nodes": [],
            "body": {
              "id": 87512,
              "nodeType": "Block",
              "src": "1710:227:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87478
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87478,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "1728:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87512,
                      "src": "1720:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87477,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1720:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87484,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 87481,
                          "name": "club",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87347,
                          "src": "1752:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        ],
                        "id": 87480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1744:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87479,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1744:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1744:13:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1758:7:114",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "1744:21:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1720:45:114"
                },
                {
                  "assignments": [
                    87486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87486,
                      "mutability": "mutable",
                      "name": "clubAsPayable",
                      "nameLocation": "1791:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87512,
                      "src": "1775:29:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 87485,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1775:15:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87494,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87491,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "1823:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1815:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87489,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1815:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1807:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87487,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1807:8:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:22:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1775:54:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 87498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1862:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87495,
                        "name": "clubAsPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87486,
                        "src": "1839:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1853:8:114",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1839:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1839:28:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87500,
                  "nodeType": "ExpressionStatement",
                  "src": "1839:28:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87504,
                              "name": "club",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87347,
                              "src": "1894:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1886:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87502,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1886:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1886:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1900:7:114",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1886:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87507,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87478,
                          "src": "1909:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 87508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1925:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1909:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87501,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "1877:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1877:53:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87511,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:53:114"
                }
              ]
            },
            "functionSelector": "cdc85519",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testReceiveEther",
            "nameLocation": "1684:16:114",
            "parameters": {
              "id": 87475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1700:2:114"
            },
            "returnParameters": {
              "id": 87476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1710:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87542,
            "nodeType": "FunctionDefinition",
            "src": "1943:160:114",
            "nodes": [],
            "body": {
              "id": 87541,
              "nodeType": "Block",
              "src": "1976:127:114",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 87539,
                    "nodeType": "Block",
                    "src": "2016:81:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87529,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87517,
                                  "src": "2058:1:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "expression": {
                                  "id": 87527,
                                  "name": "club",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87347,
                                  "src": "2039:4:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                },
                                "id": 87528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2044:13:114",
                                "memberName": "getAllocation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87057,
                                "src": "2039:18:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_uint256_$",
                                  "typeString": "function (uint8) pure external returns (uint256)"
                                }
                              },
                              "id": 87530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2039:21:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 87536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3336352e3933",
                                "id": 87531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2062:12:114",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_365930000000000000000_by_1",
                                  "typeString": "int_const 365930000000000000000"
                                },
                                "value": "365.93"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 87534,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 87532,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2078:1:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "id": 87533,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87517,
                                      "src": "2083:1:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "2078:6:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 87535,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2077:8:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2062:23:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 87526,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2717,
                              2742,
                              2755,
                              2771,
                              2813,
                              2855,
                              2897,
                              2934,
                              2971,
                              3008,
                              552,
                              577,
                              607,
                              632,
                              691,
                              716,
                              746,
                              771,
                              2244,
                              2279
                            ],
                            "referencedDeclaration": 746,
                            "src": "2030:8:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 87537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2030:56:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87538,
                        "nodeType": "ExpressionStatement",
                        "src": "2030:56:114"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 87522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87520,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87517,
                      "src": "2004:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "37",
                      "id": 87521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2008:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "src": "2004:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87540,
                  "initializationExpression": {
                    "assignments": [
                      87517
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 87517,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1997:1:114",
                        "nodeType": "VariableDeclaration",
                        "scope": 87540,
                        "src": "1991:7:114",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 87516,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1991:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 87519,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 87518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2001:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1991:11:114"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 87524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2011:3:114",
                      "subExpression": {
                        "id": 87523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87517,
                        "src": "2011:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 87525,
                    "nodeType": "ExpressionStatement",
                    "src": "2011:3:114"
                  },
                  "nodeType": "ForStatement",
                  "src": "1986:111:114"
                }
              ]
            },
            "functionSelector": "22e74602",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAllocation",
            "nameLocation": "1952:14:114",
            "parameters": {
              "id": 87514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1966:2:114"
            },
            "returnParameters": {
              "id": 87515,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1976:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87594,
            "nodeType": "FunctionDefinition",
            "src": "2109:418:114",
            "nodes": [],
            "body": {
              "id": 87593,
              "nodeType": "Block",
              "src": "2153:374:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 87548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2199:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 87546,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2172:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2177:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2172:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2172:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 87550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2203:9:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "id": 87545,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2163:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2163:50:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87552,
                  "nodeType": "ExpressionStatement",
                  "src": "2163:50:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 87556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2259:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "expression": {
                            "id": 87554,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2232:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2237:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2232:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2232:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e3035",
                        "id": 87558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2263:10:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "0.05"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        }
                      ],
                      "id": 87553,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2223:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2223:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87560,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 87564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2320:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "expression": {
                            "id": 87562,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2293:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2298:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2293:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2293:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e3032",
                        "id": 87566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2324:10:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000_by_1",
                          "typeString": "int_const 20000000000000000"
                        },
                        "value": "0.02"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000_by_1",
                          "typeString": "int_const 20000000000000000"
                        }
                      ],
                      "id": 87561,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2284:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2284:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87568,
                  "nodeType": "ExpressionStatement",
                  "src": "2284:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 87572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2381:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "expression": {
                            "id": 87570,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2354:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2359:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2354:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e3031",
                        "id": 87574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2385:10:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        },
                        "value": "0.01"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        }
                      ],
                      "id": 87569,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2345:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87576,
                  "nodeType": "ExpressionStatement",
                  "src": "2345:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "35",
                            "id": 87580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2442:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            },
                            "value": "5"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_5_by_1",
                              "typeString": "int_const 5"
                            }
                          ],
                          "expression": {
                            "id": 87578,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2415:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2420:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2415:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2415:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e303035",
                        "id": 87582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:11:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5000000000000000_by_1",
                          "typeString": "int_const 5000000000000000"
                        },
                        "value": "0.005"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_5000000000000000_by_1",
                          "typeString": "int_const 5000000000000000"
                        }
                      ],
                      "id": 87577,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2406:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87584,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:52:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "36",
                            "id": 87588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2504:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            },
                            "value": "6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_6_by_1",
                              "typeString": "int_const 6"
                            }
                          ],
                          "expression": {
                            "id": 87586,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "2477:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          },
                          "id": 87587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2482:21:114",
                          "memberName": "getMaxFlowRateByLevel",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87104,
                          "src": "2477:26:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint8_$returns$_t_int96_$",
                            "typeString": "function (uint8) pure external returns (int96)"
                          }
                        },
                        "id": 87589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2477:29:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      {
                        "hexValue": "302e303031",
                        "id": 87590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2508:11:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        },
                        "value": "0.001"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000_by_1",
                          "typeString": "int_const 1000000000000000"
                        }
                      ],
                      "id": 87585,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 691,
                      "src": "2468:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 87591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2468:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87592,
                  "nodeType": "ExpressionStatement",
                  "src": "2468:52:114"
                }
              ]
            },
            "functionSelector": "8496a1fe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetMaxFlowRateByLevel",
            "nameLocation": "2118:25:114",
            "parameters": {
              "id": 87543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2143:2:114"
            },
            "returnParameters": {
              "id": 87544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2153:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87629,
            "nodeType": "FunctionDefinition",
            "src": "2533:202:114",
            "nodes": [],
            "body": {
              "id": 87628,
              "nodeType": "Block",
              "src": "2573:162:114",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 87626,
                    "nodeType": "Block",
                    "src": "2613:116:114",
                    "statements": [
                      {
                        "body": {
                          "id": 87624,
                          "nodeType": "Block",
                          "src": "2658:61:114",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87620,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87598,
                                    "src": "2699:1:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "id": 87621,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87608,
                                    "src": "2702:1:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 87617,
                                    "name": "club",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87347,
                                    "src": "2676:4:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                      "typeString": "contract SuperfluidClub"
                                    }
                                  },
                                  "id": 87619,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2681:17:114",
                                  "memberName": "getFlowRateAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 87150,
                                  "src": "2676:22:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_uint8_$_t_uint32_$returns$_t_int96_$",
                                    "typeString": "function (uint8,uint32) view external returns (int96)"
                                  }
                                },
                                "id": 87622,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2676:28:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_int96",
                                  "typeString": "int96"
                                }
                              },
                              "id": 87623,
                              "nodeType": "ExpressionStatement",
                              "src": "2676:28:114"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87611,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87608,
                            "src": "2646:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "39",
                            "id": 87612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2650:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_9_by_1",
                              "typeString": "int_const 9"
                            },
                            "value": "9"
                          },
                          "src": "2646:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87625,
                        "initializationExpression": {
                          "assignments": [
                            87608
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 87608,
                              "mutability": "mutable",
                              "name": "j",
                              "nameLocation": "2639:1:114",
                              "nodeType": "VariableDeclaration",
                              "scope": 87625,
                              "src": "2632:8:114",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "typeName": {
                                "id": 87607,
                                "name": "uint32",
                                "nodeType": "ElementaryTypeName",
                                "src": "2632:6:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 87610,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 87609,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2643:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2632:12:114"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 87615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2653:3:114",
                            "subExpression": {
                              "id": 87614,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87608,
                              "src": "2653:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 87616,
                          "nodeType": "ExpressionStatement",
                          "src": "2653:3:114"
                        },
                        "nodeType": "ForStatement",
                        "src": "2627:92:114"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 87603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87601,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87598,
                      "src": "2601:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "37",
                      "id": 87602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2605:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "src": "2601:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87627,
                  "initializationExpression": {
                    "assignments": [
                      87598
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 87598,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2594:1:114",
                        "nodeType": "VariableDeclaration",
                        "scope": 87627,
                        "src": "2588:7:114",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 87597,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2588:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 87600,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 87599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2598:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2588:11:114"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 87605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2608:3:114",
                      "subExpression": {
                        "id": 87604,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87598,
                        "src": "2608:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 87606,
                    "nodeType": "ExpressionStatement",
                    "src": "2608:3:114"
                  },
                  "nodeType": "ForStatement",
                  "src": "2583:146:114"
                }
              ]
            },
            "functionSelector": "5f988f3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetFlowRateAmount",
            "nameLocation": "2542:21:114",
            "parameters": {
              "id": 87595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2563:2:114"
            },
            "returnParameters": {
              "id": 87596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2573:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87741,
            "nodeType": "FunctionDefinition",
            "src": "2741:765:114",
            "nodes": [],
            "body": {
              "id": 87740,
              "nodeType": "Block",
              "src": "2772:734:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87635,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "2796:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87632,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "2782:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2785:10:114",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13260,
                      "src": "2782:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87637,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:20:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 87641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2828:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 87638,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "2812:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2815:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "2812:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2812:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87643,
                  "nodeType": "ExpressionStatement",
                  "src": "2812:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87647,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "2887:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 87648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2894:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87644,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "2873:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2878:8:114",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87243,
                      "src": "2873:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 87649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2873:26:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87650,
                  "nodeType": "ExpressionStatement",
                  "src": "2873:26:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87651,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "2909:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2912:9:114",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13277,
                      "src": "2909:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:14:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87655,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:14:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c6964207265636569766572",
                        "id": 87659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2950:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        },
                        "value": "Invalid receiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        }
                      ],
                      "expression": {
                        "id": 87656,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "2934:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2937:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "2934:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:35:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87661,
                  "nodeType": "ExpressionStatement",
                  "src": "2934:35:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87667,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3001:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2993:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87665,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2993:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2993:10:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 87669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3005:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87662,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "2979:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2984:8:114",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87243,
                      "src": "2979:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 87670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:31:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87671,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:31:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c696420616d6f756e74",
                        "id": 87675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3037:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        },
                        "value": "Invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        }
                      ],
                      "expression": {
                        "id": 87672,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "3021:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3024:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "3021:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:33:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87677,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:33:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87681,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82476,
                        "src": "3078:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 87682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 87678,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "3064:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3069:8:114",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87243,
                      "src": "3064:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 87683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:21:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87684,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:21:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e6365",
                        "id": 87688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3112:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        },
                        "value": "Not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        }
                      ],
                      "expression": {
                        "id": 87685,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "3096:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3099:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "3096:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3096:37:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87690,
                  "nodeType": "ExpressionStatement",
                  "src": "3096:37:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87694,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82476,
                        "src": "3157:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 87695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 87691,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "3143:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3148:8:114",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87243,
                      "src": "3143:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 87696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:25:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87697,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:25:114"
                },
                {
                  "assignments": [
                    87699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87699,
                      "mutability": "mutable",
                      "name": "clubAsPayable",
                      "nameLocation": "3229:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87740,
                      "src": "3213:29:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 87698,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3213:15:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87707,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87704,
                            "name": "club",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87347,
                            "src": "3261:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3253:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87702,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3253:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3253:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3245:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87700,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3245:8:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3245:22:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3213:54:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 87711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3300:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87708,
                        "name": "clubAsPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87699,
                        "src": "3277:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3291:8:114",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3277:22:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3277:28:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87713,
                  "nodeType": "ExpressionStatement",
                  "src": "3277:28:114"
                },
                {
                  "assignments": [
                    87715
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87715,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "3361:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87740,
                      "src": "3353:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87714,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3353:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87721,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 87718,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82470,
                          "src": "3385:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3377:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3377:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3377:14:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3392:7:114",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3377:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3353:46:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87725,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "3423:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 87726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3430:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87722,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "3409:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3414:8:114",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87243,
                      "src": "3409:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 87727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3409:26:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87728,
                  "nodeType": "ExpressionStatement",
                  "src": "3409:26:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87732,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82470,
                              "src": "3462:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3454:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3454:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3454:14:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3469:7:114",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3454:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87735,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87715,
                          "src": "3478:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 87736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3494:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3478:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87729,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "3445:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3445:54:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87739,
                  "nodeType": "ExpressionStatement",
                  "src": "3445:54:114"
                }
              ]
            },
            "functionSelector": "d509b16c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "2750:12:114",
            "parameters": {
              "id": 87630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:2:114"
            },
            "returnParameters": {
              "id": 87631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2772:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87796,
            "nodeType": "FunctionDefinition",
            "src": "3512:441:114",
            "nodes": [],
            "body": {
              "id": 87795,
              "nodeType": "Block",
              "src": "3539:414:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87747,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "3563:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87744,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "3549:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3552:10:114",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13260,
                      "src": "3549:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3549:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87749,
                  "nodeType": "ExpressionStatement",
                  "src": "3549:20:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 87753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:34:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 87750,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "3579:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87752,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3582:12:114",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13311,
                      "src": "3579:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 87754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:51:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87755,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:51:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 87759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3650:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "expression": {
                        "id": 87756,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "3640:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3645:4:114",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87264,
                      "src": "3640:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87761,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:15:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87762,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "3665:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3668:9:114",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13277,
                      "src": "3665:12:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 87765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:14:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87766,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:14:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 87770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3744:10:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 87767,
                        "name": "club",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87347,
                        "src": "3734:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3739:4:114",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87264,
                      "src": "3734:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 87771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3734:21:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87772,
                  "nodeType": "ExpressionStatement",
                  "src": "3734:21:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 87774,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "3774:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3786:11:114",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66642,
                          "src": "3774:23:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 87776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3774:25:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "id": 87779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030303030303030303030303030303030",
                          "id": 87777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3801:30:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(34 digits omitted)...0000"
                          },
                          "value": "100000000000000000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 87778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3834:10:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        },
                        "src": "3801:43:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      ],
                      "id": 87773,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "3765:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3765:80:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87781,
                  "nodeType": "ExpressionStatement",
                  "src": "3765:80:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87787,
                                "name": "club",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87347,
                                "src": "3894:4:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3886:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87785,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3886:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3886:13:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87783,
                            "name": "clubAsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87350,
                            "src": "3864:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISuperToken_$66999",
                              "typeString": "contract ISuperToken"
                            }
                          },
                          "id": 87784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3876:9:114",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 66653,
                          "src": "3864:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3864:36:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "id": 87792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030303030303030303030303030303030303030303030",
                          "id": 87790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3902:30:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                            "typeString": "int_const 1000...(34 digits omitted)...0000"
                          },
                          "value": "100000000000000000000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 87791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3935:10:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "value": "1000"
                        },
                        "src": "3902:43:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000001000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        }
                      ],
                      "id": 87782,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "3855:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:91:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87794,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:91:114"
                }
              ]
            },
            "functionSelector": "9642ddaf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMint",
            "nameLocation": "3521:8:114",
            "parameters": {
              "id": 87742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3529:2:114"
            },
            "returnParameters": {
              "id": 87743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3539:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87874,
            "nodeType": "FunctionDefinition",
            "src": "3959:569:114",
            "nodes": [],
            "body": {
              "id": 87873,
              "nodeType": "Block",
              "src": "3994:534:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87800,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4012:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87873,
                      "src": "4004:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4004:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87806,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 87803,
                          "name": "alice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82470,
                          "src": "4036:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4028:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87801,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4028:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4028:14:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4043:7:114",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4028:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4004:46:114"
                },
                {
                  "assignments": [
                    87808
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87808,
                      "mutability": "mutable",
                      "name": "aliceAsPayable",
                      "nameLocation": "4076:14:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87873,
                      "src": "4060:30:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 87807,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4060:15:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87816,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87813,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82470,
                            "src": "4109:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4101:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87811,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4101:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4101:14:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4093:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87809,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4093:8:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4093:23:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4060:56:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87822,
                        "name": "aliceAsPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87808,
                        "src": "4157:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 87817,
                          "name": "club",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87347,
                          "src": "4126:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        },
                        "id": 87819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4131:7:114",
                        "memberName": "sponsor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87004,
                        "src": "4126:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable) payable external"
                        }
                      },
                      "id": 87821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 87820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4146:9:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "4126:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$value",
                        "typeString": "function (address payable) payable external"
                      }
                    },
                    "id": 87823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:46:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87824,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:46:114"
                },
                {
                  "assignments": [
                    87826
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87826,
                      "mutability": "mutable",
                      "name": "aliceReceivingFlow",
                      "nameLocation": "4191:18:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87873,
                      "src": "4183:26:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87825,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4183:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87841,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 87835,
                                    "name": "club",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87347,
                                    "src": "4259:4:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                      "typeString": "contract SuperfluidClub"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                      "typeString": "contract SuperfluidClub"
                                    }
                                  ],
                                  "id": 87834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4251:7:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 87833,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4251:7:114",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 87836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4251:13:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 87837,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82470,
                                "src": "4266:5:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 87831,
                                "name": "clubAsToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87350,
                                "src": "4227:11:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              "id": 87832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4239:11:114",
                              "memberName": "getFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61880,
                              "src": "4227:23:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66999_$",
                                "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                              }
                            },
                            "id": 87838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4227:45:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4220:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87829,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4220:6:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4220:53:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4212:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87827,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4212:7:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4212:62:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4183:91:114"
                },
                {
                  "assignments": [
                    87843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87843,
                      "mutability": "mutable",
                      "name": "aliceExpectedFlow",
                      "nameLocation": "4292:17:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87873,
                      "src": "4284:25:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4284:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87847,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e31",
                      "id": 87844,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4312:9:114",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000_by_1",
                        "typeString": "int_const 100000000000000000"
                      },
                      "value": "0.1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 87845,
                      "name": "SECONDS_IN_A_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87344,
                      "src": "4324:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4312:28:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4284:56:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87849,
                        "name": "aliceReceivingFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87826,
                        "src": "4359:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87850,
                        "name": "aliceExpectedFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87843,
                        "src": "4379:17:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87848,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "4350:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4350:47:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87852,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:47:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87856,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82470,
                              "src": "4424:5:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4416:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87854,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4416:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4416:14:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4431:7:114",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4416:22:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87859,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87800,
                          "src": "4440:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "302e3039",
                          "id": 87860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4457:10:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_90000000000000000_by_1",
                            "typeString": "int_const 90000000000000000"
                          },
                          "value": "0.09"
                        },
                        "src": "4440:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87853,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "4407:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:61:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87863,
                  "nodeType": "ExpressionStatement",
                  "src": "4407:61:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87867,
                              "name": "club",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87347,
                              "src": "4495:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4487:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87865,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4487:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4487:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4501:7:114",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4487:21:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e3031",
                        "id": 87870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4510:10:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        },
                        "value": "0.01"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000_by_1",
                          "typeString": "int_const 10000000000000000"
                        }
                      ],
                      "id": 87864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "4478:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:43:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87872,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:43:114"
                }
              ]
            },
            "functionSelector": "45897090",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddProtegeL0",
            "nameLocation": "3968:16:114",
            "parameters": {
              "id": 87797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3984:2:114"
            },
            "returnParameters": {
              "id": 87798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3994:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87965,
            "nodeType": "FunctionDefinition",
            "src": "4534:636:114",
            "nodes": [],
            "body": {
              "id": 87964,
              "nodeType": "Block",
              "src": "4569:601:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87878
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87878,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4587:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87964,
                      "src": "4579:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87877,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4579:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87884,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 87881,
                          "name": "bob",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82476,
                          "src": "4611:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4603:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87879,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4603:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4603:12:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4616:7:114",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4603:20:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4579:44:114"
                },
                {
                  "assignments": [
                    87886
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87886,
                      "mutability": "mutable",
                      "name": "aliceAsPayable",
                      "nameLocation": "4649:14:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87964,
                      "src": "4633:30:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 87885,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4633:15:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87894,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87891,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82470,
                            "src": "4682:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4674:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87889,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4674:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4674:14:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4666:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87887,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4666:8:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:23:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4633:56:114"
                },
                {
                  "assignments": [
                    87896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87896,
                      "mutability": "mutable",
                      "name": "bobAsPayable",
                      "nameLocation": "4715:12:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87964,
                      "src": "4699:28:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 87895,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4699:15:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87904,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87901,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 82476,
                            "src": "4746:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4738:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87899,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4738:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4738:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4730:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 87897,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4730:8:114",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:21:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4699:52:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87910,
                        "name": "aliceAsPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87886,
                        "src": "4792:14:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 87905,
                          "name": "club",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87347,
                          "src": "4761:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        },
                        "id": 87907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4766:7:114",
                        "memberName": "sponsor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87004,
                        "src": "4761:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable) payable external"
                        }
                      },
                      "id": 87909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 87908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4781:9:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "4761:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$value",
                        "typeString": "function (address payable) payable external"
                      }
                    },
                    "id": 87911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4761:46:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87912,
                  "nodeType": "ExpressionStatement",
                  "src": "4761:46:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87916,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82470,
                        "src": "4831:5:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87913,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2582,
                        "src": "4817:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13657",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87915,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4820:10:114",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13260,
                      "src": "4817:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4817:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87918,
                  "nodeType": "ExpressionStatement",
                  "src": "4817:20:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87924,
                        "name": "bobAsPayable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87896,
                        "src": "4879:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "expression": {
                          "id": 87919,
                          "name": "club",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87347,
                          "src": "4847:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                            "typeString": "contract SuperfluidClub"
                          }
                        },
                        "id": 87921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4852:7:114",
                        "memberName": "sponsor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87004,
                        "src": "4847:12:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$",
                          "typeString": "function (address payable) payable external"
                        }
                      },
                      "id": 87923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e3031",
                          "id": 87922,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4867:10:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        }
                      ],
                      "src": "4847:31:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_payable_$returns$__$value",
                        "typeString": "function (address payable) payable external"
                      }
                    },
                    "id": 87925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4847:45:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87926,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:45:114"
                },
                {
                  "assignments": [
                    87928
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87928,
                      "mutability": "mutable",
                      "name": "bobReceivingFlow",
                      "nameLocation": "4911:16:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87964,
                      "src": "4903:24:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87927,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4903:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87943,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 87937,
                                    "name": "club",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87347,
                                    "src": "4977:4:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                      "typeString": "contract SuperfluidClub"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SuperfluidClub_$87322",
                                      "typeString": "contract SuperfluidClub"
                                    }
                                  ],
                                  "id": 87936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4969:7:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 87935,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4969:7:114",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 87938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4969:13:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 87939,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 82476,
                                "src": "4984:3:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 87933,
                                "name": "clubAsToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87350,
                                "src": "4945:11:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                  "typeString": "contract ISuperToken"
                                }
                              },
                              "id": 87934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4957:11:114",
                              "memberName": "getFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61880,
                              "src": "4945:23:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66999_$",
                                "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                              }
                            },
                            "id": 87940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4945:43:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4938:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87931,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4938:6:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4938:51:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4930:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87929,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4930:7:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4930:60:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4903:87:114"
                },
                {
                  "assignments": [
                    87945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87945,
                      "mutability": "mutable",
                      "name": "bobExpectedFlow",
                      "nameLocation": "5008:15:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87964,
                      "src": "5000:23:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5000:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87949,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "302e3035",
                      "id": 87946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5026:10:114",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50000000000000000_by_1",
                        "typeString": "int_const 50000000000000000"
                      },
                      "value": "0.05"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 87947,
                      "name": "SECONDS_IN_A_DAY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87344,
                      "src": "5039:16:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5026:29:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5000:55:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87951,
                        "name": "bobReceivingFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87928,
                        "src": "5074:16:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87952,
                        "name": "bobExpectedFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87945,
                        "src": "5092:15:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87950,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "5065:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:43:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87954,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:43:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87958,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 82476,
                              "src": "5135:3:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5127:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87956,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5127:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5127:12:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5140:7:114",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "5127:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87961,
                        "name": "balanceBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87878,
                        "src": "5149:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87955,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2717,
                        2742,
                        2755,
                        2771,
                        2813,
                        2855,
                        2897,
                        2934,
                        2971,
                        3008,
                        552,
                        577,
                        607,
                        632,
                        691,
                        716,
                        746,
                        771,
                        2244,
                        2279
                      ],
                      "referencedDeclaration": 746,
                      "src": "5118:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 87962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5118:45:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87963,
                  "nodeType": "ExpressionStatement",
                  "src": "5118:45:114"
                }
              ]
            },
            "functionSelector": "1860d537",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddProtegeL1",
            "nameLocation": "4543:16:114",
            "parameters": {
              "id": 87875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4559:2:114"
            },
            "returnParameters": {
              "id": 87876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4569:0:114"
            },
            "scope": 87966,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "3130",
                "id": 87336,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "551:2:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10_by_1",
                  "typeString": "int_const 10"
                },
                "value": "10"
              }
            ],
            "baseName": {
              "id": 87335,
              "name": "FoundrySuperfluidTester",
              "nameLocations": [
                "527:23:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 86638,
              "src": "527:23:114"
            },
            "id": 87337,
            "nodeType": "InheritanceSpecifier",
            "src": "527:27:114"
          }
        ],
        "canonicalName": "SuperfluidClubTest",
        "contractDependencies": [
          79964,
          87322
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87966,
          86638,
          12130,
          2589,
          2586,
          12079,
          7817,
          7527,
          6763,
          4709,
          4016,
          2523
        ],
        "name": "SuperfluidClubTest",
        "nameLocation": "505:18:114",
        "scope": 87967,
        "usedErrors": [
          82429
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 114
}