{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Initialized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLAT_COST_SPONSORSHIP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "clubName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "clubSymbol",
          "type": "string"
        }
      ],
      "name": "_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "calculateFlowRate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct SuperfluidClub.Protege[6]",
          "name": "sponsors",
          "type": "tuple[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct SuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialAddress",
          "type": "address"
        }
      ],
      "name": "initializeProxy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldProtege",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200673438038062006734833981016040819052620000349162000149565b6001600160a01b0380841660805280831660a081905290821660c052604051849184918491907fcf554eb342edf010a94e07701ae91e99e90b769f649f03aeb1153654ddd43c0190600090a26040516001600160a01b038216907f8837af285f4d380af9227df9ebafa13d992b487fa6d7a4366bd4154576085b8990600090a2505050620000d1620000cb620000da60201b60201c565b620000de565b5050506200019d565b3390565b601f80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811681146200014657600080fd5b50565b6000806000606084860312156200015f57600080fd5b83516200016c8162000130565b60208501519093506200017f8162000130565b6040850151909250620001928162000130565b809150509250925092565b60805160a05160c0516164f06200024460003960006108d601526000610df0015260008181610676015281816112c701528181611336015281816116b301528181611a9c01528181611b6b01528181611e2e01528181611fb6015281816126de01528181612b2601528181612bf001528181612c8801528181612cf001528181612d7801528181613720015281816137b701528181614b750152614db401526164f06000f3fe6080604052600436106104355760003560e01c8063766c4f3711610229578063bb0d196e1161012e578063e4a472c8116100b6578063f349f56a1161007a578063f349f56a14610e32578063f3fef3a314610e4f578063fad8b32a14610e6f578063fc673c4f14610e8f578063fe9d930314610eaf5761043c565b8063e4a472c814610d65578063eb3537cc14610d85578063ee719bc814610dc0578063ef43d2c614610dde578063f2fde38b14610e125761043c565b8063ca789464116100fd578063ca78946414610c9f578063cf97256d14610cbf578063d95b637114610cdf578063d9d078d614610cff578063dd62ed3e14610d1f5761043c565b8063bb0d196e14610c1f578063c68d428314610c3f578063c780fd8214610c5f578063ca0c1e7f14610c7f5761043c565b80639d876741116101b1578063a457c2d711610180578063a457c2d714610b8f578063a9059cbb14610baf578063b132a50d14610bcf578063b5c0b7eb14610bea578063b84cdd4a14610bff5761043c565b80639d87674114610b0f578063a0712d6814610b2f578063a1b2bf8b14610b4f578063a3a7e7f314610b6f5761043c565b80638934c79a116101f85780638934c79a14610a7c5780638da5cb5b14610a9c578063959b8c3f14610aba57806395d89b4114610ada5780639bd9bbc614610aef5761043c565b8063766c4f37146109f657806379359f6f14610a095780637ae058dc14610a2957806383ba252514610a5c5761043c565b8063313ce5671161033a5780634c5c0c85116102c257806362ad1b831161028657806362ad1b831461096157806366a12fb6146109815780636c2d9f2f146109a157806370a08231146109c1578063715018a6146109e15761043c565b80634c5c0c85146108c4578063556f0dc7146108f857806357cf7acb1461090c5780635b9d09cc1461092157806362aa5287146109415761043c565b806342fe09801161030957806342fe09801461081757806345977d03146108375780634a0687ef146108575780634b2763b3146108775780634b61cc33146108975761043c565b8063313ce5671461079b578063386fa221146107b757806339509351146107d757806341b706be146107f75761043c565b806318160ddd116103bd57806323b872dd1161038c57806323b872dd146106db578063245887fc146106fb578063270483971461071b57806329092d0e1461073b5780632ec8eec71461075b5761043c565b806318160ddd146106285780631863e8091461064757806320bc44251461066757806321fb177a146106ae5761043c565b8063098dce1311610404578063098dce13146104e3578063099e14ce1461050357806311bcc81e146105c857806312a6a3f8146105e857806316d055d6146106085761043c565b806306e485381461044657806306fdde0314610471578063090c415e14610493578063095ea7b3146104b35761043c565b3661043c57005b610444610ecf565b005b34801561045257600080fd5b5061045b610f01565b6040516104689190615213565b60405180910390f35b34801561047d57600080fd5b50610486610f12565b60405161046891906152b0565b34801561049f57600080fd5b506104446104ae366004615323565b610fa4565b3480156104bf57600080fd5b506104d36104ce36600461537e565b611057565b6040519015158152602001610468565b3480156104ef57600080fd5b506104446104fe3660046153eb565b61106e565b34801561050f57600080fd5b506105bb61051e36600461544a565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0390811660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015290565b60405161046891906154b1565b3480156105d457600080fd5b506104446105e33660046154bf565b6111b3565b3480156105f457600080fd5b506104446106033660046154d8565b6111e2565b34801561061457600080fd5b50610444610623366004615523565b6112c5565b34801561063457600080fd5b506002545b604051908152602001610468565b34801561065357600080fd5b50610444610662366004615645565b611321565b34801561067357600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b039091168152602001610468565b3480156106ba57600080fd5b506106ce6106c936600461544a565b6115c1565b60405161046891906156d7565b3480156106e757600080fd5b506104d36106f6366004615714565b61169b565b34801561070757600080fd5b5061044461071636600461537e565b6116b1565b34801561072757600080fd5b50610444610736366004615755565b61172a565b34801561074757600080fd5b5061044461075636600461544a565b6117c6565b34801561076757600080fd5b5061077b61077636600461544a565b611a94565b604080519485526020850193909352918301526060820152608001610468565b3480156107a757600080fd5b5060405160128152602001610468565b3480156107c357600080fd5b5061045b6107d236600461544a565b611b37565b3480156107e357600080fd5b506104d36107f236600461537e565b611bda565b34801561080357600080fd5b50610444610812366004615523565b611c16565b34801561082357600080fd5b50610444610832366004615777565b611c42565b34801561084357600080fd5b506104446108523660046154bf565b611d64565b34801561086357600080fd5b5061044461087236600461544a565b611d90565b34801561088357600080fd5b50610444610892366004615714565b611e2c565b3480156108a357600080fd5b506108b76108b2366004615811565b611eb3565b6040516104689190615857565b3480156108d057600080fd5b506106967f000000000000000000000000000000000000000000000000000000000000000081565b34801561090457600080fd5b506001610639565b34801561091857600080fd5b50610444611ef8565b34801561092d57600080fd5b5061044461093c36600461588f565b611f5d565b34801561094d57600080fd5b5061044461095c366004615714565b611fb4565b34801561096d57600080fd5b5061044461097c3660046158de565b612008565b34801561098d57600080fd5b5061044461099c366004615714565b6120ac565b3480156109ad57600080fd5b506108b76109bc36600461597c565b6120cc565b3480156109cd57600080fd5b506106396109dc36600461544a565b61210e565b3480156109ed57600080fd5b50610444612137565b610444610a0436600461544a565b612149565b348015610a1557600080fd5b506104d3610a2436600461544a565b6126d6565b348015610a3557600080fd5b50610a49610a443660046159b1565b61275e565b604051600b9190910b8152602001610468565b348015610a6857600080fd5b50610444610a7736600461537e565b612781565b348015610a8857600080fd5b50610639610a973660046159b1565b6127ad565b348015610aa857600080fd5b50601f546001600160a01b0316610696565b348015610ac657600080fd5b50610444610ad536600461544a565b61284e565b348015610ae657600080fd5b5061048661289f565b348015610afb57600080fd5b50610444610b0a36600461588f565b6128ae565b348015610b1b57600080fd5b50610444610b2a3660046159d7565b612902565b348015610b3b57600080fd5b50610444610b4a3660046154bf565b612948565b348015610b5b57600080fd5b50610444610b6a3660046154d8565b6129b2565b348015610b7b57600080fd5b50610444610b8a36600461544a565b612a5c565b348015610b9b57600080fd5b506104d3610baa36600461537e565b612a70565b348015610bbb57600080fd5b506104d3610bca36600461537e565b612abf565b348015610bdb57600080fd5b50610639662386f26fc1000081565b348015610bf657600080fd5b50610639600681565b348015610c0b57600080fd5b506104d3610c1a36600461537e565b612acd565b348015610c2b57600080fd5b506104d3610c3a36600461544a565b612b1e565b348015610c4b57600080fd5b50610444610c5a3660046159d7565b612ba6565b348015610c6b57600080fd5b50610444610c7a366004615714565b612bee565b348015610c8b57600080fd5b50610444610c9a366004615a2f565b612c86565b348015610cab57600080fd5b50610444610cba36600461537e565b612cee565b348015610ccb57600080fd5b50610444610cda36600461537e565b612d63565b348015610ceb57600080fd5b506104d3610cfa366004615a9a565b612e4c565b348015610d0b57600080fd5b506104d3610d1a36600461537e565b612e5a565b348015610d2b57600080fd5b50610639610d3a366004615a9a565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b348015610d7157600080fd5b506104d3610d8036600461544a565b612e74565b348015610d9157600080fd5b50610da5610da036600461537e565b612e93565b60408051938452602084019290925290820152606001610468565b348015610dcc57600080fd5b50600d546001600160a01b0316610696565b348015610dea57600080fd5b506106967f000000000000000000000000000000000000000000000000000000000000000081565b348015610e1e57600080fd5b50610444610e2d36600461544a565b612fcd565b348015610e3e57600080fd5b5061063968270801d946c940000081565b348015610e5b57600080fd5b50610444610e6a36600461537e565b613034565b348015610e7b57600080fd5b50610444610e8a36600461544a565b613141565b348015610e9b57600080fd5b50610444610eaa366004615ad3565b613192565b348015610ebb57600080fd5b50610444610eca366004615b1a565b613233565b610eff610efa7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b613284565b565b6060610f0d60116132a8565b905090565b6060600e8054610f2190615b58565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4d90615b58565b8015610f9a5780601f10610f6f57610100808354040283529160200191610f9a565b820191906000526020600020905b815481529060010190602001808311610f7d57829003601f168201915b5050505050905090565b6000338585604051602001610fbb93929190615b92565b6040516020818303038152906040528051906020012090506110108184848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061330e92505050565b6040518481526001600160a01b0386169033907f30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d59859060200160405180910390a35050505050565b600061106433848461334f565b5060015b92915050565b601f54600160a01b900460ff16156110c35760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b601f805460ff60a01b1916600160a01b1790556040516285fc1360e71b815230906342fe0980906111039060009081908990899089908990600401615c04565b600060405180830381600087803b15801561111d57600080fd5b505af1158015611131573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d4283915061117b908390710125dfa371a19e6f7cb54395ca00000000009060248101615c52565b600060405180830381600087803b15801561119557600080fd5b505af11580156111a9573d6000803e3d6000fd5b5050505050505050565b6111df3333338460405180602001604052806000815250604051806020016040528060008152506133ff565b50565b60405133906000906111fa9083908790602001615c79565b60408051601f198184030181529190528051602090910120905061121e81846135bf565b1561123c5760405163782a90fb60e11b815260040160405180910390fd5b6112798185858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061330e92505050565b816001600160a01b03167f770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d8686866040516112b693929190615cb6565b60405180910390a25050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461130e5760405163c51efddd60e01b815260040160405180910390fd5b61131a848484846135fb565b5050505050565b604051632329212160e21b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ca4848490602401602060405180830381865afa158015611385573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a99190615cf7565b6113c65760405163327fd99160e21b815260040160405180910390fd5b60006113d061371b565b90506001600160a01b0381166113e35750845b6000856113f057866113f2565b815b90506000831361148f5761140583615d2a565b61140e85613860565b1461141b5761141b615d46565b61142484613860565b6001600160a01b0382166000908152600160205260408120805490919061144c908490615d5c565b90915550506001600160a01b03851660009081526001602052604081208054859290611479908490615d5c565b9091555061148a90508582866138ce565b611559565b851561149d5761149d615d46565b826114a785613860565b6114b19190615d5c565b6001600160a01b038316600090815260016020526040812080549091906114d9908490615d84565b909155506114e8905084613860565b6001600160a01b03881660009081526001602052604081208054909190611510908490615d5c565b90915550506001600160a01b0385166000908152600160205260408120805485929061153d908490615d5c565b9091555061154e90508288866138ce565b6115598286856138ce565b846001600160a01b0316876001600160a01b0316336001600160a01b03167fb8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f8c8589898f6040516115ae959493929190615da4565b60405180910390a4505050505050505050565b6115c96151c6565b8160005b6115d682612e74565b15611694576001600160a01b0380831660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b6080820152838261165481615dd7565b93506006811061166657611666615df0565b602090810291909101919091526001600160a01b0392831660009081529080526040902054909116906115cd565b5050919050565b60006116a9338585856135fb565b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146116fa5760405163c51efddd60e01b815260040160405180910390fd5b6117263383848460405180602001604052806000815250604051806020016040528060008152506133ff565b5050565b60405133906000906117429083908690602001615c79565b60405160208183030381529060405280519060200120905061176481846135bf565b6117815760405163dae1880960e01b815260040160405180910390fd5b61178b8184613901565b60405184815233907f71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b9060200160405180910390a250505050565b6117cf81612e74565b61180c5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420612070726f746567652160901b60448201526064016110ba565b6000611820601f546001600160a01b031690565b6001600160a01b0316336001600160a01b03161461183e5733611840565b305b6001600160a01b03808416600081815260208080526040808320815160a0810183528154968716815260ff600160a01b8804168185015263ffffffff600160a81b8804811693820193909352600160c81b870483166060820152600182018054600b81900b60808401529686529380526001600160e81b031990961690556bffffffffffffffffffffffff1990931690559293509091906118e79030908190879061392216565b600b0b13156118fd576118fb3080856139ba565b505b30600090815260208052604090208054600160a81b900463ffffffff1690601561192683615e06565b82546101009290920a63ffffffff81810219909316918316021790915582516001600160a01b0316600090815260208052604090208054600160c81b90049091169150601961197483615e06565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b03841660009081526020805260409020548351600160a81b90910490911691505b6119c281612e74565b1561131a576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff168160156119f983615e06565b91906101000a81548163ffffffff021916908363ffffffff16021790555050611a218361275e565b600182018054600090611a38908490600b0b615e26565b82546001600160601b039182166101009390930a9283029190920219909116179055506001810154600b0b600003611a7b57611a753083886139ba565b50611a8e565b6001810154611a8e908390600b0b6139d9565b506119b9565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1c9190615e58565b9050611b288582612e93565b91979096509094509092509050565b6001600160a01b038181166000908152602081905260409081902054905163c56a069d60e01b8152901960048201526060917f0000000000000000000000000000000000000000000000000000000000000000169063c56a069d90602401600060405180830381865afa158015611bb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110689190810190615e71565b3360008181526010602090815260408083206001600160a01b03871684529091528120549091611064918590611c11908690615f22565b61334f565b333014611c3657604051630fff4cc960e31b815260040160405180910390fd5b61131a838584846135fb565b600e8054611c4f90615b58565b159050611c9e5760405162461bcd60e51b815260206004820152601f60248201527f5375706572546f6b656e3a20616c726561647920696e697469616c697a65640060448201526064016110ba565b6000839003611ce85760405162461bcd60e51b81526020600482015260166024820152755375706572546f6b656e3a20656d707479206e616d6560501b60448201526064016110ba565b600d805460ff8716600160a01b026001600160a81b03199091166001600160a01b03891617179055600e611d1d848683615f83565b50600f611d2b828483615f83565b50611d3530613a05565b604051600080825290819060008051602061646e833981519152906020015b60405180910390a3505050505050565b6111df333333846040518060200160405280600081525060405180602001604052806000815250613b0a565b6001600160a01b038116611db75760405163d92e233d60e01b815260040160405180910390fd5b6000611de17f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5490565b6001600160a01b031614611e08576040516302ed543d60e51b815260040160405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc55565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611e755760405163c51efddd60e01b815260040160405180910390fd5b6001600160a01b03808416600090815260106020908152604080832093861683529290522054611eae9084908490611c11908590615f22565b505050565b60606000858585604051602001611ecc93929190615b92565b604051602081830303815290604052805190602001209050611eee8184613cbd565b9695505050505050565b611f0133612e74565b611f3e5760405162461bcd60e51b815260206004820152600e60248201526d4e6f7420612070726f746567652160901b60448201526064016110ba565b336000818152602080526040902060010154610eff9190600b0b6139d9565b611fae3333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250613b0a915050565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611ffd5760405163c51efddd60e01b815260040160405180910390fd5b611eae83838361334f565b336120156011828a613d4c565b6120325760405163f7f0222760e01b815260040160405180910390fd5b6111a98189898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525060019250613df5915050565b333014611ffd57604051630fff4cc960e31b815260040160405180910390fd5b6060600084846040516020016120e3929190615c79565b6040516020818303038152906040528051906020012090506121058184613cbd565b95945050505050565b60008061211a83611a94565b50505090506000811261212d5780612130565b60005b9392505050565b61213f613e6e565b610eff6000613ec8565b61215281612e74565b156121945760405162461bcd60e51b8152602060048201526012602482015271416c726561647920612070726f746567652160701b60448201526064016110ba565b6000806121a9601f546001600160a01b031690565b6001600160a01b0316336001600160a01b0316146121c9573360006121cd565b3060015b915091506121da82612e74565b806121e25750805b6122275760405162461bcd60e51b8152602060048201526016602482015275596f7520617265206e6f7420612070726f746567652160501b60448201526064016110ba565b6001600160a01b038216600090815260208052604081205434919061225890600160c81b900463ffffffff166127ad565b90508082101561229d5760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f75676820636f696e2160801b60448201526064016110ba565b6122a78183616042565b6001600160a01b03851660009081526020805260409020549092506006600160a01b90910460ff161061231c5760405162461bcd60e51b815260206004820152601e60248201527f4d61782073706f6e736f7273686970206c6576656c207265616368656421000060448201526064016110ba565b30600090815260208052604090208054600160a81b900463ffffffff1690601561234583616055565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038616600090815260208052604090208054600160c81b90049091169150601961239283616055565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b0386166000908152602080526040902054600160a81b9004169050845b6123dc81612e74565b15612547576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff1681601561241383616055565b91906101000a81548163ffffffff021916908363ffffffff1602179055505061244f8160000160159054906101000a900463ffffffff1661275e565b600182018054600090612466908490600b0b616078565b82546001600160601b039182166101009390930a928302919092021990911617905550600181015461249c908390600b0b6139d9565b6001600160a01b03878116600090815260208080526040808320543084529281902054815160ff600160a01b830416815263ffffffff600160a81b8304811694820194909452600160c81b909104909216908201528483169291909116907fb03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a79060600160405180910390a35463ffffffff600160a81b82041692506001600160a01b031690506123d3565b8461255c576125578260016160aa565b61255e565b815b6040805160a0810182526001600160a01b038916808252600090815260208080529290205492945091908201906125a090600160a01b900460ff1660016160c7565b60ff16815260006020820181905260408201526060016125bf8461275e565b600b90810b9091526001600160a01b03898116600090815260208080526040918290208551815492870151938701516060880151919095166001600160a81b031990931692909217600160a01b60ff909416939093029290921767ffffffffffffffff60a81b1916600160a81b63ffffffff9485160263ffffffff60c81b191617600160c81b91841691909102178155608090930151600190930180546bffffffffffffffffffffffff19166001600160601b0390941693909317928390556126909230928b9291900b90613f1a16565b5083156126cd576040516001600160a01b0388169085156108fc029086906000818181858888f193505050501580156111a9573d6000803e3d6000fd5b50505050505050565b6000611068827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa15801561273a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1a9190615e58565b600061106861277c63ffffffff841668270801d946c94000006160e0565b613f39565b6117263333848460405180602001604052806000815250604051806020016040528060008152506133ff565b6000600c8263ffffffff16116127cb5750662386f26fc10000919050565b60188263ffffffff16116127e8575067016345785d8a0000919050565b60248263ffffffff161161280557506702c68af0bb140000919050565b60308263ffffffff16116128225750670429d069189e0000919050565b603c8263ffffffff161161283f575067058d15e176280000919050565b50670de0b6b3a7640000919050565b3361285b60118284613f7d565b806001600160a01b0316826001600160a01b03167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a35050565b6060600f8054610f2190615b58565b611fae3333868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506040805160208101909152908152925060019150613df59050565b33301461292257604051630fff4cc960e31b815260040160405180910390fd5b8051604080516000815260208101909152611eae91339186918691901515908690614081565b612950613e6e565b6040805160008152602081019182905263c68d428360e01b909152309063c68d428390612984908390859060248101615c52565b600060405180830381600087803b15801561299e57600080fd5b505af115801561131a573d6000803e3d6000fd5b60405133906000906129ca9083908790602001615c79565b604051602081830303815290604052805190602001209050612a1f8185858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061330e92505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca8686866040516112b693929190615cb6565b611726333383612a6b3361210e565b6135fb565b60006110643384611c11856040518060600160405280602a8152602001616444602a91393360009081526010602090815260408083206001600160a01b038d1684529091529020549190614142565b6000612130333385856135fb565b600080600080612add8686612e93565b9250925092506000612b05828411612af6576000613860565b612b008385616042565b613860565b612b0f9085615d5c565b60001315979650505050505050565b6000611068827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1a9190615e58565b333014612bc657604051630fff4cc960e31b815260040160405180910390fd5b8051604080516000815260208101909152611eae91339186918691901515908190879061416e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314612c375760405163c51efddd60e01b815260040160405180910390fd5b611eae8383611c11846040518060600160405280602a8152602001616444602a91396001600160a01b03808a166000908152601060209081526040808320938c16835292905220549190614142565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314612ccf5760405163c51efddd60e01b815260040160405180910390fd5b611fae3385858585604051806020016040528060008152506001613df5565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314612d375760405163c51efddd60e01b815260040160405180910390fd5b611726338384846040518060200160405280600081525060405180602001604052806000815250613b0a565b604051632329212160e21b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638ca4848490602401602060405180830381865afa158015612dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612deb9190615cf7565b612e085760405163327fd99160e21b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902054612e2c908290615d5c565b6001600160a01b0390921660009081526001602052604090209190915550565b600061213060118484613d4c565b600080612e678484612e93565b5050600013949350505050565b6001600160a01b03908116600090815260208052604090205416151590565b6001600160a01b038216600090815260016020526040812054908080612eb886611b37565b905060005b8151811015612fc4576000806000848481518110612edd57612edd615df0565b60209081029190910101516040516326cb922f60e21b81523060048201526001600160a01b038c81166024830152604482018c905290911690639b2e48bc90606401606060405180830381865afa158015612f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f609190616102565b91945092509050612f718288615f22565b9650612f7d8187615f22565b9550612f9a818311612f90576000613860565b612b008284616042565b612fa4848a615d5c565b612fae9190615d84565b975050505080612fbd90615dd7565b9050612ebd565b50509250925092565b612fd5613e6e565b612fde81612e74565b1561302b5760405162461bcd60e51b815260206004820152601c60248201527f436c75622070726f746567652063616e6e6f74206265206f776e65720000000060448201526064016110ba565b6111df8161423c565b61303c613e6e565b6001600160a01b0382166130855760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b2103932b1b2b4bb32b960811b60448201526064016110ba565b600081116130c65760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b60448201526064016110ba565b8047101561310b5760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f7567682062616c616e636560701b60448201526064016110ba565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015611eae573d6000803e3d6000fd5b3361314e601182846142b2565b806001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a35050565b3361319f60118289613d4c565b6131bc5760405163f7f0222760e01b815260040160405180910390fd5b6126cd8188898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a90819084018382808284376000920191909152506133ff92505050565b611eae3333338686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506133ff915050565b3660008037600080366000845af43d6000803e8080156132a3573d6000f35b3d6000fd5b60608160000180548060200260200160405190810160405280929190818152602001828054801561330257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116132e4575b50505050509050919050565b60005b8151811015611eae57600082828151811061332e5761332e615df0565b602002602001015190508082850155508061334890615dd7565b9050613311565b6001600160a01b03831661337657604051638163862760e01b815260040160405180910390fd5b6001600160a01b03821661339d576040516337c1c09d60e21b815260040160405180910390fd5b6001600160a01b0383811660008181526010602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600d546001600160a01b031661342857604051637bce7b2b60e11b815260040160405180910390fd5b600080613434856143aa565b9150915061344b8888838751600014158888614081565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015613494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134b89190615e58565b600d549091506134d2906001600160a01b03168885614466565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561351b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061353f9190615e58565b9050600061354d8284616042565b905080851461356f57604051631c7c26d360e31b815260040160405180910390fd5b896001600160a01b03167f3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d856040516135aa91815260200190565b60405180910390a25050505050505050505050565b6000805b828110156135f1578381015480156135e057600192505050611068565b506135ea81615dd7565b90506135c3565b5060009392505050565b60006001600160a01b0384166136245760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b03831661364b5760405163e219bd3960e01b815260040160405180910390fd5b600033905061367c8186868660405180602001604052806000815250604051806020016040528060008152506144c9565b846001600160a01b0316866001600160a01b03161461370f5761370f8587611c11866040518060600160405280602d815260200161648e602d9139601060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546141429092919063ffffffff16565b50600195945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561377c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137a09190616130565b604051638369a0f160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301523060248301527f9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d09604483015291925090821690638369a0f190606401602060405180830381865afa158015613836573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061385a9190616130565b91505090565b60006001600160ff1b038211156138ca5760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b60648201526084016110ba565b5090565b816001600160a01b0316836001600160a01b031660008051602061646e833981519152836040516133f291815260200190565b60005b81811015611eae5760008382015561391b81615dd7565b9050613904565b60008061392e85614568565b604051631cd43d1160e31b81526001600160a01b03888116600483015287811660248301528681166044830152919350908316915063e6a1e88890606401608060405180830381865afa158015613989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139ad919061614d565b5090979650505050505050565b604080516000808252602082019092526116a9908590859085906146e9565b60006139e6308085613922565b600b0b13156139fa57611eae308383614814565b611eae308383613f1a565b6040516329965a1d60e01b81526001600160a01b03821660048201527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce21770546024820152306044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b158015613a8657600080fd5b505af1158015613a9a573d6000803e3d6000fd5b50506040516329965a1d60e01b81526001600160a01b03841660048201527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a6024820152306044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401612984565b600d546001600160a01b0316613b3357604051637bce7b2b60e11b815260040160405180910390fd5b600080613b3f856143aa565b600d546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015613b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bb49190615e58565b600d54909150613bcf906001600160a01b0316893086614833565b600d546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015613c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c3c9190615e58565b90506000613c4a8383616042565b9050808514613c6c57604051631c7c26d360e31b815260040160405180910390fd5b8651613c82908c908b9087901515808c8c61416e565b886001600160a01b03167f25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df856040516135aa91815260200190565b6060816001600160401b03811115613cd757613cd7615574565b604051908082528060200260200182016040528015613d00578160200160208202803683370190505b50905060005b82811015613d4557600081850154905080838381518110613d2957613d29615df0565b602090810291909101015250613d3e81615dd7565b9050613d06565b5092915050565b6000816001600160a01b0316836001600160a01b03161480613dbb57506001600160a01b038316600090815260018501602052604090205460ff168015613dbb57506001600160a01b03808316600090815260038601602090815260408083209387168352929052205460ff16155b806116a957506001600160a01b03808316600090815260028601602090815260408083209387168352929052205460ff1690509392505050565b6001600160a01b038616613e1c5760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b038516613e435760405163e219bd3960e01b815260040160405180910390fd5b613e5187878787878761486b565b613e5f8787878787876144c9565b6126cd87878787878787614992565b601f546001600160a01b03163314610eff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016110ba565b601f80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604080516000808252602082019092526116a990859085908590614ae2565b600060016001605f1b038211156138ca5760405162461bcd60e51b81526020600482015260086024820152676f766572666c6f7760c01b60448201526064016110ba565b806001600160a01b0316826001600160a01b031603613ff45760405162461bcd60e51b815260206004820152602d60248201527f4552433737374f70657261746f72733a20617574686f72697a696e672073656c60448201526c331030b99037b832b930ba37b960991b60648201526084016110ba565b6001600160a01b038116600090815260018401602052604090205460ff161561404a576001600160a01b03918216600090815260039390930160209081526040808520929093168452529020805460ff19169055565b6001600160a01b0380831660009081526002850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b0385166140a857604051632e8aac6160e21b815260040160405180910390fd5b82156140bd576140bd8686600087868661486b565b6140c78585614b6d565b846001600160a01b0316866001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409886858560405161410e93929190616191565b60405180910390a36040518481526000906001600160a01b0387169060008051602061646e83398151915290602001611d54565b600081848411156141665760405162461bcd60e51b81526004016110ba91906152b0565b505050900390565b6001600160a01b03861661419557604051630d24315760e01b815260040160405180910390fd5b61419f8686614c7d565b83156141b5576141b58760008888868689614992565b856001600160a01b0316876001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d8785856040516141fc93929190616191565b60405180910390a36040518581526001600160a01b0387169060009060008051602061646e8339815191529060200160405180910390a350505050505050565b614244613e6e565b6001600160a01b0381166142a95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016110ba565b6111df81613ec8565b336001600160a01b0382160361431d5760405162461bcd60e51b815260206004820152602a60248201527f4552433737374f70657261746f72733a207265766f6b696e672073656c662061604482015269399037b832b930ba37b960b11b60648201526084016110ba565b6001600160a01b038116600090815260018401602052604090205460ff1615614377576001600160a01b0380831660009081526003850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03918216600090815260029390930160209081526040808520929093168452529020805460ff19169055565b600d54600090819081906012600160a01b90910460ff16101561440957600d546143df90600160a01b900460ff1660126161bc565b6143ea90600a6162b9565b90506143f681856160e0565b925061440281846162c8565b9150614460565b600d546012600160a01b90910460ff16111561445957600d5461443890601290600160a01b900460ff166161bc565b61444390600a6162b9565b905061444f81856162c8565b9250839150614460565b8391508192505b50915091565b6040516001600160a01b038316602482015260448101829052611eae90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614cd7565b6144dc85856144d786613860565b614dac565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc8261467798786868660405161452d93929190616191565b60405180910390a4836001600160a01b0316856001600160a01b031660008051602061646e83398151915285604051611d5491815260200190565b7f65599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837547fb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a546001600160a01b0381166146b8576001600160a01b03821661462d57826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614606573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061462a9190616130565b91505b604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614691573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906146b59190616130565b90505b6001600160a01b0382166146ce576146ce615d46565b6001600160a01b0381166146e4576146e4615d46565b915091565b60008060006146f787614eab565b91509150816001600160a01b03166339255d5b82836001600160a01b031663b4b333c68b8b8b60006001600160401b0381111561473657614736615574565b6040519080825280601f01601f191660200182016040528015614760576020820181803683370190505b5060405160240161477494939291906162df565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526147bf939250908990600401616313565b6000604051808303816000875af11580156147de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526148069190810190616337565b506001979650505050505050565b604080516000808252602082019092526116a990859085908590615056565b6040516001600160a01b0380851660248301528316604482015260648101829052611fae9085906323b872dd60e01b90608401614492565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa1580156148ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149109190616130565b90506001600160a01b038116156126cd57604051633ad5cbc160e11b81526001600160a01b038216906375ab978290614957908a908a908a908a908a908a906004016163a4565b600060405180830381600087803b15801561497157600080fd5b505af1158015614985573d6000803e3d6000fd5b5050505050505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015614a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a379190616130565b90506001600160a01b03811615614ab3576040516223de2960e01b81526001600160a01b038216906223de2990614a7c908b908b908b908b908b908b906004016163a4565b600060405180830381600087803b158015614a9657600080fd5b505af1158015614aaa573d6000803e3d6000fd5b505050506111a9565b81156111a9576001600160a01b0386163b156111a95760405163fe737d0560e01b815260040160405180910390fd5b6000806000614af087614eab565b91509150816001600160a01b03166339255d5b82836001600160a01b03166362fc305e8b8b8b60006001600160401b03811115614b2f57614b2f615574565b6040519080825280601f01601f191660200182016040528015614b59576020820181803683370190505b5060405160240161477494939291906163f1565b6000614bf5837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da09190615e58565b50509050614c0282613860565b811215614c225760405163043b37d160e21b815260040160405180910390fd5b614c2b82613860565b6001600160a01b038416600090815260016020526040902054614c4e9190615d84565b6001600160a01b038416600090815260016020526040902055600254614c75908390616042565b600255505050565b614c8681613860565b6001600160a01b038316600090815260016020526040902054614ca99190615d5c565b6001600160a01b038316600090815260016020526040902055600254614cd0908290615f22565b6002555050565b6000614d2c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166150a39092919063ffffffff16565b9050805160001480614d4d575080806020019051810190614d4d9190615cf7565b611eae5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016110ba565b6000614e10847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614bd1573d6000803e3d6000fd5b5050905081811215614e3557604051632f4cb94160e01b815260040160405180910390fd5b6001600160a01b038416600090815260016020526040902054614e59908390615d84565b6001600160a01b038086166000908152600160205260408082209390935590851681522054614e89908390615d5c565b6001600160a01b03909316600090815260016020526040902092909255505050565b7f65599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837547fb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a546001600160a01b0381166146b8576001600160a01b038216614f7057826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614f49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614f6d9190616130565b91505b604051635b69006f60e11b81527fa9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd360048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614fd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614ff89190616130565b9050817f65599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea83755807fb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a556001600160a01b0382166146ce576146ce615d46565b600080600061506487614eab565b91509150816001600160a01b03166339255d5b82836001600160a01b03166350209a628b8b8b60006001600160401b03811115614b2f57614b2f615574565b60606116a9848460008585600080866001600160a01b031685876040516150ca9190616427565b60006040518083038185875af1925050503d8060008114615107576040519150601f19603f3d011682016040523d82523d6000602084013e61510c565b606091505b509150915061511d87838387615128565b979650505050505050565b60608315615197578251600003615190576001600160a01b0385163b6151905760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016110ba565b50816116a9565b6116a983838151156151ac5781518083602001fd5b8060405162461bcd60e51b81526004016110ba91906152b0565b6040518060c001604052806006905b6040805160a0810182526000808252602080830182905292820181905260608201819052608082015282526000199092019101816151d55790505090565b6020808252825182820181905260009190848201906040850190845b818110156152545783516001600160a01b03168352928401929184019160010161522f565b50909695505050505050565b60005b8381101561527b578181015183820152602001615263565b50506000910152565b6000815180845261529c816020860160208601615260565b601f01601f19169290920160200192915050565b6020815260006121306020830184615284565b6001600160a01b03811681146111df57600080fd5b60008083601f8401126152ea57600080fd5b5081356001600160401b0381111561530157600080fd5b6020830191508360208260051b850101111561531c57600080fd5b9250929050565b6000806000806060858703121561533957600080fd5b8435615344816152c3565b93506020850135925060408501356001600160401b0381111561536657600080fd5b615372878288016152d8565b95989497509550505050565b6000806040838503121561539157600080fd5b823561539c816152c3565b946020939093013593505050565b60008083601f8401126153bc57600080fd5b5081356001600160401b038111156153d357600080fd5b60208301915083602082850101111561531c57600080fd5b6000806000806040858703121561540157600080fd5b84356001600160401b038082111561541857600080fd5b615424888389016153aa565b9096509450602087013591508082111561543d57600080fd5b50615372878288016153aa565b60006020828403121561545c57600080fd5b8135612130816152c3565b80516001600160a01b0316825260208082015160ff169083015260408082015163ffffffff9081169184019190915260608083015190911690830152608090810151600b0b910152565b60a081016110688284615467565b6000602082840312156154d157600080fd5b5035919050565b6000806000604084860312156154ed57600080fd5b8335925060208401356001600160401b0381111561550a57600080fd5b615516868287016152d8565b9497909650939450505050565b6000806000806080858703121561553957600080fd5b8435615544816152c3565b93506020850135615554816152c3565b92506040850135615564816152c3565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156155b2576155b2615574565b604052919050565b60006001600160401b038211156155d3576155d3615574565b50601f01601f191660200190565b600082601f8301126155f257600080fd5b8135615605615600826155ba565b61558a565b81815284602083860101111561561a57600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146111df57600080fd5b600080600080600080600060e0888a03121561566057600080fd5b8735965060208801356001600160401b0381111561567d57600080fd5b6156898a828b016155e1565b965050604088013561569a816152c3565b945060608801356156aa81615637565b935060808801356156ba816152c3565b9699959850939692959460a0840135945060c09093013592915050565b6103c08101818360005b600681101561570b576156f5838351615467565b60a09290920191602091909101906001016156e1565b50505092915050565b60008060006060848603121561572957600080fd5b8335615734816152c3565b92506020840135615744816152c3565b929592945050506040919091013590565b6000806040838503121561576857600080fd5b50508035926020909101359150565b6000806000806000806080878903121561579057600080fd5b863561579b816152c3565b9550602087013560ff811681146157b157600080fd5b945060408701356001600160401b03808211156157cd57600080fd5b6157d98a838b016153aa565b909650945060608901359150808211156157f257600080fd5b506157ff89828a016153aa565b979a9699509497509295939492505050565b6000806000806080858703121561582757600080fd5b8435615832816152c3565b93506020850135615842816152c3565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b8181101561525457835183529284019291840191600101615873565b600080600080606085870312156158a557600080fd5b84356158b0816152c3565b93506020850135925060408501356001600160401b038111156158d257600080fd5b615372878288016153aa565b600080600080600080600060a0888a0312156158f957600080fd5b8735615904816152c3565b96506020880135615914816152c3565b95506040880135945060608801356001600160401b038082111561593757600080fd5b6159438b838c016153aa565b909650945060808a013591508082111561595c57600080fd5b506159698a828b016153aa565b989b979a50959850939692959293505050565b60008060006060848603121561599157600080fd5b833561599c816152c3565b95602085013595506040909401359392505050565b6000602082840312156159c357600080fd5b813563ffffffff8116811461213057600080fd5b6000806000606084860312156159ec57600080fd5b83356159f7816152c3565b92506020840135915060408401356001600160401b03811115615a1957600080fd5b615a25868287016155e1565b9150509250925092565b60008060008060808587031215615a4557600080fd5b8435615a50816152c3565b93506020850135615a60816152c3565b92506040850135915060608501356001600160401b03811115615a8257600080fd5b615a8e878288016155e1565b91505092959194509250565b60008060408385031215615aad57600080fd5b8235615ab8816152c3565b91506020830135615ac8816152c3565b809150509250929050565b60008060008060008060808789031215615aec57600080fd5b8635615af7816152c3565b95506020870135945060408701356001600160401b03808211156157cd57600080fd5b600080600060408486031215615b2f57600080fd5b8335925060208401356001600160401b03811115615b4c57600080fd5b615516868287016153aa565b600181811c90821680615b6c57607f821691505b602082108103615b8c57634e487b7160e01b600052602260045260246000fd5b50919050565b6080808252600e908201526d41677265656d656e74537461746560901b60a08201526001600160a01b039384166020820152919092166040820152606081019190915260c00190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff86166020820152608060408201819052600090615c329083018688615bdb565b8281036060840152615c45818587615bdb565b9998505050505050505050565b60018060a01b03841681528260208201526060604082015260006121056060830184615284565b6060808252600d908201526c41677265656d656e744461746160981b60808201526001600160a01b03929092166020830152604082015260a00190565b838152604060208201819052810182905260006001600160fb1b03831115615cdd57600080fd5b8260051b8085606085013791909101606001949350505050565b600060208284031215615d0957600080fd5b815161213081615637565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b8201615d3f57615d3f615d14565b5060000390565b634e487b7160e01b600052600160045260246000fd5b8082018281126000831280158216821582161715615d7c57615d7c615d14565b505092915050565b8181036000831280158383131683831282161715613d4557613d45615d14565b85815260018060a01b038516602082015283604082015282606082015260a06080820152600061511d60a0830184615284565b600060018201615de957615de9615d14565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600063ffffffff821680615e1c57615e1c615d14565b6000190192915050565b600b82810b9082900b036b7fffffffffffffffffffffff19811260016001605f1b038213171561106857611068615d14565b600060208284031215615e6a57600080fd5b5051919050565b60006020808385031215615e8457600080fd5b82516001600160401b0380821115615e9b57600080fd5b818501915085601f830112615eaf57600080fd5b815181811115615ec157615ec1615574565b8060051b9150615ed284830161558a565b8181529183018401918481019088841115615eec57600080fd5b938501935b83851015615f165784519250615f06836152c3565b8282529385019390850190615ef1565b98975050505050505050565b8082018082111561106857611068615d14565b601f821115611eae57600081815260208120601f850160051c81016020861015615f5c5750805b601f850160051c820191505b81811015615f7b57828155600101615f68565b505050505050565b6001600160401b03831115615f9a57615f9a615574565b615fae83615fa88354615b58565b83615f35565b6000601f841160018114615fe25760008515615fca5750838201355b600019600387901b1c1916600186901b17835561131a565b600083815260209020601f19861690835b828110156160135786850135825560209485019460019092019101615ff3565b50868210156160305760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8181038181111561106857611068615d14565b600063ffffffff80831681810361606e5761606e615d14565b6001019392505050565b600b81810b9083900b0160016001605f1b0381136b7fffffffffffffffffffffff198212171561106857611068615d14565b63ffffffff818116838216019080821115613d4557613d45615d14565b60ff818116838216019081111561106857611068615d14565b6000826160fd57634e487b7160e01b600052601260045260246000fd5b500490565b60008060006060848603121561611757600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561614257600080fd5b8151612130816152c3565b6000806000806080858703121561616357600080fd5b84519350602085015180600b0b811461617b57600080fd5b6040860151606090960151949790965092505050565b8381526060602082015260006161aa6060830185615284565b8281036040840152611eee8185615284565b60ff828116828216039081111561106857611068615d14565b600181815b808511156162105781600019048211156161f6576161f6615d14565b8085161561620357918102915b93841c93908002906161da565b509250929050565b60008261622757506001611068565b8161623457506000611068565b816001811461624a576002811461625457616270565b6001915050611068565b60ff84111561626557616265615d14565b50506001821b611068565b5060208310610133831016604e8410600b8410161715616293575081810a611068565b61629d83836161d5565b80600019048211156162b1576162b1615d14565b029392505050565b600061213060ff841683616218565b808202811582820484141761106857611068615d14565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611eee90830184615284565b6001600160a01b03841681526060602082018190526000906161aa90830185615284565b60006020828403121561634957600080fd5b81516001600160401b0381111561635f57600080fd5b8201601f8101841361637057600080fd5b805161637e615600826155ba565b81815285602083850101111561639357600080fd5b612105826020830160208601615260565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906163df90830185615284565b82810360a0840152615c458185615284565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611eee90830184615284565b60008251616439818460208701615260565b919091019291505056fe5375706572546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5375706572546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365a2646970667358221220bc58a6b8a011ac7d9ea78b0bac1d57fabb1591a4c1ee700104af80c2336caa5a64736f6c63430008130033",
    "sourceMap": "709:9645:115:-:0;;;1039:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:95;;;;;3652:41:117;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1166:4:115;;1172:18;;1192:17;;3652:41:117;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:117;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;936:32:26;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;1039:178:115;;;709:9645;;640:96:40;719:10;;640:96::o;2426:187:26:-;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:144:120:-;-1:-1:-1;;;;;102:31:120;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:120;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:120;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;709:9645:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;709:9645:115;16132:151:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4604:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9255:378:95:-;;;;;;;;;;-1:-1:-1;9255:378:95;;;;;:::i;:::-;;:::i;14063:164:117:-;;;;;;;;;;-1:-1:-1;14063:164:117;;;;;:::i;:::-;;:::i;:::-;;;3071:14:120;;3064:22;3046:41;;3034:2;3019:18;14063:164:117;2906:187:120;1278:311:115;;;;;;;;;;-1:-1:-1;1278:311:115;;;;;:::i;:::-;;:::i;3021:118::-;;;;;;;;;;-1:-1:-1;3021:118:115;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3114:18:115;;;;;;;:9;:18;;;;;;;;3107:25;;;;;;;;;;;;;;;-1:-1:-1;;;3107:25:115;;;;;;;;;;;-1:-1:-1;;;3107:25:115;;;;;;;;;;;-1:-1:-1;;;3107:25:115;;;;;;;;;;;;;;;;;;;;;;3021:118;;;;;;;;:::i;19304:140:117:-;;;;;;;;;;-1:-1:-1;19304:140:117;;;;;:::i;:::-;;:::i;7322:481:95:-;;;;;;;;;;-1:-1:-1;7322:481:95;;;;;:::i;:::-;;:::i;23871:238:117:-;;;;;;;;;;-1:-1:-1;23871:238:117;;;;;:::i;:::-;;:::i;13311:106::-;;;;;;;;;;-1:-1:-1;13398:12:117;;13311:106;;;6589:25:120;;;6577:2;6562:18;13311:106:117;6443:177:120;10460:2526:95;;;;;;;;;;-1:-1:-1;10460:2526:95;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:95;1696:144;;;-1:-1:-1;;;;;8925:32:120;;;8907:51;;8895:2;8880:18;1696:144:95;8761:203:120;2651:324:115;;;;;;;;;;-1:-1:-1;2651:324:115;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14233:188:117:-;;;;;;;;;;-1:-1:-1;14233:188:117;;;;;:::i;:::-;;:::i;24543:169::-;;;;;;;;;;-1:-1:-1;24543:169:117;;;;;:::i;:::-;;:::i;8709:474:95:-;;;;;;;;;;-1:-1:-1;8709:474:95;;;;;:::i;:::-;;:::i;6367:1324:115:-;;;;;;;;;;-1:-1:-1;6367:1324:115;;;;;:::i;:::-;;:::i;3511:428:95:-;;;;;;;;;;-1:-1:-1;3511:428:95;;;;;:::i;:::-;;:::i;:::-;;;;10460:25:120;;;10516:2;10501:18;;10494:34;;;;10544:18;;;10537:34;10602:2;10587:18;;10580:34;10447:3;10432:19;3511:428:95;10231:389:120;4820:109:117;;;;;;;;;;-1:-1:-1;4820:109:117;;1425:2;10767:36:120;;10755:2;10740:18;4820:109:117;10625:184:120;5252:218:95;;;;;;;;;;-1:-1:-1;5252:218:95;;;;;:::i;:::-;;:::i;14427:217:117:-;;;;;;;;;;-1:-1:-1;14427:217:117;;;;;:::i;:::-;;:::i;18117:231::-;;;;;;;;;;-1:-1:-1;18117:231:117;;;;;:::i;:::-;;:::i;3920:623::-;;;;;;;;;;-1:-1:-1;3920:623:117;;;;;:::i;:::-;;:::i;18883:136::-;;;;;;;;;;-1:-1:-1;18883:136:117;;;;;:::i;:::-;;:::i;1048:246:118:-;;;;;;;;;;-1:-1:-1;1048:246:118;;;;;:::i;:::-;;:::i;23258:248:117:-;;;;;;;;;;-1:-1:-1;23258:248:117;;;;;:::i;:::-;;:::i;9702:391:95:-;;;;;;;;;;-1:-1:-1;9702:391:95;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:117:-;;;;;;;;;;;;;;;15034:97;;;;;;;;;;-1:-1:-1;15123:1:117;15034:97;;7757:181:115;;;;;;;;;;;;;:::i;19075:173:117:-;;;;;;;;;;-1:-1:-1;19075:173:117;;;;;:::i;:::-;;:::i;23090:162::-;;;;;;;;;;-1:-1:-1;23090:162:117;;;;;:::i;:::-;;:::i;16289:440::-;;;;;;;;;;-1:-1:-1;16289:440:117;;;;;:::i;:::-;;:::i;17951:160::-;;;;;;;;;;-1:-1:-1;17951:160:117;;;;;:::i;:::-;;:::i;7871:338:95:-;;;;;;;;;;-1:-1:-1;7871:338:95;;;;;:::i;:::-;;:::i;13423:297:117:-;;;;;;;;;;-1:-1:-1;13423:297:117;;;;;:::i;:::-;;:::i;1824:101:26:-;;;;;;;;;;;;;:::i;3715:2646:115:-;;;;;;:::i;:::-;;:::i;4231:201:95:-;;;;;;;;;;-1:-1:-1;4231:201:95;;;;;:::i;:::-;;:::i;8013:175:115:-;;;;;;;;;;-1:-1:-1;8013:175:115;;;;;:::i;:::-;;:::i;:::-;;;16736:2:120;16725:22;;;;16707:41;;16695:2;16680:18;8013:175:115;16565:189:120;19482:146:117;;;;;;;;;;-1:-1:-1;19482:146:117;;;;;:::i;:::-;;:::i;8242:647:115:-;;;;;;;;;;-1:-1:-1;8242:647:115;;;;;:::i;:::-;;:::i;1201:85:26:-;;;;;;;;;;-1:-1:-1;1273:6:26;;-1:-1:-1;;;;;1273:6:26;1201:85;;15685:222:117;;;;;;;;;;-1:-1:-1;15685:222:117;;;;;:::i;:::-;;:::i;4710:104::-;;;;;;;;;;;;;:::i;15137:185::-;;;;;;;;;;-1:-1:-1;15137:185:117;;;;;:::i;:::-;;:::i;17722:223::-;;;;;;;;;;-1:-1:-1;17722:223:117;;;;;:::i;:::-;;:::i;9557:116:115:-;;;;;;;;;;-1:-1:-1;9557:116:115;;;;;:::i;:::-;;:::i;8280:359:95:-;;;;;;;;;;-1:-1:-1;8280:359:95;;;;;:::i;:::-;;:::i;18419:154:117:-;;;;;;;;;;-1:-1:-1;18419:154:117;;;;;:::i;:::-;;:::i;14650:322::-;;;;;;;;;;-1:-1:-1;14650:322:117;;;;;:::i;:::-;;:::i;13726:172::-;;;;;;;;;;-1:-1:-1;13726:172:117;;;;;:::i;:::-;;:::i;1669:58:115:-;;;;;;;;;;;;1717:10;1669:58;;1614:49;;;;;;;;;;;;1662:1;1614:49;;4438:533:95;;;;;;;;;;-1:-1:-1;4438:533:95;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:95;;;;;:::i;:::-;;:::i;17351:365:117:-;;;;;;;;;;-1:-1:-1;17351:365:117;;;;;:::i;:::-;;:::i;23512:353::-;;;;;;;;;;-1:-1:-1;23512:353:117;;;;;:::i;:::-;;:::i;24115:251::-;;;;;;;;;;-1:-1:-1;24115:251:117;;;;;:::i;:::-;;:::i;24372:165::-;;;;;;;;;;-1:-1:-1;24372:165:117;;;;;:::i;:::-;;:::i;10158:226:95:-;;;;;;;;;;-1:-1:-1;10158:226:95;;;;;:::i;:::-;;:::i;15500:179:117:-;;;;;;;;;;-1:-1:-1;15500:179:117;;;;;:::i;:::-;;:::i;3945:280:95:-;;;;;;;;;;-1:-1:-1;3945:280:95;;;;;:::i;:::-;;:::i;13904:153:117:-;;;;;;;;;;-1:-1:-1;13904:153:117;;;;;:::i;:::-;-1:-1:-1;;;;;14021:20:117;;;13995:7;14021:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13904:153;2455:127:115;;;;;;;;;;-1:-1:-1;2455:127:115;;;;;:::i;:::-;;:::i;2105:1334:95:-;;;;;;;;;;-1:-1:-1;2105:1334:95;;;;;:::i;:::-;;:::i;:::-;;;;18869:25:120;;;18925:2;18910:18;;18903:34;;;;18953:18;;;18946:34;18857:2;18842:18;2105:1334:95;18669:317:120;18701:128:117;;;;;;;;;;-1:-1:-1;18805:16:117;;-1:-1:-1;;;;;18805:16:117;18701:128;;1486:57;;;;;;;;;;;;;;;8895:246:115;;;;;;;;;;-1:-1:-1;8895:246:115;;;;;:::i;:::-;;:::i;1733:64::-;;;;;;;;;;;;1788:9;1733:64;;9200:302;;;;;;;;;;-1:-1:-1;9200:302:115;;;;;:::i;:::-;;:::i;15913:213:117:-;;;;;;;;;;-1:-1:-1;15913:213:117;;;;;:::i;:::-;;:::i;16735:403::-;;;;;;;;;;-1:-1:-1;16735:403:117;;;;;:::i;:::-;;:::i;15328:166::-;;;;;;;;;;-1:-1:-1;15328:166:117;;;;;:::i;:::-;;:::i;2322:110:27:-;2397:28;2407:17;1513:20:118;1507:27;;1394:147;2407:17:27;2397:9;:28::i;:::-;2322:110::o;16132:151:117:-;16200:16;16235:41;16265:10;16235:29;:41::i;:::-;16228:48;;16132:151;:::o;4604:100::-;4660:13;4692:5;4685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:100;:::o;9255:378:95:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:95;;-1:-1:-1;;;9522:39:95:i;:::-;9576:50;;6589:25:120;;;-1:-1:-1;;;;;9576:50:95;;;9598:10;;9576:50;;6577:2:120;6562:18;9576:50:95;;;;;;;9419:214;9255:378;;;;:::o;14063:164:117:-;14146:4;14162:37;14171:10;14183:7;14192:6;14162:8;:37::i;:::-;-1:-1:-1;14216:4:117;14063:164;;;;;:::o;1278:311:115:-;1379:4;;-1:-1:-1;;;1379:4:115;;;;1378:5;1370:37;;;;-1:-1:-1;;;1370:37:115;;21844:2:120;1370:37:115;;;21826:21:120;21883:2;21863:18;;;21856:30;-1:-1:-1;;;21902:18:120;;;21895:49;21961:18;;1370:37:115;;;;;;;;;1417:4;:11;;-1:-1:-1;;;;1417:11:115;-1:-1:-1;;;1417:11:115;;;1438:60;;-1:-1:-1;;;1438:60:115;;:4;;:15;;:60;;1417:11;;;;1477:8;;;;1487:10;;;;1438:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1569:12:115;;;1579:1;1569:12;;;;;;;;;-1:-1:-1;;;1508:74:115;;;:4;;-1:-1:-1;1508:13:115;;-1:-1:-1;1508:74:115;;:4;;1537:30;;1508:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1278:311;;;;:::o;19304:140:117:-;19375:62;19386:10;19398;19410;19422:6;19375:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19304:140;:::o;7322:481:95:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:95;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:95;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:95;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:95;;-1:-1:-1;;;7704:35:95:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:95;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23871:238:117:-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24052:50:117::1;24066:7;24075;24084:9;24095:6;24052:13;:50::i;:::-;;23871:238:::0;;;;:::o;10460:2526:95:-;13208:57;;-1:-1:-1;;;13208:57:95;;13253:10;13208:57;;;8907:51:120;13208:5:95;-1:-1:-1;;;;;13208:28:95;;;;8880:18:120;;13208:57:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:95;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:95;::::1;11281:91;;-1:-1:-1::0;11344:17:95;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:95;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:95::1;::::0;-1:-1:-1;11879:13:95;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:95::1;::::0;-1:-1:-1;12395:12:95;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:95;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:95::1;::::0;-1:-1:-1;12539:13:95;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:95::1;12793:17;-1:-1:-1::0;;;;;12718:261:95::1;12753:10;-1:-1:-1::0;;;;;12718:261:95::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2651:324:115:-;2743:46;;:::i;:::-;2817:7;2805:9;2857:112;2864:12;2874:1;2864:9;:12::i;:::-;2857:112;;;-1:-1:-1;;;;;2908:12:115;;;;;;;:9;:12;;;;;;;;2892:28;;;;;;;;;;;;;;;-1:-1:-1;;;2892:28:115;;;;;;;;;;;-1:-1:-1;;;2892:28:115;;;;;;;;;;;-1:-1:-1;;;2892:28:115;;;;;;;;;;;;;;;;;;;;;:8;2901:3;;;;:::i;:::-;;;2892:13;;;;;;;:::i;:::-;;;;;;;;;:28;;;;-1:-1:-1;;;;;2938:12:115;;;;;;;;;;;;;:20;;;;;2857:112;;;2795:180;;2651:324;;;:::o;14233:188:117:-;14339:4;14362:52;14376:10;14388:6;14396:9;14407:6;14362:13;:52::i;:::-;14355:59;14233:188;-1:-1:-1;;;;14233:188:117:o;24543:169::-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24649:56:117::1;24660:10;24672:7;24681;24690:6;24649:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24543:169:::0;;:::o;8709:474:95:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:95;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6589:25:120;;;9161:10:95;;9141:35;;6577:2:120;6562:18;9141:35:95;;;;;;;8826:357;;8709:474;;:::o;6367:1324:115:-;6430:21;6440:10;6430:9;:21::i;:::-;6422:48;;;;-1:-1:-1;;;6422:48:115;;26884:2:120;6422:48:115;;;26866:21:120;26923:2;26903:18;;;26896:30;-1:-1:-1;;;26942:18:120;;;26935:44;26996:18;;6422:48:115;26682:338:120;6422:48:115;6480:21;6519:7;1273:6:26;;-1:-1:-1;;;;;1273:6:26;;1201:85;6519:7:115;-1:-1:-1;;;;;6505:21:115;:10;-1:-1:-1;;;;;6505:21:115;;6504:52;;6546:10;6504:52;;;6538:4;6504:52;-1:-1:-1;;;;;6595:21:115;;;6566:26;6595:21;;;:9;:21;;;;;;;6566:50;;;;;;;;;;;;;;;-1:-1:-1;;;6566:50:115;;;;;;;;-1:-1:-1;;;6566:50:115;;;;;;;;;;;-1:-1:-1;;;6566:50:115;;;;;;;;;;;;;;;;;;;;;6633:21;;;;;;-1:-1:-1;;;;;;6626:28:115;;;;;-1:-1:-1;;6626:28:115;;;;;6480:76;;-1:-1:-1;6566:50:115;;:26;6690:65;;6737:4;;;;6605:10;;6690:38;:65;:::i;:::-;:69;;;6686:164;;;6775:64;6821:4;;6828:10;6775:37;:64::i;:::-;;6686:164;6916:4;6898:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;6898:44:115;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6963:19;;-1:-1:-1;;;;;6953:30:115;-1:-1:-1;6953:30:115;;;:9;:30;;;;;:56;;-1:-1:-1;;;6953:56:115;;;;;;-1:-1:-1;6953:54:115;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7047:24:115;;-1:-1:-1;7047:24:115;;;:9;:24;;;;;:42;7111:19;;-1:-1:-1;;;7047:42:115;;;;;;;-1:-1:-1;7140:545:115;7147:12;7157:1;7147:9;:12::i;:::-;7140:545;;;-1:-1:-1;;;;;7243:12:115;;7208:32;7243:12;;;:9;:12;;;;;7269:36;;-1:-1:-1;;;7269:36:115;;;;7243:12;7269:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7355;7373:17;7355;:36::i;:::-;7319:32;;;:72;;:32;;:72;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7319:72:115;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7454:32:115;;;7319:72;7454:32;-1:-1:-1;7454:37:115;7450:225;;7511:52;7531:4;7549:1;7552:10;7511:37;:52::i;:::-;;7450:225;;;7627:32;;;;7602:58;;7624:1;;7627:32;;7602:21;:58::i;:::-;7161:524;7140:545;;3511:428:95;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:95;;-1:-1:-1;3511:428:95;;-1:-1:-1;3511:428:95;-1:-1:-1;3511:428:95:o;5252:218::-;-1:-1:-1;;;;;5429:33:95;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:95;;5428:34;;5402:61;;;6589:25:120;5356:24:95;;5402:5;:25;;;;6562:18:120;;5402:61:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:95;;;;;;;;;;;;:::i;14427:217:117:-;14549:10;14524:4;14570:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14570:32:117;;;;;;;;;;14524:4;;14540:76;;14561:7;;14570:45;;14605:10;;14570:45;:::i;:::-;14540:8;:76::i;18117:231::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:117;;;;;;;;;;;24796:63;18292:49:::1;18306:7;18315:6;18323:9;18334:6;18292:13;:49::i;3920:623::-:0;4090:5;4084:19;;;;;:::i;:::-;:24;;-1:-1:-1;4076:68:117;;;;-1:-1:-1;;;4076:68:117;;29014:2:120;4076:68:117;;;28996:21:120;29053:2;29033:18;;;29026:30;29092:33;29072:18;;;29065:61;29143:18;;4076:68:117;28812:355:120;4076:68:117;4181:1;4162:20;;;4154:55;;;;-1:-1:-1;;;4154:55:117;;29374:2:120;4154:55:117;;;29356:21:120;29413:2;29393:18;;;29386:30;-1:-1:-1;;;29432:18:120;;;29425:52;29494:18;;4154:55:117;29172:346:120;4154:55:117;4219:16;:34;;4263:40;;;-1:-1:-1;;;4263:40:117;-1:-1:-1;;;;;;4263:40:117;;;-1:-1:-1;;;;;4219:34:117;;4263:40;;;;4314:5;:9;4322:1;;4314:5;:9;:::i;:::-;-1:-1:-1;4333:7:117;:11;4343:1;;4333:7;:11;:::i;:::-;;4386:36;4416:4;4386:21;:36::i;:::-;4501:35;;4530:1;6589:25:120;;;4530:1:117;;;-1:-1:-1;;;;;;;;;;;4501:35:117;6577:2:120;6562:18;4501:35:117;;;;;;;;3920:623;;;;;;:::o;18883:136::-;18952:60;18961:10;18973;18985;18997:6;18952:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;1048:246:118:-;-1:-1:-1;;;;;1114:28:118;;1110:54;;1151:13;;-1:-1:-1;;;1151:13:118;;;;;;;;;;;1110:54;1201:1;1172:17;1513:20;1507:27;;1394:147;1172:17;-1:-1:-1;;;;;1172:31:118;;1168:57;;1212:13;;-1:-1:-1;;;1212:13:118;;;;;;;;;;;1168:57;1250:20;1243:44;1048:246::o;23258:248:117:-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23456:20:117;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23429:70:::1;::::0;23438:7;;23447;;23456:42:::1;::::0;23488:10;;23456:42:::1;:::i;23429:70::-;23258:248:::0;;;:::o;9702:391:95:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:95:o;7757:181:115:-;7809:21;7819:10;7809:9;:21::i;:::-;7801:48;;;;-1:-1:-1;;;7801:48:115;;26884:2:120;7801:48:115;;;26866:21:120;26923:2;26903:18;;;26896:30;-1:-1:-1;;;26942:18:120;;;26935:44;26996:18;;7801:48:115;26682:338:120;7801:48:115;7881:10;7893:21;;;;:9;:21;;;;;:37;;;7859:72;;7881:10;7893:37;;7859:21;:72::i;19075:173:117:-;19183:58;19192:10;19204;19216:2;19220:6;19228:8;;19183:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19183:58:117;;;;;;;;;;;;;-1:-1:-1;19183:8:117;;-1:-1:-1;;19183:58:117:i;:::-;19075:173;;;;:::o;23090:162::-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;23211:34:117::1;23220:7;23229;23238:6;23211:8;:34::i;16289:440::-:0;16517:10;16542:42;:10;16517;16577:6;16542:24;:42::i;:::-;16537:103;;16593:47;;-1:-1:-1;;;16593:47:117;;;;;;;;;;;16537:103;16650:72;16656:8;16666:6;16674:9;16685:6;16693:8;;16650:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16650:72:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16703:12:117;;-1:-1:-1;16703:12:117;;;;16650:72;;16703:12;;;;16650:72;;;;;;;;;-1:-1:-1;16717:4:117;;-1:-1:-1;16650:5:117;;-1:-1:-1;;16650:72:117:i;17951:160::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:117;;;;;;;;;;;7871:338:95;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:95:o;13423:297:117:-;13497:15;13579:23;13609:35;13636:7;13609:26;:35::i;:::-;13578:66;;;;;13680:1;13661:16;:20;:52;;13696:16;13661:52;;;13684:1;13661:52;13654:59;13423:297;-1:-1:-1;;;13423:297:117:o;1824:101:26:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;3715:2646:115:-:0;3796:21;3806:10;3796:9;:21::i;:::-;3795:22;3787:53;;;;-1:-1:-1;;;3787:53:115;;31973:2:120;3787:53:115;;;31955:21:120;32012:2;31992:18;;;31985:30;-1:-1:-1;;;32031:18:120;;;32024:48;32089:18;;3787:53:115;31771:342:120;3787:53:115;3903:21;3926:12;3957:7;1273:6:26;;-1:-1:-1;;;;;1273:6:26;;1201:85;3957:7:115;-1:-1:-1;;;;;3943:21:115;:10;-1:-1:-1;;;;;3943:21:115;;3942:69;;3993:10;4005:5;3942:69;;;3977:4;3984;3942:69;3902:109;;;;4029:24;4039:13;4029:9;:24::i;:::-;:35;;;;4057:7;4029:35;4021:70;;;;-1:-1:-1;;;4021:70:115;;32320:2:120;4021:70:115;;;32302:21:120;32359:2;32339:18;;;32332:30;-1:-1:-1;;;32378:18:120;;;32371:52;32440:18;;4021:70:115;32118:346:120;4021:70:115;-1:-1:-1;;;;;4166:24:115;;4102:18;4166:24;;;:9;:24;;;;;:48;4123:9;;4102:18;4162:53;;-1:-1:-1;;;4166:48:115;;;;4162:3;:53::i;:::-;4142:73;;4247:9;4233:10;:23;;4225:52;;;;-1:-1:-1;;;4225:52:115;;32671:2:120;4225:52:115;;;32653:21:120;32710:2;32690:18;;;32683:30;-1:-1:-1;;;32729:18:120;;;32722:46;32785:18;;4225:52:115;32469:340:120;4225:52:115;4288:23;4302:9;4288:23;;:::i;:::-;-1:-1:-1;;;;;4329:24:115;;;;;;:9;:24;;;;;:30;4288:23;;-1:-1:-1;1662:1:115;-1:-1:-1;;;4329:30:115;;;;;:54;4321:97;;;;-1:-1:-1;;;4321:97:115;;33149:2:120;4321:97:115;;;33131:21:120;33188:2;33168:18;;;33161:30;33227:32;33207:18;;;33200:60;33277:18;;4321:97:115;32947:354:120;4321:97:115;4511:4;4493:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;4493:44:115;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4548:24:115;;-1:-1:-1;4548:24:115;;;:9;:24;;;;;:50;;-1:-1:-1;;;4548:50:115;;;;;;-1:-1:-1;4548:48:115;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4642:24:115;;-1:-1:-1;4642:24:115;;;:9;:24;;;;;:42;-1:-1:-1;;;4642:42:115;;;;-1:-1:-1;4642:24:115;4729:857;4736:12;4746:1;4736:9;:12::i;:::-;4729:857;;;-1:-1:-1;;;;;4832:12:115;;4797:32;4832:12;;;:9;:12;;;;;4858:36;;-1:-1:-1;;;4858:36:115;;;;4832:12;4858:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4944:53;4962:16;:34;;;;;;;;;;;;4944:17;:53::i;:::-;4908:32;;;:89;;:32;;:89;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4908:89:115;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5106:32:115;;;5081:58;;5103:1;;4908:89;5106:32;5081:21;:58::i;:::-;-1:-1:-1;;;;;5192:24:115;;;;;;;:9;:24;;;;;;;:32;5279:4;5261:24;;;;;;:30;5159:272;;5261:30;-1:-1:-1;;;5261:30:115;;;33939:36:120;;5309:42:115;-1:-1:-1;;;5309:42:115;;;;34020:18:120;;;34013:43;;;;-1:-1:-1;;;5369:48:115;;;;;;34072:18:120;;;34065:43;5159:272:115;;;;5192:32;;;;;5159:272;;33927:2:120;33912:18;5159:272:115;;;;;;;5471:34;;-1:-1:-1;;;5471:34:115;;;;-1:-1:-1;;;;;;5523:24:115;;-1:-1:-1;4729:857:115;;;5716:7;:63;;5752:27;:23;5778:1;5752:27;:::i;:::-;5716:63;;;5726:23;5716:63;5813:257;;;;;;;;-1:-1:-1;;;;;5813:257:115;;;;;-1:-1:-1;5878:24:115;;;5813:257;5878:24;;;;;;:30;5690:89;;-1:-1:-1;5813:257:115;;;;;5878:34;;-1:-1:-1;;;5878:30:115;;;;5911:1;5878:34;:::i;:::-;5813:257;;;;5945:1;5813:257;;;;;;;;;;;;6017:42;6035:23;6017:17;:42::i;:::-;5813:257;;;;;;;-1:-1:-1;;;;;5789:21:115;;;;;;;:9;:21;;;;;;;;:281;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5789:281:115;;;;;;;-1:-1:-1;;;5789:281:115;;;;;;;;;;;;-1:-1:-1;;;;5789:281:115;-1:-1:-1;;;5789:281:115;;;;;-1:-1:-1;;;;5789:281:115;;-1:-1:-1;;;5789:281:115;;;;;;;;;;;;;;;-1:-1:-1;5789:281:115;;;;;-1:-1:-1;;5789:281:115;-1:-1:-1;;;;;5789:281:115;;;;;;;;;;;6129:88;;6149:4;;5789:21;;6179:37;;;;6129;:88;:::i;:::-;-1:-1:-1;6231:14:115;;6227:128;;6313:31;;-1:-1:-1;;;;;6313:19:115;;;:31;;;;;6333:10;;6313:31;;;;6333:10;6313:19;:31;;;;;;;;;;;;;;;;;;;6227:128;3777:2584;;;;;;3715:2646;:::o;4231:201:95:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8013:175:115:-;8087:14;8124:57;8132:48;;;;1788:9;8132:48;:::i;:::-;8124:7;:57::i;19482:146:117:-;19567:54;19578:10;19590;19602:2;19606:6;19567:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;8242:647:115:-;8303:17;8358:2;8336:18;:24;;;8332:551;;-1:-1:-1;8406:10:115;;8242:647;-1:-1:-1;8242:647:115:o;8332:551::-;8459:2;8437:18;:24;;;8433:450;;-1:-1:-1;8508:9:115;;8242:647;-1:-1:-1;8242:647:115:o;8433:450::-;8560:2;8538:18;:24;;;8534:349;;-1:-1:-1;8609:9:115;;8242:647;-1:-1:-1;8242:647:115:o;8534:349::-;8661:2;8639:18;:24;;;8635:248;;-1:-1:-1;8710:9:115;;8242:647;-1:-1:-1;8242:647:115:o;8635:248::-;8762:2;8740:18;:24;;;8736:147;;-1:-1:-1;8811:9:115;;8242:647;-1:-1:-1;8242:647:115:o;8736:147::-;-1:-1:-1;8858:7:115;;8242:647;-1:-1:-1;8242:647:115:o;15685:222:117:-;15783:10;15803:46;:10;15783;15840:8;15803:28;:46::i;:::-;15893:6;-1:-1:-1;;;;;15864:36:117;15883:8;-1:-1:-1;;;;;15864:36:117;;;;;;;;;;;15756:151;15685:222;:::o;4710:104::-;4768:13;4800:7;4793:14;;;;;:::i;15137:185::-;15247:68;15253:10;15265;15277:9;15288:6;15296:8;;15247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15247:68:117;;;;;;;;;;;;;-1:-1:-1;15310:4:117;;-1:-1:-1;15247:5:117;;-1:-1:-1;15247:68:117:i;17722:223::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:117;;;;;;;;;;;24796:63;17876:15;;17925:12:::1;::::0;;17895:1:::1;17925:12:::0;;::::1;::::0;::::1;::::0;;;17841:97:::1;::::0;17847:10:::1;::::0;17859:7;;17868:6;;17876:20;;::::1;::::0;:15;;17841:5:::1;:97::i;9557:116:115:-:0;1094:13:26;:11;:13::i;:::-;9653:12:115::1;::::0;;9663:1:::1;9653:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9616:50:115;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;9645:6;;9616:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:95::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:95;;-1:-1:-1;;;8544:35:95:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:95;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18419:154:117:-;18495:71;18509:10;18521;18533:9;18544:21;18554:10;18544:9;:21::i;:::-;18495:13;:71::i;14650:322::-;14752:4;14768:176;14790:10;14814:7;14835:99;14872:15;14835:99;;;;;;;;;;;;;;;;;14847:10;14835:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14835:32:117;;;;;;;;;;;:99;:36;:99::i;13726:172::-;13812:4;13835:56;13849:10;13861;13873:9;13884:6;13835:13;:56::i;4438:533:95:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:95;;4438:533;-1:-1:-1;;;;;;;4438:533:95:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17351:365:117:-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:117;;;;;;;;;;;24796:63;17554:15;;17687:12:::1;::::0;;17573:1:::1;17687:12:::0;;::::1;::::0;::::1;::::0;;;17470:239:::1;::::0;17489:10:::1;::::0;17513:7;;17534:6;;17554:20;;::::1;::::0;;;:15;;17470:5:::1;:239::i;23512:353::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;23688:170:117::1;23710:7;23731;23752:96;23786:15;23752:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23752:20:117;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;24115:251::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24294:65:117::1;24300:10;24312:7;24321:9;24332:6;24340:8;24294:65;;;;;;;;;;;::::0;24354:4:::1;24294:5;:65::i;24372:165::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24476:54:117::1;24485:10;24497:7;24506;24515:6;24476:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:95:-:0;13208:57;;-1:-1:-1;;;13208:57:95;;13253:10;13208:57;;;8907:51:120;13208:5:95;-1:-1:-1;;;;;13208:28:95;;;;8880:18:120;;13208:57:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:95;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:95;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:95;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:95:o;15500:179:117:-;15602:4;15625:47;:10;15650:8;15660:11;15625:24;:47::i;3945:280:95:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:95;-1:-1:-1;;3945:280:95;-1:-1:-1;;;;3945:280:95:o;2455:127:115:-;-1:-1:-1;;;;;2535:18:115;;;2512:4;2535:18;;;:9;:18;;;;;:26;;:40;;;2455:127::o;2105:1334:95:-;-1:-1:-1;;;;;2370:31:95;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;-1:-1:-1;;;2708:182:95;;2793:4;2708:182;;;35327:34:120;-1:-1:-1;;;;;35397:15:120;;;35377:18;;;35370:43;35429:18;;;35422:34;;;2708:58:95;;;;;;35262:18:120;;2708:182:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:95;-1:-1:-1;2568:322:95;-1:-1:-1;2914:26:95;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:95;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;8895:246:115:-;1094:13:26;:11;:13::i;:::-;9037:19:115::1;9047:8;9037:9;:19::i;:::-;9036:20;9028:61;;;::::0;-1:-1:-1;;;9028:61:115;;35979:2:120;9028:61:115::1;::::0;::::1;35961:21:120::0;36018:2;35998:18;;;35991:30;36057;36037:18;;;36030:58;36105:18;;9028:61:115::1;35777:352:120::0;9028:61:115::1;9099:35;9125:8;9099:25;:35::i;9200:302::-:0;1094:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;9289:22:115;::::1;9281:51;;;::::0;-1:-1:-1;;;9281:51:115;;36336:2:120;9281:51:115::1;::::0;::::1;36318:21:120::0;36375:2;36355:18;;;36348:30;-1:-1:-1;;;36394:18:120;;;36387:46;36450:18;;9281:51:115::1;36134:340:120::0;9281:51:115::1;9359:1;9350:6;:10;9342:37;;;::::0;-1:-1:-1;;;9342:37:115;;36681:2:120;9342:37:115::1;::::0;::::1;36663:21:120::0;36720:2;36700:18;;;36693:30;-1:-1:-1;;;36739:18:120;;;36732:44;36793:18;;9342:37:115::1;36479:338:120::0;9342:37:115::1;9422:6;9397:21;:31;;9389:62;;;::::0;-1:-1:-1;;;9389:62:115;;37024:2:120;9389:62:115::1;::::0;::::1;37006:21:120::0;37063:2;37043:18;;;37036:30;-1:-1:-1;;;37082:18:120;;;37075:48;37140:18;;9389:62:115::1;36822:342:120::0;9389:62:115::1;9461:34;::::0;-1:-1:-1;;;;;9461:26:115;::::1;::::0;:34;::::1;;;::::0;9488:6;;9461:34:::1;::::0;;;9488:6;9461:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;15913:213:117::0;16008:10;16028:43;:10;16008;16062:8;16028:25;:43::i;:::-;16112:6;-1:-1:-1;;;;;16086:33:117;16102:8;-1:-1:-1;;;;;16086:33:117;;;;;;;;;;;15981:145;15913:213;:::o;16735:403::-;16927:10;16952:43;:10;16927;16987:7;16952:24;:43::i;:::-;16947:104;;17004:47;;-1:-1:-1;;;17004:47:117;;;;;;;;;;;16947:104;17061:70;17072:8;17082:7;17091;17100:6;17108:8;;17061:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17061:70:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17118:12:117;;-1:-1:-1;17118:12:117;;;;17061:70;;17118:12;;;;17061:70;;;;;;;;;-1:-1:-1;17061:10:117;;-1:-1:-1;;;17061:70:117:i;15328:166::-;15419:68;15430:10;15442;15454;15466:6;15474:8;;15419:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:68:117;;;;;;;;;;;;;-1:-1:-1;15419:10:117;;-1:-1:-1;;15419:68:117:i;948:895:27:-;1286:14;1283:1;1280;1267:34;1500:1;1497;1481:14;1478:1;1462:14;1455:5;1442:60;1576:16;1573:1;1570;1555:38;1614:6;1681:66;;;;1796:16;1793:1;1786:27;1681:66;1716:16;1713:1;1706:27;2294:141:83;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:83;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;701:213:85:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10502:394:117;-1:-1:-1;;;;;10593:21:117;;10589:98;;10637:39;;-1:-1:-1;;;10637:39:117;;;;;;;;;;;10589:98;-1:-1:-1;;;;;10700:21:117;;10696:96;;10744:37;;-1:-1:-1;;;10744:37:117;;;;;;;;;;;10696:96;-1:-1:-1;;;;;10802:20:117;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10855:34;;6589:25:120;;;10855:34:117;;6562:18:120;10855:34:117;;;;;;;;10502:394;;;:::o;20802:1142::-;21157:16;;-1:-1:-1;;;;;21157:16:117;21145:85;;21197:33;;-1:-1:-1;;;21197:33:117;;;;;;;;;;;21145:85;21242:24;21268:22;21294:27;21314:6;21294:19;:27::i;:::-;21241:80;;;;21399:86;21405:8;21415:7;21424:14;21440:8;:15;21459:1;21440:20;;21462:8;21472:12;21399:5;:86::i;:::-;21519:16;;:41;;-1:-1:-1;;;21519:41:117;;21554:4;21519:41;;;8907:51:120;21496:20:117;;-1:-1:-1;;;;;21519:16:117;;:26;;8880:18:120;;21519:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21570:16;;21496:64;;-1:-1:-1;21570:51:117;;-1:-1:-1;;;;;21570:16:117;21600:2;21604:16;21570:29;:51::i;:::-;21653:16;;:41;;-1:-1:-1;;;21653:41:117;;21688:4;21653:41;;;8907:51:120;21631:19:117;;-1:-1:-1;;;;;21653:16:117;;:26;;8880:18:120;;21653:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21631:63;-1:-1:-1;21704:30:117;21737:26;21631:63;21737:12;:26;:::i;:::-;21704:59;;21797:22;21777:16;:42;21773:108;;21828:53;;-1:-1:-1;;;21828:53:117;;;;;;;;;;;21773:108;21913:7;-1:-1:-1;;;;;21897:40:117;;21922:14;21897:40;;;;6589:25:120;;6577:2;6562:18;;6443:177;21897:40:117;;;;;;;;21135:809;;;;;20802:1142;;;;;;:::o;920:282:85:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:85;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:85;;920:282;-1:-1:-1;;;920:282:85:o;5545:715:117:-;5670:4;-1:-1:-1;;;;;5694:20:117;;5690:98;;5737:40;;-1:-1:-1;;;5737:40:117;;;;;;;;;;;5690:98;-1:-1:-1;;;;;5801:23:117;;5797:99;;5847:38;;-1:-1:-1;;;5847:38:117;;;;;;;;;;;5797:99;5905:16;5924:10;5905:29;;5945:50;5951:8;5961:6;5969:9;5980:6;5945:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;6021:6;-1:-1:-1;;;;;6010:17:117;:7;-1:-1:-1;;;;;6010:17:117;;6006:226;;6043:178;6069:6;6093:7;6118:89;6151:6;6118:89;;;;;;;;;;;;;;;;;:11;:19;6130:6;-1:-1:-1;;;;;6118:19:117;-1:-1:-1;;;;;6118:19:117;;;;;;;;;;;;:28;6138:7;-1:-1:-1;;;;;6118:28:117;-1:-1:-1;;;;;6118:28:117;;;;;;;;;;;;;:32;;:89;;;;;:::i;6043:178::-;-1:-1:-1;6249:4:117;;5545:715;-1:-1:-1;;;;;5545:715:117:o;6823:230:95:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:95;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:95;;-1:-1:-1;;;;;7006:5:95;35345:15:120;;6983:63:95;;;35327:34:120;7013:4:95;35377:18:120;;;35370:43;601:60:95;35429:18:120;;;35422:34;6908:49:95;;-1:-1:-1;6983:22:95;;;;;;35262:18:120;;6983:63:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:46:-;34837:6;-1:-1:-1;;;;;34962:5:46;:34;;34954:87;;;;-1:-1:-1;;;34954:87:46;;38340:2:120;34954:87:46;;;38322:21:120;38379:2;38359:18;;;38352:30;38418:34;38398:18;;;38391:62;-1:-1:-1;;;38469:18:120;;;38462:38;38517:19;;34954:87:46;38138:404:120;34954:87:46;-1:-1:-1;35065:5:46;34781:297::o;301:119:84:-;403:2;-1:-1:-1;;;;;388:25:84;397:4;-1:-1:-1;;;;;388:25:84;-1:-1:-1;;;;;;;;;;;407:5:84;388:25;;;;6589::120;;6577:2;6562:18;;6443:177;1681:173:85;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;26861:262:56;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:56;;-1:-1:-1;;;;;38826:15:120;;;27080:36:56;;;38808:34:120;38878:15;;;38858:18;;;38851:43;38930:15;;;38910:18;;;38903:43;26995:56:56;;-1:-1:-1;27080:11:56;;;;-1:-1:-1;27080:11:56;;38743:18:120;;27080:36:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:56;;26861:262;-1:-1:-1;;;;;;;26861:262:56:o;3110:182::-;3272:12;;;3209:4;3272:12;;;;;;;;;3236:49;;3247:5;;3254:6;;3262:8;;3236:10;:49::i;3324:333:115:-;3478:1;3412:63;3459:4;;3466:8;3412:38;:63::i;:::-;:67;;;3408:243;;;3495:57;3515:4;3533:8;3543;3495:37;:57::i;3408:243::-;3583:57;3603:4;3621:8;3631;3583:37;:57::i;897:246:83:-;949:89;;-1:-1:-1;;;949:89:83;;-1:-1:-1;;;;;39682:15:120;;949:89:83;;;39664:34:120;998:24:83;39714:18:120;;;39707:34;1032:4:83;39757:18:120;;;39750:43;332:42:83;;949:41;;39599:18:120;;949:89:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:83;;-1:-1:-1;;;1048:88:83;;-1:-1:-1;;;;;39682:15:120;;1048:88:83;;;39664:34:120;1097:23:83;39714:18:120;;;39707:34;1130:4:83;39757:18:120;;;39750:43;332:42:83;;-1:-1:-1;1048:41:83;;-1:-1:-1;39599:18:120;;1048:88:83;39424:375:120;19634:1162:117;19850:16;;-1:-1:-1;;;;;19850:16:117;19838:85;;19890:33;;-1:-1:-1;;;19890:33:117;;;;;;;;;;;19838:85;19935:24;19961:22;19987:27;20007:6;19987:19;:27::i;:::-;20048:16;;:41;;-1:-1:-1;;;20048:41:117;;20083:4;20048:41;;;8907:51:120;19934:80:117;;-1:-1:-1;19934:80:117;;-1:-1:-1;20025:20:117;;-1:-1:-1;;;;;20048:16:117;;;;:26;;8880:18:120;;20048:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20099:16;;20025:64;;-1:-1:-1;20099:75:117;;-1:-1:-1;;;;;20099:16:117;20133:7;20150:4;20157:16;20099:33;:75::i;:::-;20206:16;;:41;;-1:-1:-1;;;20206:41:117;;20241:4;20206:41;;;8907:51:120;20184:19:117;;-1:-1:-1;;;;;20206:16:117;;:26;;8880:18:120;;20206:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20184:63;-1:-1:-1;20257:28:117;20288:26;20302:12;20184:63;20288:26;:::i;:::-;20257:57;;20348:20;20328:16;:40;20324:106;;20377:53;;-1:-1:-1;;;20377:53:117;;;;;;;;;;;20324:106;20628:15;;20441:299;;20460:8;;20482:2;;20498:14;;20628:20;;;:8;20718:12;20441:5;:299::i;:::-;20770:2;-1:-1:-1;;;;;20756:33:117;;20774:14;20756:33;;;;6589:25:120;;6577:2;6562:18;;6443:177;1291:300:85;1363:21;1417:10;-1:-1:-1;;;;;1403:25:85;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:85;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:85;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;1149:366:83:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:83;:8;-1:-1:-1;;;;;1281:23:83;;:174;;;-1:-1:-1;;;;;;1338:31:83;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:83;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:83;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6784:686:117:-;-1:-1:-1;;;;;7020:18:117;;7016:96;;7061:40;;-1:-1:-1;;;7061:40:117;;;;;;;;;;;7016:96;-1:-1:-1;;;;;7125:16:117;;7121:92;;7164:38;;-1:-1:-1;;;7164:38:117;;;;;;;;;;;7121:92;7223:69;7241:8;7251:4;7257:2;7261:6;7269:8;7279:12;7223:17;:69::i;:::-;7303:57;7309:8;7319:4;7325:2;7329:6;7337:8;7347:12;7303:5;:57::i;:::-;7371:92;7391:8;7401:4;7407:2;7411:6;7419:8;7429:12;7443:19;7371;:92::i;1359:130:26:-;1273:6;;-1:-1:-1;;;;;1273:6:26;719:10:40;1422:23:26;1414:68;;;;-1:-1:-1;;;1414:68:26;;40006:2:120;1414:68:26;;;39988:21:120;;;40025:18;;;40018:30;40084:34;40064:18;;;40057:62;40136:18;;1414:68:26;39804:356:120;2426:187:26;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;904:184:56:-;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;9912:178:115:-;9967:5;-1:-1:-1;;;;;9992:41:115;;;9984:62;;;;-1:-1:-1;;;9984:62:115;;40367:2:120;9984:62:115;;;40349:21:120;40406:1;40386:18;;;40379:29;-1:-1:-1;;;40424:18:120;;;40417:38;40472:18;;9984:62:115;40165:331:120;1521:382:83;1643:8;-1:-1:-1;;;;;1633:18:83;:6;-1:-1:-1;;;;;1633:18:83;;1625:76;;;;-1:-1:-1;;;1625:76:83;;40703:2:120;1625:76:83;;;40685:21:120;40742:2;40722:18;;;40715:30;40781:34;40761:18;;;40754:62;-1:-1:-1;;;40832:18:120;;;40825:43;40885:19;;1625:76:83;40501:409:120;1625:76:83;-1:-1:-1;;;;;1716:31:83;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:83;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:83;;;23258:248:117:o;1712:185:83:-;-1:-1:-1;;;;;1847:22:83;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:83;1882:4;1847:39;;;1521:382;;;:::o;9476:594:117:-;-1:-1:-1;;;;;9683:18:117;;9679:92;;9724:36;;-1:-1:-1;;;9724:36:117;;;;;;;;;;;9679:92;9785:10;9781:118;;;9811:77;9829:8;9839:4;9853:1;9857:6;9865:8;9875:12;9811:17;:77::i;:::-;9909:35;9931:4;9937:6;9909:21;:35::i;:::-;9977:4;-1:-1:-1;;;;;9960:54:117;9967:8;-1:-1:-1;;;;;9960:54:117;;9983:6;9991:8;10001:12;9960:54;;;;;;;;:::i;:::-;;;;;;;;10029:34;;6589:25:120;;;10052:1:117;;-1:-1:-1;;;;;10029:34:117;;;-1:-1:-1;;;;;;;;;;;10029:34:117;6577:2:120;6562:18;10029:34:117;6443:177:120;4959:201:47;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:47;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:47;;;4959:201::o;8500:667:117:-;-1:-1:-1;;;;;8744:21:117;;8740:93;;8788:34;;-1:-1:-1;;;8788:34:117;;;;;;;;;;;8740:93;8843:38;8865:7;8874:6;8843:21;:38::i;:::-;8896:10;8892:144;;;8922:103;8942:8;8960:1;8964:7;8973:6;8981:8;8991:12;9005:19;8922;:103::i;:::-;9068:7;-1:-1:-1;;;;;9051:57:117;9058:8;-1:-1:-1;;;;;9051:57:117;;9077:6;9085:8;9095:12;9051:57;;;;;;;;:::i;:::-;;;;;;;;9123:37;;6589:25:120;;;-1:-1:-1;;;;;9123:37:117;;;9140:1;;-1:-1:-1;;;;;;;;;;;9123:37:117;6577:2:120;6562:18;9123:37:117;;;;;;;8500:667;;;;;;;:::o;2074:198:26:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:26;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:26;;41572:2:120;2154:73:26::1;::::0;::::1;41554:21:120::0;41611:2;41591:18;;;41584:30;41650:34;41630:18;;;41623:62;-1:-1:-1;;;41701:18:120;;;41694:36;41747:19;;2154:73:26::1;41370:402:120::0;2154:73:26::1;2237:28;2256:8;2237:18;:28::i;1909:379:83:-:0;2030:10;-1:-1:-1;;;;;2018:22:83;;;2010:77;;;;-1:-1:-1;;;2010:77:83;;41979:2:120;2010:77:83;;;41961:21:120;42018:2;41998:18;;;41991:30;42057:34;42037:18;;;42030:62;-1:-1:-1;;;42108:18:120;;;42101:40;42158:19;;2010:77:83;41777:406:120;2010:77:83;-1:-1:-1;;;;;2101:31:83;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:83;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:83;2197:4;2148:53;;;23258:248:117;;;:::o;2097:185:83:-;-1:-1:-1;;;;;2239:22:83;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:83;;;1909:379::o;22046:972:117:-;22229:19;;22137:24;;;;;;1425:2;-1:-1:-1;;;22229:19:117;;;:40;:19;:40;22225:787;;;22434:19;;22413:40;;-1:-1:-1;;;22434:19:117;;;;1425:2;22413:40;:::i;:::-;22406:48;;:2;:48;:::i;:::-;22397:57;-1:-1:-1;22487:15:117;22397:57;22487:6;:15;:::i;:::-;22468:34;-1:-1:-1;22572:25:117;22591:6;22468:34;22572:25;:::i;:::-;22555:42;;22225:787;;;22618:19;;1425:2;-1:-1:-1;;;22618:19:117;;;:40;:19;:40;22614:398;;;22802:19;;:40;;1425:2;;-1:-1:-1;;;22802:19:117;;;;:40;:::i;:::-;22795:48;;:2;:48;:::i;:::-;22786:57;-1:-1:-1;22876:15:117;22786:57;22876:6;:15;:::i;:::-;22857:34;;22922:6;22905:23;;22614:398;;;22995:6;22978:23;;;22959:42;;22614:398;22191:827;22046:972;;;:::o;941:175:33:-;1050:58;;-1:-1:-1;;;;;44092:32:120;;1050:58:33;;;44074:51:120;44141:18;;;44134:34;;;1023:86:33;;1043:5;;-1:-1:-1;;;1073:23:33;44047:18:120;;1050:58:33;;;;-1:-1:-1;;1050:58:33;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:33;-1:-1:-1;;;;;;1050:58:33;;;;;;;;;;1023:19;:86::i;7476:367:117:-;7673:50;7695:4;7701:2;7705:17;:6;:15;:17::i;:::-;7673:21;:50::i;:::-;7760:2;-1:-1:-1;;;;;7739:56:117;7754:4;-1:-1:-1;;;;;7739:56:117;7744:8;-1:-1:-1;;;;;7739:56:117;;7764:6;7772:8;7782:12;7739:56;;;;;;;;:::i;:::-;;;;;;;;7825:2;-1:-1:-1;;;;;7810:26:117;7819:4;-1:-1:-1;;;;;7810:26:117;-1:-1:-1;;;;;;;;;;;7829:6:117;7810:26;;;;6589:25:120;;6577:2;6562:18;;6443:177;60355:828:56;60600:10;60594:17;60637:9;60631:16;-1:-1:-1;;;;;60670:26:56;;60666:422;;-1:-1:-1;;;;;60801:27:56;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:56;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:56;;61003:71;60950:125;;;6589:25:120;-1:-1:-1;;;;;60950:35:56;;;;;6562:18:120;;60950:125:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:56;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:56;;61142:34;;;;:::i;:::-;60355:828;;;:::o;3546:458::-;3668:4;3689:16;3707:28;3739:29;3762:5;3739:22;:29::i;:::-;3688:80;;;;3778:4;-1:-1:-1;;;;;3778:18:56;;3810:3;3859;-1:-1:-1;;;;;3859:14:56;;3892:5;3899:6;3907:8;3927:1;-1:-1:-1;;;;;3917:12:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3917:12:56;;3827:117;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3827:117:56;;;;;;;;;;;;;;;-1:-1:-1;;;;;3827:117:56;;;;;;3778:198;;;;;-1:-1:-1;;;;;;3778:198:56;;;;;;-1:-1:-1;3827:117:56;3958:8;;3778:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3778:198:56;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3993:4:56;;3546:458;-1:-1:-1;;;;;;;3546:458:56:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;1355:203:33:-;1482:68;;-1:-1:-1;;;;;35345:15:120;;;1482:68:33;;;35327:34:120;35397:15;;35377:18;;;35370:43;35429:18;;;35422:34;;;1455:96:33;;1475:5;;-1:-1:-1;;;1505:27:33;35262:18:120;;1482:68:33;35062:400:120;11369:510:117;11612:104;;-1:-1:-1;;;11612:104:117;;-1:-1:-1;;;;;44092:32:120;;11612:104:117;;;44074:51:120;440:31:83;44141:18:120;;;44134:34;11578:19:117;;332:42:83;;11612:54:117;;44047:18:120;;11612:104:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11578:138;-1:-1:-1;;;;;;11730:25:117;;;11726:147;;11771:91;;-1:-1:-1;;;11771:91:117;;-1:-1:-1;;;;;11771:39:117;;;;;:91;;11811:8;;11821:4;;11827:2;;11831:6;;11839:8;;11849:12;;11771:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11568:311;11369:510;;;;;;:::o;12568:677::-;12847:105;;-1:-1:-1;;;12847:105:117;;-1:-1:-1;;;;;44092:32:120;;12847:105:117;;;44074:51:120;538:34:83;44141:18:120;;;44134:34;12813:19:117;;332:42:83;;12847:54:117;;44047:18:120;;12847:105:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12813:139;-1:-1:-1;;;;;;12966:25:117;;;12962:277;;13007:96;;-1:-1:-1;;;13007:96:117;;-1:-1:-1;;;;;13007:44:117;;;;;:96;;13052:8;;13062:4;;13068:2;;13072:6;;13080:8;;13090:12;;13007:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12962:277;;;13124:19;13120:119;;;-1:-1:-1;;;;;13163:13:117;;1702:19:39;:23;13159:69:117;;13187:41;;-1:-1:-1;;;13187:41:117;;;;;;;;;;;1342:472:56;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:56;;1606:3;1655;-1:-1:-1;;;;;1655:14:56;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:56;;1623:119;;;;;;;;;;;:::i;5918:440:95:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:95;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:95;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:95;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:95:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:95;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:95;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:95:o;5196:642:33:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:33;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:33;;48276:2:120;5720:111:33;;;48258:21:120;48315:2;48295:18;;;48288:30;48354:34;48334:18;;;48327:62;-1:-1:-1;;;48405:18:120;;;48398:40;48455:19;;5720:111:33;48074:406:120;6364:453:95;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:95;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:95;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:95;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:95;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:95:o;57949:1061:56:-;58197:10;58191:17;58234:9;58228:16;-1:-1:-1;;;;;58267:26:56;;58263:652;;-1:-1:-1;;;;;58387:27:56;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:56;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:56;;58589:71;58536:125;;;6589:25:120;-1:-1:-1;;;;;58536:35:56;;;;;6562:18:120;;58536:125:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;58835:10;58828:24;58887:3;58876:9;58869:22;-1:-1:-1;;;;;58931:27:56;;58924:35;;;;:::i;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:56;;2716:3;2765;-1:-1:-1;;;;;2765:14:56;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:56;;;;;;;:::i;4108:223:39:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:39;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:39:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:39;;;8113:60;;;;-1:-1:-1;;;8113:60:39;;49386:2:120;8113:60:39;;;49368:21:120;49425:2;49405:18;;;49398:30;49464:31;49444:18;;;49437:59;49513:18;;8113:60:39;49184:353:120;8113:60:39;-1:-1:-1;8208:10:39;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:39;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:120:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:120;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:120;;14:658;-1:-1:-1;;;;;;14:658:120:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:120;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:120;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:120:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:131::-;-1:-1:-1;;;;;1508:31:120;;1498:42;;1488:70;;1554:1;1551;1544:12;1569:367;1632:8;1642:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;-1:-1:-1;1737:20:120;;-1:-1:-1;;;;;1769:30:120;;1766:50;;;1812:1;1809;1802:12;1766:50;1849:4;1841:6;1837:17;1825:29;;1909:3;1902:4;1892:6;1889:1;1885:14;1877:6;1873:27;1869:38;1866:47;1863:67;;;1926:1;1923;1916:12;1863:67;1569:367;;;;;:::o;1941:640::-;2045:6;2053;2061;2069;2122:2;2110:9;2101:7;2097:23;2093:32;2090:52;;;2138:1;2135;2128:12;2090:52;2177:9;2164:23;2196:31;2221:5;2196:31;:::i;:::-;2246:5;-1:-1:-1;2298:2:120;2283:18;;2270:32;;-1:-1:-1;2353:2:120;2338:18;;2325:32;-1:-1:-1;;;;;2369:30:120;;2366:50;;;2412:1;2409;2402:12;2366:50;2451:70;2513:7;2504:6;2493:9;2489:22;2451:70;:::i;:::-;1941:640;;;;-1:-1:-1;2540:8:120;-1:-1:-1;;;;1941:640:120:o;2586:315::-;2654:6;2662;2715:2;2703:9;2694:7;2690:23;2686:32;2683:52;;;2731:1;2728;2721:12;2683:52;2770:9;2757:23;2789:31;2814:5;2789:31;:::i;:::-;2839:5;2891:2;2876:18;;;;2863:32;;-1:-1:-1;;;2586:315:120:o;3098:348::-;3150:8;3160:6;3214:3;3207:4;3199:6;3195:17;3191:27;3181:55;;3232:1;3229;3222:12;3181:55;-1:-1:-1;3255:20:120;;-1:-1:-1;;;;;3287:30:120;;3284:50;;;3330:1;3327;3320:12;3284:50;3367:4;3359:6;3355:17;3343:29;;3419:3;3412:4;3403:6;3395;3391:19;3387:30;3384:39;3381:59;;;3436:1;3433;3426:12;3451:721;3543:6;3551;3559;3567;3620:2;3608:9;3599:7;3595:23;3591:32;3588:52;;;3636:1;3633;3626:12;3588:52;3676:9;3663:23;-1:-1:-1;;;;;3746:2:120;3738:6;3735:14;3732:34;;;3762:1;3759;3752:12;3732:34;3801:59;3852:7;3843:6;3832:9;3828:22;3801:59;:::i;:::-;3879:8;;-1:-1:-1;3775:85:120;-1:-1:-1;3967:2:120;3952:18;;3939:32;;-1:-1:-1;3983:16:120;;;3980:36;;;4012:1;4009;4002:12;3980:36;;4051:61;4104:7;4093:8;4082:9;4078:24;4051:61;:::i;4177:247::-;4236:6;4289:2;4277:9;4268:7;4264:23;4260:32;4257:52;;;4305:1;4302;4295:12;4257:52;4344:9;4331:23;4363:31;4388:5;4363:31;:::i;4429:457::-;4506:12;;-1:-1:-1;;;;;4502:38:120;4490:51;;4594:4;4583:16;;;4577:23;4602:4;4573:34;4557:14;;;4550:58;4654:4;4643:16;;;4637:23;4679:10;4721:21;;;4705:14;;;4698:45;;;;4796:4;4785:16;;;4779:23;4775:32;;;4759:14;;;4752:56;4872:4;4861:16;;;4855:23;4851:2;4840:39;4824:14;;4817:63;4429:457::o;4891:249::-;5077:3;5062:19;;5090:44;5066:9;5116:6;5090:44;:::i;5145:180::-;5204:6;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;-1:-1:-1;5296:23:120;;5145:180;-1:-1:-1;5145:180:120:o;5330:505::-;5425:6;5433;5441;5494:2;5482:9;5473:7;5469:23;5465:32;5462:52;;;5510:1;5507;5500:12;5462:52;5546:9;5533:23;5523:33;;5607:2;5596:9;5592:18;5579:32;-1:-1:-1;;;;;5626:6:120;5623:30;5620:50;;;5666:1;5663;5656:12;5620:50;5705:70;5767:7;5758:6;5747:9;5743:22;5705:70;:::i;:::-;5330:505;;5794:8;;-1:-1:-1;5679:96:120;;-1:-1:-1;;;;5330:505:120:o;5840:598::-;5926:6;5934;5942;5950;6003:3;5991:9;5982:7;5978:23;5974:33;5971:53;;;6020:1;6017;6010:12;5971:53;6059:9;6046:23;6078:31;6103:5;6078:31;:::i;:::-;6128:5;-1:-1:-1;6185:2:120;6170:18;;6157:32;6198:33;6157:32;6198:33;:::i;:::-;6250:7;-1:-1:-1;6309:2:120;6294:18;;6281:32;6322:33;6281:32;6322:33;:::i;:::-;5840:598;;;;-1:-1:-1;6374:7:120;;6428:2;6413:18;6400:32;;-1:-1:-1;;5840:598:120:o;6625:127::-;6686:10;6681:3;6677:20;6674:1;6667:31;6717:4;6714:1;6707:15;6741:4;6738:1;6731:15;6757:275;6828:2;6822:9;6893:2;6874:13;;-1:-1:-1;;6870:27:120;6858:40;;-1:-1:-1;;;;;6913:34:120;;6949:22;;;6910:62;6907:88;;;6975:18;;:::i;:::-;7011:2;7004:22;6757:275;;-1:-1:-1;6757:275:120:o;7037:186::-;7085:4;-1:-1:-1;;;;;7110:6:120;7107:30;7104:56;;;7140:18;;:::i;:::-;-1:-1:-1;7206:2:120;7185:15;-1:-1:-1;;7181:29:120;7212:4;7177:40;;7037:186::o;7228:462::-;7270:5;7323:3;7316:4;7308:6;7304:17;7300:27;7290:55;;7341:1;7338;7331:12;7290:55;7377:6;7364:20;7408:48;7424:31;7452:2;7424:31;:::i;:::-;7408:48;:::i;:::-;7481:2;7472:7;7465:19;7527:3;7520:4;7515:2;7507:6;7503:15;7499:26;7496:35;7493:55;;;7544:1;7541;7534:12;7493:55;7609:2;7602:4;7594:6;7590:17;7583:4;7574:7;7570:18;7557:55;7657:1;7632:16;;;7650:4;7628:27;7621:38;;;;7636:7;7228:462;-1:-1:-1;;;7228:462:120:o;7695:118::-;7781:5;7774:13;7767:21;7760:5;7757:32;7747:60;;7803:1;7800;7793:12;7818:938;7936:6;7944;7952;7960;7968;7976;7984;8037:3;8025:9;8016:7;8012:23;8008:33;8005:53;;;8054:1;8051;8044:12;8005:53;8090:9;8077:23;8067:33;;8151:2;8140:9;8136:18;8123:32;-1:-1:-1;;;;;8170:6:120;8167:30;8164:50;;;8210:1;8207;8200:12;8164:50;8233:49;8274:7;8265:6;8254:9;8250:22;8233:49;:::i;:::-;8223:59;;;8332:2;8321:9;8317:18;8304:32;8345:31;8370:5;8345:31;:::i;:::-;8395:5;-1:-1:-1;8452:2:120;8437:18;;8424:32;8465:30;8424:32;8465:30;:::i;:::-;8514:7;-1:-1:-1;8573:3:120;8558:19;;8545:33;8587;8545;8587;:::i;:::-;7818:938;;;;-1:-1:-1;7818:938:120;;;;8639:7;8693:3;8678:19;;8665:33;;-1:-1:-1;8745:3:120;8730:19;;;8717:33;;7818:938;-1:-1:-1;;7818:938:120:o;8969:543::-;9201:3;9186:19;;9190:9;9282:6;9159:4;9316:190;9330:4;9327:1;9324:11;9316:190;;;9377:45;9418:3;9409:6;9403:13;9377:45;:::i;:::-;9451:4;9442:14;;;;;9491:4;9479:17;;;;;9350:1;9343:9;9316:190;;;9320:3;;;8969:543;;;;:::o;9517:456::-;9594:6;9602;9610;9663:2;9651:9;9642:7;9638:23;9634:32;9631:52;;;9679:1;9676;9669:12;9631:52;9718:9;9705:23;9737:31;9762:5;9737:31;:::i;:::-;9787:5;-1:-1:-1;9844:2:120;9829:18;;9816:32;9857:33;9816:32;9857:33;:::i;:::-;9517:456;;9909:7;;-1:-1:-1;;;9963:2:120;9948:18;;;;9935:32;;9517:456::o;9978:248::-;10046:6;10054;10107:2;10095:9;10086:7;10082:23;10078:32;10075:52;;;10123:1;10120;10113:12;10075:52;-1:-1:-1;;10146:23:120;;;10216:2;10201:18;;;10188:32;;-1:-1:-1;9978:248:120:o;11502:1038::-;11626:6;11634;11642;11650;11658;11666;11719:3;11707:9;11698:7;11694:23;11690:33;11687:53;;;11736:1;11733;11726:12;11687:53;11775:9;11762:23;11794:31;11819:5;11794:31;:::i;:::-;11844:5;-1:-1:-1;11901:2:120;11886:18;;11873:32;11949:4;11936:18;;11924:31;;11914:59;;11969:1;11966;11959:12;11914:59;11992:7;-1:-1:-1;12050:2:120;12035:18;;12022:32;-1:-1:-1;;;;;12103:14:120;;;12100:34;;;12130:1;12127;12120:12;12100:34;12169:59;12220:7;12211:6;12200:9;12196:22;12169:59;:::i;:::-;12247:8;;-1:-1:-1;12143:85:120;-1:-1:-1;12335:2:120;12320:18;;12307:32;;-1:-1:-1;12351:16:120;;;12348:36;;;12380:1;12377;12370:12;12348:36;;12419:61;12472:7;12461:8;12450:9;12446:24;12419:61;:::i;:::-;11502:1038;;;;-1:-1:-1;11502:1038:120;;-1:-1:-1;11502:1038:120;;12499:8;;11502:1038;-1:-1:-1;;;11502:1038:120:o;12545:525::-;12631:6;12639;12647;12655;12708:3;12696:9;12687:7;12683:23;12679:33;12676:53;;;12725:1;12722;12715:12;12676:53;12764:9;12751:23;12783:31;12808:5;12783:31;:::i;:::-;12833:5;-1:-1:-1;12890:2:120;12875:18;;12862:32;12903:33;12862:32;12903:33;:::i;:::-;12545:525;;12955:7;;-1:-1:-1;;;;13009:2:120;12994:18;;12981:32;;13060:2;13045:18;13032:32;;12545:525::o;13075:632::-;13246:2;13298:21;;;13368:13;;13271:18;;;13390:22;;;13217:4;;13246:2;13469:15;;;;13443:2;13428:18;;;13217:4;13512:169;13526:6;13523:1;13520:13;13512:169;;;13587:13;;13575:26;;13656:15;;;;13621:12;;;;13548:1;13541:9;13512:169;;13948:613;14036:6;14044;14052;14060;14113:2;14101:9;14092:7;14088:23;14084:32;14081:52;;;14129:1;14126;14119:12;14081:52;14168:9;14155:23;14187:31;14212:5;14187:31;:::i;:::-;14237:5;-1:-1:-1;14289:2:120;14274:18;;14261:32;;-1:-1:-1;14344:2:120;14329:18;;14316:32;-1:-1:-1;;;;;14360:30:120;;14357:50;;;14403:1;14400;14393:12;14357:50;14442:59;14493:7;14484:6;14473:9;14469:22;14442:59;:::i;14566:1065::-;14683:6;14691;14699;14707;14715;14723;14731;14784:3;14772:9;14763:7;14759:23;14755:33;14752:53;;;14801:1;14798;14791:12;14752:53;14840:9;14827:23;14859:31;14884:5;14859:31;:::i;:::-;14909:5;-1:-1:-1;14966:2:120;14951:18;;14938:32;14979:33;14938:32;14979:33;:::i;:::-;15031:7;-1:-1:-1;15085:2:120;15070:18;;15057:32;;-1:-1:-1;15140:2:120;15125:18;;15112:32;-1:-1:-1;;;;;15193:14:120;;;15190:34;;;15220:1;15217;15210:12;15190:34;15259:59;15310:7;15301:6;15290:9;15286:22;15259:59;:::i;:::-;15337:8;;-1:-1:-1;15233:85:120;-1:-1:-1;15425:3:120;15410:19;;15397:33;;-1:-1:-1;15442:16:120;;;15439:36;;;15471:1;15468;15461:12;15439:36;;15510:61;15563:7;15552:8;15541:9;15537:24;15510:61;:::i;:::-;14566:1065;;;;-1:-1:-1;14566:1065:120;;-1:-1:-1;14566:1065:120;;;;15484:87;;-1:-1:-1;;;14566:1065:120:o;15636:383::-;15713:6;15721;15729;15782:2;15770:9;15761:7;15757:23;15753:32;15750:52;;;15798:1;15795;15788:12;15750:52;15837:9;15824:23;15856:31;15881:5;15856:31;:::i;:::-;15906:5;15958:2;15943:18;;15930:32;;-1:-1:-1;16009:2:120;15994:18;;;15981:32;;15636:383;-1:-1:-1;;;15636:383:120:o;16284:276::-;16342:6;16395:2;16383:9;16374:7;16370:23;16366:32;16363:52;;;16411:1;16408;16401:12;16363:52;16450:9;16437:23;16500:10;16493:5;16489:22;16482:5;16479:33;16469:61;;16526:1;16523;16516:12;16759:523;16845:6;16853;16861;16914:2;16902:9;16893:7;16889:23;16885:32;16882:52;;;16930:1;16927;16920:12;16882:52;16969:9;16956:23;16988:31;17013:5;16988:31;:::i;:::-;17038:5;-1:-1:-1;17090:2:120;17075:18;;17062:32;;-1:-1:-1;17145:2:120;17130:18;;17117:32;-1:-1:-1;;;;;17161:30:120;;17158:50;;;17204:1;17201;17194:12;17158:50;17227:49;17268:7;17259:6;17248:9;17244:22;17227:49;:::i;:::-;17217:59;;;16759:523;;;;;:::o;17287:665::-;17382:6;17390;17398;17406;17459:3;17447:9;17438:7;17434:23;17430:33;17427:53;;;17476:1;17473;17466:12;17427:53;17515:9;17502:23;17534:31;17559:5;17534:31;:::i;:::-;17584:5;-1:-1:-1;17641:2:120;17626:18;;17613:32;17654:33;17613:32;17654:33;:::i;:::-;17706:7;-1:-1:-1;17760:2:120;17745:18;;17732:32;;-1:-1:-1;17815:2:120;17800:18;;17787:32;-1:-1:-1;;;;;17831:30:120;;17828:50;;;17874:1;17871;17864:12;17828:50;17897:49;17938:7;17929:6;17918:9;17914:22;17897:49;:::i;:::-;17887:59;;;17287:665;;;;;;;:::o;18276:388::-;18344:6;18352;18405:2;18393:9;18384:7;18380:23;18376:32;18373:52;;;18421:1;18418;18411:12;18373:52;18460:9;18447:23;18479:31;18504:5;18479:31;:::i;:::-;18529:5;-1:-1:-1;18586:2:120;18571:18;;18558:32;18599:33;18558:32;18599:33;:::i;:::-;18651:7;18641:17;;;18276:388;;;;;:::o;19228:923::-;19336:6;19344;19352;19360;19368;19376;19429:3;19417:9;19408:7;19404:23;19400:33;19397:53;;;19446:1;19443;19436:12;19397:53;19485:9;19472:23;19504:31;19529:5;19504:31;:::i;:::-;19554:5;-1:-1:-1;19606:2:120;19591:18;;19578:32;;-1:-1:-1;19661:2:120;19646:18;;19633:32;-1:-1:-1;;;;;19714:14:120;;;19711:34;;;19741:1;19738;19731:12;20156:478;20235:6;20243;20251;20304:2;20292:9;20283:7;20279:23;20275:32;20272:52;;;20320:1;20317;20310:12;20272:52;20356:9;20343:23;20333:33;;20417:2;20406:9;20402:18;20389:32;-1:-1:-1;;;;;20436:6:120;20433:30;20430:50;;;20476:1;20473;20466:12;20430:50;20515:59;20566:7;20557:6;20546:9;20542:22;20515:59;:::i;20639:380::-;20718:1;20714:12;;;;20761;;;20782:61;;20836:4;20828:6;20824:17;20814:27;;20782:61;20889:2;20881:6;20878:14;20858:18;20855:38;20852:161;;20935:10;20930:3;20926:20;20923:1;20916:31;20970:4;20967:1;20960:15;20998:4;20995:1;20988:15;20852:161;;20639:380;;;:::o;21024:613::-;21310:3;21292:22;;;21351:2;21330:19;;;21323:31;-1:-1:-1;;;21385:3:120;21370:19;;21363:45;-1:-1:-1;;;;;21520:15:120;;;21513:4;21498:20;;21491:45;21572:15;;;;21567:2;21552:18;;21545:43;-1:-1:-1;21604:18:120;;21597:34;;;;21440:3;21425:19;;21024:613::o;21990:267::-;22079:6;22074:3;22067:19;22131:6;22124:5;22117:4;22112:3;22108:14;22095:43;-1:-1:-1;22183:1:120;22158:16;;;22176:4;22154:27;;;22147:38;;;;22239:2;22218:15;;;-1:-1:-1;;22214:29:120;22205:39;;;22201:50;;21990:267::o;22262:640::-;-1:-1:-1;;;;;22557:32:120;;22539:51;;22638:4;22626:17;;22621:2;22606:18;;22599:45;22680:3;22675:2;22660:18;;22653:31;;;-1:-1:-1;;22707:63:120;;22750:19;;22742:6;22734;22707:63;:::i;:::-;22818:9;22810:6;22806:22;22801:2;22790:9;22786:18;22779:50;22846;22889:6;22881;22873;22846:50;:::i;:::-;22838:58;22262:640;-1:-1:-1;;;;;;;;;22262:640:120:o;22907:435::-;23188:1;23184;23179:3;23175:11;23171:19;23163:6;23159:32;23148:9;23141:51;23228:6;23223:2;23212:9;23208:18;23201:34;23271:2;23266;23255:9;23251:18;23244:30;23122:4;23291:45;23332:2;23321:9;23317:18;23309:6;23291:45;:::i;23347:509::-;23605:2;23587:21;;;23644:2;23624:18;;;23617:30;-1:-1:-1;;;23678:3:120;23663:19;;23656:44;-1:-1:-1;;;;;23774:32:120;;;;23767:4;23752:20;;23745:62;-1:-1:-1;23823:18:120;;23816:34;23732:3;23717:19;;23347:509::o;23861:514::-;24060:25;;;24121:2;24116;24101:18;;24094:30;;;24140:18;;24133:34;;;-1:-1:-1;;;;;;24179:31:120;;24176:51;;;24223:1;24220;24213:12;24176:51;24257:6;24254:1;24250:14;24314:6;24306;24301:2;24290:9;24286:18;24273:48;24342:22;;;;24366:2;24338:31;;23861:514;-1:-1:-1;;;;23861:514:120:o;24613:245::-;24680:6;24733:2;24721:9;24712:7;24708:23;24704:32;24701:52;;;24749:1;24746;24739:12;24701:52;24781:9;24775:16;24800:28;24822:5;24800:28;:::i;24863:127::-;24924:10;24919:3;24915:20;24912:1;24905:31;24955:4;24952:1;24945:15;24979:4;24976:1;24969:15;24995:136;25030:3;-1:-1:-1;;;25051:22:120;;25048:48;;25076:18;;:::i;:::-;-1:-1:-1;25116:1:120;25112:13;;24995:136::o;25136:127::-;25197:10;25192:3;25188:20;25185:1;25178:31;25228:4;25225:1;25218:15;25252:4;25249:1;25242:15;25268:216;25332:9;;;25360:11;;;25307:3;25390:9;;25418:10;;25414:19;;25443:10;;25435:19;;25411:44;25408:70;;;25458:18;;:::i;:::-;25408:70;;25268:216;;;;:::o;25489:200::-;25555:9;;;25528:4;25583:9;;25611:10;;25623:12;;;25607:29;25646:12;;;25638:21;;25604:56;25601:82;;;25663:18;;:::i;25694:529::-;25951:6;25940:9;25933:25;26023:1;26019;26014:3;26010:11;26006:19;25998:6;25994:32;25989:2;25978:9;25974:18;25967:60;26063:6;26058:2;26047:9;26043:18;26036:34;26106:6;26101:2;26090:9;26086:18;26079:34;26150:3;26144;26133:9;26129:19;26122:32;25914:4;26171:46;26212:3;26201:9;26197:19;26189:6;26171:46;:::i;26228:135::-;26267:3;26288:17;;;26285:43;;26308:18;;:::i;:::-;-1:-1:-1;26355:1:120;26344:13;;26228:135::o;26368:127::-;26429:10;26424:3;26420:20;26417:1;26410:31;26460:4;26457:1;26450:15;26484:4;26481:1;26474:15;27025:185;27063:3;27107:10;27100:5;27096:22;27137:7;27127:41;;27148:18;;:::i;:::-;-1:-1:-1;;27184:20:120;;27025:185;-1:-1:-1;;27025:185:120:o;27215:232::-;27314:2;27303:17;;;27284;;;;27280:41;-1:-1:-1;;27336:42:120;;-1:-1:-1;;;;;27380:37:120;;27333:85;27330:111;;;27421:18;;:::i;27452:184::-;27522:6;27575:2;27563:9;27554:7;27550:23;27546:32;27543:52;;;27591:1;27588;27581:12;27543:52;-1:-1:-1;27614:16:120;;27452:184;-1:-1:-1;27452:184:120:o;27641:1036::-;27761:6;27792:2;27835;27823:9;27814:7;27810:23;27806:32;27803:52;;;27851:1;27848;27841:12;27803:52;27884:9;27878:16;-1:-1:-1;;;;;27954:2:120;27946:6;27943:14;27940:34;;;27970:1;27967;27960:12;27940:34;28008:6;27997:9;27993:22;27983:32;;28053:7;28046:4;28042:2;28038:13;28034:27;28024:55;;28075:1;28072;28065:12;28024:55;28104:2;28098:9;28126:2;28122;28119:10;28116:36;;;28132:18;;:::i;:::-;28178:2;28175:1;28171:10;28161:20;;28201:28;28225:2;28221;28217:11;28201:28;:::i;:::-;28263:15;;;28333:11;;;28329:20;;;28294:12;;;;28361:19;;;28358:39;;;28393:1;28390;28383:12;28358:39;28417:11;;;;28437:210;28453:6;28448:3;28445:15;28437:210;;;28526:3;28520:10;28507:23;;28543:31;28568:5;28543:31;:::i;:::-;28587:18;;;28470:12;;;;28625;;;;28437:210;;;28666:5;27641:1036;-1:-1:-1;;;;;;;;27641:1036:120:o;28682:125::-;28747:9;;;28768:10;;;28765:36;;;28781:18;;:::i;29649:545::-;29751:2;29746:3;29743:11;29740:448;;;29787:1;29812:5;29808:2;29801:17;29857:4;29853:2;29843:19;29927:2;29915:10;29911:19;29908:1;29904:27;29898:4;29894:38;29963:4;29951:10;29948:20;29945:47;;;-1:-1:-1;29986:4:120;29945:47;30041:2;30036:3;30032:12;30029:1;30025:20;30019:4;30015:31;30005:41;;30096:82;30114:2;30107:5;30104:13;30096:82;;;30159:17;;;30140:1;30129:13;30096:82;;;30100:3;;;29649:545;;;:::o;30370:1206::-;-1:-1:-1;;;;;30489:3:120;30486:27;30483:53;;;30516:18;;:::i;:::-;30545:94;30635:3;30595:38;30627:4;30621:11;30595:38;:::i;:::-;30589:4;30545:94;:::i;:::-;30665:1;30690:2;30685:3;30682:11;30707:1;30702:616;;;;31362:1;31379:3;31376:93;;;-1:-1:-1;31435:19:120;;;31422:33;31376:93;-1:-1:-1;;30327:1:120;30323:11;;;30319:24;30315:29;30305:40;30351:1;30347:11;;;30302:57;31482:78;;30675:895;;30702:616;29596:1;29589:14;;;29633:4;29620:18;;-1:-1:-1;;30738:17:120;;;30839:9;30861:229;30875:7;30872:1;30869:14;30861:229;;;30964:19;;;30951:33;30936:49;;31071:4;31056:20;;;;31024:1;31012:14;;;;30891:12;30861:229;;;30865:3;31118;31109:7;31106:16;31103:159;;;31242:1;31238:6;31232:3;31226;31223:1;31219:11;31215:21;31211:34;31207:39;31194:9;31189:3;31185:19;31172:33;31168:79;31160:6;31153:95;31103:159;;;31305:1;31299:3;31296:1;31292:11;31288:19;31282:4;31275:33;30675:895;;30370:1206;;;:::o;32814:128::-;32881:9;;;32902:11;;;32899:37;;;32916:18;;:::i;33306:201::-;33344:3;33372:10;33417:2;33410:5;33406:14;33444:2;33435:7;33432:15;33429:41;;33450:18;;:::i;:::-;33499:1;33486:15;;33306:201;-1:-1:-1;;;33306:201:120:o;33512:228::-;33609:2;33579:17;;;33598;;;;33575:41;-1:-1:-1;;;;;33631:36:120;;-1:-1:-1;;33669:41:120;;33628:83;33625:109;;;33714:18;;:::i;34119:172::-;34186:10;34216;;;34228;;;34212:27;;34251:11;;;34248:37;;;34265:18;;:::i;34296:148::-;34384:4;34363:12;;;34377;;;34359:31;;34402:13;;34399:39;;;34418:18;;:::i;34449:217::-;34489:1;34515;34505:132;;34559:10;34554:3;34550:20;34547:1;34540:31;34594:4;34591:1;34584:15;34622:4;34619:1;34612:15;34505:132;-1:-1:-1;34651:9:120;;34449:217::o;35467:305::-;35554:6;35562;35570;35623:2;35611:9;35602:7;35598:23;35594:32;35591:52;;;35639:1;35636;35629:12;35591:52;35668:9;35662:16;35652:26;;35718:2;35707:9;35703:18;35697:25;35687:35;;35762:2;35751:9;35747:18;35741:25;35731:35;;35467:305;;;;;:::o;37169:282::-;37270:6;37323:2;37311:9;37302:7;37298:23;37294:32;37291:52;;;37339:1;37336;37329:12;37291:52;37371:9;37365:16;37390:31;37415:5;37390:31;:::i;38957:462::-;39052:6;39060;39068;39076;39129:3;39117:9;39108:7;39104:23;39100:33;39097:53;;;39146:1;39143;39136:12;39097:53;39175:9;39169:16;39159:26;;39228:2;39217:9;39213:18;39207:25;39276:5;39272:2;39261:21;39254:5;39251:32;39241:60;;39297:1;39294;39287:12;39241:60;39365:2;39350:18;;39344:25;39409:2;39394:18;;;39388:25;38957:462;;39320:5;;-1:-1:-1;38957:462:120;-1:-1:-1;;;38957:462:120:o;40915:450::-;41136:6;41125:9;41118:25;41179:2;41174;41163:9;41159:18;41152:30;41099:4;41205:45;41246:2;41235:9;41231:18;41223:6;41205:45;:::i;:::-;41298:9;41290:6;41286:22;41281:2;41270:9;41266:18;41259:50;41326:33;41352:6;41344;41326:33;:::i;42188:151::-;42278:4;42271:12;;;42257;;;42253:31;;42296:14;;42293:40;;;42313:18;;:::i;42344:422::-;42433:1;42476:5;42433:1;42490:270;42511:7;42501:8;42498:21;42490:270;;;42570:4;42566:1;42562:6;42558:17;42552:4;42549:27;42546:53;;;42579:18;;:::i;:::-;42629:7;42619:8;42615:22;42612:55;;;42649:16;;;;42612:55;42728:22;;;;42688:15;;;;42490:270;;;42494:3;42344:422;;;;;:::o;42771:806::-;42820:5;42850:8;42840:80;;-1:-1:-1;42891:1:120;42905:5;;42840:80;42939:4;42929:76;;-1:-1:-1;42976:1:120;42990:5;;42929:76;43021:4;43039:1;43034:59;;;;43107:1;43102:130;;;;43014:218;;43034:59;43064:1;43055:10;;43078:5;;;43102:130;43139:3;43129:8;43126:17;43123:43;;;43146:18;;:::i;:::-;-1:-1:-1;;43202:1:120;43188:16;;43217:5;;43014:218;;43316:2;43306:8;43303:16;43297:3;43291:4;43288:13;43284:36;43278:2;43268:8;43265:16;43260:2;43254:4;43251:12;43247:35;43244:77;43241:159;;;-1:-1:-1;43353:19:120;;;43385:5;;43241:159;43432:34;43457:8;43451:4;43432:34;:::i;:::-;43502:6;43498:1;43494:6;43490:19;43481:7;43478:32;43475:58;;;43513:18;;:::i;:::-;43551:20;;42771:806;-1:-1:-1;;;42771:806:120:o;43582:140::-;43640:5;43669:47;43710:4;43700:8;43696:19;43690:4;43669:47;:::i;43727:168::-;43800:9;;;43831;;43848:15;;;43842:22;;43828:37;43818:71;;43869:18;;:::i;44460:519::-;-1:-1:-1;;;;;44750:15:120;;;44732:34;;44802:15;;;44797:2;44782:18;;44775:43;44854:15;;44849:2;44834:18;;44827:43;44906:3;44901:2;44886:18;;44879:31;;;44675:4;;44927:46;;44953:19;;44945:6;44927:46;:::i;44984:510::-;-1:-1:-1;;;;;45239:32:120;;45221:51;;45308:2;45303;45288:18;;45281:30;;;-1:-1:-1;;45334:45:120;;45360:18;;45352:6;45334:45;:::i;45499:647::-;45578:6;45631:2;45619:9;45610:7;45606:23;45602:32;45599:52;;;45647:1;45644;45637:12;45599:52;45680:9;45674:16;-1:-1:-1;;;;;45705:6:120;45702:30;45699:50;;;45745:1;45742;45735:12;45699:50;45768:22;;45821:4;45813:13;;45809:27;-1:-1:-1;45799:55:120;;45850:1;45847;45840:12;45799:55;45879:2;45873:9;45904:48;45920:31;45948:2;45920:31;:::i;45904:48::-;45975:2;45968:5;45961:17;46015:7;46010:2;46005;46001;45997:11;45993:20;45990:33;45987:53;;;46036:1;46033;46026:12;45987:53;46049:67;46113:2;46108;46101:5;46097:14;46092:2;46088;46084:11;46049:67;:::i;46810:732::-;-1:-1:-1;;;;;47153:15:120;;;47135:34;;47205:15;;;47200:2;47185:18;;47178:43;47257:15;;47252:2;47237:18;;47230:43;47304:2;47289:18;;47282:34;;;47353:3;47347;47332:19;;47325:32;;;47078:4;;47380:46;;47406:19;;47398:6;47380:46;:::i;:::-;47475:9;47467:6;47463:22;47457:3;47446:9;47442:19;47435:51;47503:33;47529:6;47521;47503:33;:::i;47547:522::-;-1:-1:-1;;;;;47833:15:120;;;47815:34;;47885:15;;47880:2;47865:18;;47858:43;47948:2;47937:22;;;47932:2;47917:18;;47910:50;47996:3;47991:2;47976:18;;47969:31;;;47758:4;;48017:46;;48043:19;;48035:6;48017:46;:::i;48892:287::-;49021:3;49059:6;49053:13;49075:66;49134:6;49129:3;49122:4;49114:6;49110:17;49075:66;:::i;:::-;49157:16;;;;;48892:287;-1:-1:-1;;48892:287:120:o",
    "linkReferences": {},
    "immutableReferences": {
      "76370": [
        {
          "start": 1654,
          "length": 32
        },
        {
          "start": 4807,
          "length": 32
        },
        {
          "start": 4918,
          "length": 32
        },
        {
          "start": 5811,
          "length": 32
        },
        {
          "start": 6812,
          "length": 32
        },
        {
          "start": 7019,
          "length": 32
        },
        {
          "start": 7726,
          "length": 32
        },
        {
          "start": 8118,
          "length": 32
        },
        {
          "start": 9950,
          "length": 32
        },
        {
          "start": 11046,
          "length": 32
        },
        {
          "start": 11248,
          "length": 32
        },
        {
          "start": 11400,
          "length": 32
        },
        {
          "start": 11504,
          "length": 32
        },
        {
          "start": 11640,
          "length": 32
        },
        {
          "start": 14112,
          "length": 32
        },
        {
          "start": 14263,
          "length": 32
        },
        {
          "start": 19317,
          "length": 32
        },
        {
          "start": 19892,
          "length": 32
        }
      ],
      "87865": [
        {
          "start": 3568,
          "length": 32
        }
      ],
      "87868": [
        {
          "start": 2262,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "FLAT_COST_SPONSORSHIP()": "b132a50d",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "_initialize(string,string)": "098dce13",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "calculateFlowRate(uint32)": "7ae058dc",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "initializeProxy(address)": "4a0687ef",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "remove(address)": "29092d0e",
    "renounceOwnership()": "715018a6",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLAT_COST_SPONSORSHIP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"clubName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"clubSymbol\",\"type\":\"string\"}],\"name\":\"_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"calculateFlowRate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct SuperfluidClub.Protege[6]\",\"name\":\"sponsors\",\"type\":\"tuple[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct SuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialAddress\",\"type\":\"address\"}],\"name\":\"initializeProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldProtege\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_initialize(string,string)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"calculateFlowRate(uint32)\":{\"details\":\"ISuperfluidClub.calculateSponsorFlowRate implementation\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"initializeProxy(address)\":{\"details\":\"Called by the SuperTokenFactory contract on upgrade\",\"params\":{\"initialAddress\":\"logic contract address\"}},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation - WRONG\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"},\"withdraw(address,uint256)\":{\"details\":\"ISuperfluidClub.withdraw implementation\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"errors\":{\"Initialized()\":[{\"notice\":\"Thrown when the logic contract has been set\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when the logic contract address is zero\"}]},\"kind\":\"user\",\"methods\":{\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"initializeProxy(address)\":{\"notice\":\"Stores the logic contract address only once.\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/custom-supertokens/contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"lib/custom-supertokens/contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"lib/custom-supertokens/contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x6c54780414b2d26efbfd92ce834424d647253f60564fe8ddbc6f7bd5292c838c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3681c9b760aad96ccdd8ef61f4b00a3ea5c43d1fdacdc93275e0dc7063e2621e\",\"dweb:/ipfs/QmVk3qJMMc7Rrc2NVQ7gLk1mR6w7rSioYsgRkJMpJ7JW91\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0x2936b7104d39a012ed2d78458b2e45f1e3cac3a5d20cf08ee8cfebe92bd29a93\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a420cda25b096b194e46749c16e034b7b57655770b9bd6e77fdb25749961cc2\",\"dweb:/ipfs/QmdEc9Ube9Vwc8TG5NoK8tYaHJDnmg5bX1hEpTJM4jDHKK\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9\",\"dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx\"]},\"src/upgradability/UUPSProxy.sol\":{\"keccak256\":\"0xac9ba7140caa7f57b6525d38d7ff62801661a765f7585b7866b3c61c1a55f150\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5a9884ef227b788aecff73d7f08b8aa28b0bf7748bf4264fb89bf6dc09e759af\",\"dweb:/ipfs/QmVz3MEmBbegUXdSCBftJbVddsq92kMgkKZtcjHazkgerV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Initialized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLAT_COST_SPONSORSHIP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "clubName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "clubSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateFlowRate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct SuperfluidClub.Protege[6]",
              "name": "sponsors",
              "type": "tuple[6]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct SuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeProxy"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldProtege",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_initialize(string,string)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "calculateFlowRate(uint32)": {
            "details": "ISuperfluidClub.calculateSponsorFlowRate implementation"
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "initializeProxy(address)": {
            "details": "Called by the SuperTokenFactory contract on upgrade",
            "params": {
              "initialAddress": "logic contract address"
            }
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation - WRONG"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          },
          "withdraw(address,uint256)": {
            "details": "ISuperfluidClub.withdraw implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "initializeProxy(address)": {
            "notice": "Stores the logic contract address only once."
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/custom-supertokens/contracts/base/SuperTokenBase.sol": {
        "keccak256": "0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571",
        "urls": [
          "bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c",
          "dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/SuperTokenStorage.sol": {
        "keccak256": "0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687",
        "urls": [
          "bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26",
          "dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/UUPSProxy.sol": {
        "keccak256": "0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca",
        "urls": [
          "bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa",
          "dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1"
        ],
        "license": "AGPLv3"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x6c54780414b2d26efbfd92ce834424d647253f60564fe8ddbc6f7bd5292c838c",
        "urls": [
          "bzz-raw://3681c9b760aad96ccdd8ef61f4b00a3ea5c43d1fdacdc93275e0dc7063e2621e",
          "dweb:/ipfs/QmVk3qJMMc7Rrc2NVQ7gLk1mR6w7rSioYsgRkJMpJ7JW91"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0x2936b7104d39a012ed2d78458b2e45f1e3cac3a5d20cf08ee8cfebe92bd29a93",
        "urls": [
          "bzz-raw://9a420cda25b096b194e46749c16e034b7b57655770b9bd6e77fdb25749961cc2",
          "dweb:/ipfs/QmdEc9Ube9Vwc8TG5NoK8tYaHJDnmg5bX1hEpTJM4jDHKK"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf",
        "urls": [
          "bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9",
          "dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx"
        ],
        "license": "AGPLv3"
      },
      "src/upgradability/UUPSProxy.sol": {
        "keccak256": "0xac9ba7140caa7f57b6525d38d7ff62801661a765f7585b7866b3c61c1a55f150",
        "urls": [
          "bzz-raw://5a9884ef227b788aecff73d7f08b8aa28b0bf7748bf4264fb89bf6dc09e759af",
          "dweb:/ipfs/QmVz3MEmBbegUXdSCBftJbVddsq92kMgkKZtcjHazkgerV"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 87663,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        66295
      ],
      "IConstantOutflowNFT": [
        66349
      ],
      "IERC20": [
        44661
      ],
      "ISuperToken": [
        67038
      ],
      "ISuperfluid": [
        67711
      ],
      "ISuperfluidClub": [
        87813
      ],
      "Ownable": [
        43775
      ],
      "SuperToken": [
        89577
      ],
      "SuperTokenBase": [
        167
      ],
      "SuperTokenV1Library": [
        63611
      ],
      "SuperfluidClub": [
        87662
      ],
      "UUPSProxy": [
        89633
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:10323:115",
    "nodes": [
      {
        "id": 86786,
        "nodeType": "PragmaDirective",
        "src": "32:24:115",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 86788,
        "nodeType": "ImportDirective",
        "src": "58:58:115",
        "nodes": [],
        "absolutePath": "src/upgradability/UUPSProxy.sol",
        "file": "./upgradability/UUPSProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 89634,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86787,
              "name": "UUPSProxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89633,
              "src": "67:9:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86790,
        "nodeType": "ImportDirective",
        "src": "117:114:115",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 63612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86789,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63611,
              "src": "125:19:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86793,
        "nodeType": "ImportDirective",
        "src": "232:117:115",
        "nodes": [],
        "absolutePath": "lib/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "file": "@superfluid-finance/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 168,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86791,
              "name": "SuperTokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 167,
              "src": "240:14:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86792,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67038,
              "src": "256:11:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86799,
        "nodeType": "ImportDirective",
        "src": "350:117:115",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 89578,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86794,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89577,
              "src": "358:10:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86795,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67711,
              "src": "370:11:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86796,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66349,
              "src": "383:19:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86797,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66295,
              "src": "404:18:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86798,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44661,
              "src": "424:6:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86801,
        "nodeType": "ImportDirective",
        "src": "468:67:115",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 43776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86800,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43775,
              "src": "476:7:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86803,
        "nodeType": "ImportDirective",
        "src": "536:65:115",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87663,
        "sourceUnit": 87814,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86802,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87813,
              "src": "544:15:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87662,
        "nodeType": "ContractDefinition",
        "src": "709:9645:115",
        "nodes": [
          {
            "id": 86814,
            "nodeType": "UsingForDirective",
            "src": "772:42:115",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86811,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "778:19:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63611,
              "src": "778:19:115"
            },
            "typeName": {
              "id": 86813,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86812,
                "name": "ISuperToken",
                "nameLocations": [
                  "802:11:115"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67038,
                "src": "802:11:115"
              },
              "referencedDeclaration": 67038,
              "src": "802:11:115",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 86826,
            "nodeType": "EventDefinition",
            "src": "820:189:115",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a7",
            "name": "PROTEGE_UPDATED",
            "nameLocation": "826:15:115",
            "parameters": {
              "id": 86825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86816,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sponsor",
                  "nameLocation": "867:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "851:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86818,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "900:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "884:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "884:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "level",
                  "nameLocation": "923:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "917:11:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86819,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "917:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "945:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "938:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 86821,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86824,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "directTotalProtegeCount",
                  "nameLocation": "979:23:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "972:30:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 86823,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "841:167:115"
            }
          },
          {
            "id": 86828,
            "nodeType": "VariableDeclaration",
            "src": "1015:17:115",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "init",
            "nameLocation": "1028:4:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 86827,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1015:4:115",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86846,
            "nodeType": "FunctionDefinition",
            "src": "1039:178:115",
            "nodes": [],
            "body": {
              "id": 86845,
              "nodeType": "Block",
              "src": "1215:2:115",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86840,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86831,
                    "src": "1166:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 86841,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86834,
                    "src": "1172:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 86842,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86837,
                    "src": "1192:17:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 86843,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86839,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1155:10:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89577,
                  "src": "1155:10:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "1155:55:115"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86831,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1063:4:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86846,
                  "src": "1051:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 86830,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86829,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1051:11:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67711,
                      "src": "1051:11:115"
                    },
                    "referencedDeclaration": 67711,
                    "src": "1051:11:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86834,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1089:18:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86846,
                  "src": "1069:38:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 86833,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86832,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1069:19:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66349,
                      "src": "1069:19:115"
                    },
                    "referencedDeclaration": 66349,
                    "src": "1069:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86837,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1128:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86846,
                  "src": "1109:36:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 86836,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86835,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1109:18:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66295,
                      "src": "1109:18:115"
                    },
                    "referencedDeclaration": 66295,
                    "src": "1109:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:96:115"
            },
            "returnParameters": {
              "id": 86844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1215:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86893,
            "nodeType": "FunctionDefinition",
            "src": "1278:311:115",
            "nodes": [],
            "body": {
              "id": 86892,
              "nodeType": "Block",
              "src": "1360:229:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1378:5:115",
                        "subExpression": {
                          "id": 86855,
                          "name": "init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86828,
                          "src": "1379:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 86857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1385:21:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 86854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1370:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:37:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86859,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:37:115"
                },
                {
                  "expression": {
                    "id": 86862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86860,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86828,
                      "src": "1417:4:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 86861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1424:4:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1417:11:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86863,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:11:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 86870,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1469:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 86869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1461:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86868,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1461:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1461:10:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86867,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44661,
                          "src": "1454:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44661_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 86872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1454:18:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44661",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1474:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 86874,
                        "name": "clubName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86849,
                        "src": "1477:8:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 86875,
                        "name": "clubSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86851,
                        "src": "1487:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$44661",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 86864,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1438:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1443:10:115",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88018,
                      "src": "1438:15:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$44661_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 86876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:60:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86877,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:60:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86883,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1530:4:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 86882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1522:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86881,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1522:7:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1522:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 86885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:30:115",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1579:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1569:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 86886,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1573:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 86889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1569:12:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 86878,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1508:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1513:8:115",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88944,
                      "src": "1508:13:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 86890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1508:74:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86891,
                  "nodeType": "ExpressionStatement",
                  "src": "1508:74:115"
                }
              ]
            },
            "documentation": {
              "id": 86847,
              "nodeType": "StructuredDocumentation",
              "src": "1223:50:115",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "098dce13",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initialize",
            "nameLocation": "1287:11:115",
            "parameters": {
              "id": 86852,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86849,
                  "mutability": "mutable",
                  "name": "clubName",
                  "nameLocation": "1315:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86893,
                  "src": "1299:24:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86848,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1299:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86851,
                  "mutability": "mutable",
                  "name": "clubSymbol",
                  "nameLocation": "1341:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86893,
                  "src": "1325:26:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86850,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1325:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1298:54:115"
            },
            "returnParameters": {
              "id": 86853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1360:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86896,
            "nodeType": "VariableDeclaration",
            "src": "1614:49:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "1638:21:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86894,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1614:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 86895,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1662:1:115",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "id": 86899,
            "nodeType": "VariableDeclaration",
            "src": "1669:58:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "b132a50d",
            "mutability": "constant",
            "name": "FLAT_COST_SPONSORSHIP",
            "nameLocation": "1693:21:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86897,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1669:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 86898,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1717:10:115",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "id": 86902,
            "nodeType": "VariableDeclaration",
            "src": "1733:64:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "1757:28:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86900,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1733:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 86901,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1788:9:115",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 86905,
            "nodeType": "VariableDeclaration",
            "src": "1803:50:115",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SECONDS_IN_A_DAY",
            "nameLocation": "1829:16:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86903,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1803:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 86904,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1848:5:115",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "internal"
          },
          {
            "id": 86916,
            "nodeType": "StructDefinition",
            "src": "1912:407:115",
            "nodes": [],
            "canonicalName": "SuperfluidClub.Protege",
            "members": [
              {
                "constant": false,
                "id": 86907,
                "mutability": "mutable",
                "name": "sponsor",
                "nameLocation": "1945:7:115",
                "nodeType": "VariableDeclaration",
                "scope": 86916,
                "src": "1937:15:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 86906,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1937:7:115",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86909,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "1994:5:115",
                "nodeType": "VariableDeclaration",
                "scope": 86916,
                "src": "1988:11:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 86908,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1988:5:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86911,
                "mutability": "mutable",
                "name": "totalProtegeCount",
                "nameLocation": "2090:17:115",
                "nodeType": "VariableDeclaration",
                "scope": 86916,
                "src": "2083:24:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 86910,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2083:6:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86913,
                "mutability": "mutable",
                "name": "directTotalProtegeCount",
                "nameLocation": "2172:23:115",
                "nodeType": "VariableDeclaration",
                "scope": 86916,
                "src": "2165:30:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 86912,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2165:6:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86915,
                "mutability": "mutable",
                "name": "desiredFlowRate",
                "nameLocation": "2260:15:115",
                "nodeType": "VariableDeclaration",
                "scope": 86916,
                "src": "2254:21:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int96",
                  "typeString": "int96"
                },
                "typeName": {
                  "id": 86914,
                  "name": "int96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2254:5:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Protege",
            "nameLocation": "1919:7:115",
            "scope": 87662,
            "visibility": "public"
          },
          {
            "id": 86921,
            "nodeType": "VariableDeclaration",
            "src": "2348:46:115",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_proteges",
            "nameLocation": "2385:9:115",
            "scope": 87662,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
              "typeString": "mapping(address => struct SuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 86920,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 86917,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2356:7:115",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2348:27:115",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                "typeString": "mapping(address => struct SuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 86919,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86918,
                  "name": "Protege",
                  "nameLocations": [
                    "2367:7:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86916,
                  "src": "2367:7:115"
                },
                "referencedDeclaration": 86916,
                "src": "2367:7:115",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                  "typeString": "struct SuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86940,
            "nodeType": "FunctionDefinition",
            "src": "2455:127:115",
            "nodes": [],
            "body": {
              "id": 86939,
              "nodeType": "Block",
              "src": "2518:64:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 86929,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86921,
                          "src": "2535:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 86931,
                        "indexExpression": {
                          "id": 86930,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86924,
                          "src": "2545:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2535:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 86932,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2554:7:115",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86907,
                      "src": "2535:26:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 86935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2573:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 86934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2565:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 86933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2565:7:115",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 86936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2565:10:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2535:40:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86928,
                  "id": 86938,
                  "nodeType": "Return",
                  "src": "2528:47:115"
                }
              ]
            },
            "documentation": {
              "id": 86922,
              "nodeType": "StructuredDocumentation",
              "src": "2401:49:115",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "2464:9:115",
            "parameters": {
              "id": 86925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86924,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2482:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86940,
                  "src": "2474:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86923,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2474:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2473:17:115"
            },
            "returnParameters": {
              "id": 86928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86927,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86940,
                  "src": "2512:4:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 86926,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2512:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2511:6:115"
            },
            "scope": 87662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86981,
            "nodeType": "FunctionDefinition",
            "src": "2651:324:115",
            "nodes": [],
            "body": {
              "id": 86980,
              "nodeType": "Block",
              "src": "2795:180:115",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86952,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "2813:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 86980,
                      "src": "2805:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 86951,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2805:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86954,
                  "initialValue": {
                    "id": 86953,
                    "name": "protege",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86943,
                    "src": "2817:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2805:19:115"
                },
                {
                  "assignments": [
                    86956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86956,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2842:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 86980,
                      "src": "2834:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2834:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86958,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 86957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2846:1:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2834:13:115"
                },
                {
                  "body": {
                    "id": 86978,
                    "nodeType": "Block",
                    "src": "2878:91:115",
                    "statements": [
                      {
                        "expression": {
                          "id": 86969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 86962,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86949,
                              "src": "2892:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$86916_memory_ptr_$6_memory_ptr",
                                "typeString": "struct SuperfluidClub.Protege memory[6] memory"
                              }
                            },
                            "id": 86965,
                            "indexExpression": {
                              "id": 86964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2901:3:115",
                              "subExpression": {
                                "id": 86963,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86956,
                                "src": "2901:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2892:13:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                              "typeString": "struct SuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 86966,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86921,
                              "src": "2908:9:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 86968,
                            "indexExpression": {
                              "id": 86967,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86952,
                              "src": "2918:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2908:12:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_storage",
                              "typeString": "struct SuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2892:28:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                            "typeString": "struct SuperfluidClub.Protege memory"
                          }
                        },
                        "id": 86970,
                        "nodeType": "ExpressionStatement",
                        "src": "2892:28:115"
                      },
                      {
                        "expression": {
                          "id": 86976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86971,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86952,
                            "src": "2934:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 86972,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86921,
                                "src": "2938:9:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                  "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 86974,
                              "indexExpression": {
                                "id": 86973,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86952,
                                "src": "2948:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2938:12:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                "typeString": "struct SuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 86975,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2951:7:115",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86907,
                            "src": "2938:20:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2934:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 86977,
                        "nodeType": "ExpressionStatement",
                        "src": "2934:24:115"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 86960,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86952,
                        "src": "2874:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86959,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86940,
                      "src": "2864:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 86961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86979,
                  "nodeType": "WhileStatement",
                  "src": "2857:112:115"
                }
              ]
            },
            "documentation": {
              "id": 86941,
              "nodeType": "StructuredDocumentation",
              "src": "2588:58:115",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2660:18:115",
            "parameters": {
              "id": 86944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86943,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2687:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86981,
                  "src": "2679:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2679:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2678:17:115"
            },
            "returnParameters": {
              "id": 86950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86949,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2781:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86981,
                  "src": "2743:46:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$86916_memory_ptr_$6_memory_ptr",
                    "typeString": "struct SuperfluidClub.Protege[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86946,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86945,
                        "name": "Protege",
                        "nameLocations": [
                          "2743:7:115"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 86916,
                        "src": "2743:7:115"
                      },
                      "referencedDeclaration": 86916,
                      "src": "2743:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                        "typeString": "struct SuperfluidClub.Protege"
                      }
                    },
                    "id": 86948,
                    "length": {
                      "id": 86947,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86896,
                      "src": "2751:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2743:30:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$86916_storage_$6_storage_ptr",
                      "typeString": "struct SuperfluidClub.Protege[6]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2742:48:115"
            },
            "scope": 87662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86995,
            "nodeType": "FunctionDefinition",
            "src": "3021:118:115",
            "nodes": [],
            "body": {
              "id": 86994,
              "nodeType": "Block",
              "src": "3097:42:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 86990,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86921,
                      "src": "3114:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                        "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 86992,
                    "indexExpression": {
                      "id": 86991,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86984,
                      "src": "3124:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3114:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86916_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 86989,
                  "id": 86993,
                  "nodeType": "Return",
                  "src": "3107:25:115"
                }
              ]
            },
            "documentation": {
              "id": 86982,
              "nodeType": "StructuredDocumentation",
              "src": "2981:35:115",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "3030:10:115",
            "parameters": {
              "id": 86985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86984,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "3049:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86995,
                  "src": "3041:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86983,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3041:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3040:17:115"
            },
            "returnParameters": {
              "id": 86989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86995,
                  "src": "3081:14:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                    "typeString": "struct SuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 86987,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86986,
                      "name": "Protege",
                      "nameLocations": [
                        "3081:7:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86916,
                      "src": "3081:7:115"
                    },
                    "referencedDeclaration": 86916,
                    "src": "3081:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                      "typeString": "struct SuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3080:16:115"
            },
            "scope": 87662,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87044,
            "nodeType": "FunctionDefinition",
            "src": "3324:333:115",
            "nodes": [],
            "body": {
              "id": 87043,
              "nodeType": "Block",
              "src": "3398:259:115",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87012,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3459:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3451:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87010,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3451:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3451:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87014,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86998,
                          "src": "3466:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87006,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3432:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3424:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87004,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3424:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3424:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87003,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67038,
                            "src": "3412:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3412:26:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$67038",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3439:11:115",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61919,
                        "src": "3412:38:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$67038_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3412:63:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3478:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3412:67:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 87041,
                    "nodeType": "Block",
                    "src": "3569:82:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87037,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86998,
                              "src": "3621:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87038,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87000,
                              "src": "3631:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87033,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3603:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3595:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87031,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3595:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87034,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3595:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87030,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "3583:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3583:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3610:10:115",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60524,
                            "src": "3583:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3583:57:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87040,
                        "nodeType": "ExpressionStatement",
                        "src": "3583:57:115"
                      }
                    ]
                  },
                  "id": 87042,
                  "nodeType": "IfStatement",
                  "src": "3408:243:115",
                  "trueBody": {
                    "id": 87029,
                    "nodeType": "Block",
                    "src": "3481:82:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87025,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86998,
                              "src": "3533:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87026,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87000,
                              "src": "3543:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87021,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3515:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87020,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3507:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87019,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3507:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87022,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3507:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87018,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "3495:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87023,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3495:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3522:10:115",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60596,
                            "src": "3495:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:57:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87028,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:57:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 86996,
              "nodeType": "StructuredDocumentation",
              "src": "3145:174:115",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "3333:21:115",
            "parameters": {
              "id": 87001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86998,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3363:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87044,
                  "src": "3355:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3355:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87000,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "3379:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87044,
                  "src": "3373:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 86999,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3373:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3354:34:115"
            },
            "returnParameters": {
              "id": 87002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3398:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87275,
            "nodeType": "FunctionDefinition",
            "src": "3715:2646:115",
            "nodes": [],
            "body": {
              "id": 87274,
              "nodeType": "Block",
              "src": "3777:2584:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3795:22:115",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87052,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87047,
                              "src": "3806:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 87051,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86940,
                            "src": "3796:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3796:21:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920612070726f7465676521",
                        "id": 87055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3819:20:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa05a65878193080d22f73b94b7666ab57064295edfee1c13443d735e78c58ce",
                          "typeString": "literal_string \"Already a protege!\""
                        },
                        "value": "Already a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa05a65878193080d22f73b94b7666ab57064295edfee1c13443d735e78c58ce",
                          "typeString": "literal_string \"Already a protege!\""
                        }
                      ],
                      "id": 87050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3787:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:53:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87057,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:53:115"
                },
                {
                  "assignments": [
                    87059,
                    87061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87059,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3911:13:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "3903:21:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87058,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3903:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87061,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3931:7:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "3926:12:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87060,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3926:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87079,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87062,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3943:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3947:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3943:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 87064,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43703,
                              "src": "3957:5:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 87065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3957:7:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3943:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87067,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3942:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 87074,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3993:3:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3997:6:115",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3993:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 87076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4005:5:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 87077,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3992:19:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 87078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3942:69:115",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 87070,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3977:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3969:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87068,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3969:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3969:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 87072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3984:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 87073,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3968:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3902:109:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 87082,
                              "name": "actualSponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87059,
                              "src": "4039:13:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87081,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86940,
                            "src": "4029:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4029:24:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 87084,
                          "name": "messiah",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87061,
                          "src": "4057:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4029:35:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f7465676521",
                        "id": 87086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4066:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3420d9eee9f8560eba39b2585e5c7bf743d39bf54e1bfc9d51eb51756a4d153d",
                          "typeString": "literal_string \"You are not a protege!\""
                        },
                        "value": "You are not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3420d9eee9f8560eba39b2585e5c7bf743d39bf54e1bfc9d51eb51756a4d153d",
                          "typeString": "literal_string \"You are not a protege!\""
                        }
                      ],
                      "id": 87080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4021:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:70:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87088,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:70:115"
                },
                {
                  "assignments": [
                    87090
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87090,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "4110:10:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "4102:18:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87089,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4102:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87093,
                  "initialValue": {
                    "expression": {
                      "id": 87091,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4123:3:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 87092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4127:5:115",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "4123:9:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4102:30:115"
                },
                {
                  "assignments": [
                    87095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87095,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "4150:9:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "4142:17:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4142:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87102,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87097,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "4166:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87099,
                          "indexExpression": {
                            "id": 87098,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87059,
                            "src": "4176:13:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4166:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87100,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4191:23:115",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86913,
                        "src": "4166:48:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 87096,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87511,
                      "src": "4162:3:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 87101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4162:53:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4142:73:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87104,
                          "name": "coinAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87090,
                          "src": "4233:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 87105,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87095,
                          "src": "4247:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4233:23:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f696e21",
                        "id": 87107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4258:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_168e6ac4f02be699d0499a0de40bc03ce0390360241467a0137faceccf5d9d50",
                          "typeString": "literal_string \"Not enough coin!\""
                        },
                        "value": "Not enough coin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_168e6ac4f02be699d0499a0de40bc03ce0390360241467a0137faceccf5d9d50",
                          "typeString": "literal_string \"Not enough coin!\""
                        }
                      ],
                      "id": 87103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4225:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4225:52:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87109,
                  "nodeType": "ExpressionStatement",
                  "src": "4225:52:115"
                },
                {
                  "expression": {
                    "id": 87112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87110,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87090,
                      "src": "4288:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 87111,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87095,
                      "src": "4302:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4288:23:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87113,
                  "nodeType": "ExpressionStatement",
                  "src": "4288:23:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 87115,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86921,
                              "src": "4329:9:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 87117,
                            "indexExpression": {
                              "id": 87116,
                              "name": "actualSponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87059,
                              "src": "4339:13:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4329:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_storage",
                              "typeString": "struct SuperfluidClub.Protege storage ref"
                            }
                          },
                          "id": 87118,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4354:5:115",
                          "memberName": "level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86909,
                          "src": "4329:30:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 87119,
                          "name": "MAX_SPONSORSHIP_LEVEL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86896,
                          "src": "4362:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4329:54:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61782073706f6e736f7273686970206c6576656c207265616368656421",
                        "id": 87121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4385:32:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c57c66e722b21827e9c8283ece53493263345a799fbb420526852a89cd9781",
                          "typeString": "literal_string \"Max sponsorship level reached!\""
                        },
                        "value": "Max sponsorship level reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c57c66e722b21827e9c8283ece53493263345a799fbb420526852a89cd9781",
                          "typeString": "literal_string \"Max sponsorship level reached!\""
                        }
                      ],
                      "id": 87114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4321:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4321:97:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87123,
                  "nodeType": "ExpressionStatement",
                  "src": "4321:97:115"
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 87131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4493:44:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87124,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86921,
                          "src": "4493:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87129,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87127,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4511:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4503:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87125,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4503:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4503:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4493:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4518:17:115",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86911,
                      "src": "4493:42:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87132,
                  "nodeType": "ExpressionStatement",
                  "src": "4493:44:115"
                },
                {
                  "expression": {
                    "id": 87137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4548:50:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87133,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86921,
                          "src": "4548:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87135,
                        "indexExpression": {
                          "id": 87134,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87059,
                          "src": "4558:13:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4548:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4573:23:115",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86913,
                      "src": "4548:48:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87138,
                  "nodeType": "ExpressionStatement",
                  "src": "4548:50:115"
                },
                {
                  "assignments": [
                    87140
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87140,
                      "mutability": "mutable",
                      "name": "lastSponsorProtegeCount",
                      "nameLocation": "4616:23:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "4609:30:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87139,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4609:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87145,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87141,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86921,
                        "src": "4642:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87143,
                      "indexExpression": {
                        "id": 87142,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87059,
                        "src": "4652:13:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4642:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87144,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4667:17:115",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86911,
                    "src": "4642:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4609:75:115"
                },
                {
                  "assignments": [
                    87147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87147,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4702:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87274,
                      "src": "4694:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87146,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4694:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87149,
                  "initialValue": {
                    "id": 87148,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87059,
                    "src": "4706:13:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4694:25:115"
                },
                {
                  "body": {
                    "id": 87219,
                    "nodeType": "Block",
                    "src": "4750:836:115",
                    "statements": [
                      {
                        "assignments": [
                          87155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87155,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4813:16:115",
                            "nodeType": "VariableDeclaration",
                            "scope": 87219,
                            "src": "4797:32:115",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                              "typeString": "struct SuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87154,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87153,
                                "name": "Protege",
                                "nameLocations": [
                                  "4797:7:115"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 86916,
                                "src": "4797:7:115"
                              },
                              "referencedDeclaration": 86916,
                              "src": "4797:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87159,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87156,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "4832:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87158,
                          "indexExpression": {
                            "id": 87157,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87147,
                            "src": "4842:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4832:12:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4797:47:115"
                      },
                      {
                        "expression": {
                          "id": 87163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4858:36:115",
                          "subExpression": {
                            "expression": {
                              "id": 87160,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87155,
                              "src": "4858:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87162,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4875:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "4858:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87164,
                        "nodeType": "ExpressionStatement",
                        "src": "4858:36:115"
                      },
                      {
                        "expression": {
                          "id": 87172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87165,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87155,
                              "src": "4908:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87167,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4925:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86915,
                            "src": "4908:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 87169,
                                  "name": "sponsorChainInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87155,
                                  "src": "4962:16:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                    "typeString": "struct SuperfluidClub.Protege storage pointer"
                                  }
                                },
                                "id": 87170,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4979:17:115",
                                "memberName": "totalProtegeCount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 86911,
                                "src": "4962:34:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87168,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87464,
                              "src": "4944:17:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4944:53:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "4908:89:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87173,
                        "nodeType": "ExpressionStatement",
                        "src": "4908:89:115"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87175,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87147,
                              "src": "5103:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 87176,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87155,
                                "src": "5106:16:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                  "typeString": "struct SuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87177,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5123:15:115",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86915,
                              "src": "5106:32:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 87174,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87044,
                            "src": "5081:21:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 87178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:58:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87179,
                        "nodeType": "ExpressionStatement",
                        "src": "5081:58:115"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87181,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86921,
                                  "src": "5192:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87183,
                                "indexExpression": {
                                  "id": 87182,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87059,
                                  "src": "5202:13:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5192:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87184,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5217:7:115",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86907,
                              "src": "5192:32:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87185,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87147,
                              "src": "5242:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87186,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86921,
                                  "src": "5261:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87191,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87189,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5279:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87188,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5271:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87187,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5271:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87190,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5271:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5261:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87192,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5286:5:115",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86909,
                              "src": "5261:30:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87193,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86921,
                                  "src": "5309:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87198,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87196,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5327:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87195,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5319:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87194,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5319:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5319:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5309:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87199,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5334:17:115",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86911,
                              "src": "5309:42:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87200,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86921,
                                  "src": "5369:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87205,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87203,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5387:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87202,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5379:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87201,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5379:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87204,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5379:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5369:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87206,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5394:23:115",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86913,
                              "src": "5369:48:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87180,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86826,
                            "src": "5159:15:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 87207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5159:272:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87208,
                        "nodeType": "EmitStatement",
                        "src": "5154:277:115"
                      },
                      {
                        "expression": {
                          "id": 87212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87209,
                            "name": "lastSponsorProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87140,
                            "src": "5445:23:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87210,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87155,
                              "src": "5471:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87211,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5488:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "5471:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5445:60:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87213,
                        "nodeType": "ExpressionStatement",
                        "src": "5445:60:115"
                      },
                      {
                        "expression": {
                          "id": 87217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87214,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87147,
                            "src": "5519:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87215,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87155,
                              "src": "5523:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87216,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5540:7:115",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86907,
                            "src": "5523:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5519:28:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87218,
                        "nodeType": "ExpressionStatement",
                        "src": "5519:28:115"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87151,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87147,
                        "src": "4746:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87150,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86940,
                      "src": "4736:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4736:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87220,
                  "nodeType": "WhileStatement",
                  "src": "4729:857:115"
                },
                {
                  "expression": {
                    "id": 87228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87221,
                      "name": "lastSponsorProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87140,
                      "src": "5690:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 87222,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87061,
                        "src": "5716:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87224,
                          "name": "lastSponsorProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87140,
                          "src": "5752:23:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 87225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5778:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5752:27:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 87227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5716:63:115",
                      "trueExpression": {
                        "id": 87223,
                        "name": "lastSponsorProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87140,
                        "src": "5726:23:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5690:89:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87229,
                  "nodeType": "ExpressionStatement",
                  "src": "5690:89:115"
                },
                {
                  "expression": {
                    "id": 87247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87230,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86921,
                        "src": "5789:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87232,
                      "indexExpression": {
                        "id": 87231,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87047,
                        "src": "5799:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5789:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87234,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87059,
                          "src": "5844:13:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 87240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 87235,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86921,
                                "src": "5878:9:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                                  "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87237,
                              "indexExpression": {
                                "id": 87236,
                                "name": "actualSponsor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87059,
                                "src": "5888:13:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5878:24:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage",
                                "typeString": "struct SuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5903:5:115",
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86909,
                            "src": "5878:30:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 87239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5911:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5878:34:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 87241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5945:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 87242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5985:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 87244,
                              "name": "lastSponsorProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87140,
                              "src": "6035:23:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87243,
                            "name": "calculateFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87464,
                            "src": "6017:17:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                              "typeString": "function (uint32) pure returns (int96)"
                            }
                          },
                          "id": 87245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6017:42:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 87233,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86916,
                        "src": "5813:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$86916_storage_ptr_$",
                          "typeString": "type(struct SuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 87246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5835:7:115",
                        "5871:5:115",
                        "5926:17:115",
                        "5960:23:115",
                        "6000:15:115"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5813:257:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege memory"
                      }
                    },
                    "src": "5789:281:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86916_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 87248,
                  "nodeType": "ExpressionStatement",
                  "src": "5789:281:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87256,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87047,
                        "src": "6167:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87257,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "6179:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87259,
                          "indexExpression": {
                            "id": 87258,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87047,
                            "src": "6189:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6179:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87260,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6201:15:115",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86915,
                        "src": "6179:37:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87252,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6149:4:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87251,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6141:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87250,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6141:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6141:13:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87249,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67038,
                          "src": "6129:11:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 87254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6129:26:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$67038",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 87255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6156:10:115",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60524,
                      "src": "6129:37:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 87261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6129:88:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87262,
                  "nodeType": "ExpressionStatement",
                  "src": "6129:88:115"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87263,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87090,
                      "src": "6231:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6244:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6231:14:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87273,
                  "nodeType": "IfStatement",
                  "src": "6227:128:115",
                  "trueBody": {
                    "id": 87272,
                    "nodeType": "Block",
                    "src": "6247:108:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87269,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87090,
                              "src": "6333:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 87266,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87047,
                              "src": "6313:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 87268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6324:8:115",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6313:19:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 87270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6313:31:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87271,
                        "nodeType": "ExpressionStatement",
                        "src": "6313:31:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87045,
              "nodeType": "StructuredDocumentation",
              "src": "3663:47:115",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3724:7:115",
            "parameters": {
              "id": 87048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87047,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3748:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87275,
                  "src": "3732:26:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3732:15:115",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3731:28:115"
            },
            "returnParameters": {
              "id": 87049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3777:0:115"
            },
            "scope": 87662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87424,
            "nodeType": "FunctionDefinition",
            "src": "6367:1324:115",
            "nodes": [],
            "body": {
              "id": 87423,
              "nodeType": "Block",
              "src": "6412:1279:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87282,
                            "name": "oldProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87277,
                            "src": "6440:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87281,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86940,
                          "src": "6430:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6430:21:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612070726f7465676521",
                        "id": 87284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6453:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        },
                        "value": "Not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        }
                      ],
                      "id": 87280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6422:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6422:48:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87286,
                  "nodeType": "ExpressionStatement",
                  "src": "6422:48:115"
                },
                {
                  "assignments": [
                    87288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87288,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "6488:13:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87423,
                      "src": "6480:21:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87287,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6480:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87302,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87289,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6505:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6509:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6505:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 87291,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43703,
                              "src": "6519:5:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 87292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6519:7:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6505:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87294,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6504:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 87299,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6546:3:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 87300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6550:6:115",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6546:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6504:52:115",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 87297,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6538:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                            "typeString": "contract SuperfluidClub"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                            "typeString": "contract SuperfluidClub"
                          }
                        ],
                        "id": 87296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6530:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6530:7:115",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6530:13:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6480:76:115"
                },
                {
                  "assignments": [
                    87305
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87305,
                      "mutability": "mutable",
                      "name": "protegeInfo",
                      "nameLocation": "6581:11:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87423,
                      "src": "6566:26:115",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege"
                      },
                      "typeName": {
                        "id": 87304,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87303,
                          "name": "Protege",
                          "nameLocations": [
                            "6566:7:115"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86916,
                          "src": "6566:7:115"
                        },
                        "referencedDeclaration": 86916,
                        "src": "6566:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                          "typeString": "struct SuperfluidClub.Protege"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87309,
                  "initialValue": {
                    "baseExpression": {
                      "id": 87306,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86921,
                      "src": "6595:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                        "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 87308,
                    "indexExpression": {
                      "id": 87307,
                      "name": "oldProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87277,
                      "src": "6605:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6595:21:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86916_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6566:50:115"
                },
                {
                  "expression": {
                    "id": 87313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6626:28:115",
                    "subExpression": {
                      "baseExpression": {
                        "id": 87310,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86921,
                        "src": "6633:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87312,
                      "indexExpression": {
                        "id": 87311,
                        "name": "oldProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87277,
                        "src": "6643:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6633:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87314,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:28:115"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87324,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6737:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6729:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6729:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6729:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87326,
                          "name": "oldProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87277,
                          "src": "6744:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87318,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6710:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6702:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87316,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6702:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6702:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87315,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67038,
                            "src": "6690:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6690:26:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$67038",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6717:11:115",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61919,
                        "src": "6690:38:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$67038_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6690:65:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6758:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6690:69:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87345,
                  "nodeType": "IfStatement",
                  "src": "6686:164:115",
                  "trueBody": {
                    "id": 87344,
                    "nodeType": "Block",
                    "src": "6761:89:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87339,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6821:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6813:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87337,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6813:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6813:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87341,
                              "name": "oldProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87277,
                              "src": "6828:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87333,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6795:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87332,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6787:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87331,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6787:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6787:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87330,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "6775:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6775:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6802:10:115",
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60668,
                            "src": "6775:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                            }
                          },
                          "id": 87342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6775:64:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87343,
                        "nodeType": "ExpressionStatement",
                        "src": "6775:64:115"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6898:44:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87346,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86921,
                          "src": "6898:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87351,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87349,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6916:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6908:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87347,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6908:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6908:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6898:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87352,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6923:17:115",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86911,
                      "src": "6898:42:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87354,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:44:115"
                },
                {
                  "expression": {
                    "id": 87360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6953:56:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87355,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86921,
                          "src": "6953:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87358,
                        "indexExpression": {
                          "expression": {
                            "id": 87356,
                            "name": "protegeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87305,
                            "src": "6963:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                              "typeString": "struct SuperfluidClub.Protege memory"
                            }
                          },
                          "id": 87357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6975:7:115",
                          "memberName": "sponsor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86907,
                          "src": "6963:19:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6953:30:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86916_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87359,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6984:23:115",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86913,
                      "src": "6953:54:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87361,
                  "nodeType": "ExpressionStatement",
                  "src": "6953:56:115"
                },
                {
                  "assignments": [
                    87363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87363,
                      "mutability": "mutable",
                      "name": "totalProtegeCount",
                      "nameLocation": "7027:17:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87423,
                      "src": "7020:24:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87362,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7020:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87368,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87364,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86921,
                        "src": "7047:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87366,
                      "indexExpression": {
                        "id": 87365,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87288,
                        "src": "7057:13:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7047:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87367,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7072:17:115",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86911,
                    "src": "7047:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7020:69:115"
                },
                {
                  "assignments": [
                    87370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87370,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "7107:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87423,
                      "src": "7099:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87369,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7099:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87373,
                  "initialValue": {
                    "expression": {
                      "id": 87371,
                      "name": "protegeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87305,
                      "src": "7111:11:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86916_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege memory"
                      }
                    },
                    "id": 87372,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7123:7:115",
                    "memberName": "sponsor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86907,
                    "src": "7111:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7099:31:115"
                },
                {
                  "body": {
                    "id": 87421,
                    "nodeType": "Block",
                    "src": "7161:524:115",
                    "statements": [
                      {
                        "assignments": [
                          87379
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87379,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "7224:16:115",
                            "nodeType": "VariableDeclaration",
                            "scope": 87421,
                            "src": "7208:32:115",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                              "typeString": "struct SuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87378,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87377,
                                "name": "Protege",
                                "nameLocations": [
                                  "7208:7:115"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 86916,
                                "src": "7208:7:115"
                              },
                              "referencedDeclaration": 86916,
                              "src": "7208:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87383,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87380,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "7243:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87382,
                          "indexExpression": {
                            "id": 87381,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87370,
                            "src": "7253:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7243:12:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7208:47:115"
                      },
                      {
                        "expression": {
                          "id": 87387,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "7269:36:115",
                          "subExpression": {
                            "expression": {
                              "id": 87384,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87379,
                              "src": "7269:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87386,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7286:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "7269:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87388,
                        "nodeType": "ExpressionStatement",
                        "src": "7269:36:115"
                      },
                      {
                        "expression": {
                          "id": 87395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87389,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87379,
                              "src": "7319:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87391,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7336:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86915,
                            "src": "7319:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 87393,
                                "name": "totalProtegeCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87363,
                                "src": "7373:17:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87392,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87464,
                              "src": "7355:17:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7355:36:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "7319:72:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87396,
                        "nodeType": "ExpressionStatement",
                        "src": "7319:72:115"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          },
                          "id": 87400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87397,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87379,
                              "src": "7454:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87398,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7471:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86915,
                            "src": "7454:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7490:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7454:37:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 87419,
                          "nodeType": "Block",
                          "src": "7584:91:115",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87414,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87370,
                                    "src": "7624:1:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 87415,
                                      "name": "sponsorChainInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87379,
                                      "src": "7627:16:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Protege_$86916_storage_ptr",
                                        "typeString": "struct SuperfluidClub.Protege storage pointer"
                                      }
                                    },
                                    "id": 87416,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7644:15:115",
                                    "memberName": "desiredFlowRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 86915,
                                    "src": "7627:32:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  ],
                                  "id": 87413,
                                  "name": "_createOrUpdateStream",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87044,
                                  "src": "7602:21:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                                    "typeString": "function (address,int96)"
                                  }
                                },
                                "id": 87417,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7602:58:115",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 87418,
                              "nodeType": "ExpressionStatement",
                              "src": "7602:58:115"
                            }
                          ]
                        },
                        "id": 87420,
                        "nodeType": "IfStatement",
                        "src": "7450:225:115",
                        "trueBody": {
                          "id": 87412,
                          "nodeType": "Block",
                          "src": "7493:85:115",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87408,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87370,
                                    "src": "7549:1:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 87409,
                                    "name": "oldProtege",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87277,
                                    "src": "7552:10:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 87404,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "7531:4:115",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          ],
                                          "id": 87403,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7523:7:115",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 87402,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7523:7:115",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 87405,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7523:13:115",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 87401,
                                      "name": "ISuperToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67038,
                                      "src": "7511:11:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                        "typeString": "type(contract ISuperToken)"
                                      }
                                    },
                                    "id": 87406,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7511:26:115",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 87407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7538:10:115",
                                  "memberName": "deleteFlow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60668,
                                  "src": "7511:37:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                                    "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                                  }
                                },
                                "id": 87410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7511:52:115",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 87411,
                              "nodeType": "ExpressionStatement",
                              "src": "7511:52:115"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87375,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87370,
                        "src": "7157:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87374,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86940,
                      "src": "7147:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7147:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87422,
                  "nodeType": "WhileStatement",
                  "src": "7140:545:115"
                }
              ]
            },
            "functionSelector": "29092d0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "6376:6:115",
            "parameters": {
              "id": 87278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87277,
                  "mutability": "mutable",
                  "name": "oldProtege",
                  "nameLocation": "6391:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87424,
                  "src": "6383:18:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6383:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6382:20:115"
            },
            "returnParameters": {
              "id": 87279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6412:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87447,
            "nodeType": "FunctionDefinition",
            "src": "7757:181:115",
            "nodes": [],
            "body": {
              "id": 87446,
              "nodeType": "Block",
              "src": "7791:147:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87430,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7819:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7823:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7819:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87429,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86940,
                          "src": "7809:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7809:21:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612070726f7465676521",
                        "id": 87433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7832:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        },
                        "value": "Not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        }
                      ],
                      "id": 87428,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7801:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7801:48:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87435,
                  "nodeType": "ExpressionStatement",
                  "src": "7801:48:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87437,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7881:3:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7885:6:115",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7881:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87439,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "7893:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86916_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87442,
                          "indexExpression": {
                            "expression": {
                              "id": 87440,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7903:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7907:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7903:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7893:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86916_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87443,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7915:15:115",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86915,
                        "src": "7893:37:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 87436,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87044,
                      "src": "7859:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 87444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7859:72:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87445,
                  "nodeType": "ExpressionStatement",
                  "src": "7859:72:115"
                }
              ]
            },
            "documentation": {
              "id": 87425,
              "nodeType": "StructuredDocumentation",
              "src": "7697:55:115",
              "text": "@dev ISuperfluidClub.sponsor implementation - WRONG"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "7766:13:115",
            "parameters": {
              "id": 87426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7779:2:115"
            },
            "returnParameters": {
              "id": 87427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7791:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87464,
            "nodeType": "FunctionDefinition",
            "src": "8013:175:115",
            "nodes": [],
            "body": {
              "id": 87463,
              "nodeType": "Block",
              "src": "8103:85:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87455,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87453,
                      "src": "8113:8:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87457,
                            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86902,
                            "src": "8132:28:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 87458,
                            "name": "totalProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87450,
                            "src": "8163:17:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8132:48:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87456,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87644,
                        "src": "8124:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 87460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8124:57:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "8113:68:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "id": 87462,
                  "nodeType": "ExpressionStatement",
                  "src": "8113:68:115"
                }
              ]
            },
            "documentation": {
              "id": 87448,
              "nodeType": "StructuredDocumentation",
              "src": "7944:64:115",
              "text": "@dev ISuperfluidClub.calculateSponsorFlowRate implementation"
            },
            "functionSelector": "7ae058dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateFlowRate",
            "nameLocation": "8022:17:115",
            "parameters": {
              "id": 87451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87450,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "8047:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87464,
                  "src": "8040:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87449,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8040:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8039:26:115"
            },
            "returnParameters": {
              "id": 87454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87453,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "8093:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87464,
                  "src": "8087:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87452,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8087:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8086:16:115"
            },
            "scope": 87662,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87511,
            "nodeType": "FunctionDefinition",
            "src": "8242:647:115",
            "nodes": [],
            "body": {
              "id": 87510,
              "nodeType": "Block",
              "src": "8322:567:115",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 87474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87472,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87467,
                      "src": "8336:18:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 87473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8358:2:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "8336:24:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 87480,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87478,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87467,
                        "src": "8437:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 87479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8459:2:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "8437:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87484,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87467,
                          "src": "8538:18:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 87485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8560:2:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "8538:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87490,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87467,
                            "src": "8639:18:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 87491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8661:2:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "8639:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 87498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87496,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87467,
                              "src": "8740:18:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 87497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8762:2:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "8740:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 87504,
                            "nodeType": "Block",
                            "src": "8837:46:115",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 87502,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8858:7:115",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 87471,
                                "id": 87503,
                                "nodeType": "Return",
                                "src": "8851:14:115"
                              }
                            ]
                          },
                          "id": 87505,
                          "nodeType": "IfStatement",
                          "src": "8736:147:115",
                          "trueBody": {
                            "id": 87501,
                            "nodeType": "Block",
                            "src": "8766:65:115",
                            "statements": [
                              {
                                "documentation": "[49;60]",
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 87499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8811:9:115",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 87471,
                                "id": 87500,
                                "nodeType": "Return",
                                "src": "8804:16:115"
                              }
                            ]
                          }
                        },
                        "id": 87506,
                        "nodeType": "IfStatement",
                        "src": "8635:248:115",
                        "trueBody": {
                          "id": 87495,
                          "nodeType": "Block",
                          "src": "8665:65:115",
                          "statements": [
                            {
                              "documentation": "[37;48]",
                              "expression": {
                                "hexValue": "302e33",
                                "id": 87493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8710:9:115",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 87471,
                              "id": 87494,
                              "nodeType": "Return",
                              "src": "8703:16:115"
                            }
                          ]
                        }
                      },
                      "id": 87507,
                      "nodeType": "IfStatement",
                      "src": "8534:349:115",
                      "trueBody": {
                        "id": 87489,
                        "nodeType": "Block",
                        "src": "8564:65:115",
                        "statements": [
                          {
                            "documentation": "[25;36]",
                            "expression": {
                              "hexValue": "302e32",
                              "id": 87487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8609:9:115",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 87471,
                            "id": 87488,
                            "nodeType": "Return",
                            "src": "8602:16:115"
                          }
                        ]
                      }
                    },
                    "id": 87508,
                    "nodeType": "IfStatement",
                    "src": "8433:450:115",
                    "trueBody": {
                      "id": 87483,
                      "nodeType": "Block",
                      "src": "8463:65:115",
                      "statements": [
                        {
                          "documentation": "[13;24]",
                          "expression": {
                            "hexValue": "302e31",
                            "id": 87481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8508:9:115",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 87471,
                          "id": 87482,
                          "nodeType": "Return",
                          "src": "8501:16:115"
                        }
                      ]
                    }
                  },
                  "id": 87509,
                  "nodeType": "IfStatement",
                  "src": "8332:551:115",
                  "trueBody": {
                    "id": 87477,
                    "nodeType": "Block",
                    "src": "8362:65:115",
                    "statements": [
                      {
                        "documentation": "[0;12]",
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 87475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8406:10:115",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 87471,
                        "id": 87476,
                        "nodeType": "Return",
                        "src": "8399:17:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87465,
              "nodeType": "StructuredDocumentation",
              "src": "8194:43:115",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "8251:3:115",
            "parameters": {
              "id": 87468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87467,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "8262:18:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87511,
                  "src": "8255:25:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87466,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8255:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8254:27:115"
            },
            "returnParameters": {
              "id": 87471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87470,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "8311:9:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87511,
                  "src": "8303:17:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87469,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8303:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8302:19:115"
            },
            "scope": 87662,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87534,
            "nodeType": "FunctionDefinition",
            "src": "8895:246:115",
            "nodes": [],
            "body": {
              "id": 87533,
              "nodeType": "Block",
              "src": "8966:175:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9036:20:115",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87521,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87513,
                              "src": "9047:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87520,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86940,
                            "src": "9037:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9037:19:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c75622070726f746567652063616e6e6f74206265206f776e6572",
                        "id": 87524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9058:30:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b03b1c8d1ffb36c06c4731571b780b835ac54a7d400315daaa4ceb0500331b4d",
                          "typeString": "literal_string \"Club protege cannot be owner\""
                        },
                        "value": "Club protege cannot be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b03b1c8d1ffb36c06c4731571b780b835ac54a7d400315daaa4ceb0500331b4d",
                          "typeString": "literal_string \"Club protege cannot be owner\""
                        }
                      ],
                      "id": 87519,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9028:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9028:61:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87526,
                  "nodeType": "ExpressionStatement",
                  "src": "9028:61:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87530,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87513,
                        "src": "9125:8:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87527,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43775,
                        "src": "9099:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$43775_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 87529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9107:17:115",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43754,
                      "src": "9099:25:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9099:35:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87532,
                  "nodeType": "ExpressionStatement",
                  "src": "9099:35:115"
                }
              ]
            },
            "baseFunctions": [
              43754
            ],
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87516,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8956:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "8956:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "8956:9:115"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "8904:17:115",
            "overrides": {
              "id": 87515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8947:8:115"
            },
            "parameters": {
              "id": 87514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87513,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "8930:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87534,
                  "src": "8922:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8922:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8921:18:115"
            },
            "returnParameters": {
              "id": 87518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8966:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87581,
            "nodeType": "FunctionDefinition",
            "src": "9200:302:115",
            "nodes": [],
            "body": {
              "id": 87580,
              "nodeType": "Block",
              "src": "9271:231:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87545,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87537,
                          "src": "9289:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 87548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9309:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9301:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87546,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9301:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9301:10:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9289:22:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207265636569766572",
                        "id": 87551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9313:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        },
                        "value": "Invalid receiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        }
                      ],
                      "id": 87544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9281:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9281:51:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87553,
                  "nodeType": "ExpressionStatement",
                  "src": "9281:51:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87555,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87539,
                          "src": "9350:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 87556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9359:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9350:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e74",
                        "id": 87558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9362:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        },
                        "value": "Invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        }
                      ],
                      "id": 87554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9342:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:37:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87560,
                  "nodeType": "ExpressionStatement",
                  "src": "9342:37:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 87564,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9405:4:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9397:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87562,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9397:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9397:13:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 87566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9411:7:115",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9397:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 87567,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87539,
                          "src": "9422:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9397:31:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e6365",
                        "id": 87569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9430:20:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        },
                        "value": "Not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        }
                      ],
                      "id": 87561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9389:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9389:62:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87571,
                  "nodeType": "ExpressionStatement",
                  "src": "9389:62:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87577,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87539,
                        "src": "9488:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 87574,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87537,
                            "src": "9469:8:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9461:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 87572,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9461:8:115",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9461:17:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9479:8:115",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9461:26:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9461:34:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87579,
                  "nodeType": "ExpressionStatement",
                  "src": "9461:34:115"
                }
              ]
            },
            "documentation": {
              "id": 87535,
              "nodeType": "StructuredDocumentation",
              "src": "9147:48:115",
              "text": "@dev ISuperfluidClub.withdraw implementation"
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87541,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9261:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "9261:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "9261:9:115"
              }
            ],
            "name": "withdraw",
            "nameLocation": "9209:8:115",
            "parameters": {
              "id": 87540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87537,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "9226:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87581,
                  "src": "9218:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9218:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87539,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9244:6:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87581,
                  "src": "9236:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9236:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9217:34:115"
            },
            "returnParameters": {
              "id": 87543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9271:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87604,
            "nodeType": "FunctionDefinition",
            "src": "9557:116:115",
            "nodes": [],
            "body": {
              "id": 87603,
              "nodeType": "Block",
              "src": "9606:67:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87594,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9638:4:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9630:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87592,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9630:7:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9630:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87596,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87584,
                        "src": "9645:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9663:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "9653:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87597,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9657:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9653:12:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87589,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "9616:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87662",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9621:8:115",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88944,
                      "src": "9616:13:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9616:50:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87602,
                  "nodeType": "ExpressionStatement",
                  "src": "9616:50:115"
                }
              ]
            },
            "documentation": {
              "id": 87582,
              "nodeType": "StructuredDocumentation",
              "src": "9508:44:115",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87587,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87586,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9596:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "9596:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "9596:9:115"
              }
            ],
            "name": "mint",
            "nameLocation": "9566:4:115",
            "parameters": {
              "id": 87585,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87584,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9579:6:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87604,
                  "src": "9571:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87583,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9571:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9570:16:115"
            },
            "returnParameters": {
              "id": 87588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9606:0:115"
            },
            "scope": 87662,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87610,
            "nodeType": "FunctionDefinition",
            "src": "9722:38:115",
            "nodes": [],
            "body": {
              "id": 87609,
              "nodeType": "Block",
              "src": "9758:2:115",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              43821
            ],
            "documentation": {
              "id": 87605,
              "nodeType": "StructuredDocumentation",
              "src": "9679:38:115",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 87607,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9741:8:115"
            },
            "parameters": {
              "id": 87606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9729:2:115"
            },
            "returnParameters": {
              "id": 87608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9758:0:115"
            },
            "scope": 87662,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87644,
            "nodeType": "FunctionDefinition",
            "src": "9912:178:115",
            "nodes": [],
            "body": {
              "id": 87643,
              "nodeType": "Block",
              "src": "9974:116:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87619,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87613,
                          "src": "9992:5:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 87626,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10021:5:115",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 87625,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10021:5:115",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 87624,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "10016:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 87627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10016:11:115",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 87628,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "10028:3:115",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "10016:15:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 87623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10009:6:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 87622,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10009:6:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10009:23:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 87621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10001:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 87620,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10001:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10001:32:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9992:41:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f766572666c6f77",
                        "id": 87632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10035:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        },
                        "value": "overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        }
                      ],
                      "id": 87618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9984:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9984:62:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87634,
                  "nodeType": "ExpressionStatement",
                  "src": "9984:62:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87639,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87613,
                            "src": "10076:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10069:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87637,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "10069:6:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10069:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10063:5:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 87635,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "10063:5:115",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10063:20:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 87617,
                  "id": 87642,
                  "nodeType": "Return",
                  "src": "10056:27:115"
                }
              ]
            },
            "documentation": {
              "id": 87611,
              "nodeType": "StructuredDocumentation",
              "src": "9766:141:115",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "9921:7:115",
            "parameters": {
              "id": 87614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87613,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9937:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87644,
                  "src": "9929:13:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87612,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9929:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9928:15:115"
            },
            "returnParameters": {
              "id": 87617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87616,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87644,
                  "src": "9967:5:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87615,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9967:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9966:7:115"
            },
            "scope": 87662,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87661,
            "nodeType": "FunctionDefinition",
            "src": "10242:110:115",
            "nodes": [],
            "body": {
              "id": 87660,
              "nodeType": "Block",
              "src": "10306:46:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87656,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87647,
                            "src": "10338:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10331:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87654,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "10331:6:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10331:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10323:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87652,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10323:7:115",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10323:22:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87651,
                  "id": 87659,
                  "nodeType": "Return",
                  "src": "10316:29:115"
                }
              ]
            },
            "documentation": {
              "id": 87645,
              "nodeType": "StructuredDocumentation",
              "src": "10096:141:115",
              "text": " @dev converts a int96 to uint256\n @param value The int96 value to convert\n @return The converted uint256 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nameLocation": "10251:9:115",
            "parameters": {
              "id": 87648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87647,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10267:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87661,
                  "src": "10261:11:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87646,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10261:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10260:13:115"
            },
            "returnParameters": {
              "id": 87651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87650,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87661,
                  "src": "10297:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87649,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10297:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10296:9:115"
            },
            "scope": 87662,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86805,
              "name": "SuperToken",
              "nameLocations": [
                "736:10:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89577,
              "src": "736:10:115"
            },
            "id": 86806,
            "nodeType": "InheritanceSpecifier",
            "src": "736:10:115"
          },
          {
            "baseName": {
              "id": 86807,
              "name": "UUPSProxy",
              "nameLocations": [
                "748:9:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89633,
              "src": "748:9:115"
            },
            "id": 86808,
            "nodeType": "InheritanceSpecifier",
            "src": "748:9:115"
          },
          {
            "baseName": {
              "id": 86809,
              "name": "Ownable",
              "nameLocations": [
                "758:7:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43775,
              "src": "758:7:115"
            },
            "id": 86810,
            "nodeType": "InheritanceSpecifier",
            "src": "758:7:115"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86804,
          "nodeType": "StructuredDocumentation",
          "src": "603:104:115",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87662,
          43775,
          45796,
          89633,
          43827,
          89577,
          67038,
          45404,
          44661,
          68216,
          77260,
          68136
        ],
        "name": "SuperfluidClub",
        "nameLocation": "718:14:115",
        "scope": 87663,
        "usedErrors": [
          66595,
          66597,
          66599,
          66601,
          66603,
          66605,
          66607,
          66609,
          66611,
          66613,
          66615,
          66617,
          66619,
          66621,
          67857,
          67859,
          67861,
          67863,
          67865,
          67867,
          89587,
          89590
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 115
}