{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ALREADY_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege[]",
          "name": "sponsors",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b506040516200612f3803806200612f8339810160408190526200003491620000d9565b6001600160a01b0380841660805280831660a081905290821660c052604051849184918491907fcf554eb342edf010a94e07701ae91e99e90b769f649f03aeb1153654ddd43c0190600090a26040516001600160a01b038216907f8837af285f4d380af9227df9ebafa13d992b487fa6d7a4366bd4154576085b8990600090a25050505050506200012d565b6001600160a01b0381168114620000d657600080fd5b50565b600080600060608486031215620000ef57600080fd5b8351620000fc81620000c0565b60208501519093506200010f81620000c0565b60408501519092506200012281620000c0565b809150509250925092565b60805160a05160c051615f5b620001d4600039600061079701526000610c950152600081816105620152818161110201528181611173015281816114ed01528181611608015281816116d70152818161193d01528181611aaf015281816121f7015281816127550152818161281f015281816128b70152818161291f015281816129a9015281816131c40152818161326b0152818161443c015261467b0152615f5b6000f3fe6080604052600436106103245760003560e01c806306e485381461033057806306fdde031461035b578063077f224a1461037d578063090c415e1461039f578063095ea7b3146103bf578063099e14ce146103ef57806311bcc81e146104b457806312a6a3f8146104d457806316d055d6146104f457806318160ddd146105145780631863e8091461053357806320bc44251461055357806321fb177a1461058f57806323b872dd146105bc578063245887fc146105dc57806327048397146105fc5780632ec8eec71461061c578063313ce5671461065c578063386fa22114610678578063395093511461069857806341b706be146106b857806342fe0980146106d857806345977d03146106f857806346951954146107185780634b2763b3146107385780634b61cc33146107585780634c5c0c851461078557806350d75d25146107b957806352d1902d146107ce578063556f0dc7146107e357806357cf7acb146107f75780635b9d09cc1461080c57806362aa52871461082c57806362ad1b831461084c57806366a12fb61461086c5780636c2d9f2f1461088c57806370a08231146108ac578063766c4f37146108cc57806379359f6f146108df57806383ba2525146108ff5780638934c79a1461091f5780638da5cb5b1461093f578063959b8c3f1461096557806395d89b41146109855780639903ad381461099a5780639bd9bbc6146109af5780639d876741146109cf578063a0712d68146109ef578063a1b2bf8b14610a0f578063a3a7e7f314610a2f578063a457c2d714610a4f578063a9059cbb14610a6f578063b5c0b7eb14610a8f578063b84cdd4a14610aa4578063bb0d196e14610ac4578063c68d428314610ae4578063c780fd8214610b04578063ca0c1e7f14610b24578063ca78946414610b44578063cf97256d14610b64578063d95b637114610b84578063d9d078d614610ba4578063dd62ed3e14610bc4578063e4a472c814610c0a578063eb3537cc14610c2a578063ee719bc814610c65578063ef43d2c614610c83578063f349f56a14610cb7578063fad8b32a14610cd4578063fc673c4f14610cf4578063fe9d930314610d1457600080fd5b3661032b57005b600080fd5b34801561033c57600080fd5b50610345610d34565b6040516103529190614b7c565b60405180910390f35b34801561036757600080fd5b50610370610d45565b6040516103529190614c19565b34801561038957600080fd5b5061039d610398366004614c89565b610dd7565b005b3480156103ab57600080fd5b5061039d6103ba366004614d50565b610f24565b3480156103cb57600080fd5b506103df6103da366004614dab565b610fd7565b6040519015158152602001610352565b3480156103fb57600080fd5b506104a761040a366004614dd7565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0390811660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015290565b6040516103529190614e3e565b3480156104c057600080fd5b5061039d6104cf366004614e4c565b610fee565b3480156104e057600080fd5b5061039d6104ef366004614e65565b61101d565b34801561050057600080fd5b5061039d61050f366004614eb0565b611100565b34801561052057600080fd5b506002545b604051908152602001610352565b34801561053f57600080fd5b5061039d61054e366004614fd2565b61115c565b34801561055f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516103529190615064565b34801561059b57600080fd5b506105af6105aa366004614dd7565b611401565b6040516103529190615078565b3480156105c857600080fd5b506103df6105d73660046150ba565b6114d5565b3480156105e857600080fd5b5061039d6105f7366004614dab565b6114eb565b34801561060857600080fd5b5061039d6106173660046150fb565b611564565b34801561062857600080fd5b5061063c610637366004614dd7565b611600565b604080519485526020850193909352918301526060820152608001610352565b34801561066857600080fd5b5060405160128152602001610352565b34801561068457600080fd5b50610345610693366004614dd7565b6116a3565b3480156106a457600080fd5b506103df6106b3366004614dab565b611746565b3480156106c457600080fd5b5061039d6106d3366004614eb0565b611782565b3480156106e457600080fd5b5061039d6106f336600461511d565b6117ae565b34801561070457600080fd5b5061039d610713366004614e4c565b6118d5565b34801561072457600080fd5b5061039d610733366004614dd7565b611901565b34801561074457600080fd5b5061039d6107533660046150ba565b61193b565b34801561076457600080fd5b506107786107733660046151b7565b6119c2565b60405161035291906151fd565b34801561079157600080fd5b506105827f000000000000000000000000000000000000000000000000000000000000000081565b3480156107c557600080fd5b50610582611a07565b3480156107da57600080fd5b50610525611a11565b3480156107ef57600080fd5b506001610525565b34801561080357600080fd5b5061039d611a35565b34801561081857600080fd5b5061039d610827366004615235565b611a56565b34801561083857600080fd5b5061039d6108473660046150ba565b611aad565b34801561085857600080fd5b5061039d610867366004615284565b611b01565b34801561087857600080fd5b5061039d6108873660046150ba565b611baf565b34801561089857600080fd5b506107786108a7366004615322565b611bcf565b3480156108b857600080fd5b506105256108c7366004614dd7565b611c11565b61039d6108da366004614dd7565b611c3a565b3480156108eb57600080fd5b506103df6108fa366004614dd7565b6121ef565b34801561090b57600080fd5b5061039d61091a366004614dab565b612277565b34801561092b57600080fd5b5061052561093a366004615357565b6122a3565b34801561094b57600080fd5b50601f54610582906201000090046001600160a01b031681565b34801561097157600080fd5b5061039d610980366004614dd7565b612344565b34801561099157600080fd5b50610370612395565b3480156109a657600080fd5b5061039d6123a4565b3480156109bb57600080fd5b5061039d6109ca366004615235565b6124b4565b3480156109db57600080fd5b5061039d6109ea36600461537d565b612508565b3480156109fb57600080fd5b5061039d610a0a366004614e4c565b61254e565b348015610a1b57600080fd5b5061039d610a2a366004614e65565b6125e1565b348015610a3b57600080fd5b5061039d610a4a366004614dd7565b61268b565b348015610a5b57600080fd5b506103df610a6a366004614dab565b61269f565b348015610a7b57600080fd5b506103df610a8a366004614dab565b6126ee565b348015610a9b57600080fd5b50610525600581565b348015610ab057600080fd5b506103df610abf366004614dab565b6126fc565b348015610ad057600080fd5b506103df610adf366004614dd7565b61274d565b348015610af057600080fd5b5061039d610aff36600461537d565b6127d5565b348015610b1057600080fd5b5061039d610b1f3660046150ba565b61281d565b348015610b3057600080fd5b5061039d610b3f3660046153d5565b6128b5565b348015610b5057600080fd5b5061039d610b5f366004614dab565b61291d565b348015610b7057600080fd5b5061039d610b7f366004614dab565b612992565b348015610b9057600080fd5b506103df610b9f366004615440565b612a80565b348015610bb057600080fd5b506103df610bbf366004614dab565b612a8e565b348015610bd057600080fd5b50610525610bdf366004615440565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b348015610c1657600080fd5b506103df610c25366004614dd7565b612aa8565b348015610c3657600080fd5b50610c4a610c45366004614dab565b612ac7565b60408051938452602084019290925290820152606001610352565b348015610c7157600080fd5b50600d546001600160a01b0316610582565b348015610c8f57600080fd5b506105827f000000000000000000000000000000000000000000000000000000000000000081565b348015610cc357600080fd5b5061052568270801d946c940000081565b348015610ce057600080fd5b5061039d610cef366004614dd7565b612bf6565b348015610d0057600080fd5b5061039d610d0f366004615479565b612c47565b348015610d2057600080fd5b5061039d610d2f3660046154c0565b612cf1565b6060610d406011612d42565b905090565b6060600e8054610d54906154fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610d80906154fe565b8015610dcd5780601f10610da257610100808354040283529160200191610dcd565b820191906000526020600020905b815481529060010190602001808311610db057829003601f168201915b5050505050905090565b601f805462010000600160b01b031916620100006001600160a01b038416021790556040805163132075a760e31b815290513091639903ad3891600480830192600092919082900301818387803b158015610e3157600080fd5b505af1158015610e45573d6000803e3d6000fd5b50506040516285fc1360e71b81523092506342fe09809150610e769060009081908a908a908a908a9060040161555b565b600060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d42839150610eeb9083906b92efd1b8d0cf37be5aa1cae560291b90602481016155a9565b600060405180830381600087803b158015610f0557600080fd5b505af1158015610f19573d6000803e3d6000fd5b505050505050505050565b6000338585604051602001610f3b939291906155d0565b604051602081830303815290604052805190602001209050610f9081848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b6040518481526001600160a01b0386169033907f30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d59859060200160405180910390a35050505050565b6000610fe4338484612de9565b5060015b92915050565b61101a333333846040518060200160405280600081525060405180602001604052806000815250612e99565b50565b60405133906000906110359083908790602001615619565b60408051601f19818403018152919052805160209091012090506110598184613063565b156110775760405163782a90fb60e11b815260040160405180910390fd5b6110b481858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b816001600160a01b03167f770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d8686866040516110f193929190615656565b60405180910390a25050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146111495760405163c51efddd60e01b815260040160405180910390fd5b6111558484848461309f565b5050505050565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906111a8903390600401615064565b602060405180830381865afa1580156111c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e99190615697565b6112065760405163327fd99160e21b815260040160405180910390fd5b60006112106131bf565b90506001600160a01b0381166112235750845b6000856112305786611232565b815b9050600083136112cf57611245836156ca565b61124e856132fe565b1461125b5761125b6156e6565b611264846132fe565b6001600160a01b0382166000908152600160205260408120805490919061128c9084906156fc565b90915550506001600160a01b038516600090815260016020526040812080548592906112b99084906156fc565b909155506112ca905085828661336c565b611399565b85156112dd576112dd6156e6565b826112e7856132fe565b6112f191906156fc565b6001600160a01b03831660009081526001602052604081208054909190611319908490615724565b909155506113289050846132fe565b6001600160a01b038816600090815260016020526040812080549091906113509084906156fc565b90915550506001600160a01b0385166000908152600160205260408120805485929061137d9084906156fc565b9091555061138e905082888661336c565b61139982868561336c565b846001600160a01b0316876001600160a01b0316336001600160a01b03167fb8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f8c8589898f6040516113ee959493929190615744565b60405180910390a4505050505050505050565b606060005b61140f83612aa8565b156114cf576001600160a01b0380841660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b6080820152828261148d81615777565b93508151811061149f5761149f615790565b6020908102919091018101919091526001600160a01b039384166000908152908052604090205490921691611406565b50919050565b60006114e33385858561309f565b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146115345760405163c51efddd60e01b815260040160405180910390fd5b611560338384846040518060200160405280600081525060405180602001604052806000815250612e99565b5050565b604051339060009061157c9083908690602001615619565b60405160208183030381529060405280519060200120905061159e8184613063565b6115bb5760405163dae1880960e01b815260040160405180910390fd5b6115c5818461339f565b60405184815233907f71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b9060200160405180910390a250505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168891906157a6565b90506116948582612ac7565b91979096509094509092509050565b6001600160a01b038181166000908152602081905260409081902054905163c56a069d60e01b8152901960048201526060917f0000000000000000000000000000000000000000000000000000000000000000169063c56a069d90602401600060405180830381865afa15801561171e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fe891908101906157bf565b3360008181526010602090815260408083206001600160a01b03871684529091528120549091610fe491859061177d908690615870565b612de9565b3330146117a257604051630fff4cc960e31b815260040160405180910390fd5b6111558385848461309f565b600e80546117bb906154fe565b15905061180f5760405162461bcd60e51b815260206004820152601f60248201527f5375706572546f6b656e3a20616c726561647920696e697469616c697a65640060448201526064015b60405180910390fd5b60008390036118595760405162461bcd60e51b81526020600482015260166024820152755375706572546f6b656e3a20656d707479206e616d6560501b6044820152606401611806565b600d805460ff8716600160a01b026001600160a81b03199091166001600160a01b03891617179055600e61188e8486836158d1565b50600f61189c8284836158d1565b506118a6306133c0565b6040516000808252908190600080516020615eb9833981519152906020015b60405180910390a3505050505050565b61101a3333338460405180602001604052806000815250604051806020016040528060008152506134a8565b601f546201000090046001600160a01b03163314611932576040516338ebc58960e11b815260040160405180910390fd5b61101a81613665565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146119845760405163c51efddd60e01b815260040160405180910390fd5b6001600160a01b038084166000908152601060209081526040808320938616835292905220546119bd908490849061177d908590615870565b505050565b606060008585856040516020016119db939291906155d0565b6040516020818303038152906040528051906020012090506119fd8184613837565b9695505050505050565b6000610d406138c6565b7fe438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db990565b336000818152602080526040902060010154611a549190600b0b6138d9565b565b611aa73333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506134a8915050565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611af65760405163c51efddd60e01b815260040160405180910390fd5b6119bd838383612de9565b33611b0e6011828a613902565b611b2b5760405163f7f0222760e01b815260040160405180910390fd5b611ba58189898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250600192506139ab915050565b5050505050505050565b333014611af657604051630fff4cc960e31b815260040160405180910390fd5b606060008484604051602001611be6929190615619565b604051602081830303815290604052805190602001209050611c088184613837565b95945050505050565b600080611c1d83611600565b505050905060008112611c305780611c33565b60005b9392505050565b611c4381612aa8565b15611c61576040516319c00a8560e01b815260040160405180910390fd5b601f5460009081906201000090046001600160a01b03163314611c8657336000611c8a565b3060015b91509150611c9782612aa8565b158015611ca2575080155b15611cbf5760405162e67aa960e31b815260040160405180910390fd5b6001600160a01b0382166000908152602080526040812054349190611cf090600160c81b900463ffffffff166122a3565b601f546040519192506201000090046001600160a01b0316906108fc8315029083906000818181858888f19350505050158015611d31573d6000803e3d6000fd5b50611d3c8183615990565b6001600160a01b0385166000908152602080526040902054909250600160a01b900460ff1660041901611d825760405163a2c3d1a560e01b815260040160405180910390fd5b30600090815260208052604090208054600160a81b900463ffffffff16906015611dab836159a3565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038616600090815260208052604090208054600160c81b900490911691506019611df8836159a3565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038416600090815260208052604081205460ff600160a01b9091041690611e478260016159c6565b90506000611e7762015180611e6860ff851668270801d946c94000006159f5565b611e7291906159f5565b613a24565b9050600081611e95611e726201518068270801d946c94000006159f5565b611e9f9190615a09565b90506040518060a00160405280896001600160a01b031681526020018460ff168152602001600063ffffffff168152602001600063ffffffff16815260200183600b0b815250602060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160196101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160006101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555090505060008890505b611fe881612aa8565b15612179576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff1681601561201f836159a3565b825463ffffffff9182166101009390930a928302919092021990911617905550805460009060ff600160a01b9091041660011461207557620186a06120668561c350615a36565b6120709190615a56565b612077565b835b6001830180549192508291600090612093908490600b0b615a94565b92506101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555080846120c69190615a09565b60018301549094506120dc908490600b0b6138d9565b6001600160a01b038b8116600090815260208080526040808320543084529281902054815160ff600160a01b830416815263ffffffff600160a81b8304811694820194909452600160c81b909104909216908201528583169291909116907fb03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a79060600160405180910390a350546001600160a01b03169050611fdf565b6001600160a01b038a1660009081526020805260409020600101546121a49030908c90600b0b613a3a565b5086156121e3576040516001600160a01b038b169088156108fc029089906000818181858888f193505050501580156121e1573d6000803e3d6000fd5b505b50505050505050505050565b6000610fe8827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906157a6565b611560333384846040518060200160405280600081525060405180602001604052806000815250612e99565b6000600c8263ffffffff16116122c15750662386f26fc10000919050565b60188263ffffffff16116122de575067016345785d8a0000919050565b60248263ffffffff16116122fb57506702c68af0bb140000919050565b60308263ffffffff16116123185750670429d069189e0000919050565b603c8263ffffffff1611612335575067058d15e176280000919050565b50670de0b6b3a7640000919050565b3361235160118284613a59565b806001600160a01b0316826001600160a01b03167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a35050565b6060600f8054610d54906154fe565b601f54610100900460ff16158080156123c45750601f54600160ff909116105b806123e557506123d330613b5d565b1580156123e55750601f5460ff166001145b6124485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611806565b601f805460ff19166001179055801561246b57601f805461ff0019166101001790555b801561101a57601f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b611aa73333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250600191506139ab9050565b33301461252857604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119bd91339186918691901515908690613b6c565b601f546201000090046001600160a01b0316331461257f576040516338ebc58960e11b815260040160405180910390fd5b6040805160008152602081019182905263c68d428360e01b909152309063c68d4283906125b39083908590602481016155a9565b600060405180830381600087803b1580156125cd57600080fd5b505af1158015611155573d6000803e3d6000fd5b60405133906000906125f99083908790602001615619565b60405160208183030381529060405280519060200120905061264e81858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca8686866040516110f193929190615656565b61156033338361269a33611c11565b61309f565b6000610fe4338461177d856040518060600160405280602a8152602001615e8f602a91393360009081526010602090815260408083206001600160a01b038d1684529091529020549190613c2d565b6000611c333333858561309f565b60008060008061270c8686612ac7565b92509250925060006127348284116127255760006132fe565b61272f8385615990565b6132fe565b61273e90856156fc565b60001315979650505050505050565b6000610fe8827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf91906157a6565b3330146127f557604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119bd913391869186919015159081908790613c59565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128665760405163c51efddd60e01b815260040160405180910390fd5b6119bd838361177d846040518060600160405280602a8152602001615e8f602a91396001600160a01b03808a166000908152601060209081526040808320938c16835292905220549190613c2d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128fe5760405163c51efddd60e01b815260040160405180910390fd5b611aa733858585856040518060200160405280600081525060016139ab565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146129665760405163c51efddd60e01b815260040160405180910390fd5b6115603383848460405180602001604052806000815250604051806020016040528060008152506134a8565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906129de903390600401615064565b602060405180830381865afa1580156129fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1f9190615697565b612a3c5760405163327fd99160e21b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902054612a609082906156fc565b6001600160a01b0390921660009081526001602052604090209190915550565b6000611c3360118484613902565b600080612a9b8484612ac7565b5050600013949350505050565b6001600160a01b03908116600090815260208052604090205416151590565b6001600160a01b038216600090815260016020526040812054908080612aec866116a3565b905060005b8151811015612bed576000806000848481518110612b1157612b11615790565b60200260200101516001600160a01b0316639b2e48bc308c8c6040518463ffffffff1660e01b8152600401612b4893929190615ac1565b606060405180830381865afa158015612b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b899190615ae5565b91945092509050612b9a8288615870565b9650612ba68187615870565b9550612bc3818311612bb95760006132fe565b61272f8284615990565b612bcd848a6156fc565b612bd79190615724565b975050505080612be690615777565b9050612af1565b50509250925092565b33612c0360118284613d27565b806001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a35050565b33612c5460118289613902565b612c715760405163f7f0222760e01b815260040160405180910390fd5b612ce88188898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250612e9992505050565b50505050505050565b6119bd3333338686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612e99915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612d9c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612d7e575b50505050509050919050565b60005b81518110156119bd576000828281518110612dc857612dc8615790565b6020026020010151905080828501555080612de290615777565b9050612dab565b6001600160a01b038316612e1057604051638163862760e01b815260040160405180910390fd5b6001600160a01b038216612e37576040516337c1c09d60e21b815260040160405180910390fd5b6001600160a01b0383811660008181526010602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600d546001600160a01b0316612ec257604051637bce7b2b60e11b815260040160405180910390fd5b600080612ece85613e1f565b91509150612ee58888838751600014158888613b6c565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612f16903090600401615064565b602060405180830381865afa158015612f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5791906157a6565b600d54909150612f71906001600160a01b03168885613edb565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612fa2903090600401615064565b602060405180830381865afa158015612fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe391906157a6565b90506000612ff18284615990565b905080851461301357604051631c7c26d360e31b815260040160405180910390fd5b896001600160a01b03167f3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d8560405161304e91815260200190565b60405180910390a25050505050505050505050565b6000805b828110156130955783810154801561308457600192505050610fe8565b5061308e81615777565b9050613067565b5060009392505050565b60006001600160a01b0384166130c85760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0383166130ef5760405163e219bd3960e01b815260040160405180910390fd5b6000339050613120818686866040518060200160405280600081525060405180602001604052806000815250613f31565b846001600160a01b0316866001600160a01b0316146131b3576131b3858761177d866040518060600160405280602d8152602001615ed9602d9139601060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613c2d9092919063ffffffff16565b50600195945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132449190615b13565b604051638369a0f160e01b81529091506001600160a01b03821690638369a0f1906132b7907f00000000000000000000000000000000000000000000000000000000000000009030907f9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d0990600401615ac1565b602060405180830381865afa1580156132d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132f89190615b13565b91505090565b60006001600160ff1b038211156133685760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611806565b5090565b816001600160a01b0316836001600160a01b0316600080516020615eb983398151915283604051612e8c91815260200190565b60005b818110156119bd576000838201556133b981615777565b90506133a2565b6040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d9061341b9084907fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054903090600401615b30565b600060405180830381600087803b15801561343557600080fd5b505af1158015613449573d6000803e3d6000fd5b50506040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d91506125b39084907faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a903090600401615b30565b600d546001600160a01b03166134d157604051637bce7b2b60e11b815260040160405180910390fd5b6000806134dd85613e1f565b600d546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190613516903090600401615064565b602060405180830381865afa158015613533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061355791906157a6565b600d54909150613572906001600160a01b0316893086613fd0565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a08231906135a3903090600401615064565b602060405180830381865afa1580156135c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135e491906157a6565b905060006135f28383615990565b905080851461361457604051631c7c26d360e31b815260040160405180910390fd5b865161362a908c908b9087901515808c8c613c59565b886001600160a01b03167f25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df8560405161304e91815260200190565b600061366f6138c6565b6001600160a01b0316036136c55760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401611806565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061372791906157a6565b61372f611a11565b146137885760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401611806565b6001600160a01b03811630036137dc5760405162461bcd60e51b815260206004820152601960248201527805555505350726f786961626c653a2070726f7879206c6f6f7603c1b6044820152606401611806565b6137f281600080516020615e4f83398151915255565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc61381b611a11565b604080519182526001600160a01b0384166020830152016124a9565b6060816001600160401b0381111561385157613851614f01565b60405190808252806020026020018201604052801561387a578160200160208202803683370190505b50905060005b828110156138bf576000818501549050808383815181106138a3576138a3615790565b6020908102919091010152506138b881615777565b9050613880565b5092915050565b600080516020615e4f8339815191525490565b6138e4308084613ff1565b600b0b156138f7576119bd308383614089565b6119bd308383613a3a565b6000816001600160a01b0316836001600160a01b0316148061397157506001600160a01b038316600090815260018501602052604090205460ff16801561397157506001600160a01b03808316600090815260038601602090815260408083209387168352929052205460ff16155b806114e357506001600160a01b03808316600090815260028601602090815260408083209387168352929052205460ff1690509392505050565b6001600160a01b0386166139d25760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0385166139f95760405163e219bd3960e01b815260040160405180910390fd5b613a078787878787876140a8565b613a15878787878787613f31565b612ce8878787878787876141ba565b600060016001605f1b0382111561336857600080fd5b604080516000808252602082019092526114e390859085908590614309565b806001600160a01b0316826001600160a01b031603613ad05760405162461bcd60e51b815260206004820152602d60248201527f4552433737374f70657261746f72733a20617574686f72697a696e672073656c60448201526c331030b99037b832b930ba37b960991b6064820152608401611806565b6001600160a01b038116600090815260018401602052604090205460ff1615613b26576001600160a01b03918216600090815260039390930160209081526040808520929093168452529020805460ff19169055565b6001600160a01b0380831660009081526002850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03163b151590565b6001600160a01b038516613b9357604051632e8aac6160e21b815260040160405180910390fd5b8215613ba857613ba8868660008786866140a8565b613bb28585614434565b846001600160a01b0316866001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098868585604051613bf993929190615b53565b60405180910390a36040518481526000906001600160a01b03871690600080516020615eb9833981519152906020016118c5565b60008184841115613c515760405162461bcd60e51b81526004016118069190614c19565b505050900390565b6001600160a01b038616613c8057604051630d24315760e01b815260040160405180910390fd5b613c8a8686614544565b8315613ca057613ca087600088888686896141ba565b856001600160a01b0316876001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d878585604051613ce793929190615b53565b60405180910390a36040518581526001600160a01b03871690600090600080516020615eb98339815191529060200160405180910390a350505050505050565b336001600160a01b03821603613d925760405162461bcd60e51b815260206004820152602a60248201527f4552433737374f70657261746f72733a207265766f6b696e672073656c662061604482015269399037b832b930ba37b960b11b6064820152608401611806565b6001600160a01b038116600090815260018401602052604090205460ff1615613dec576001600160a01b0380831660009081526003850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03918216600090815260029390930160209081526040808520929093168452529020805460ff19169055565b600d54600090819081906012600160a01b90910460ff161015613e7e57600d54613e5490600160a01b900460ff166012615b7e565b613e5f90600a615c7b565b9050613e6b81856159f5565b9250613e778184615c8a565b9150613ed5565b600d546012600160a01b90910460ff161115613ece57600d54613ead90601290600160a01b900460ff16615b7e565b613eb890600a615c7b565b9050613ec48185615c8a565b9250839150613ed5565b8391508192505b50915091565b6119bd8363a9059cbb60e01b8484604051602401613efa929190615ca1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261459e565b613f448585613f3f866132fe565b614673565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987868686604051613f9593929190615b53565b60405180910390a4836001600160a01b0316856001600160a01b0316600080516020615eb9833981519152856040516118c591815260200190565b611aa7846323b872dd60e01b858585604051602401613efa93929190615ac1565b600080613ffd85614772565b604051631cd43d1160e31b81526001600160a01b03888116600483015287811660248301528681166044830152919350908316915063e6a1e88890606401608060405180830381865afa158015614058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061407c9190615cba565b5090979650505050505050565b604080516000808252602082019092526114e3908590859085906148bd565b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906141049089907f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89590600401615ca1565b602060405180830381865afa158015614121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141459190615b13565b90506001600160a01b03811615612ce857604051633ad5cbc160e11b81526001600160a01b038216906375ab97829061418c908a908a908a908a908a908a90600401615cfe565b600060405180830381600087803b1580156141a657600080fd5b505af11580156121e1573d6000803e3d6000fd5b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142169089907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b90600401615ca1565b602060405180830381865afa158015614233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142579190615b13565b90506001600160a01b038116156142d3576040516223de2960e01b81526001600160a01b038216906223de299061429c908b908b908b908b908b908b90600401615cfe565b600060405180830381600087803b1580156142b657600080fd5b505af11580156142ca573d6000803e3d6000fd5b50505050611ba5565b8115611ba5576142eb866001600160a01b0316613b5d565b15611ba55760405163fe737d0560e01b815260040160405180910390fd5b60008060006143178761490a565b91509150816001600160a01b03166339255d5b82836001600160a01b03166362fc305e8b8b8b60006001600160401b0381111561435657614356614f01565b6040519080825280601f01601f191660200182016040528015614380576020820181803683370190505b506040516024016143949493929190615d4b565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526143df939250908990600401615d81565b6000604051808303816000875af11580156143fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526144269190810190615da5565b506001979650505050505050565b60006144bc837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614498573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4591906157a6565b505090506144c9826132fe565b8112156144e95760405163043b37d160e21b815260040160405180910390fd5b6144f2826132fe565b6001600160a01b0384166000908152600160205260409020546145159190615724565b6001600160a01b03841660009081526001602052604090205560025461453c908390615990565b600255505050565b61454d816132fe565b6001600160a01b03831660009081526001602052604090205461457091906156fc565b6001600160a01b038316600090815260016020526040902055600254614597908290615870565b6002555050565b60006145f3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a5b9092919063ffffffff16565b90508051600014806146145750808060200190518101906146149190615697565b6119bd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611806565b60006146d7847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614498573d6000803e3d6000fd5b50509050818112156146fc57604051632f4cb94160e01b815260040160405180910390fd5b6001600160a01b038416600090815260016020526040902054614720908390615724565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546147509083906156fc565b6001600160a01b03909316600090815260016020526040902092909255505050565b600080516020615f0683398151915254600080516020615e6f833981519152546001600160a01b03811661488c576001600160a01b03821661481357826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156147ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148109190615b13565b91505b604051635b69006f60e11b8152600080516020615e2f83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148899190615b13565b90505b6001600160a01b0382166148a2576148a26156e6565b6001600160a01b0381166148b8576148b86156e6565b915091565b60008060006148cb8761490a565b91509150816001600160a01b03166339255d5b82836001600160a01b03166350209a628b8b8b60006001600160401b0381111561435657614356614f01565b600080516020615f0683398151915254600080516020615e6f833981519152546001600160a01b03811661488c576001600160a01b0382166149ab57826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149a89190615b13565b91505b604051635b69006f60e11b8152600080516020615e2f83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa1580156149fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a219190615b13565b905081600080516020615f068339815191525580600080516020615e6f833981519152556001600160a01b0382166148a2576148a26156e6565b60606114e3848460008585600080866001600160a01b03168587604051614a829190615e12565b60006040518083038185875af1925050503d8060008114614abf576040519150601f19603f3d011682016040523d82523d6000602084013e614ac4565b606091505b5091509150614ad587838387614ae0565b979650505050505050565b60608315614b4d578251600003614b4657614afa85613b5d565b614b465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611806565b50816114e3565b6114e38383815115614b625781518083602001fd5b8060405162461bcd60e51b81526004016118069190614c19565b6020808252825182820181905260009190848201906040850190845b81811015614bbd5783516001600160a01b031683529284019291840191600101614b98565b50909695505050505050565b60005b83811015614be4578181015183820152602001614bcc565b50506000910152565b60008151808452614c05816020860160208601614bc9565b601f01601f19169290920160200192915050565b602081526000611c336020830184614bed565b60008083601f840112614c3e57600080fd5b5081356001600160401b03811115614c5557600080fd5b602083019150836020828501011115614c6d57600080fd5b9250929050565b6001600160a01b038116811461101a57600080fd5b600080600080600060608688031215614ca157600080fd5b85356001600160401b0380821115614cb857600080fd5b614cc489838a01614c2c565b90975095506020880135915080821115614cdd57600080fd5b50614cea88828901614c2c565b9094509250506040860135614cfe81614c74565b809150509295509295909350565b60008083601f840112614d1e57600080fd5b5081356001600160401b03811115614d3557600080fd5b6020830191508360208260051b8501011115614c6d57600080fd5b60008060008060608587031215614d6657600080fd5b8435614d7181614c74565b93506020850135925060408501356001600160401b03811115614d9357600080fd5b614d9f87828801614d0c565b95989497509550505050565b60008060408385031215614dbe57600080fd5b8235614dc981614c74565b946020939093013593505050565b600060208284031215614de957600080fd5b8135611c3381614c74565b80516001600160a01b0316825260208082015160ff169083015260408082015163ffffffff9081169184019190915260608083015190911690830152608090810151600b0b910152565b60a08101610fe88284614df4565b600060208284031215614e5e57600080fd5b5035919050565b600080600060408486031215614e7a57600080fd5b8335925060208401356001600160401b03811115614e9757600080fd5b614ea386828701614d0c565b9497909650939450505050565b60008060008060808587031215614ec657600080fd5b8435614ed181614c74565b93506020850135614ee181614c74565b92506040850135614ef181614c74565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f3f57614f3f614f01565b604052919050565b60006001600160401b03821115614f6057614f60614f01565b50601f01601f191660200190565b600082601f830112614f7f57600080fd5b8135614f92614f8d82614f47565b614f17565b818152846020838601011115614fa757600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461101a57600080fd5b600080600080600080600060e0888a031215614fed57600080fd5b8735965060208801356001600160401b0381111561500a57600080fd5b6150168a828b01614f6e565b965050604088013561502781614c74565b9450606088013561503781614fc4565b9350608088013561504781614c74565b9699959850939692959460a0840135945060c09093013592915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015614bbd576150a7838551614df4565b9284019260a09290920191600101615094565b6000806000606084860312156150cf57600080fd5b83356150da81614c74565b925060208401356150ea81614c74565b929592945050506040919091013590565b6000806040838503121561510e57600080fd5b50508035926020909101359150565b6000806000806000806080878903121561513657600080fd5b863561514181614c74565b9550602087013560ff8116811461515757600080fd5b945060408701356001600160401b038082111561517357600080fd5b61517f8a838b01614c2c565b9096509450606089013591508082111561519857600080fd5b506151a589828a01614c2c565b979a9699509497509295939492505050565b600080600080608085870312156151cd57600080fd5b84356151d881614c74565b935060208501356151e881614c74565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015614bbd57835183529284019291840191600101615219565b6000806000806060858703121561524b57600080fd5b843561525681614c74565b93506020850135925060408501356001600160401b0381111561527857600080fd5b614d9f87828801614c2c565b600080600080600080600060a0888a03121561529f57600080fd5b87356152aa81614c74565b965060208801356152ba81614c74565b95506040880135945060608801356001600160401b03808211156152dd57600080fd5b6152e98b838c01614c2c565b909650945060808a013591508082111561530257600080fd5b5061530f8a828b01614c2c565b989b979a50959850939692959293505050565b60008060006060848603121561533757600080fd5b833561534281614c74565b95602085013595506040909401359392505050565b60006020828403121561536957600080fd5b813563ffffffff81168114611c3357600080fd5b60008060006060848603121561539257600080fd5b833561539d81614c74565b92506020840135915060408401356001600160401b038111156153bf57600080fd5b6153cb86828701614f6e565b9150509250925092565b600080600080608085870312156153eb57600080fd5b84356153f681614c74565b9350602085013561540681614c74565b92506040850135915060608501356001600160401b0381111561542857600080fd5b61543487828801614f6e565b91505092959194509250565b6000806040838503121561545357600080fd5b823561545e81614c74565b9150602083013561546e81614c74565b809150509250929050565b6000806000806000806080878903121561549257600080fd5b863561549d81614c74565b95506020870135945060408701356001600160401b038082111561517357600080fd5b6000806000604084860312156154d557600080fd5b8335925060208401356001600160401b038111156154f257600080fd5b614ea386828701614c2c565b600181811c9082168061551257607f821691505b6020821081036114cf57634e487b7160e01b600052602260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff861660208201526080604082018190526000906155899083018688615532565b828103606084015261559c818587615532565b9998505050505050505050565b60018060a01b0384168152826020820152606060408201526000611c086060830184614bed565b6080808252600e908201526d41677265656d656e74537461746560901b60a08201526001600160a01b039384166020820152919092166040820152606081019190915260c00190565b6060808252600d908201526c41677265656d656e744461746160981b60808201526001600160a01b03929092166020830152604082015260a00190565b838152604060208201819052810182905260006001600160fb1b0383111561567d57600080fd5b8260051b8085606085013791909101606001949350505050565b6000602082840312156156a957600080fd5b8151611c3381614fc4565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016156df576156df6156b4565b5060000390565b634e487b7160e01b600052600160045260246000fd5b808201828112600083128015821682158216171561571c5761571c6156b4565b505092915050565b81810360008312801583831316838312821617156138bf576138bf6156b4565b85815260018060a01b038516602082015283604082015282606082015260a060808201526000614ad560a0830184614bed565b600060018201615789576157896156b4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156157b857600080fd5b5051919050565b600060208083850312156157d257600080fd5b82516001600160401b03808211156157e957600080fd5b818501915085601f8301126157fd57600080fd5b81518181111561580f5761580f614f01565b8060051b9150615820848301614f17565b818152918301840191848101908884111561583a57600080fd5b938501935b83851015615864578451925061585483614c74565b828252938501939085019061583f565b98975050505050505050565b80820180821115610fe857610fe86156b4565b601f8211156119bd57600081815260208120601f850160051c810160208610156158aa5750805b601f850160051c820191505b818110156158c9578281556001016158b6565b505050505050565b6001600160401b038311156158e8576158e8614f01565b6158fc836158f683546154fe565b83615883565b6000601f84116001811461593057600085156159185750838201355b600019600387901b1c1916600186901b178355611155565b600083815260209020601f19861690835b828110156159615786850135825560209485019460019092019101615941565b508682101561597e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81810381811115610fe857610fe86156b4565b600063ffffffff8083168181036159bc576159bc6156b4565b6001019392505050565b60ff8181168382160190811115610fe857610fe86156b4565b634e487b7160e01b600052601260045260246000fd5b600082615a0457615a046159df565b500490565b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610fe857610fe86156b4565b600082600b0b82600b0b0280600b0b91508082146138bf576138bf6156b4565b600081600b0b83600b0b80615a6d57615a6d6159df565b60016001605f1b0319821460001982141615615a8b57615a8b6156b4565b90059392505050565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610fe857610fe86156b4565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080600060608486031215615afa57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215615b2557600080fd5b8151611c3381614c74565b6001600160a01b0393841681526020810192909252909116604082015260600190565b838152606060208201526000615b6c6060830185614bed565b82810360408401526119fd8185614bed565b60ff8281168282160390811115610fe857610fe86156b4565b600181815b80851115615bd2578160001904821115615bb857615bb86156b4565b80851615615bc557918102915b93841c9390800290615b9c565b509250929050565b600082615be957506001610fe8565b81615bf657506000610fe8565b8160018114615c0c5760028114615c1657615c32565b6001915050610fe8565b60ff841115615c2757615c276156b4565b50506001821b610fe8565b5060208310610133831016604e8410600b8410161715615c55575081810a610fe8565b615c5f8383615b97565b8060001904821115615c7357615c736156b4565b029392505050565b6000611c3360ff841683615bda565b8082028115828204841417610fe857610fe86156b4565b6001600160a01b03929092168252602082015260400190565b60008060008060808587031215615cd057600080fd5b84519350602085015180600b0b8114615ce857600080fd5b6040860151606090960151949790965092505050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c060808201819052600090615d3990830185614bed565b82810360a084015261559c8185614bed565b6001600160a01b03858116825284166020820152600b83900b60408201526080606082018190526000906119fd90830184614bed565b6001600160a01b0384168152606060208201819052600090615b6c90830185614bed565b600060208284031215615db757600080fd5b81516001600160401b03811115615dcd57600080fd5b8201601f81018413615dde57600080fd5b8051615dec614f8d82614f47565b818152856020838501011115615e0157600080fd5b611c08826020830160208601614bc9565b60008251615e24818460208701614bc9565b919091019291505056fea9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a5375706572546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5375706572546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837a2646970667358221220df4c511b6ef82aefe07e06e7fa5e77d562695cab69a60734f48bce58e4f945dd64736f6c63430008130033",
    "sourceMap": "589:7132:57:-:0;;;1306:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:51;;;;;3652:41:60;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1433:4:57;;1439:18;;1459:17;;3652:41:60;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:60;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;1306:178:57;;;589:7132;;14:144:61;-1:-1:-1;;;;;102:31:61;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:61;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:61;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;589:7132:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106103245760003560e01c806306e485381461033057806306fdde031461035b578063077f224a1461037d578063090c415e1461039f578063095ea7b3146103bf578063099e14ce146103ef57806311bcc81e146104b457806312a6a3f8146104d457806316d055d6146104f457806318160ddd146105145780631863e8091461053357806320bc44251461055357806321fb177a1461058f57806323b872dd146105bc578063245887fc146105dc57806327048397146105fc5780632ec8eec71461061c578063313ce5671461065c578063386fa22114610678578063395093511461069857806341b706be146106b857806342fe0980146106d857806345977d03146106f857806346951954146107185780634b2763b3146107385780634b61cc33146107585780634c5c0c851461078557806350d75d25146107b957806352d1902d146107ce578063556f0dc7146107e357806357cf7acb146107f75780635b9d09cc1461080c57806362aa52871461082c57806362ad1b831461084c57806366a12fb61461086c5780636c2d9f2f1461088c57806370a08231146108ac578063766c4f37146108cc57806379359f6f146108df57806383ba2525146108ff5780638934c79a1461091f5780638da5cb5b1461093f578063959b8c3f1461096557806395d89b41146109855780639903ad381461099a5780639bd9bbc6146109af5780639d876741146109cf578063a0712d68146109ef578063a1b2bf8b14610a0f578063a3a7e7f314610a2f578063a457c2d714610a4f578063a9059cbb14610a6f578063b5c0b7eb14610a8f578063b84cdd4a14610aa4578063bb0d196e14610ac4578063c68d428314610ae4578063c780fd8214610b04578063ca0c1e7f14610b24578063ca78946414610b44578063cf97256d14610b64578063d95b637114610b84578063d9d078d614610ba4578063dd62ed3e14610bc4578063e4a472c814610c0a578063eb3537cc14610c2a578063ee719bc814610c65578063ef43d2c614610c83578063f349f56a14610cb7578063fad8b32a14610cd4578063fc673c4f14610cf4578063fe9d930314610d1457600080fd5b3661032b57005b600080fd5b34801561033c57600080fd5b50610345610d34565b6040516103529190614b7c565b60405180910390f35b34801561036757600080fd5b50610370610d45565b6040516103529190614c19565b34801561038957600080fd5b5061039d610398366004614c89565b610dd7565b005b3480156103ab57600080fd5b5061039d6103ba366004614d50565b610f24565b3480156103cb57600080fd5b506103df6103da366004614dab565b610fd7565b6040519015158152602001610352565b3480156103fb57600080fd5b506104a761040a366004614dd7565b6040805160a081018252600080825260208201819052918101829052606081018290526080810191909152506001600160a01b0390811660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015290565b6040516103529190614e3e565b3480156104c057600080fd5b5061039d6104cf366004614e4c565b610fee565b3480156104e057600080fd5b5061039d6104ef366004614e65565b61101d565b34801561050057600080fd5b5061039d61050f366004614eb0565b611100565b34801561052057600080fd5b506002545b604051908152602001610352565b34801561053f57600080fd5b5061039d61054e366004614fd2565b61115c565b34801561055f57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b6040516103529190615064565b34801561059b57600080fd5b506105af6105aa366004614dd7565b611401565b6040516103529190615078565b3480156105c857600080fd5b506103df6105d73660046150ba565b6114d5565b3480156105e857600080fd5b5061039d6105f7366004614dab565b6114eb565b34801561060857600080fd5b5061039d6106173660046150fb565b611564565b34801561062857600080fd5b5061063c610637366004614dd7565b611600565b604080519485526020850193909352918301526060820152608001610352565b34801561066857600080fd5b5060405160128152602001610352565b34801561068457600080fd5b50610345610693366004614dd7565b6116a3565b3480156106a457600080fd5b506103df6106b3366004614dab565b611746565b3480156106c457600080fd5b5061039d6106d3366004614eb0565b611782565b3480156106e457600080fd5b5061039d6106f336600461511d565b6117ae565b34801561070457600080fd5b5061039d610713366004614e4c565b6118d5565b34801561072457600080fd5b5061039d610733366004614dd7565b611901565b34801561074457600080fd5b5061039d6107533660046150ba565b61193b565b34801561076457600080fd5b506107786107733660046151b7565b6119c2565b60405161035291906151fd565b34801561079157600080fd5b506105827f000000000000000000000000000000000000000000000000000000000000000081565b3480156107c557600080fd5b50610582611a07565b3480156107da57600080fd5b50610525611a11565b3480156107ef57600080fd5b506001610525565b34801561080357600080fd5b5061039d611a35565b34801561081857600080fd5b5061039d610827366004615235565b611a56565b34801561083857600080fd5b5061039d6108473660046150ba565b611aad565b34801561085857600080fd5b5061039d610867366004615284565b611b01565b34801561087857600080fd5b5061039d6108873660046150ba565b611baf565b34801561089857600080fd5b506107786108a7366004615322565b611bcf565b3480156108b857600080fd5b506105256108c7366004614dd7565b611c11565b61039d6108da366004614dd7565b611c3a565b3480156108eb57600080fd5b506103df6108fa366004614dd7565b6121ef565b34801561090b57600080fd5b5061039d61091a366004614dab565b612277565b34801561092b57600080fd5b5061052561093a366004615357565b6122a3565b34801561094b57600080fd5b50601f54610582906201000090046001600160a01b031681565b34801561097157600080fd5b5061039d610980366004614dd7565b612344565b34801561099157600080fd5b50610370612395565b3480156109a657600080fd5b5061039d6123a4565b3480156109bb57600080fd5b5061039d6109ca366004615235565b6124b4565b3480156109db57600080fd5b5061039d6109ea36600461537d565b612508565b3480156109fb57600080fd5b5061039d610a0a366004614e4c565b61254e565b348015610a1b57600080fd5b5061039d610a2a366004614e65565b6125e1565b348015610a3b57600080fd5b5061039d610a4a366004614dd7565b61268b565b348015610a5b57600080fd5b506103df610a6a366004614dab565b61269f565b348015610a7b57600080fd5b506103df610a8a366004614dab565b6126ee565b348015610a9b57600080fd5b50610525600581565b348015610ab057600080fd5b506103df610abf366004614dab565b6126fc565b348015610ad057600080fd5b506103df610adf366004614dd7565b61274d565b348015610af057600080fd5b5061039d610aff36600461537d565b6127d5565b348015610b1057600080fd5b5061039d610b1f3660046150ba565b61281d565b348015610b3057600080fd5b5061039d610b3f3660046153d5565b6128b5565b348015610b5057600080fd5b5061039d610b5f366004614dab565b61291d565b348015610b7057600080fd5b5061039d610b7f366004614dab565b612992565b348015610b9057600080fd5b506103df610b9f366004615440565b612a80565b348015610bb057600080fd5b506103df610bbf366004614dab565b612a8e565b348015610bd057600080fd5b50610525610bdf366004615440565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b348015610c1657600080fd5b506103df610c25366004614dd7565b612aa8565b348015610c3657600080fd5b50610c4a610c45366004614dab565b612ac7565b60408051938452602084019290925290820152606001610352565b348015610c7157600080fd5b50600d546001600160a01b0316610582565b348015610c8f57600080fd5b506105827f000000000000000000000000000000000000000000000000000000000000000081565b348015610cc357600080fd5b5061052568270801d946c940000081565b348015610ce057600080fd5b5061039d610cef366004614dd7565b612bf6565b348015610d0057600080fd5b5061039d610d0f366004615479565b612c47565b348015610d2057600080fd5b5061039d610d2f3660046154c0565b612cf1565b6060610d406011612d42565b905090565b6060600e8054610d54906154fe565b80601f0160208091040260200160405190810160405280929190818152602001828054610d80906154fe565b8015610dcd5780601f10610da257610100808354040283529160200191610dcd565b820191906000526020600020905b815481529060010190602001808311610db057829003601f168201915b5050505050905090565b601f805462010000600160b01b031916620100006001600160a01b038416021790556040805163132075a760e31b815290513091639903ad3891600480830192600092919082900301818387803b158015610e3157600080fd5b505af1158015610e45573d6000803e3d6000fd5b50506040516285fc1360e71b81523092506342fe09809150610e769060009081908a908a908a908a9060040161555b565b600060405180830381600087803b158015610e9057600080fd5b505af1158015610ea4573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d42839150610eeb9083906b92efd1b8d0cf37be5aa1cae560291b90602481016155a9565b600060405180830381600087803b158015610f0557600080fd5b505af1158015610f19573d6000803e3d6000fd5b505050505050505050565b6000338585604051602001610f3b939291906155d0565b604051602081830303815290604052805190602001209050610f9081848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b6040518481526001600160a01b0386169033907f30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d59859060200160405180910390a35050505050565b6000610fe4338484612de9565b5060015b92915050565b61101a333333846040518060200160405280600081525060405180602001604052806000815250612e99565b50565b60405133906000906110359083908790602001615619565b60408051601f19818403018152919052805160209091012090506110598184613063565b156110775760405163782a90fb60e11b815260040160405180910390fd5b6110b481858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b816001600160a01b03167f770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d8686866040516110f193929190615656565b60405180910390a25050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146111495760405163c51efddd60e01b815260040160405180910390fd5b6111558484848461309f565b5050505050565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906111a8903390600401615064565b602060405180830381865afa1580156111c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e99190615697565b6112065760405163327fd99160e21b815260040160405180910390fd5b60006112106131bf565b90506001600160a01b0381166112235750845b6000856112305786611232565b815b9050600083136112cf57611245836156ca565b61124e856132fe565b1461125b5761125b6156e6565b611264846132fe565b6001600160a01b0382166000908152600160205260408120805490919061128c9084906156fc565b90915550506001600160a01b038516600090815260016020526040812080548592906112b99084906156fc565b909155506112ca905085828661336c565b611399565b85156112dd576112dd6156e6565b826112e7856132fe565b6112f191906156fc565b6001600160a01b03831660009081526001602052604081208054909190611319908490615724565b909155506113289050846132fe565b6001600160a01b038816600090815260016020526040812080549091906113509084906156fc565b90915550506001600160a01b0385166000908152600160205260408120805485929061137d9084906156fc565b9091555061138e905082888661336c565b61139982868561336c565b846001600160a01b0316876001600160a01b0316336001600160a01b03167fb8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f8c8589898f6040516113ee959493929190615744565b60405180910390a4505050505050505050565b606060005b61140f83612aa8565b156114cf576001600160a01b0380841660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b6080820152828261148d81615777565b93508151811061149f5761149f615790565b6020908102919091018101919091526001600160a01b039384166000908152908052604090205490921691611406565b50919050565b60006114e33385858561309f565b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146115345760405163c51efddd60e01b815260040160405180910390fd5b611560338384846040518060200160405280600081525060405180602001604052806000815250612e99565b5050565b604051339060009061157c9083908690602001615619565b60405160208183030381529060405280519060200120905061159e8184613063565b6115bb5760405163dae1880960e01b815260040160405180910390fd5b6115c5818461339f565b60405184815233907f71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b9060200160405180910390a250505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611664573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061168891906157a6565b90506116948582612ac7565b91979096509094509092509050565b6001600160a01b038181166000908152602081905260409081902054905163c56a069d60e01b8152901960048201526060917f0000000000000000000000000000000000000000000000000000000000000000169063c56a069d90602401600060405180830381865afa15801561171e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fe891908101906157bf565b3360008181526010602090815260408083206001600160a01b03871684529091528120549091610fe491859061177d908690615870565b612de9565b3330146117a257604051630fff4cc960e31b815260040160405180910390fd5b6111558385848461309f565b600e80546117bb906154fe565b15905061180f5760405162461bcd60e51b815260206004820152601f60248201527f5375706572546f6b656e3a20616c726561647920696e697469616c697a65640060448201526064015b60405180910390fd5b60008390036118595760405162461bcd60e51b81526020600482015260166024820152755375706572546f6b656e3a20656d707479206e616d6560501b6044820152606401611806565b600d805460ff8716600160a01b026001600160a81b03199091166001600160a01b03891617179055600e61188e8486836158d1565b50600f61189c8284836158d1565b506118a6306133c0565b6040516000808252908190600080516020615eb9833981519152906020015b60405180910390a3505050505050565b61101a3333338460405180602001604052806000815250604051806020016040528060008152506134a8565b601f546201000090046001600160a01b03163314611932576040516338ebc58960e11b815260040160405180910390fd5b61101a81613665565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146119845760405163c51efddd60e01b815260040160405180910390fd5b6001600160a01b038084166000908152601060209081526040808320938616835292905220546119bd908490849061177d908590615870565b505050565b606060008585856040516020016119db939291906155d0565b6040516020818303038152906040528051906020012090506119fd8184613837565b9695505050505050565b6000610d406138c6565b7fe438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db990565b336000818152602080526040902060010154611a549190600b0b6138d9565b565b611aa73333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506134a8915050565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611af65760405163c51efddd60e01b815260040160405180910390fd5b6119bd838383612de9565b33611b0e6011828a613902565b611b2b5760405163f7f0222760e01b815260040160405180910390fd5b611ba58189898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250600192506139ab915050565b5050505050505050565b333014611af657604051630fff4cc960e31b815260040160405180910390fd5b606060008484604051602001611be6929190615619565b604051602081830303815290604052805190602001209050611c088184613837565b95945050505050565b600080611c1d83611600565b505050905060008112611c305780611c33565b60005b9392505050565b611c4381612aa8565b15611c61576040516319c00a8560e01b815260040160405180910390fd5b601f5460009081906201000090046001600160a01b03163314611c8657336000611c8a565b3060015b91509150611c9782612aa8565b158015611ca2575080155b15611cbf5760405162e67aa960e31b815260040160405180910390fd5b6001600160a01b0382166000908152602080526040812054349190611cf090600160c81b900463ffffffff166122a3565b601f546040519192506201000090046001600160a01b0316906108fc8315029083906000818181858888f19350505050158015611d31573d6000803e3d6000fd5b50611d3c8183615990565b6001600160a01b0385166000908152602080526040902054909250600160a01b900460ff1660041901611d825760405163a2c3d1a560e01b815260040160405180910390fd5b30600090815260208052604090208054600160a81b900463ffffffff16906015611dab836159a3565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038616600090815260208052604090208054600160c81b900490911691506019611df8836159a3565b825463ffffffff9182166101009390930a9283029190920219909116179055506001600160a01b038416600090815260208052604081205460ff600160a01b9091041690611e478260016159c6565b90506000611e7762015180611e6860ff851668270801d946c94000006159f5565b611e7291906159f5565b613a24565b9050600081611e95611e726201518068270801d946c94000006159f5565b611e9f9190615a09565b90506040518060a00160405280896001600160a01b031681526020018460ff168152602001600063ffffffff168152602001600063ffffffff16815260200183600b0b815250602060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160196101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160006101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555090505060008890505b611fe881612aa8565b15612179576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff1681601561201f836159a3565b825463ffffffff9182166101009390930a928302919092021990911617905550805460009060ff600160a01b9091041660011461207557620186a06120668561c350615a36565b6120709190615a56565b612077565b835b6001830180549192508291600090612093908490600b0b615a94565b92506101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555080846120c69190615a09565b60018301549094506120dc908490600b0b6138d9565b6001600160a01b038b8116600090815260208080526040808320543084529281902054815160ff600160a01b830416815263ffffffff600160a81b8304811694820194909452600160c81b909104909216908201528583169291909116907fb03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a79060600160405180910390a350546001600160a01b03169050611fdf565b6001600160a01b038a1660009081526020805260409020600101546121a49030908c90600b0b613a3a565b5086156121e3576040516001600160a01b038b169088156108fc029089906000818181858888f193505050501580156121e1573d6000803e3d6000fd5b505b50505050505050505050565b6000610fe8827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612253573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bbf91906157a6565b611560333384846040518060200160405280600081525060405180602001604052806000815250612e99565b6000600c8263ffffffff16116122c15750662386f26fc10000919050565b60188263ffffffff16116122de575067016345785d8a0000919050565b60248263ffffffff16116122fb57506702c68af0bb140000919050565b60308263ffffffff16116123185750670429d069189e0000919050565b603c8263ffffffff1611612335575067058d15e176280000919050565b50670de0b6b3a7640000919050565b3361235160118284613a59565b806001600160a01b0316826001600160a01b03167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a35050565b6060600f8054610d54906154fe565b601f54610100900460ff16158080156123c45750601f54600160ff909116105b806123e557506123d330613b5d565b1580156123e55750601f5460ff166001145b6124485760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611806565b601f805460ff19166001179055801561246b57601f805461ff0019166101001790555b801561101a57601f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b611aa73333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250600191506139ab9050565b33301461252857604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119bd91339186918691901515908690613b6c565b601f546201000090046001600160a01b0316331461257f576040516338ebc58960e11b815260040160405180910390fd5b6040805160008152602081019182905263c68d428360e01b909152309063c68d4283906125b39083908590602481016155a9565b600060405180830381600087803b1580156125cd57600080fd5b505af1158015611155573d6000803e3d6000fd5b60405133906000906125f99083908790602001615619565b60405160208183030381529060405280519060200120905061264e81858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612da892505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca8686866040516110f193929190615656565b61156033338361269a33611c11565b61309f565b6000610fe4338461177d856040518060600160405280602a8152602001615e8f602a91393360009081526010602090815260408083206001600160a01b038d1684529091529020549190613c2d565b6000611c333333858561309f565b60008060008061270c8686612ac7565b92509250925060006127348284116127255760006132fe565b61272f8385615990565b6132fe565b61273e90856156fc565b60001315979650505050505050565b6000610fe8827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156127b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf91906157a6565b3330146127f557604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119bd913391869186919015159081908790613c59565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128665760405163c51efddd60e01b815260040160405180910390fd5b6119bd838361177d846040518060600160405280602a8152602001615e8f602a91396001600160a01b03808a166000908152601060209081526040808320938c16835292905220549190613c2d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128fe5760405163c51efddd60e01b815260040160405180910390fd5b611aa733858585856040518060200160405280600081525060016139ab565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146129665760405163c51efddd60e01b815260040160405180910390fd5b6115603383848460405180602001604052806000815250604051806020016040528060008152506134a8565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906129de903390600401615064565b602060405180830381865afa1580156129fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1f9190615697565b612a3c5760405163327fd99160e21b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902054612a609082906156fc565b6001600160a01b0390921660009081526001602052604090209190915550565b6000611c3360118484613902565b600080612a9b8484612ac7565b5050600013949350505050565b6001600160a01b03908116600090815260208052604090205416151590565b6001600160a01b038216600090815260016020526040812054908080612aec866116a3565b905060005b8151811015612bed576000806000848481518110612b1157612b11615790565b60200260200101516001600160a01b0316639b2e48bc308c8c6040518463ffffffff1660e01b8152600401612b4893929190615ac1565b606060405180830381865afa158015612b65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b899190615ae5565b91945092509050612b9a8288615870565b9650612ba68187615870565b9550612bc3818311612bb95760006132fe565b61272f8284615990565b612bcd848a6156fc565b612bd79190615724565b975050505080612be690615777565b9050612af1565b50509250925092565b33612c0360118284613d27565b806001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a35050565b33612c5460118289613902565b612c715760405163f7f0222760e01b815260040160405180910390fd5b612ce88188898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250612e9992505050565b50505050505050565b6119bd3333338686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612e99915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612d9c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612d7e575b50505050509050919050565b60005b81518110156119bd576000828281518110612dc857612dc8615790565b6020026020010151905080828501555080612de290615777565b9050612dab565b6001600160a01b038316612e1057604051638163862760e01b815260040160405180910390fd5b6001600160a01b038216612e37576040516337c1c09d60e21b815260040160405180910390fd5b6001600160a01b0383811660008181526010602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600d546001600160a01b0316612ec257604051637bce7b2b60e11b815260040160405180910390fd5b600080612ece85613e1f565b91509150612ee58888838751600014158888613b6c565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612f16903090600401615064565b602060405180830381865afa158015612f33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f5791906157a6565b600d54909150612f71906001600160a01b03168885613edb565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612fa2903090600401615064565b602060405180830381865afa158015612fbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe391906157a6565b90506000612ff18284615990565b905080851461301357604051631c7c26d360e31b815260040160405180910390fd5b896001600160a01b03167f3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d8560405161304e91815260200190565b60405180910390a25050505050505050505050565b6000805b828110156130955783810154801561308457600192505050610fe8565b5061308e81615777565b9050613067565b5060009392505050565b60006001600160a01b0384166130c85760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0383166130ef5760405163e219bd3960e01b815260040160405180910390fd5b6000339050613120818686866040518060200160405280600081525060405180602001604052806000815250613f31565b846001600160a01b0316866001600160a01b0316146131b3576131b3858761177d866040518060600160405280602d8152602001615ed9602d9139601060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613c2d9092919063ffffffff16565b50600195945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132449190615b13565b604051638369a0f160e01b81529091506001600160a01b03821690638369a0f1906132b7907f00000000000000000000000000000000000000000000000000000000000000009030907f9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d0990600401615ac1565b602060405180830381865afa1580156132d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132f89190615b13565b91505090565b60006001600160ff1b038211156133685760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611806565b5090565b816001600160a01b0316836001600160a01b0316600080516020615eb983398151915283604051612e8c91815260200190565b60005b818110156119bd576000838201556133b981615777565b90506133a2565b6040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d9061341b9084907fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054903090600401615b30565b600060405180830381600087803b15801561343557600080fd5b505af1158015613449573d6000803e3d6000fd5b50506040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d91506125b39084907faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a903090600401615b30565b600d546001600160a01b03166134d157604051637bce7b2b60e11b815260040160405180910390fd5b6000806134dd85613e1f565b600d546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a0823190613516903090600401615064565b602060405180830381865afa158015613533573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061355791906157a6565b600d54909150613572906001600160a01b0316893086613fd0565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a08231906135a3903090600401615064565b602060405180830381865afa1580156135c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135e491906157a6565b905060006135f28383615990565b905080851461361457604051631c7c26d360e31b815260040160405180910390fd5b865161362a908c908b9087901515808c8c613c59565b886001600160a01b03167f25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df8560405161304e91815260200190565b600061366f6138c6565b6001600160a01b0316036136c55760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401611806565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613703573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061372791906157a6565b61372f611a11565b146137885760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401611806565b6001600160a01b03811630036137dc5760405162461bcd60e51b815260206004820152601960248201527805555505350726f786961626c653a2070726f7879206c6f6f7603c1b6044820152606401611806565b6137f281600080516020615e4f83398151915255565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc61381b611a11565b604080519182526001600160a01b0384166020830152016124a9565b6060816001600160401b0381111561385157613851614f01565b60405190808252806020026020018201604052801561387a578160200160208202803683370190505b50905060005b828110156138bf576000818501549050808383815181106138a3576138a3615790565b6020908102919091010152506138b881615777565b9050613880565b5092915050565b600080516020615e4f8339815191525490565b6138e4308084613ff1565b600b0b156138f7576119bd308383614089565b6119bd308383613a3a565b6000816001600160a01b0316836001600160a01b0316148061397157506001600160a01b038316600090815260018501602052604090205460ff16801561397157506001600160a01b03808316600090815260038601602090815260408083209387168352929052205460ff16155b806114e357506001600160a01b03808316600090815260028601602090815260408083209387168352929052205460ff1690509392505050565b6001600160a01b0386166139d25760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0385166139f95760405163e219bd3960e01b815260040160405180910390fd5b613a078787878787876140a8565b613a15878787878787613f31565b612ce8878787878787876141ba565b600060016001605f1b0382111561336857600080fd5b604080516000808252602082019092526114e390859085908590614309565b806001600160a01b0316826001600160a01b031603613ad05760405162461bcd60e51b815260206004820152602d60248201527f4552433737374f70657261746f72733a20617574686f72697a696e672073656c60448201526c331030b99037b832b930ba37b960991b6064820152608401611806565b6001600160a01b038116600090815260018401602052604090205460ff1615613b26576001600160a01b03918216600090815260039390930160209081526040808520929093168452529020805460ff19169055565b6001600160a01b0380831660009081526002850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03163b151590565b6001600160a01b038516613b9357604051632e8aac6160e21b815260040160405180910390fd5b8215613ba857613ba8868660008786866140a8565b613bb28585614434565b846001600160a01b0316866001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098868585604051613bf993929190615b53565b60405180910390a36040518481526000906001600160a01b03871690600080516020615eb9833981519152906020016118c5565b60008184841115613c515760405162461bcd60e51b81526004016118069190614c19565b505050900390565b6001600160a01b038616613c8057604051630d24315760e01b815260040160405180910390fd5b613c8a8686614544565b8315613ca057613ca087600088888686896141ba565b856001600160a01b0316876001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d878585604051613ce793929190615b53565b60405180910390a36040518581526001600160a01b03871690600090600080516020615eb98339815191529060200160405180910390a350505050505050565b336001600160a01b03821603613d925760405162461bcd60e51b815260206004820152602a60248201527f4552433737374f70657261746f72733a207265766f6b696e672073656c662061604482015269399037b832b930ba37b960b11b6064820152608401611806565b6001600160a01b038116600090815260018401602052604090205460ff1615613dec576001600160a01b0380831660009081526003850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03918216600090815260029390930160209081526040808520929093168452529020805460ff19169055565b600d54600090819081906012600160a01b90910460ff161015613e7e57600d54613e5490600160a01b900460ff166012615b7e565b613e5f90600a615c7b565b9050613e6b81856159f5565b9250613e778184615c8a565b9150613ed5565b600d546012600160a01b90910460ff161115613ece57600d54613ead90601290600160a01b900460ff16615b7e565b613eb890600a615c7b565b9050613ec48185615c8a565b9250839150613ed5565b8391508192505b50915091565b6119bd8363a9059cbb60e01b8484604051602401613efa929190615ca1565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261459e565b613f448585613f3f866132fe565b614673565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987868686604051613f9593929190615b53565b60405180910390a4836001600160a01b0316856001600160a01b0316600080516020615eb9833981519152856040516118c591815260200190565b611aa7846323b872dd60e01b858585604051602401613efa93929190615ac1565b600080613ffd85614772565b604051631cd43d1160e31b81526001600160a01b03888116600483015287811660248301528681166044830152919350908316915063e6a1e88890606401608060405180830381865afa158015614058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061407c9190615cba565b5090979650505050505050565b604080516000808252602082019092526114e3908590859085906148bd565b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906141049089907f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89590600401615ca1565b602060405180830381865afa158015614121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141459190615b13565b90506001600160a01b03811615612ce857604051633ad5cbc160e11b81526001600160a01b038216906375ab97829061418c908a908a908a908a908a908a90600401615cfe565b600060405180830381600087803b1580156141a657600080fd5b505af11580156121e1573d6000803e3d6000fd5b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca906142169089907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b90600401615ca1565b602060405180830381865afa158015614233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142579190615b13565b90506001600160a01b038116156142d3576040516223de2960e01b81526001600160a01b038216906223de299061429c908b908b908b908b908b908b90600401615cfe565b600060405180830381600087803b1580156142b657600080fd5b505af11580156142ca573d6000803e3d6000fd5b50505050611ba5565b8115611ba5576142eb866001600160a01b0316613b5d565b15611ba55760405163fe737d0560e01b815260040160405180910390fd5b60008060006143178761490a565b91509150816001600160a01b03166339255d5b82836001600160a01b03166362fc305e8b8b8b60006001600160401b0381111561435657614356614f01565b6040519080825280601f01601f191660200182016040528015614380576020820181803683370190505b506040516024016143949493929190615d4b565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b03191682526143df939250908990600401615d81565b6000604051808303816000875af11580156143fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526144269190810190615da5565b506001979650505050505050565b60006144bc837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614498573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4591906157a6565b505090506144c9826132fe565b8112156144e95760405163043b37d160e21b815260040160405180910390fd5b6144f2826132fe565b6001600160a01b0384166000908152600160205260409020546145159190615724565b6001600160a01b03841660009081526001602052604090205560025461453c908390615990565b600255505050565b61454d816132fe565b6001600160a01b03831660009081526001602052604090205461457091906156fc565b6001600160a01b038316600090815260016020526040902055600254614597908290615870565b6002555050565b60006145f3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a5b9092919063ffffffff16565b90508051600014806146145750808060200190518101906146149190615697565b6119bd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611806565b60006146d7847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015614498573d6000803e3d6000fd5b50509050818112156146fc57604051632f4cb94160e01b815260040160405180910390fd5b6001600160a01b038416600090815260016020526040902054614720908390615724565b6001600160a01b0380861660009081526001602052604080822093909355908516815220546147509083906156fc565b6001600160a01b03909316600090815260016020526040902092909255505050565b600080516020615f0683398151915254600080516020615e6f833981519152546001600160a01b03811661488c576001600160a01b03821661481357826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156147ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148109190615b13565b91505b604051635b69006f60e11b8152600080516020615e2f83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614865573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148899190615b13565b90505b6001600160a01b0382166148a2576148a26156e6565b6001600160a01b0381166148b8576148b86156e6565b915091565b60008060006148cb8761490a565b91509150816001600160a01b03166339255d5b82836001600160a01b03166350209a628b8b8b60006001600160401b0381111561435657614356614f01565b600080516020615f0683398151915254600080516020615e6f833981519152546001600160a01b03811661488c576001600160a01b0382166149ab57826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614984573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149a89190615b13565b91505b604051635b69006f60e11b8152600080516020615e2f83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa1580156149fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a219190615b13565b905081600080516020615f068339815191525580600080516020615e6f833981519152556001600160a01b0382166148a2576148a26156e6565b60606114e3848460008585600080866001600160a01b03168587604051614a829190615e12565b60006040518083038185875af1925050503d8060008114614abf576040519150601f19603f3d011682016040523d82523d6000602084013e614ac4565b606091505b5091509150614ad587838387614ae0565b979650505050505050565b60608315614b4d578251600003614b4657614afa85613b5d565b614b465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611806565b50816114e3565b6114e38383815115614b625781518083602001fd5b8060405162461bcd60e51b81526004016118069190614c19565b6020808252825182820181905260009190848201906040850190845b81811015614bbd5783516001600160a01b031683529284019291840191600101614b98565b50909695505050505050565b60005b83811015614be4578181015183820152602001614bcc565b50506000910152565b60008151808452614c05816020860160208601614bc9565b601f01601f19169290920160200192915050565b602081526000611c336020830184614bed565b60008083601f840112614c3e57600080fd5b5081356001600160401b03811115614c5557600080fd5b602083019150836020828501011115614c6d57600080fd5b9250929050565b6001600160a01b038116811461101a57600080fd5b600080600080600060608688031215614ca157600080fd5b85356001600160401b0380821115614cb857600080fd5b614cc489838a01614c2c565b90975095506020880135915080821115614cdd57600080fd5b50614cea88828901614c2c565b9094509250506040860135614cfe81614c74565b809150509295509295909350565b60008083601f840112614d1e57600080fd5b5081356001600160401b03811115614d3557600080fd5b6020830191508360208260051b8501011115614c6d57600080fd5b60008060008060608587031215614d6657600080fd5b8435614d7181614c74565b93506020850135925060408501356001600160401b03811115614d9357600080fd5b614d9f87828801614d0c565b95989497509550505050565b60008060408385031215614dbe57600080fd5b8235614dc981614c74565b946020939093013593505050565b600060208284031215614de957600080fd5b8135611c3381614c74565b80516001600160a01b0316825260208082015160ff169083015260408082015163ffffffff9081169184019190915260608083015190911690830152608090810151600b0b910152565b60a08101610fe88284614df4565b600060208284031215614e5e57600080fd5b5035919050565b600080600060408486031215614e7a57600080fd5b8335925060208401356001600160401b03811115614e9757600080fd5b614ea386828701614d0c565b9497909650939450505050565b60008060008060808587031215614ec657600080fd5b8435614ed181614c74565b93506020850135614ee181614c74565b92506040850135614ef181614c74565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614f3f57614f3f614f01565b604052919050565b60006001600160401b03821115614f6057614f60614f01565b50601f01601f191660200190565b600082601f830112614f7f57600080fd5b8135614f92614f8d82614f47565b614f17565b818152846020838601011115614fa757600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461101a57600080fd5b600080600080600080600060e0888a031215614fed57600080fd5b8735965060208801356001600160401b0381111561500a57600080fd5b6150168a828b01614f6e565b965050604088013561502781614c74565b9450606088013561503781614fc4565b9350608088013561504781614c74565b9699959850939692959460a0840135945060c09093013592915050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015614bbd576150a7838551614df4565b9284019260a09290920191600101615094565b6000806000606084860312156150cf57600080fd5b83356150da81614c74565b925060208401356150ea81614c74565b929592945050506040919091013590565b6000806040838503121561510e57600080fd5b50508035926020909101359150565b6000806000806000806080878903121561513657600080fd5b863561514181614c74565b9550602087013560ff8116811461515757600080fd5b945060408701356001600160401b038082111561517357600080fd5b61517f8a838b01614c2c565b9096509450606089013591508082111561519857600080fd5b506151a589828a01614c2c565b979a9699509497509295939492505050565b600080600080608085870312156151cd57600080fd5b84356151d881614c74565b935060208501356151e881614c74565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015614bbd57835183529284019291840191600101615219565b6000806000806060858703121561524b57600080fd5b843561525681614c74565b93506020850135925060408501356001600160401b0381111561527857600080fd5b614d9f87828801614c2c565b600080600080600080600060a0888a03121561529f57600080fd5b87356152aa81614c74565b965060208801356152ba81614c74565b95506040880135945060608801356001600160401b03808211156152dd57600080fd5b6152e98b838c01614c2c565b909650945060808a013591508082111561530257600080fd5b5061530f8a828b01614c2c565b989b979a50959850939692959293505050565b60008060006060848603121561533757600080fd5b833561534281614c74565b95602085013595506040909401359392505050565b60006020828403121561536957600080fd5b813563ffffffff81168114611c3357600080fd5b60008060006060848603121561539257600080fd5b833561539d81614c74565b92506020840135915060408401356001600160401b038111156153bf57600080fd5b6153cb86828701614f6e565b9150509250925092565b600080600080608085870312156153eb57600080fd5b84356153f681614c74565b9350602085013561540681614c74565b92506040850135915060608501356001600160401b0381111561542857600080fd5b61543487828801614f6e565b91505092959194509250565b6000806040838503121561545357600080fd5b823561545e81614c74565b9150602083013561546e81614c74565b809150509250929050565b6000806000806000806080878903121561549257600080fd5b863561549d81614c74565b95506020870135945060408701356001600160401b038082111561517357600080fd5b6000806000604084860312156154d557600080fd5b8335925060208401356001600160401b038111156154f257600080fd5b614ea386828701614c2c565b600181811c9082168061551257607f821691505b6020821081036114cf57634e487b7160e01b600052602260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff861660208201526080604082018190526000906155899083018688615532565b828103606084015261559c818587615532565b9998505050505050505050565b60018060a01b0384168152826020820152606060408201526000611c086060830184614bed565b6080808252600e908201526d41677265656d656e74537461746560901b60a08201526001600160a01b039384166020820152919092166040820152606081019190915260c00190565b6060808252600d908201526c41677265656d656e744461746160981b60808201526001600160a01b03929092166020830152604082015260a00190565b838152604060208201819052810182905260006001600160fb1b0383111561567d57600080fd5b8260051b8085606085013791909101606001949350505050565b6000602082840312156156a957600080fd5b8151611c3381614fc4565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b82016156df576156df6156b4565b5060000390565b634e487b7160e01b600052600160045260246000fd5b808201828112600083128015821682158216171561571c5761571c6156b4565b505092915050565b81810360008312801583831316838312821617156138bf576138bf6156b4565b85815260018060a01b038516602082015283604082015282606082015260a060808201526000614ad560a0830184614bed565b600060018201615789576157896156b4565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156157b857600080fd5b5051919050565b600060208083850312156157d257600080fd5b82516001600160401b03808211156157e957600080fd5b818501915085601f8301126157fd57600080fd5b81518181111561580f5761580f614f01565b8060051b9150615820848301614f17565b818152918301840191848101908884111561583a57600080fd5b938501935b83851015615864578451925061585483614c74565b828252938501939085019061583f565b98975050505050505050565b80820180821115610fe857610fe86156b4565b601f8211156119bd57600081815260208120601f850160051c810160208610156158aa5750805b601f850160051c820191505b818110156158c9578281556001016158b6565b505050505050565b6001600160401b038311156158e8576158e8614f01565b6158fc836158f683546154fe565b83615883565b6000601f84116001811461593057600085156159185750838201355b600019600387901b1c1916600186901b178355611155565b600083815260209020601f19861690835b828110156159615786850135825560209485019460019092019101615941565b508682101561597e5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81810381811115610fe857610fe86156b4565b600063ffffffff8083168181036159bc576159bc6156b4565b6001019392505050565b60ff8181168382160190811115610fe857610fe86156b4565b634e487b7160e01b600052601260045260246000fd5b600082615a0457615a046159df565b500490565b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610fe857610fe86156b4565b600082600b0b82600b0b0280600b0b91508082146138bf576138bf6156b4565b600081600b0b83600b0b80615a6d57615a6d6159df565b60016001605f1b0319821460001982141615615a8b57615a8b6156b4565b90059392505050565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610fe857610fe86156b4565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080600060608486031215615afa57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215615b2557600080fd5b8151611c3381614c74565b6001600160a01b0393841681526020810192909252909116604082015260600190565b838152606060208201526000615b6c6060830185614bed565b82810360408401526119fd8185614bed565b60ff8281168282160390811115610fe857610fe86156b4565b600181815b80851115615bd2578160001904821115615bb857615bb86156b4565b80851615615bc557918102915b93841c9390800290615b9c565b509250929050565b600082615be957506001610fe8565b81615bf657506000610fe8565b8160018114615c0c5760028114615c1657615c32565b6001915050610fe8565b60ff841115615c2757615c276156b4565b50506001821b610fe8565b5060208310610133831016604e8410600b8410161715615c55575081810a610fe8565b615c5f8383615b97565b8060001904821115615c7357615c736156b4565b029392505050565b6000611c3360ff841683615bda565b8082028115828204841417610fe857610fe86156b4565b6001600160a01b03929092168252602082015260400190565b60008060008060808587031215615cd057600080fd5b84519350602085015180600b0b8114615ce857600080fd5b6040860151606090960151949790965092505050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c060808201819052600090615d3990830185614bed565b82810360a084015261559c8185614bed565b6001600160a01b03858116825284166020820152600b83900b60408201526080606082018190526000906119fd90830184614bed565b6001600160a01b0384168152606060208201819052600090615b6c90830185614bed565b600060208284031215615db757600080fd5b81516001600160401b03811115615dcd57600080fd5b8201601f81018413615dde57600080fd5b8051615dec614f8d82614f47565b818152856020838501011115615e0157600080fd5b611c08826020830160208601614bc9565b60008251615e24818460208701614bc9565b919091019291505056fea9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a5375706572546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5375706572546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837a2646970667358221220df4c511b6ef82aefe07e06e7fa5e77d562695cab69a60734f48bce58e4f945dd64736f6c63430008130033",
    "sourceMap": "589:7132:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16132:151:60;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4604:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1545:304:57:-;;;;;;;;;;-1:-1:-1;1545:304:57;;;;;:::i;:::-;;:::i;:::-;;9255:378:51;;;;;;;;;;-1:-1:-1;9255:378:51;;;;;:::i;:::-;;:::i;14063:164:60:-;;;;;;;;;;-1:-1:-1;14063:164:60;;;;;:::i;:::-;;:::i;:::-;;;4285:14:61;;4278:22;4260:41;;4248:2;4233:18;14063:164:60;4120:187:61;2090:142:57;;;;;;;;;;-1:-1:-1;2090:142:57;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:17:57;;;;;;;:8;:17;;;;;;;;2201:24;;;;;;;;;;;;;;;-1:-1:-1;;;2201:24:57;;;;;;;;;;;-1:-1:-1;;;2201:24:57;;;;;;;;;;;-1:-1:-1;;;2201:24:57;;;;;;;;;;;;;;;;;;;;;;2090:142;;;;;;;;:::i;19304:140:60:-;;;;;;;;;;-1:-1:-1;19304:140:60;;;;;:::i;:::-;;:::i;7322:481:51:-;;;;;;;;;;-1:-1:-1;7322:481:51;;;;;:::i;:::-;;:::i;23871:238:60:-;;;;;;;;;;-1:-1:-1;23871:238:60;;;;;:::i;:::-;;:::i;13311:106::-;;;;;;;;;;-1:-1:-1;13398:12:60;;13311:106;;;6724:25:61;;;6712:2;6697:18;13311:106:60;6578:177:61;10460:2526:51;;;;;;;;;;-1:-1:-1;10460:2526:51;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:51;1696:144;;;;;;;:::i;2301:329:57:-;;;;;;;;;;-1:-1:-1;2301:329:57;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14233:188:60:-;;;;;;;;;;-1:-1:-1;14233:188:60;;;;;:::i;:::-;;:::i;24543:169::-;;;;;;;;;;-1:-1:-1;24543:169:60;;;;;:::i;:::-;;:::i;8709:474:51:-;;;;;;;;;;-1:-1:-1;8709:474:51;;;;;:::i;:::-;;:::i;3511:428::-;;;;;;;;;;-1:-1:-1;3511:428:51;;;;;:::i;:::-;;:::i;:::-;;;;10757:25:61;;;10813:2;10798:18;;10791:34;;;;10841:18;;;10834:34;10899:2;10884:18;;10877:34;10744:3;10729:19;3511:428:51;10528:389:61;4820:109:60;;;;;;;;;;-1:-1:-1;4820:109:60;;1425:2;11064:36:61;;11052:2;11037:18;4820:109:60;10922:184:61;5252:218:51;;;;;;;;;;-1:-1:-1;5252:218:51;;;;;:::i;:::-;;:::i;14427:217:60:-;;;;;;;;;;-1:-1:-1;14427:217:60;;;;;:::i;:::-;;:::i;18117:231::-;;;;;;;;;;-1:-1:-1;18117:231:60;;;;;:::i;:::-;;:::i;3920:623::-;;;;;;;;;;-1:-1:-1;3920:623:60;;;;;:::i;:::-;;:::i;18883:136::-;;;;;;;;;;-1:-1:-1;18883:136:60;;;;;:::i;:::-;;:::i;7185:129:57:-;;;;;;;;;;-1:-1:-1;7185:129:57;;;;;:::i;:::-;;:::i;23258:248:60:-;;;;;;;;;;-1:-1:-1;23258:248:60;;;;;:::i;:::-;;:::i;9702:391:51:-;;;;;;;;;;-1:-1:-1;9702:391:51;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:60:-;;;;;;;;;;;;;;;400:122:52;;;;;;;;;;;;;:::i;7018:161:57:-;;;;;;;;;;;;;:::i;15034:97:60:-;;;;;;;;;;-1:-1:-1;15123:1:60;15034:97;;6149:121:57;;;;;;;;;;;;;:::i;19075:173:60:-;;;;;;;;;;-1:-1:-1;19075:173:60;;;;;:::i;:::-;;:::i;23090:162::-;;;;;;;;;;-1:-1:-1;23090:162:60;;;;;:::i;:::-;;:::i;16289:440::-;;;;;;;;;;-1:-1:-1;16289:440:60;;;;;:::i;:::-;;:::i;17951:160::-;;;;;;;;;;-1:-1:-1;17951:160:60;;;;;:::i;:::-;;:::i;7871:338:51:-;;;;;;;;;;-1:-1:-1;7871:338:51;;;;;:::i;:::-;;:::i;13423:297:60:-;;;;;;;;;;-1:-1:-1;13423:297:60;;;;;:::i;:::-;;:::i;3207:2884:57:-;;;;;;:::i;:::-;;:::i;4231:201:51:-;;;;;;;;;;-1:-1:-1;4231:201:51;;;;;:::i;:::-;;:::i;19482:146:60:-;;;;;;;;;;-1:-1:-1;19482:146:60;;;;;:::i;:::-;;:::i;6324:517:57:-;;;;;;;;;;-1:-1:-1;6324:517:57;;;;;:::i;:::-;;:::i;1122:20::-;;;;;;;;;;-1:-1:-1;1122:20:57;;;;;;;-1:-1:-1;;;;;1122:20:57;;;15685:222:60;;;;;;;;;;-1:-1:-1;15685:222:60;;;;;:::i;:::-;;:::i;4710:104::-;;;;;;;;;;;;;:::i;731:44:52:-;;;;;;;;;;;;;:::i;15137:185:60:-;;;;;;;;;;-1:-1:-1;15137:185:60;;;;;:::i;:::-;;:::i;17722:223::-;;;;;;;;;;-1:-1:-1;17722:223:60;;;;;:::i;:::-;;:::i;6896:116:57:-;;;;;;;;;;-1:-1:-1;6896:116:57;;;;;:::i;:::-;;:::i;8280:359:51:-;;;;;;;;;;-1:-1:-1;8280:359:51;;;;;:::i;:::-;;:::i;18419:154:60:-;;;;;;;;;;-1:-1:-1;18419:154:60;;;;;:::i;:::-;;:::i;14650:322::-;;;;;;;;;;-1:-1:-1;14650:322:60;;;;;:::i;:::-;;:::i;13726:172::-;;;;;;;;;;-1:-1:-1;13726:172:60;;;;;:::i;:::-;;:::i;973:49:57:-;;;;;;;;;;;;1021:1;973:49;;4438:533:51;;;;;;;;;;-1:-1:-1;4438:533:51;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:51;;;;;:::i;:::-;;:::i;17351:365:60:-;;;;;;;;;;-1:-1:-1;17351:365:60;;;;;:::i;:::-;;:::i;23512:353::-;;;;;;;;;;-1:-1:-1;23512:353:60;;;;;:::i;:::-;;:::i;24115:251::-;;;;;;;;;;-1:-1:-1;24115:251:60;;;;;:::i;:::-;;:::i;24372:165::-;;;;;;;;;;-1:-1:-1;24372:165:60;;;;;:::i;:::-;;:::i;10158:226:51:-;;;;;;;;;;-1:-1:-1;10158:226:51;;;;;:::i;:::-;;:::i;15500:179:60:-;;;;;;;;;;-1:-1:-1;15500:179:60;;;;;:::i;:::-;;:::i;3945:280:51:-;;;;;;;;;;-1:-1:-1;3945:280:51;;;;;:::i;:::-;;:::i;13904:153:60:-;;;;;;;;;;-1:-1:-1;13904:153:60;;;;;:::i;:::-;-1:-1:-1;;;;;14021:20:60;;;13995:7;14021:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13904:153;1909:135:57;;;;;;;;;;-1:-1:-1;1909:135:57;;;;;:::i;:::-;;:::i;2105:1334:51:-;;;;;;;;;;-1:-1:-1;2105:1334:51;;;;;:::i;:::-;;:::i;:::-;;;;19154:25:61;;;19210:2;19195:18;;19188:34;;;;19238:18;;;19231:34;19142:2;19127:18;2105:1334:51;18954:317:61;18701:128:60;;;;;;;;;;-1:-1:-1;18805:16:60;;-1:-1:-1;;;;;18805:16:60;18701:128;;1486:57;;;;;;;;;;;;;;;1028:64:57;;;;;;;;;;;;1083:9;1028:64;;15913:213:60;;;;;;;;;;-1:-1:-1;15913:213:60;;;;;:::i;:::-;;:::i;16735:403::-;;;;;;;;;;-1:-1:-1;16735:403:60;;;;;:::i;:::-;;:::i;15328:166::-;;;;;;;;;;-1:-1:-1;15328:166:60;;;;;:::i;:::-;;:::i;16132:151::-;16200:16;16235:41;16265:10;16235:29;:41::i;:::-;16228:48;;16132:151;:::o;4604:100::-;4660:13;4692:5;4685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:100;:::o;1545:304:57:-;1655:5;:16;;-1:-1:-1;;;;;;1655:16:57;;-1:-1:-1;;;;;1655:16:57;;;;;;1681:15;;;-1:-1:-1;;;1681:15:57;;;;:4;;:13;;:15;;;;;-1:-1:-1;;1681:15:57;;;;;;;-1:-1:-1;1681:4:57;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1706:52:57;;-1:-1:-1;;;1706:52:57;;:4;;-1:-1:-1;1706:15:57;;-1:-1:-1;1706:52:57;;1737:1;;;;1745:4;;;;1751:6;;;;1706:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1829:12:57;;;1839:1;1829:12;;;;;;;;;-1:-1:-1;;;1768:74:57;;;:4;;-1:-1:-1;1768:13:57;;-1:-1:-1;1768:74:57;;:4;;-1:-1:-1;;;1797:30:57;1768:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:304;;;;;:::o;9255:378:51:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:51;;-1:-1:-1;;;9522:39:51:i;:::-;9576:50;;6724:25:61;;;-1:-1:-1;;;;;9576:50:51;;;9598:10;;9576:50;;6712:2:61;6697:18;9576:50:51;;;;;;;9419:214;9255:378;;;;:::o;14063:164:60:-;14146:4;14162:37;14171:10;14183:7;14192:6;14162:8;:37::i;:::-;-1:-1:-1;14216:4:60;14063:164;;;;;:::o;19304:140::-;19375:62;19386:10;19398;19410;19422:6;19375:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19304:140;:::o;7322:481:51:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:51;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:51;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:51;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:51;;-1:-1:-1;;;7704:35:51:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:51;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23871:238:60:-;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;24052:50:60::1;24066:7;24075;24084:9;24095:6;24052:13;:50::i;:::-;;23871:238:::0;;;;:::o;10460:2526:51:-;13208:57;;-1:-1:-1;;;13208:57:51;;-1:-1:-1;;;;;13208:5:51;:28;;;;:57;;13253:10;;13208:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:51;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:51;::::1;11281:91;;-1:-1:-1::0;11344:17:51;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:51;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:51;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:51::1;::::0;-1:-1:-1;11879:13:51;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:51;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:51::1;::::0;-1:-1:-1;12395:12:51;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:51;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:51;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:51::1;::::0;-1:-1:-1;12539:13:51;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:51::1;12793:17;-1:-1:-1::0;;;;;12718:261:51::1;12753:10;-1:-1:-1::0;;;;;12718:261:51::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2301:329:57:-;2410:41;2467:9;2490:134;2497:18;2507:7;2497:9;:18::i;:::-;2490:134;;;-1:-1:-1;;;;;2547:17:57;;;;;;;:8;:17;;;;;;;;2531:33;;;;;;;;;;;;;;;-1:-1:-1;;;2531:33:57;;;;;;;;;;;-1:-1:-1;;;2531:33:57;;;;;;;;;;;-1:-1:-1;;;2531:33:57;;;;;;;;;;;;;;;;;;;;;:8;2540:3;;;;:::i;:::-;;;2531:13;;;;;;;;:::i;:::-;;;;;;;;;;;:33;;;;-1:-1:-1;;;;;2588:17:57;;;;;;;;;;;;;:25;;;;;2490:134;;;2457:173;2301:329;;;:::o;14233:188:60:-;14339:4;14362:52;14376:10;14388:6;14396:9;14407:6;14362:13;:52::i;:::-;14355:59;14233:188;-1:-1:-1;;;;14233:188:60:o;24543:169::-;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;24649:56:60::1;24660:10;24672:7;24681;24690:6;24649:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24543:169:::0;;:::o;8709:474:51:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:51;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6724:25:61;;;9161:10:51;;9141:35;;6712:2:61;6697:18;9141:35:51;;;;;;;8826:357;;8709:474;;:::o;3511:428::-;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:51;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:51;;-1:-1:-1;3511:428:51;;-1:-1:-1;3511:428:51;-1:-1:-1;3511:428:51:o;5252:218::-;-1:-1:-1;;;;;5429:33:51;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:51;;5428:34;;5402:61;;;6724:25:61;5356:24:51;;5402:5;:25;;;;6697:18:61;;5402:61:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:51;;;;;;;;;;;;:::i;14427:217:60:-;14549:10;14524:4;14570:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14570:32:60;;;;;;;;;;14524:4;;14540:76;;14561:7;;14570:45;;14605:10;;14570:45;:::i;:::-;14540:8;:76::i;18117:231::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:60;;;;;;;;;;;24796:63;18292:49:::1;18306:7;18315:6;18323:9;18334:6;18292:13;:49::i;3920:623::-:0;4090:5;4084:19;;;;;:::i;:::-;:24;;-1:-1:-1;4076:68:60;;;;-1:-1:-1;;;4076:68:60;;27999:2:61;4076:68:60;;;27981:21:61;28038:2;28018:18;;;28011:30;28077:33;28057:18;;;28050:61;28128:18;;4076:68:60;;;;;;;;;4181:1;4162:20;;;4154:55;;;;-1:-1:-1;;;4154:55:60;;28359:2:61;4154:55:60;;;28341:21:61;28398:2;28378:18;;;28371:30;-1:-1:-1;;;28417:18:61;;;28410:52;28479:18;;4154:55:60;28157:346:61;4154:55:60;4219:16;:34;;4263:40;;;-1:-1:-1;;;4263:40:60;-1:-1:-1;;;;;;4263:40:60;;;-1:-1:-1;;;;;4219:34:60;;4263:40;;;;4314:5;:9;4322:1;;4314:5;:9;:::i;:::-;-1:-1:-1;4333:7:60;:11;4343:1;;4333:7;:11;:::i;:::-;;4386:36;4416:4;4386:21;:36::i;:::-;4501:35;;4530:1;6724:25:61;;;4530:1:60;;;-1:-1:-1;;;;;;;;;;;4501:35:60;6712:2:61;6697:18;4501:35:60;;;;;;;;3920:623;;;;;;:::o;18883:136::-;18952:60;18961:10;18973;18985;18997:6;18952:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;7185:129:57:-;883:5;;;;;-1:-1:-1;;;;;883:5:57;869:10;:19;865:68;;911:11;;-1:-1:-1;;;911:11:57;;;;;;;;;;;865:68;7263:44:::1;7296:10;7263:32;:44::i;23258:248:60:-:0;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23456:20:60;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23429:70:::1;::::0;23438:7;;23447;;23456:42:::1;::::0;23488:10;;23456:42:::1;:::i;23429:70::-;23258:248:::0;;;:::o;9702:391:51:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:51:o;400:122:52:-;447:19;489:26;:24;:26::i;7018:161:57:-;7107:65;;7018:161::o;6149:121::-;6214:10;6226:20;;;;:8;:20;;;;;:36;;;6192:71;;6214:10;6226:36;;6192:21;:71::i;:::-;6149:121::o;19075:173:60:-;19183:58;19192:10;19204;19216:2;19220:6;19228:8;;19183:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19183:58:60;;;;;;;;;;;;;-1:-1:-1;19183:8:60;;-1:-1:-1;;19183:58:60:i;:::-;19075:173;;;;:::o;23090:162::-;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;23211:34:60::1;23220:7;23229;23238:6;23211:8;:34::i;16289:440::-:0;16517:10;16542:42;:10;16517;16577:6;16542:24;:42::i;:::-;16537:103;;16593:47;;-1:-1:-1;;;16593:47:60;;;;;;;;;;;16537:103;16650:72;16656:8;16666:6;16674:9;16685:6;16693:8;;16650:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16650:72:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16703:12:60;;-1:-1:-1;16703:12:60;;;;16650:72;;16703:12;;;;16650:72;;;;;;;;;-1:-1:-1;16717:4:60;;-1:-1:-1;16650:5:60;;-1:-1:-1;;16650:72:60:i;:::-;16488:241;16289:440;;;;;;;:::o;17951:160::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:60;;;;;;;;;;;7871:338:51;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:51:o;13423:297:60:-;13497:15;13579:23;13609:35;13636:7;13609:26;:35::i;:::-;13578:66;;;;;13680:1;13661:16;:20;:52;;13696:16;13661:52;;;13684:1;13661:52;13654:59;13423:297;-1:-1:-1;;;13423:297:60:o;3207:2884:57:-;3292:21;3302:10;3292:9;:21::i;:::-;3288:76;;;3336:17;;-1:-1:-1;;;3336:17:57;;;;;;;;;;;3288:76;3480:5;;3426:21;;;;3480:5;;;-1:-1:-1;;;;;3480:5:57;3466:10;:19;3465:67;;3514:10;3526:5;3465:67;;;3498:4;3505;3465:67;3425:107;;;;3588:24;3598:13;3588:9;:24::i;:::-;3587:25;:37;;;;;3617:7;3616:8;3587:37;3583:88;;;3647:13;;-1:-1:-1;;;3647:13:57;;;;;;;;;;;3583:88;-1:-1:-1;;;;;3745:23:57;;3681:18;3745:23;;;:8;:23;;;;;:47;3702:9;;3681:18;3741:52;;-1:-1:-1;;;3745:47:57;;;;3741:3;:52::i;:::-;3811:5;;3803:34;;3721:72;;-1:-1:-1;3811:5:57;;;-1:-1:-1;;;;;3811:5:57;;3803:34;;;;;3721:72;;3803:34;;;;3721:72;3811:5;3803:34;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3848:23:57;3862:9;3848:23;;:::i;:::-;-1:-1:-1;;;;;3885:23:57;;;;;;:8;:23;;;;;:29;3848:23;;-1:-1:-1;;;;3885:29:57;;;;-1:-1:-1;;3885:54:57;3881:123;;3962:31;;-1:-1:-1;;;3962:31:57;;;;;;;;;;;3881:123;4095:4;4078:23;;;;:8;:23;;;;;:43;;-1:-1:-1;;;4078:43:57;;;;;:41;:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4132:23:57;;-1:-1:-1;4132:23:57;;;:8;:23;;;;;:49;;-1:-1:-1;;;4132:49:57;;;;;;-1:-1:-1;4132:47:57;:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4218:23:57;;-1:-1:-1;4218:23:57;;;:8;:23;;;;;:29;;-1:-1:-1;;;4218:29:57;;;;;4271:22;4218:29;-1:-1:-1;4271:22:57;:::i;:::-;4257:36;-1:-1:-1;4303:28:57;4334:55;4383:5;4343:36;;;;1083:9;4343:36;:::i;:::-;4342:46;;;;:::i;:::-;4334:7;:55::i;:::-;4303:86;-1:-1:-1;4458:25:57;4303:86;4486:47;4495:36;4526:5;1083:9;4495:36;:::i;4486:47::-;:72;;;;:::i;:::-;4458:100;;4591:208;;;;;;;;4622:13;-1:-1:-1;;;;;4591:208:57;;;;;4656:5;4591:208;;;;;;4694:1;4591:208;;;;;;4734:1;4591:208;;;;;;4766:22;4591:208;;;;;4568:8;:20;4577:10;-1:-1:-1;;;;;4568:20:57;-1:-1:-1;;;;;4568:20:57;;;;;;;;;;;;:231;;;;;;;;;;;;;-1:-1:-1;;;;;4568:231:57;;;;;-1:-1:-1;;;;;4568:231:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4568:231:57;;;;;;;-1:-1:-1;;;;;4568:231:57;;;;;;;;;4810:9;4822:13;4810:25;;4845:957;4852:12;4862:1;4852:9;:12::i;:::-;4845:957;;;-1:-1:-1;;;;;4948:11:57;;4913:32;4948:11;;;:8;:11;;;;;4973:36;;-1:-1:-1;;;4973:36:57;;;;4948:11;4973:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5070:22:57;;-1:-1:-1;;5070:22:57;-1:-1:-1;;;5070:22:57;;;;-1:-1:-1;5070:27:57;:90;;5154:6;5123:27;:19;5145:5;5123:27;:::i;:::-;5122:38;;;;:::i;:::-;5070:90;;;5100:19;5070:90;5174:32;;;:58;;5023:137;;-1:-1:-1;5023:137:57;;5174:32;;:58;;5023:137;;5174:58;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5174:58:57;;;;;;;-1:-1:-1;;;;;5174:58:57;;;;;;5269:22;5246:45;;;;;:::i;:::-;5400:32;;;;5246:45;;-1:-1:-1;5375:58:57;;5397:1;;5400:32;;5375:21;:58::i;:::-;-1:-1:-1;;;;;5486:23:57;;;;;;;:8;:23;;;;;;;:31;5571:4;5554:23;;;;;;:29;5453:268;;5554:29;-1:-1:-1;;;5554:29:57;;;32675:36:61;;5601:41:57;-1:-1:-1;;;5601:41:57;;;;32756:18:61;;;32749:43;;;;-1:-1:-1;;;5660:47:57;;;;;;32808:18:61;;;32801:43;5453:268:57;;;;5486:31;;;;;5453:268;;32663:2:61;32648:18;5453:268:57;;;;;;;-1:-1:-1;5739:24:57;-1:-1:-1;;;;;5739:24:57;;-1:-1:-1;4845:957:57;;;-1:-1:-1;;;;;5910:20:57;;;;;;:8;:20;;;;;:36;;;5860:87;;5880:4;;5898:10;;5910:36;;5860:37;:87::i;:::-;-1:-1:-1;5961:14:57;;5957:128;;6043:31;;-1:-1:-1;;;;;6043:19:57;;;:31;;;;;6063:10;;6043:31;;;;6063:10;6043:19;:31;;;;;;;;;;;;;;;;;;;;;5957:128;3278:2813;;;;;;;;;3207:2884;:::o;4231:201:51:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:51;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19482:146:60:-;19567:54;19578:10;19590;19602:2;19606:6;19567:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;6324:517:57:-;6394:17;6449:2;6427:18;:24;;;6423:380;;-1:-1:-1;6474:10:57;;6324:517;-1:-1:-1;6324:517:57:o;6423:380::-;6527:2;6505:18;:24;;;6501:302;;-1:-1:-1;6552:9:57;;6324:517;-1:-1:-1;6324:517:57:o;6501:302::-;6604:2;6582:18;:24;;;6578:225;;-1:-1:-1;6629:9:57;;6324:517;-1:-1:-1;6324:517:57:o;6578:225::-;6681:2;6659:18;:24;;;6655:148;;-1:-1:-1;6706:9:57;;6324:517;-1:-1:-1;6324:517:57:o;6655:148::-;6758:2;6736:18;:24;;;6732:71;;-1:-1:-1;6783:9:57;;6324:517;-1:-1:-1;6324:517:57:o;6732:71::-;-1:-1:-1;6820:7:57;;6324:517;-1:-1:-1;6324:517:57:o;15685:222:60:-;15783:10;15803:46;:10;15783;15840:8;15803:28;:46::i;:::-;15893:6;-1:-1:-1;;;;;15864:36:60;15883:8;-1:-1:-1;;;;;15864:36:60;;;;;;;;;;;15756:151;15685:222;:::o;4710:104::-;4768:13;4800:7;4793:14;;;;;:::i;731:44:52:-;3291:13:15;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:15;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;;3377:33;3404:4;3377:18;:33::i;:::-;3376:34;:55;;;;-1:-1:-1;3414:12:15;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:15;;33057:2:61;3314:190:15;;;33039:21:61;33096:2;33076:18;;;33069:30;33135:34;33115:18;;;33108:62;-1:-1:-1;;;33186:18:61;;;33179:44;33240:19;;3314:190:15;32855:410:61;3314:190:15;3514:12;:16;;-1:-1:-1;;3514:16:15;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:15;;;;;3540:65;3629:14;3625:99;;;3659:13;:21;;-1:-1:-1;;3659:21:15;;;3699:14;;-1:-1:-1;11064:36:61;;3699:14:15;;11052:2:61;11037:18;3699:14:15;;;;;;;;3258:472;731:44:52:o;15137:185:60:-;15247:68;15253:10;15265;15277:9;15288:6;15296:8;;15247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15247:68:60;;;;;;;;;;;;;-1:-1:-1;15310:4:60;;-1:-1:-1;15247:5:60;;-1:-1:-1;15247:68:60:i;17722:223::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:60;;;;;;;;;;;24796:63;17876:15;;17925:12:::1;::::0;;17895:1:::1;17925:12:::0;;::::1;::::0;::::1;::::0;;;17841:97:::1;::::0;17847:10:::1;::::0;17859:7;;17868:6;;17876:20;;::::1;::::0;:15;;17841:5:::1;:97::i;6896:116:57:-:0;883:5;;;;;-1:-1:-1;;;;;883:5:57;869:10;:19;865:68;;911:11;;-1:-1:-1;;;911:11:57;;;;;;;;;;;865:68;6992:12:::1;::::0;;7002:1:::1;6992:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;6955:50:57;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;6984:6;;6955:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:51::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:51;;-1:-1:-1;;;8544:35:51:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:51;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18419:154:60:-;18495:71;18509:10;18521;18533:9;18544:21;18554:10;18544:9;:21::i;:::-;18495:13;:71::i;14650:322::-;14752:4;14768:176;14790:10;14814:7;14835:99;14872:15;14835:99;;;;;;;;;;;;;;;;;14847:10;14835:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14835:32:60;;;;;;;;;;;:99;:36;:99::i;13726:172::-;13812:4;13835:56;13849:10;13861;13873:9;13884:6;13835:13;:56::i;4438:533:51:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:51;;4438:533;-1:-1:-1;;;;;;;4438:533:51:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:51;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17351:365:60:-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:60;;;;;;;;;;;24796:63;17554:15;;17687:12:::1;::::0;;17573:1:::1;17687:12:::0;;::::1;::::0;::::1;::::0;;;17470:239:::1;::::0;17489:10:::1;::::0;17513:7;;17534:6;;17554:20;;::::1;::::0;;;:15;;17470:5:::1;:239::i;23512:353::-:0;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;23688:170:60::1;23710:7;23731;23752:96;23786:15;23752:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23752:20:60;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;24115:251::-:0;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;24294:65:60::1;24300:10;24312:7;24321:9;24332:6;24340:8;24294:65;;;;;;;;;;;::::0;24354:4:::1;24294:5;:65::i;24372:165::-:0;13396:5:51;-1:-1:-1;;;;;13388:28:51;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:51;;;;;;;;;;;13384:86;24476:54:60::1;24485:10;24497:7;24506;24515:6;24476:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:51:-:0;13208:57;;-1:-1:-1;;;13208:57:51;;-1:-1:-1;;;;;13208:5:51;:28;;;;:57;;13253:10;;13208:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:51;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:51;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:51;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:51:o;15500:179:60:-;15602:4;15625:47;:10;15650:8;15660:11;15625:24;:47::i;3945:280:51:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:51;-1:-1:-1;;3945:280:51;-1:-1:-1;;;;3945:280:51:o;1909:135:57:-;-1:-1:-1;;;;;1998:17:57;;;1975:4;1998:17;;;:8;:17;;;;;:25;;:39;;;1909:135::o;2105:1334:51:-;-1:-1:-1;;;;;2370:31:51;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2708:58:51;;2793:4;2824:7;2858:9;2708:182;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:51;-1:-1:-1;2568:322:51;-1:-1:-1;2914:26:51;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:51;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;15913:213:60:-;16008:10;16028:43;:10;16008;16062:8;16028:25;:43::i;:::-;16112:6;-1:-1:-1;;;;;16086:33:60;16102:8;-1:-1:-1;;;;;16086:33:60;;;;;;;;;;;15981:145;15913:213;:::o;16735:403::-;16927:10;16952:43;:10;16927;16987:7;16952:24;:43::i;:::-;16947:104;;17004:47;;-1:-1:-1;;;17004:47:60;;;;;;;;;;;16947:104;17061:70;17072:8;17082:7;17091;17100:6;17108:8;;17061:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17061:70:60;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17118:12:60;;-1:-1:-1;17118:12:60;;;;17061:70;;17118:12;;;;17061:70;;;;;;;;;-1:-1:-1;17061:10:60;;-1:-1:-1;;;17061:70:60:i;:::-;16898:240;16735:403;;;;;;:::o;15328:166::-;15419:68;15430:10;15442;15454;15466:6;15474:8;;15419:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:68:60;;;;;;;;;;;;;-1:-1:-1;15419:10:60;;-1:-1:-1;;15419:68:60:i;2294:141:48:-;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:48;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;701:213:50:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10502:394:60;-1:-1:-1;;;;;10593:21:60;;10589:98;;10637:39;;-1:-1:-1;;;10637:39:60;;;;;;;;;;;10589:98;-1:-1:-1;;;;;10700:21:60;;10696:96;;10744:37;;-1:-1:-1;;;10744:37:60;;;;;;;;;;;10696:96;-1:-1:-1;;;;;10802:20:60;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10855:34;;6724:25:61;;;10855:34:60;;6697:18:61;10855:34:60;;;;;;;;10502:394;;;:::o;20802:1142::-;21157:16;;-1:-1:-1;;;;;21157:16:60;21145:85;;21197:33;;-1:-1:-1;;;21197:33:60;;;;;;;;;;;21145:85;21242:24;21268:22;21294:27;21314:6;21294:19;:27::i;:::-;21241:80;;;;21399:86;21405:8;21415:7;21424:14;21440:8;:15;21459:1;21440:20;;21462:8;21472:12;21399:5;:86::i;:::-;21519:16;;:41;;-1:-1:-1;;;21519:41:60;;21496:20;;-1:-1:-1;;;;;21519:16:60;;:26;;:41;;21554:4;;21519:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21570:16;;21496:64;;-1:-1:-1;21570:51:60;;-1:-1:-1;;;;;21570:16:60;21600:2;21604:16;21570:29;:51::i;:::-;21653:16;;:41;;-1:-1:-1;;;21653:41:60;;21631:19;;-1:-1:-1;;;;;21653:16:60;;:26;;:41;;21688:4;;21653:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21631:63;-1:-1:-1;21704:30:60;21737:26;21631:63;21737:12;:26;:::i;:::-;21704:59;;21797:22;21777:16;:42;21773:108;;21828:53;;-1:-1:-1;;;21828:53:60;;;;;;;;;;;21773:108;21913:7;-1:-1:-1;;;;;21897:40:60;;21922:14;21897:40;;;;6724:25:61;;6712:2;6697:18;;6578:177;21897:40:60;;;;;;;;21135:809;;;;;20802:1142;;;;;;:::o;920:282:50:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:50;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:50;;920:282;-1:-1:-1;;;920:282:50:o;5545:715:60:-;5670:4;-1:-1:-1;;;;;5694:20:60;;5690:98;;5737:40;;-1:-1:-1;;;5737:40:60;;;;;;;;;;;5690:98;-1:-1:-1;;;;;5801:23:60;;5797:99;;5847:38;;-1:-1:-1;;;5847:38:60;;;;;;;;;;;5797:99;5905:16;5924:10;5905:29;;5945:50;5951:8;5961:6;5969:9;5980:6;5945:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;6021:6;-1:-1:-1;;;;;6010:17:60;:7;-1:-1:-1;;;;;6010:17:60;;6006:226;;6043:178;6069:6;6093:7;6118:89;6151:6;6118:89;;;;;;;;;;;;;;;;;:11;:19;6130:6;-1:-1:-1;;;;;6118:19:60;-1:-1:-1;;;;;6118:19:60;;;;;;;;;;;;:28;6138:7;-1:-1:-1;;;;;6118:28:60;-1:-1:-1;;;;;6118:28:60;;;;;;;;;;;;;:32;;:89;;;;;:::i;6043:178::-;-1:-1:-1;6249:4:60;;5545:715;-1:-1:-1;;;;;5545:715:60:o;6823:230:51:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:51;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:51;;6908:49;;-1:-1:-1;;;;;;6983:22:51;;;;;:63;;7006:5;;7013:4;;601:60;;6983:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:27:-;34837:6;-1:-1:-1;;;;;34962:5:27;:34;;34954:87;;;;-1:-1:-1;;;34954:87:27;;35746:2:61;34954:87:27;;;35728:21:61;35785:2;35765:18;;;35758:30;35824:34;35804:18;;;35797:62;-1:-1:-1;;;35875:18:61;;;35868:38;35923:19;;34954:87:27;35544:404:61;34954:87:27;-1:-1:-1;35065:5:27;34781:297::o;301:119:49:-;403:2;-1:-1:-1;;;;;388:25:49;397:4;-1:-1:-1;;;;;388:25:49;-1:-1:-1;;;;;;;;;;;407:5:49;388:25;;;;6724::61;;6712:2;6697:18;;6578:177;1681:173:50;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;897:246:48;949:89;;-1:-1:-1;;;949:89:48;;332:42;;949:41;;:89;;991:5;;998:24;;1032:4;;949:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:48;;-1:-1:-1;;;1048:88:48;;332:42;;-1:-1:-1;1048:41:48;;-1:-1:-1;1048:88:48;;1090:5;;1097:23;;1130:4;;1048:88;;;:::i;19634:1162:60:-;19850:16;;-1:-1:-1;;;;;19850:16:60;19838:85;;19890:33;;-1:-1:-1;;;19890:33:60;;;;;;;;;;;19838:85;19935:24;19961:22;19987:27;20007:6;19987:19;:27::i;:::-;20048:16;;:41;;-1:-1:-1;;;20048:41:60;;19934:80;;-1:-1:-1;19934:80:60;;-1:-1:-1;20025:20:60;;-1:-1:-1;;;;;20048:16:60;;;;:26;;:41;;20083:4;;20048:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20099:16;;20025:64;;-1:-1:-1;20099:75:60;;-1:-1:-1;;;;;20099:16:60;20133:7;20150:4;20157:16;20099:33;:75::i;:::-;20206:16;;:41;;-1:-1:-1;;;20206:41:60;;20184:19;;-1:-1:-1;;;;;20206:16:60;;:26;;:41;;20241:4;;20206:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20184:63;-1:-1:-1;20257:28:60;20288:26;20302:12;20184:63;20288:26;:::i;:::-;20257:57;;20348:20;20328:16;:40;20324:106;;20377:53;;-1:-1:-1;;;20377:53:60;;;;;;;;;;;20324:106;20628:15;;20441:299;;20460:8;;20482:2;;20498:14;;20628:20;;;:8;20718:12;20441:5;:299::i;:::-;20770:2;-1:-1:-1;;;;;20756:33:60;;20774:14;20756:33;;;;6724:25:61;;6712:2;6697:18;;6578:177;1289:576:52;1457:1;1419:26;:24;:26::i;:::-;-1:-1:-1;;;;;1419:40:52;;1411:82;;;;-1:-1:-1;;;1411:82:52;;36535:2:61;1411:82:52;;;36517:21:61;36574:2;36554:18;;;36547:30;36613:31;36593:18;;;36586:59;36662:18;;1411:82:52;36333:353:61;1411:82:52;1557:10;-1:-1:-1;;;;;1543:39:52;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1524:15;:13;:15::i;:::-;:60;1503:142;;;;-1:-1:-1;;;1503:142:52;;37082:2:61;1503:142:52;;;37064:21:61;37121:2;37101:18;;;37094:30;37160:34;37140:18;;;37133:62;-1:-1:-1;;;37211:18:61;;;37204:33;37254:19;;1503:142:52;36880:399:61;1503:142:52;-1:-1:-1;;;;;1676:27:52;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:52;;37486:2:61;1655:99:52;;;37468:21:61;37525:2;37505:18;;;37498:30;-1:-1:-1;;;37544:18:61;;;37537:55;37609:18;;1655:99:52;37284:349:61;1655:99:52;1764:39;1792:10;-1:-1:-1;;;;;;;;;;;964:87:54;839:228;1764:39:52;1818:40;1830:15;:13;:15::i;:::-;1818:40;;;37812:25:61;;;-1:-1:-1;;;;;37873:32:61;;37868:2;37853:18;;37846:60;37785:18;1818:40:52;37638:274:61;1291:300:50;1363:21;1417:10;-1:-1:-1;;;;;1403:25:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:50;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:50;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;618:170:54:-;-1:-1:-1;;;;;;;;;;;745:27:54;;618:170::o;2815:334:57:-;2903:63;2950:4;;2957:8;2903:38;:63::i;:::-;:68;;;2899:244;;2987:57;3007:4;3025:8;3035;2987:37;:57::i;2899:244::-;3075:57;3095:4;3113:8;3123;3075:37;:57::i;1149:366:48:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:48;:8;-1:-1:-1;;;;;1281:23:48;;:174;;;-1:-1:-1;;;;;;1338:31:48;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:48;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:48;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6784:686:60:-;-1:-1:-1;;;;;7020:18:60;;7016:96;;7061:40;;-1:-1:-1;;;7061:40:60;;;;;;;;;;;7016:96;-1:-1:-1;;;;;7125:16:60;;7121:92;;7164:38;;-1:-1:-1;;;7164:38:60;;;;;;;;;;;7121:92;7223:69;7241:8;7251:4;7257:2;7261:6;7269:8;7279:12;7223:17;:69::i;:::-;7303:57;7309:8;7319:4;7325:2;7329:6;7337:8;7347:12;7303:5;:57::i;:::-;7371:92;7391:8;7401:4;7407:2;7411:6;7419:8;7429:12;7443:19;7371;:92::i;7553:166:57:-;7608:5;-1:-1:-1;;;;;7633:41:57;;;7625:50;;;;;904:184:29;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;1521:382:48:-;1643:8;-1:-1:-1;;;;;1633:18:48;:6;-1:-1:-1;;;;;1633:18:48;;1625:76;;;;-1:-1:-1;;;1625:76:48;;38119:2:61;1625:76:48;;;38101:21:61;38158:2;38138:18;;;38131:30;38197:34;38177:18;;;38170:62;-1:-1:-1;;;38248:18:61;;;38241:43;38301:19;;1625:76:48;37917:409:61;1625:76:48;-1:-1:-1;;;;;1716:31:48;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:48;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:48;;;23258:248:60:o;1712:185:48:-;-1:-1:-1;;;;;1847:22:48;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:48;1882:4;1847:39;;;1521:382;;;:::o;1412:320:24:-;-1:-1:-1;;;;;1702:19:24;;:23;;;1412:320::o;9476:594:60:-;-1:-1:-1;;;;;9683:18:60;;9679:92;;9724:36;;-1:-1:-1;;;9724:36:60;;;;;;;;;;;9679:92;9785:10;9781:118;;;9811:77;9829:8;9839:4;9853:1;9857:6;9865:8;9875:12;9811:17;:77::i;:::-;9909:35;9931:4;9937:6;9909:21;:35::i;:::-;9977:4;-1:-1:-1;;;;;9960:54:60;9967:8;-1:-1:-1;;;;;9960:54:60;;9983:6;9991:8;10001:12;9960:54;;;;;;;;:::i;:::-;;;;;;;;10029:34;;6724:25:61;;;10052:1:60;;-1:-1:-1;;;;;10029:34:60;;;-1:-1:-1;;;;;;;;;;;10029:34:60;6712:2:61;6697:18;10029:34:60;6578:177:61;4959:201:28;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:28;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:28;;;4959:201::o;8500:667:60:-;-1:-1:-1;;;;;8744:21:60;;8740:93;;8788:34;;-1:-1:-1;;;8788:34:60;;;;;;;;;;;8740:93;8843:38;8865:7;8874:6;8843:21;:38::i;:::-;8896:10;8892:144;;;8922:103;8942:8;8960:1;8964:7;8973:6;8981:8;8991:12;9005:19;8922;:103::i;:::-;9068:7;-1:-1:-1;;;;;9051:57:60;9058:8;-1:-1:-1;;;;;9051:57:60;;9077:6;9085:8;9095:12;9051:57;;;;;;;;:::i;:::-;;;;;;;;9123:37;;6724:25:61;;;-1:-1:-1;;;;;9123:37:60;;;9140:1;;-1:-1:-1;;;;;;;;;;;9123:37:60;6712:2:61;6697:18;9123:37:60;;;;;;;8500:667;;;;;;;:::o;1909:379:48:-;2030:10;-1:-1:-1;;;;;2018:22:48;;;2010:77;;;;-1:-1:-1;;;2010:77:48;;38988:2:61;2010:77:48;;;38970:21:61;39027:2;39007:18;;;39000:30;39066:34;39046:18;;;39039:62;-1:-1:-1;;;39117:18:61;;;39110:40;39167:19;;2010:77:48;38786:406:61;2010:77:48;-1:-1:-1;;;;;2101:31:48;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:48;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:48;2197:4;2148:53;;;23258:248:60;;;:::o;2097:185:48:-;-1:-1:-1;;;;;2239:22:48;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:48;;;1909:379::o;22046:972:60:-;22229:19;;22137:24;;;;;;1425:2;-1:-1:-1;;;22229:19:60;;;:40;:19;:40;22225:787;;;22434:19;;22413:40;;-1:-1:-1;;;22434:19:60;;;;1425:2;22413:40;:::i;:::-;22406:48;;:2;:48;:::i;:::-;22397:57;-1:-1:-1;22487:15:60;22397:57;22487:6;:15;:::i;:::-;22468:34;-1:-1:-1;22572:25:60;22591:6;22468:34;22572:25;:::i;:::-;22555:42;;22225:787;;;22618:19;;1425:2;-1:-1:-1;;;22618:19:60;;;:40;:19;:40;22614:398;;;22802:19;;:40;;1425:2;;-1:-1:-1;;;22802:19:60;;;;:40;:::i;:::-;22795:48;;:2;:48;:::i;:::-;22786:57;-1:-1:-1;22876:15:60;22786:57;22876:6;:15;:::i;:::-;22857:34;;22922:6;22905:23;;22614:398;;;22995:6;22978:23;;;22959:42;;22614:398;22191:827;22046:972;;;:::o;941:175:18:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:18;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:18;-1:-1:-1;;;;;;1050:58:18;;;;;;;;;;1023:19;:86::i;7476:367:60:-;7673:50;7695:4;7701:2;7705:17;:6;:15;:17::i;:::-;7673:21;:50::i;:::-;7760:2;-1:-1:-1;;;;;7739:56:60;7754:4;-1:-1:-1;;;;;7739:56:60;7744:8;-1:-1:-1;;;;;7739:56:60;;7764:6;7772:8;7782:12;7739:56;;;;;;;;:::i;:::-;;;;;;;;7825:2;-1:-1:-1;;;;;7810:26:60;7819:4;-1:-1:-1;;;;;7810:26:60;-1:-1:-1;;;;;;;;;;;7829:6:60;7810:26;;;;6724:25:61;;6712:2;6697:18;;6578:177;1355:203:18;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;26861:262:29:-;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:29;;-1:-1:-1;;;;;41847:15:61;;;27080:36:29;;;41829:34:61;41899:15;;;41879:18;;;41872:43;41951:15;;;41931:18;;;41924:43;26995:56:29;;-1:-1:-1;27080:11:29;;;;-1:-1:-1;27080:11:29;;41764:18:61;;27080:36:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:29;;26861:262;-1:-1:-1;;;;;;;26861:262:29:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;11369:510:60:-;11612:104;;-1:-1:-1;;;11612:104:60;;11578:19;;332:42:48;;11612:54:60;;:104;;11667:4;;440:31:48;;11612:104:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11578:138;-1:-1:-1;;;;;;11730:25:60;;;11726:147;;11771:91;;-1:-1:-1;;;11771:91:60;;-1:-1:-1;;;;;11771:39:60;;;;;:91;;11811:8;;11821:4;;11827:2;;11831:6;;11839:8;;11849:12;;11771:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12568:677;12847:105;;-1:-1:-1;;;12847:105:60;;12813:19;;332:42:48;;12847:54:60;;:105;;12902:2;;538:34:48;;12847:105:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12813:139;-1:-1:-1;;;;;;12966:25:60;;;12962:277;;13007:96;;-1:-1:-1;;;13007:96:60;;-1:-1:-1;;;;;13007:44:60;;;;;:96;;13052:8;;13062:4;;13068:2;;13072:6;;13080:8;;13090:12;;13007:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12962:277;;;13124:19;13120:119;;;13163:15;:2;-1:-1:-1;;;;;13163:13:60;;:15::i;:::-;13159:69;;;13187:41;;-1:-1:-1;;;13187:41:60;;;;;;;;;;;1342:472:29;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:29;;1606:3;1655;-1:-1:-1;;;;;1655:14:29;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:29;;1623:119;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1623:119:29;;;;;;;;;;;;;;;-1:-1:-1;;;;;1623:119:29;;;;;;1574:212;;;;;-1:-1:-1;;;;;;1574:212:29;;;;;;-1:-1:-1;1623:119:29;1756:8;;1574:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:212:29;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1803:4:29;;1342:472;-1:-1:-1;;;;;;;1342:472:29:o;5918:440:51:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:51;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:51;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:51;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:51;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:51:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:51;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:51;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:51:o;5196:642:18:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:18;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:18;;45357:2:61;5720:111:18;;;45339:21:61;45396:2;45376:18;;;45369:30;45435:34;45415:18;;;45408:62;-1:-1:-1;;;45486:18:61;;;45479:40;45536:19;;5720:111:18;45155:406:61;6364:453:51;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:51;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:51;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:51;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:51;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:51;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:51:o;60355:828:29:-;-1:-1:-1;;;;;;;;;;;60594:17:29;-1:-1:-1;;;;;;;;;;;60631:16:29;-1:-1:-1;;;;;60670:26:29;;60666:422;;-1:-1:-1;;;;;60801:27:29;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:29;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:29;;-1:-1:-1;;;;;;;;;;;60950:125:29;;;6724:25:61;-1:-1:-1;;;;;60950:35:29;;;;;6697:18:61;;60950:125:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:29;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:29;;61142:34;;;;:::i;:::-;60355:828;;;:::o;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:29;;2716:3;2765;-1:-1:-1;;;;;2765:14:29;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:29;;;;;;;:::i;57949:1061::-;-1:-1:-1;;;;;;;;;;;58191:17:29;-1:-1:-1;;;;;;;;;;;58228:16:29;-1:-1:-1;;;;;58267:26:29;;58263:652;;-1:-1:-1;;;;;58387:27:29;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:29;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:29;;-1:-1:-1;;;;;;;;;;;58536:125:29;;;6724:25:61;-1:-1:-1;;;;;58536:35:29;;;;;6697:18:61;;58536:125:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;-1:-1:-1;;;;;;;;;;;58828:24:29;58887:3;-1:-1:-1;;;;;;;;;;;58869:22:29;-1:-1:-1;;;;;58931:27:29;;58924:35;;;;:::i;4108:223:24:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:24;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:24:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;-1:-1:-1;;;8113:60:24;;46748:2:61;8113:60:24;;;46730:21:61;46787:2;46767:18;;;46760:30;46826:31;46806:18;;;46799:59;46875:18;;8113:60:24;46546:353:61;8113:60:24;-1:-1:-1;8208:10:24;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:24;;;;;;;;:::i;14:658:61:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:61;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:61;;14:658;-1:-1:-1;;;;;;14:658:61:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:61;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:61;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:61:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:348::-;1485:8;1495:6;1549:3;1542:4;1534:6;1530:17;1526:27;1516:55;;1567:1;1564;1557:12;1516:55;-1:-1:-1;1590:20:61;;-1:-1:-1;;;;;1622:30:61;;1619:50;;;1665:1;1662;1655:12;1619:50;1702:4;1694:6;1690:17;1678:29;;1754:3;1747:4;1738:6;1730;1726:19;1722:30;1719:39;1716:59;;;1771:1;1768;1761:12;1716:59;1433:348;;;;;:::o;1786:131::-;-1:-1:-1;;;;;1861:31:61;;1851:42;;1841:70;;1907:1;1904;1897:12;1922:856;2023:6;2031;2039;2047;2055;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2151:23;;-1:-1:-1;;;;;2223:14:61;;;2220:34;;;2250:1;2247;2240:12;2220:34;2289:59;2340:7;2331:6;2320:9;2316:22;2289:59;:::i;:::-;2367:8;;-1:-1:-1;2263:85:61;-1:-1:-1;2455:2:61;2440:18;;2427:32;;-1:-1:-1;2471:16:61;;;2468:36;;;2500:1;2497;2490:12;2468:36;;2539:61;2592:7;2581:8;2570:9;2566:24;2539:61;:::i;:::-;2619:8;;-1:-1:-1;2513:87:61;-1:-1:-1;;2704:2:61;2689:18;;2676:32;2717:31;2676:32;2717:31;:::i;:::-;2767:5;2757:15;;;1922:856;;;;;;;;:::o;2783:367::-;2846:8;2856:6;2910:3;2903:4;2895:6;2891:17;2887:27;2877:55;;2928:1;2925;2918:12;2877:55;-1:-1:-1;2951:20:61;;-1:-1:-1;;;;;2983:30:61;;2980:50;;;3026:1;3023;3016:12;2980:50;3063:4;3055:6;3051:17;3039:29;;3123:3;3116:4;3106:6;3103:1;3099:14;3091:6;3087:27;3083:38;3080:47;3077:67;;;3140:1;3137;3130:12;3155:640;3259:6;3267;3275;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3512:2:61;3497:18;;3484:32;;-1:-1:-1;3567:2:61;3552:18;;3539:32;-1:-1:-1;;;;;3583:30:61;;3580:50;;;3626:1;3623;3616:12;3580:50;3665:70;3727:7;3718:6;3707:9;3703:22;3665:70;:::i;:::-;3155:640;;;;-1:-1:-1;3754:8:61;-1:-1:-1;;;;3155:640:61:o;3800:315::-;3868:6;3876;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;3984:9;3971:23;4003:31;4028:5;4003:31;:::i;:::-;4053:5;4105:2;4090:18;;;;4077:32;;-1:-1:-1;;;3800:315:61:o;4312:247::-;4371:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:52;;;4440:1;4437;4430:12;4392:52;4479:9;4466:23;4498:31;4523:5;4498:31;:::i;4564:457::-;4641:12;;-1:-1:-1;;;;;4637:38:61;4625:51;;4729:4;4718:16;;;4712:23;4737:4;4708:34;4692:14;;;4685:58;4789:4;4778:16;;;4772:23;4814:10;4856:21;;;4840:14;;;4833:45;;;;4931:4;4920:16;;;4914:23;4910:32;;;4894:14;;;4887:56;5007:4;4996:16;;;4990:23;4986:2;4975:39;4959:14;;4952:63;4564:457::o;5026:249::-;5212:3;5197:19;;5225:44;5201:9;5251:6;5225:44;:::i;5280:180::-;5339:6;5392:2;5380:9;5371:7;5367:23;5363:32;5360:52;;;5408:1;5405;5398:12;5360:52;-1:-1:-1;5431:23:61;;5280:180;-1:-1:-1;5280:180:61:o;5465:505::-;5560:6;5568;5576;5629:2;5617:9;5608:7;5604:23;5600:32;5597:52;;;5645:1;5642;5635:12;5597:52;5668:23;;;-1:-1:-1;5742:2:61;5727:18;;5714:32;-1:-1:-1;;;;;5758:30:61;;5755:50;;;5801:1;5798;5791:12;5755:50;5840:70;5902:7;5893:6;5882:9;5878:22;5840:70;:::i;:::-;5465:505;;5929:8;;-1:-1:-1;5814:96:61;;-1:-1:-1;;;;5465:505:61:o;5975:598::-;6061:6;6069;6077;6085;6138:3;6126:9;6117:7;6113:23;6109:33;6106:53;;;6155:1;6152;6145:12;6106:53;6194:9;6181:23;6213:31;6238:5;6213:31;:::i;:::-;6263:5;-1:-1:-1;6320:2:61;6305:18;;6292:32;6333:33;6292:32;6333:33;:::i;:::-;6385:7;-1:-1:-1;6444:2:61;6429:18;;6416:32;6457:33;6416:32;6457:33;:::i;:::-;5975:598;;;;-1:-1:-1;6509:7:61;;6563:2;6548:18;6535:32;;-1:-1:-1;;5975:598:61:o;6760:127::-;6821:10;6816:3;6812:20;6809:1;6802:31;6852:4;6849:1;6842:15;6876:4;6873:1;6866:15;6892:275;6963:2;6957:9;7028:2;7009:13;;-1:-1:-1;;7005:27:61;6993:40;;-1:-1:-1;;;;;7048:34:61;;7084:22;;;7045:62;7042:88;;;7110:18;;:::i;:::-;7146:2;7139:22;6892:275;;-1:-1:-1;6892:275:61:o;7172:186::-;7220:4;-1:-1:-1;;;;;7242:30:61;;7239:56;;;7275:18;;:::i;:::-;-1:-1:-1;7341:2:61;7320:15;-1:-1:-1;;7316:29:61;7347:4;7312:40;;7172:186::o;7363:462::-;7405:5;7458:3;7451:4;7443:6;7439:17;7435:27;7425:55;;7476:1;7473;7466:12;7425:55;7512:6;7499:20;7543:48;7559:31;7587:2;7559:31;:::i;:::-;7543:48;:::i;:::-;7616:2;7607:7;7600:19;7662:3;7655:4;7650:2;7642:6;7638:15;7634:26;7631:35;7628:55;;;7679:1;7676;7669:12;7628:55;7744:2;7737:4;7729:6;7725:17;7718:4;7709:7;7705:18;7692:55;7792:1;7767:16;;;7785:4;7763:27;7756:38;;;;7771:7;7363:462;-1:-1:-1;;;7363:462:61:o;7830:118::-;7916:5;7909:13;7902:21;7895:5;7892:32;7882:60;;7938:1;7935;7928:12;7953:938;8071:6;8079;8087;8095;8103;8111;8119;8172:3;8160:9;8151:7;8147:23;8143:33;8140:53;;;8189:1;8186;8179:12;8140:53;8212:23;;;-1:-1:-1;8286:2:61;8271:18;;8258:32;-1:-1:-1;;;;;8302:30:61;;8299:50;;;8345:1;8342;8335:12;8299:50;8368:49;8409:7;8400:6;8389:9;8385:22;8368:49;:::i;:::-;8358:59;;;8467:2;8456:9;8452:18;8439:32;8480:31;8505:5;8480:31;:::i;:::-;8530:5;-1:-1:-1;8587:2:61;8572:18;;8559:32;8600:30;8559:32;8600:30;:::i;:::-;8649:7;-1:-1:-1;8708:3:61;8693:19;;8680:33;8722;8680;8722;:::i;:::-;7953:938;;;;-1:-1:-1;7953:938:61;;;;8774:7;8828:3;8813:19;;8800:33;;-1:-1:-1;8880:3:61;8865:19;;;8852:33;;7953:938;-1:-1:-1;;7953:938:61:o;8896:203::-;-1:-1:-1;;;;;9060:32:61;;;;9042:51;;9030:2;9015:18;;8896:203::o;9104:705::-;9327:2;9379:21;;;9449:13;;9352:18;;;9471:22;;;9298:4;;9327:2;9550:15;;;;9524:2;9509:18;;;9298:4;9593:190;9607:6;9604:1;9601:13;9593:190;;;9656:45;9697:3;9688:6;9682:13;9656:45;:::i;:::-;9758:15;;;;9730:4;9721:14;;;;;9629:1;9622:9;9593:190;;9814:456;9891:6;9899;9907;9960:2;9948:9;9939:7;9935:23;9931:32;9928:52;;;9976:1;9973;9966:12;9928:52;10015:9;10002:23;10034:31;10059:5;10034:31;:::i;:::-;10084:5;-1:-1:-1;10141:2:61;10126:18;;10113:32;10154:33;10113:32;10154:33;:::i;:::-;9814:456;;10206:7;;-1:-1:-1;;;10260:2:61;10245:18;;;;10232:32;;9814:456::o;10275:248::-;10343:6;10351;10404:2;10392:9;10383:7;10379:23;10375:32;10372:52;;;10420:1;10417;10410:12;10372:52;-1:-1:-1;;10443:23:61;;;10513:2;10498:18;;;10485:32;;-1:-1:-1;10275:248:61:o;11799:1038::-;11923:6;11931;11939;11947;11955;11963;12016:3;12004:9;11995:7;11991:23;11987:33;11984:53;;;12033:1;12030;12023:12;11984:53;12072:9;12059:23;12091:31;12116:5;12091:31;:::i;:::-;12141:5;-1:-1:-1;12198:2:61;12183:18;;12170:32;12246:4;12233:18;;12221:31;;12211:59;;12266:1;12263;12256:12;12211:59;12289:7;-1:-1:-1;12347:2:61;12332:18;;12319:32;-1:-1:-1;;;;;12400:14:61;;;12397:34;;;12427:1;12424;12417:12;12397:34;12466:59;12517:7;12508:6;12497:9;12493:22;12466:59;:::i;:::-;12544:8;;-1:-1:-1;12440:85:61;-1:-1:-1;12632:2:61;12617:18;;12604:32;;-1:-1:-1;12648:16:61;;;12645:36;;;12677:1;12674;12667:12;12645:36;;12716:61;12769:7;12758:8;12747:9;12743:24;12716:61;:::i;:::-;11799:1038;;;;-1:-1:-1;11799:1038:61;;-1:-1:-1;11799:1038:61;;12796:8;;11799:1038;-1:-1:-1;;;11799:1038:61:o;12842:525::-;12928:6;12936;12944;12952;13005:3;12993:9;12984:7;12980:23;12976:33;12973:53;;;13022:1;13019;13012:12;12973:53;13061:9;13048:23;13080:31;13105:5;13080:31;:::i;:::-;13130:5;-1:-1:-1;13187:2:61;13172:18;;13159:32;13200:33;13159:32;13200:33;:::i;:::-;12842:525;;13252:7;;-1:-1:-1;;;;13306:2:61;13291:18;;13278:32;;13357:2;13342:18;13329:32;;12842:525::o;13372:632::-;13543:2;13595:21;;;13665:13;;13568:18;;;13687:22;;;13514:4;;13543:2;13766:15;;;;13740:2;13725:18;;;13514:4;13809:169;13823:6;13820:1;13817:13;13809:169;;;13884:13;;13872:26;;13953:15;;;;13918:12;;;;13845:1;13838:9;13809:169;;14427:613;14515:6;14523;14531;14539;14592:2;14580:9;14571:7;14567:23;14563:32;14560:52;;;14608:1;14605;14598:12;14560:52;14647:9;14634:23;14666:31;14691:5;14666:31;:::i;:::-;14716:5;-1:-1:-1;14768:2:61;14753:18;;14740:32;;-1:-1:-1;14823:2:61;14808:18;;14795:32;-1:-1:-1;;;;;14839:30:61;;14836:50;;;14882:1;14879;14872:12;14836:50;14921:59;14972:7;14963:6;14952:9;14948:22;14921:59;:::i;15045:1065::-;15162:6;15170;15178;15186;15194;15202;15210;15263:3;15251:9;15242:7;15238:23;15234:33;15231:53;;;15280:1;15277;15270:12;15231:53;15319:9;15306:23;15338:31;15363:5;15338:31;:::i;:::-;15388:5;-1:-1:-1;15445:2:61;15430:18;;15417:32;15458:33;15417:32;15458:33;:::i;:::-;15510:7;-1:-1:-1;15564:2:61;15549:18;;15536:32;;-1:-1:-1;15619:2:61;15604:18;;15591:32;-1:-1:-1;;;;;15672:14:61;;;15669:34;;;15699:1;15696;15689:12;15669:34;15738:59;15789:7;15780:6;15769:9;15765:22;15738:59;:::i;:::-;15816:8;;-1:-1:-1;15712:85:61;-1:-1:-1;15904:3:61;15889:19;;15876:33;;-1:-1:-1;15921:16:61;;;15918:36;;;15950:1;15947;15940:12;15918:36;;15989:61;16042:7;16031:8;16020:9;16016:24;15989:61;:::i;:::-;15045:1065;;;;-1:-1:-1;15045:1065:61;;-1:-1:-1;15045:1065:61;;;;15963:87;;-1:-1:-1;;;15045:1065:61:o;16115:383::-;16192:6;16200;16208;16261:2;16249:9;16240:7;16236:23;16232:32;16229:52;;;16277:1;16274;16267:12;16229:52;16316:9;16303:23;16335:31;16360:5;16335:31;:::i;:::-;16385:5;16437:2;16422:18;;16409:32;;-1:-1:-1;16488:2:61;16473:18;;;16460:32;;16115:383;-1:-1:-1;;;16115:383:61:o;16763:276::-;16821:6;16874:2;16862:9;16853:7;16849:23;16845:32;16842:52;;;16890:1;16887;16880:12;16842:52;16929:9;16916:23;16979:10;16972:5;16968:22;16961:5;16958:33;16948:61;;17005:1;17002;16995:12;17044:523;17130:6;17138;17146;17199:2;17187:9;17178:7;17174:23;17170:32;17167:52;;;17215:1;17212;17205:12;17167:52;17254:9;17241:23;17273:31;17298:5;17273:31;:::i;:::-;17323:5;-1:-1:-1;17375:2:61;17360:18;;17347:32;;-1:-1:-1;17430:2:61;17415:18;;17402:32;-1:-1:-1;;;;;17446:30:61;;17443:50;;;17489:1;17486;17479:12;17443:50;17512:49;17553:7;17544:6;17533:9;17529:22;17512:49;:::i;:::-;17502:59;;;17044:523;;;;;:::o;17572:665::-;17667:6;17675;17683;17691;17744:3;17732:9;17723:7;17719:23;17715:33;17712:53;;;17761:1;17758;17751:12;17712:53;17800:9;17787:23;17819:31;17844:5;17819:31;:::i;:::-;17869:5;-1:-1:-1;17926:2:61;17911:18;;17898:32;17939:33;17898:32;17939:33;:::i;:::-;17991:7;-1:-1:-1;18045:2:61;18030:18;;18017:32;;-1:-1:-1;18100:2:61;18085:18;;18072:32;-1:-1:-1;;;;;18116:30:61;;18113:50;;;18159:1;18156;18149:12;18113:50;18182:49;18223:7;18214:6;18203:9;18199:22;18182:49;:::i;:::-;18172:59;;;17572:665;;;;;;;:::o;18561:388::-;18629:6;18637;18690:2;18678:9;18669:7;18665:23;18661:32;18658:52;;;18706:1;18703;18696:12;18658:52;18745:9;18732:23;18764:31;18789:5;18764:31;:::i;:::-;18814:5;-1:-1:-1;18871:2:61;18856:18;;18843:32;18884:33;18843:32;18884:33;:::i;:::-;18936:7;18926:17;;;18561:388;;;;;:::o;19513:923::-;19621:6;19629;19637;19645;19653;19661;19714:3;19702:9;19693:7;19689:23;19685:33;19682:53;;;19731:1;19728;19721:12;19682:53;19770:9;19757:23;19789:31;19814:5;19789:31;:::i;:::-;19839:5;-1:-1:-1;19891:2:61;19876:18;;19863:32;;-1:-1:-1;19946:2:61;19931:18;;19918:32;-1:-1:-1;;;;;19999:14:61;;;19996:34;;;20026:1;20023;20016:12;20441:478;20520:6;20528;20536;20589:2;20577:9;20568:7;20564:23;20560:32;20557:52;;;20605:1;20602;20595:12;20557:52;20628:23;;;-1:-1:-1;20702:2:61;20687:18;;20674:32;-1:-1:-1;;;;;20718:30:61;;20715:50;;;20761:1;20758;20751:12;20715:50;20800:59;20851:7;20842:6;20831:9;20827:22;20800:59;:::i;20924:380::-;21003:1;20999:12;;;;21046;;;21067:61;;21121:4;21113:6;21109:17;21099:27;;21067:61;21174:2;21166:6;21163:14;21143:18;21140:38;21137:161;;21220:10;21215:3;21211:20;21208:1;21201:31;21255:4;21252:1;21245:15;21283:4;21280:1;21273:15;21309:267;21398:6;21393:3;21386:19;21450:6;21443:5;21436:4;21431:3;21427:14;21414:43;-1:-1:-1;21502:1:61;21477:16;;;21495:4;21473:27;;;21466:38;;;;21558:2;21537:15;;;-1:-1:-1;;21533:29:61;21524:39;;;21520:50;;21309:267::o;21581:640::-;-1:-1:-1;;;;;21876:32:61;;21858:51;;21957:4;21945:17;;21940:2;21925:18;;21918:45;21999:3;21994:2;21979:18;;21972:31;;;-1:-1:-1;;22026:63:61;;22069:19;;22061:6;22053;22026:63;:::i;:::-;22137:9;22129:6;22125:22;22120:2;22109:9;22105:18;22098:50;22165;22208:6;22200;22192;22165:50;:::i;:::-;22157:58;21581:640;-1:-1:-1;;;;;;;;;21581:640:61:o;22226:435::-;22507:1;22503;22498:3;22494:11;22490:19;22482:6;22478:32;22467:9;22460:51;22547:6;22542:2;22531:9;22527:18;22520:34;22590:2;22585;22574:9;22570:18;22563:30;22441:4;22610:45;22651:2;22640:9;22636:18;22628:6;22610:45;:::i;22666:613::-;22952:3;22934:22;;;22993:2;22972:19;;;22965:31;-1:-1:-1;;;23027:3:61;23012:19;;23005:45;-1:-1:-1;;;;;23162:15:61;;;23155:4;23140:20;;23133:45;23214:15;;;;23209:2;23194:18;;23187:43;-1:-1:-1;23246:18:61;;23239:34;;;;23082:3;23067:19;;22666:613::o;23284:509::-;23542:2;23524:21;;;23581:2;23561:18;;;23554:30;-1:-1:-1;;;23615:3:61;23600:19;;23593:44;-1:-1:-1;;;;;23711:32:61;;;;23704:4;23689:20;;23682:62;-1:-1:-1;23760:18:61;;23753:34;23669:3;23654:19;;23284:509::o;23798:514::-;23997:25;;;24058:2;24053;24038:18;;24031:30;;;24077:18;;24070:34;;;-1:-1:-1;;;;;;24116:31:61;;24113:51;;;24160:1;24157;24150:12;24113:51;24194:6;24191:1;24187:14;24251:6;24243;24238:2;24227:9;24223:18;24210:48;24279:22;;;;24303:2;24275:31;;23798:514;-1:-1:-1;;;;23798:514:61:o;24550:245::-;24617:6;24670:2;24658:9;24649:7;24645:23;24641:32;24638:52;;;24686:1;24683;24676:12;24638:52;24718:9;24712:16;24737:28;24759:5;24737:28;:::i;24800:127::-;24861:10;24856:3;24852:20;24849:1;24842:31;24892:4;24889:1;24882:15;24916:4;24913:1;24906:15;24932:136;24967:3;-1:-1:-1;;;24988:22:61;;24985:48;;25013:18;;:::i;:::-;-1:-1:-1;25053:1:61;25049:13;;24932:136::o;25073:127::-;25134:10;25129:3;25125:20;25122:1;25115:31;25165:4;25162:1;25155:15;25189:4;25186:1;25179:15;25205:216;25269:9;;;25297:11;;;25244:3;25327:9;;25355:10;;25351:19;;25380:10;;25372:19;;25348:44;25345:70;;;25395:18;;:::i;:::-;25345:70;;25205:216;;;;:::o;25426:200::-;25492:9;;;25465:4;25520:9;;25548:10;;25560:12;;;25544:29;25583:12;;;25575:21;;25541:56;25538:82;;;25600:18;;:::i;25631:529::-;25888:6;25877:9;25870:25;25960:1;25956;25951:3;25947:11;25943:19;25935:6;25931:32;25926:2;25915:9;25911:18;25904:60;26000:6;25995:2;25984:9;25980:18;25973:34;26043:6;26038:2;26027:9;26023:18;26016:34;26087:3;26081;26070:9;26066:19;26059:32;25851:4;26108:46;26149:3;26138:9;26134:19;26126:6;26108:46;:::i;26165:135::-;26204:3;26225:17;;;26222:43;;26245:18;;:::i;:::-;-1:-1:-1;26292:1:61;26281:13;;26165:135::o;26305:127::-;26366:10;26361:3;26357:20;26354:1;26347:31;26397:4;26394:1;26387:15;26421:4;26418:1;26411:15;26437:184;26507:6;26560:2;26548:9;26539:7;26535:23;26531:32;26528:52;;;26576:1;26573;26566:12;26528:52;-1:-1:-1;26599:16:61;;26437:184;-1:-1:-1;26437:184:61:o;26626:1036::-;26746:6;26777:2;26820;26808:9;26799:7;26795:23;26791:32;26788:52;;;26836:1;26833;26826:12;26788:52;26863:16;;-1:-1:-1;;;;;26928:14:61;;;26925:34;;;26955:1;26952;26945:12;26925:34;26993:6;26982:9;26978:22;26968:32;;27038:7;27031:4;27027:2;27023:13;27019:27;27009:55;;27060:1;27057;27050:12;27009:55;27089:2;27083:9;27111:2;27107;27104:10;27101:36;;;27117:18;;:::i;:::-;27163:2;27160:1;27156:10;27146:20;;27186:28;27210:2;27206;27202:11;27186:28;:::i;:::-;27248:15;;;27318:11;;;27314:20;;;27279:12;;;;27346:19;;;27343:39;;;27378:1;27375;27368:12;27343:39;27402:11;;;;27422:210;27438:6;27433:3;27430:15;27422:210;;;27511:3;27505:10;27492:23;;27528:31;27553:5;27528:31;:::i;:::-;27572:18;;;27455:12;;;;27610;;;;27422:210;;;27651:5;26626:1036;-1:-1:-1;;;;;;;;26626:1036:61:o;27667:125::-;27732:9;;;27753:10;;;27750:36;;;27766:18;;:::i;28634:545::-;28736:2;28731:3;28728:11;28725:448;;;28772:1;28797:5;28793:2;28786:17;28842:4;28838:2;28828:19;28912:2;28900:10;28896:19;28893:1;28889:27;28883:4;28879:38;28948:4;28936:10;28933:20;28930:47;;;-1:-1:-1;28971:4:61;28930:47;29026:2;29021:3;29017:12;29014:1;29010:20;29004:4;29000:31;28990:41;;29081:82;29099:2;29092:5;29089:13;29081:82;;;29144:17;;;29125:1;29114:13;29081:82;;;29085:3;;;28634:545;;;:::o;29355:1206::-;-1:-1:-1;;;;;29471:27:61;;29468:53;;;29501:18;;:::i;:::-;29530:94;29620:3;29580:38;29612:4;29606:11;29580:38;:::i;:::-;29574:4;29530:94;:::i;:::-;29650:1;29675:2;29670:3;29667:11;29692:1;29687:616;;;;30347:1;30364:3;30361:93;;;-1:-1:-1;30420:19:61;;;30407:33;30361:93;-1:-1:-1;;29312:1:61;29308:11;;;29304:24;29300:29;29290:40;29336:1;29332:11;;;29287:57;30467:78;;29660:895;;29687:616;28581:1;28574:14;;;28618:4;28605:18;;-1:-1:-1;;29723:17:61;;;29824:9;29846:229;29860:7;29857:1;29854:14;29846:229;;;29949:19;;;29936:33;29921:49;;30056:4;30041:20;;;;30009:1;29997:14;;;;29876:12;29846:229;;;29850:3;30103;30094:7;30091:16;30088:159;;;30227:1;30223:6;30217:3;30211;30208:1;30204:11;30200:21;30196:34;30192:39;30179:9;30174:3;30170:19;30157:33;30153:79;30145:6;30138:95;30088:159;;;30290:1;30284:3;30281:1;30277:11;30273:19;30267:4;30260:33;29660:895;;29355:1206;;;:::o;30756:128::-;30823:9;;;30844:11;;;30841:37;;;30858:18;;:::i;30889:201::-;30927:3;30955:10;31000:2;30993:5;30989:14;31027:2;31018:7;31015:15;31012:41;;31033:18;;:::i;:::-;31082:1;31069:15;;30889:201;-1:-1:-1;;;30889:201:61:o;31095:148::-;31183:4;31162:12;;;31176;;;31158:31;;31201:13;;31198:39;;;31217:18;;:::i;31248:127::-;31309:10;31304:3;31300:20;31297:1;31290:31;31340:4;31337:1;31330:15;31364:4;31361:1;31354:15;31380:120;31420:1;31446;31436:35;;31451:18;;:::i;:::-;-1:-1:-1;31485:9:61;;31380:120::o;31505:216::-;31604:2;31593:17;;;31574;;;;31570:41;-1:-1:-1;;;;;;31626:34:61;;-1:-1:-1;;;;;31662:29:61;;31623:69;31620:95;;;31695:18;;:::i;31726:240::-;31764:7;31843:1;31839:2;31828:17;31824:1;31820:2;31809:17;31805:41;31881:11;31877:2;31866:27;31855:38;;31924:11;31915:7;31912:24;31902:58;;31940:18;;:::i;31971:288::-;32009:1;32051;32047:2;32036:17;32088:1;32084:2;32073:17;32109:3;32099:37;;32116:18;;:::i;:::-;-1:-1:-1;;;;;;32152:32:61;;-1:-1:-1;;32186:15:61;;32148:54;32145:80;;;32205:18;;:::i;:::-;32239:14;;;31971:288;-1:-1:-1;;;31971:288:61:o;32264:212::-;32361:2;32331:17;;;32350;;;;32327:41;-1:-1:-1;;;;;32383:28:61;;-1:-1:-1;;;;;;32413:33:61;;32380:67;32377:93;;;32450:18;;:::i;33860:400::-;-1:-1:-1;;;;;34143:15:61;;;34125:34;;34195:15;;;;34190:2;34175:18;;34168:43;34242:2;34227:18;;34220:34;;;;34075:2;34060:18;;33860:400::o;34265:305::-;34352:6;34360;34368;34421:2;34409:9;34400:7;34396:23;34392:32;34389:52;;;34437:1;34434;34427:12;34389:52;34466:9;34460:16;34450:26;;34516:2;34505:9;34501:18;34495:25;34485:35;;34560:2;34549:9;34545:18;34539:25;34529:35;;34265:305;;;;;:::o;34575:282::-;34676:6;34729:2;34717:9;34708:7;34704:23;34700:32;34697:52;;;34745:1;34742;34735:12;34697:52;34777:9;34771:16;34796:31;34821:5;34796:31;:::i;35953:375::-;-1:-1:-1;;;;;36211:15:61;;;36193:34;;36258:2;36243:18;;36236:34;;;;36306:15;;;36301:2;36286:18;;36279:43;36143:2;36128:18;;35953:375::o;38331:450::-;38552:6;38541:9;38534:25;38595:2;38590;38579:9;38575:18;38568:30;38515:4;38621:45;38662:2;38651:9;38647:18;38639:6;38621:45;:::i;:::-;38714:9;38706:6;38702:22;38697:2;38686:9;38682:18;38675:50;38742:33;38768:6;38760;38742:33;:::i;39197:151::-;39287:4;39280:12;;;39266;;;39262:31;;39305:14;;39302:40;;;39322:18;;:::i;39353:422::-;39442:1;39485:5;39442:1;39499:270;39520:7;39510:8;39507:21;39499:270;;;39579:4;39575:1;39571:6;39567:17;39561:4;39558:27;39555:53;;;39588:18;;:::i;:::-;39638:7;39628:8;39624:22;39621:55;;;39658:16;;;;39621:55;39737:22;;;;39697:15;;;;39499:270;;;39503:3;39353:422;;;;;:::o;39780:806::-;39829:5;39859:8;39849:80;;-1:-1:-1;39900:1:61;39914:5;;39849:80;39948:4;39938:76;;-1:-1:-1;39985:1:61;39999:5;;39938:76;40030:4;40048:1;40043:59;;;;40116:1;40111:130;;;;40023:218;;40043:59;40073:1;40064:10;;40087:5;;;40111:130;40148:3;40138:8;40135:17;40132:43;;;40155:18;;:::i;:::-;-1:-1:-1;;40211:1:61;40197:16;;40226:5;;40023:218;;40325:2;40315:8;40312:16;40306:3;40300:4;40297:13;40293:36;40287:2;40277:8;40274:16;40269:2;40263:4;40260:12;40256:35;40253:77;40250:159;;;-1:-1:-1;40362:19:61;;;40394:5;;40250:159;40441:34;40466:8;40460:4;40441:34;:::i;:::-;40511:6;40507:1;40503:6;40499:19;40490:7;40487:32;40484:58;;;40522:18;;:::i;:::-;40560:20;;39780:806;-1:-1:-1;;;39780:806:61:o;40591:140::-;40649:5;40678:47;40719:4;40709:8;40705:19;40699:4;40678:47;:::i;40736:168::-;40809:9;;;40840;;40857:15;;;40851:22;;40837:37;40827:71;;40878:18;;:::i;40909:274::-;-1:-1:-1;;;;;41101:32:61;;;;41083:51;;41165:2;41150:18;;41143:34;41071:2;41056:18;;40909:274::o;41978:462::-;42073:6;42081;42089;42097;42150:3;42138:9;42129:7;42125:23;42121:33;42118:53;;;42167:1;42164;42157:12;42118:53;42196:9;42190:16;42180:26;;42249:2;42238:9;42234:18;42228:25;42297:5;42293:2;42282:21;42275:5;42272:32;42262:60;;42318:1;42315;42308:12;42262:60;42386:2;42371:18;;42365:25;42430:2;42415:18;;;42409:25;41978:462;;42341:5;;-1:-1:-1;41978:462:61;-1:-1:-1;;;41978:462:61:o;42724:732::-;-1:-1:-1;;;;;43067:15:61;;;43049:34;;43119:15;;;43114:2;43099:18;;43092:43;43171:15;;43166:2;43151:18;;43144:43;43218:2;43203:18;;43196:34;;;43267:3;43261;43246:19;;43239:32;;;42992:4;;43294:46;;43320:19;;43312:6;43294:46;:::i;:::-;43389:9;43381:6;43377:22;43371:3;43360:9;43356:19;43349:51;43417:33;43443:6;43435;43417:33;:::i;43461:522::-;-1:-1:-1;;;;;43747:15:61;;;43729:34;;43799:15;;43794:2;43779:18;;43772:43;43862:2;43851:22;;;43846:2;43831:18;;43824:50;43910:3;43905:2;43890:18;;43883:31;;;43672:4;;43931:46;;43957:19;;43949:6;43931:46;:::i;43988:510::-;-1:-1:-1;;;;;44243:32:61;;44225:51;;44312:2;44307;44292:18;;44285:30;;;-1:-1:-1;;44338:45:61;;44364:18;;44356:6;44338:45;:::i;44503:647::-;44582:6;44635:2;44623:9;44614:7;44610:23;44606:32;44603:52;;;44651:1;44648;44641:12;44603:52;44678:16;;-1:-1:-1;;;;;44706:30:61;;44703:50;;;44749:1;44746;44739:12;44703:50;44772:22;;44825:4;44817:13;;44813:27;-1:-1:-1;44803:55:61;;44854:1;44851;44844:12;44803:55;44883:2;44877:9;44908:48;44924:31;44952:2;44924:31;:::i;44908:48::-;44979:2;44972:5;44965:17;45019:7;45014:2;45009;45005;45001:11;44997:20;44994:33;44991:53;;;45040:1;45037;45030:12;44991:53;45053:67;45117:2;45112;45105:5;45101:14;45096:2;45092;45088:11;45053:67;:::i;46254:287::-;46383:3;46421:6;46415:13;46437:66;46496:6;46491:3;46484:4;46476:6;46472:17;46437:66;:::i;:::-;46519:16;;;;;46254:287;-1:-1:-1;;46254:287:61:o",
    "linkReferences": {},
    "immutableReferences": {
      "49000": [
        {
          "start": 1378,
          "length": 32
        },
        {
          "start": 4354,
          "length": 32
        },
        {
          "start": 4467,
          "length": 32
        },
        {
          "start": 5357,
          "length": 32
        },
        {
          "start": 5640,
          "length": 32
        },
        {
          "start": 5847,
          "length": 32
        },
        {
          "start": 6461,
          "length": 32
        },
        {
          "start": 6831,
          "length": 32
        },
        {
          "start": 8695,
          "length": 32
        },
        {
          "start": 10069,
          "length": 32
        },
        {
          "start": 10271,
          "length": 32
        },
        {
          "start": 10423,
          "length": 32
        },
        {
          "start": 10527,
          "length": 32
        },
        {
          "start": 10665,
          "length": 32
        },
        {
          "start": 12740,
          "length": 32
        },
        {
          "start": 12907,
          "length": 32
        },
        {
          "start": 17468,
          "length": 32
        },
        {
          "start": 18043,
          "length": 32
        }
      ],
      "51349": [
        {
          "start": 3221,
          "length": 32
        }
      ],
      "51352": [
        {
          "start": 1943,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "castrate()": "9903ad38",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getCodeAddress()": "50d75d25",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "initialize(string,string,address)": "077f224a",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "updateCode(address)": "46951954",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALREADY_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL_REACHED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege[]\",\"name\":\"sponsors\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"initialize(string,string,address)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"}},\"stateVariables\":{\"owner\":{\"details\":\"Returns the address of the current owner.\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"events\":{\"PROTEGE_UPDATED(address,address,uint8,uint32,uint32)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"MAX_SPONSORSHIP_LEVEL()\":{\"notice\":\"Constants\"},\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x59b95328f053979a6b7e79c92814b5d7372f17add584d62053bf9ca556df0d9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60706f3eb8e3ae7fd9afba22869d2717edc5b43ffb4be02370f92178af93d122\",\"dweb:/ipfs/QmWqPJDkzzetVPw5tHeWSE83grMyrLvLfS2BFJ18Sf1Btb\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0x52d8be84927207a8090a4afa34c13721af11c26f9661924285774dc4d7c391f6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://82647e406994bec8fc32f3ee12a8eb05a6d9d408e354c760f203e6234321dcb0\",\"dweb:/ipfs/QmSFRXPbwwYi7uJGW6UrSXdXHoPyXDdjEPPru2fab2HxPo\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9\",\"dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MAX_SPONSORSHIP_LEVEL_REACHED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege[]",
              "name": "sponsors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "initialize(string,string,address)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_SPONSORSHIP_LEVEL()": {
            "notice": "Constants"
          },
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x59b95328f053979a6b7e79c92814b5d7372f17add584d62053bf9ca556df0d9d",
        "urls": [
          "bzz-raw://60706f3eb8e3ae7fd9afba22869d2717edc5b43ffb4be02370f92178af93d122",
          "dweb:/ipfs/QmWqPJDkzzetVPw5tHeWSE83grMyrLvLfS2BFJ18Sf1Btb"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0x52d8be84927207a8090a4afa34c13721af11c26f9661924285774dc4d7c391f6",
        "urls": [
          "bzz-raw://82647e406994bec8fc32f3ee12a8eb05a6d9d408e354c760f203e6234321dcb0",
          "dweb:/ipfs/QmSFRXPbwwYi7uJGW6UrSXdXHoPyXDdjEPPru2fab2HxPo"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf",
        "urls": [
          "bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9",
          "dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 51168,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        46647
      ],
      "IConstantOutflowNFT": [
        46701
      ],
      "IERC20": [
        39139
      ],
      "ISuperToken": [
        47390
      ],
      "ISuperfluid": [
        48063
      ],
      "ISuperfluidClub": [
        51297
      ],
      "SuperToken": [
        53061
      ],
      "SuperTokenV1Library": [
        45301
      ],
      "SuperfluidClub": [
        51167
      ],
      "UUPSProxiable": [
        49987
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7690:57",
    "nodes": [
      {
        "id": 50505,
        "nodeType": "PragmaDirective",
        "src": "32:24:57",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 50507,
        "nodeType": "ImportDirective",
        "src": "58:114:57",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51168,
        "sourceUnit": 45302,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50506,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45301,
              "src": "66:19:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50513,
        "nodeType": "ImportDirective",
        "src": "173:117:57",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51168,
        "sourceUnit": 53062,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50508,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53061,
              "src": "181:10:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50509,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48063,
              "src": "193:11:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50510,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46701,
              "src": "206:19:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50511,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46647,
              "src": "227:18:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50512,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39139,
              "src": "247:6:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50516,
        "nodeType": "ImportDirective",
        "src": "291:78:57",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51168,
        "sourceUnit": 51298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50514,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51297,
              "src": "299:15:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 50515,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47390,
              "src": "316:11:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50518,
        "nodeType": "ImportDirective",
        "src": "370:111:57",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51168,
        "sourceUnit": 49988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50517,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49987,
              "src": "378:13:57",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51167,
        "nodeType": "ContractDefinition",
        "src": "589:7132:57",
        "nodes": [
          {
            "id": 50529,
            "nodeType": "UsingForDirective",
            "src": "665:42:57",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 50526,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "671:19:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45301,
              "src": "671:19:57"
            },
            "typeName": {
              "id": 50528,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50527,
                "name": "ISuperToken",
                "nameLocations": [
                  "695:11:57"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47390,
                "src": "695:11:57"
              },
              "referencedDeclaration": 47390,
              "src": "695:11:57",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$47390",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 50531,
            "nodeType": "ErrorDefinition",
            "src": "713:18:57",
            "nodes": [],
            "errorSelector": "71d78b12",
            "name": "NOT_OWNER",
            "nameLocation": "719:9:57",
            "parameters": {
              "id": 50530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:2:57"
            }
          },
          {
            "id": 50533,
            "nodeType": "ErrorDefinition",
            "src": "736:20:57",
            "nodes": [],
            "errorSelector": "0733d548",
            "name": "NOT_PROTEGE",
            "nameLocation": "742:11:57",
            "parameters": {
              "id": 50532,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:2:57"
            }
          },
          {
            "id": 50535,
            "nodeType": "ErrorDefinition",
            "src": "761:24:57",
            "nodes": [],
            "errorSelector": "19c00a85",
            "name": "ALREADY_PROTEGE",
            "nameLocation": "767:15:57",
            "parameters": {
              "id": 50534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:2:57"
            }
          },
          {
            "id": 50537,
            "nodeType": "ErrorDefinition",
            "src": "790:38:57",
            "nodes": [],
            "errorSelector": "a2c3d1a5",
            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
            "nameLocation": "796:29:57",
            "parameters": {
              "id": 50536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:57"
            }
          },
          {
            "id": 50550,
            "nodeType": "ModifierDefinition",
            "src": "834:116:57",
            "nodes": [],
            "body": {
              "id": 50549,
              "nodeType": "Block",
              "src": "855:95:57",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 50542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50539,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "869:3:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50540,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "873:6:57",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "869:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 50541,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50558,
                      "src": "883:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "869:19:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50547,
                  "nodeType": "IfStatement",
                  "src": "865:68:57",
                  "trueBody": {
                    "id": 50546,
                    "nodeType": "Block",
                    "src": "890:43:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50543,
                            "name": "NOT_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50531,
                            "src": "911:9:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "911:11:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50545,
                        "nodeType": "RevertStatement",
                        "src": "904:18:57"
                      }
                    ]
                  }
                },
                {
                  "id": 50548,
                  "nodeType": "PlaceholderStatement",
                  "src": "942:1:57"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "843:9:57",
            "parameters": {
              "id": 50538,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "852:2:57"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50553,
            "nodeType": "VariableDeclaration",
            "src": "973:49:57",
            "nodes": [],
            "baseFunctions": [
              51210
            ],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "997:21:57",
            "scope": 51167,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50551,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "973:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 50552,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1021:1:57",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "id": 50556,
            "nodeType": "VariableDeclaration",
            "src": "1028:64:57",
            "nodes": [],
            "baseFunctions": [
              51215
            ],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "1052:28:57",
            "scope": 51167,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50554,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1028:7:57",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 50555,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1083:9:57",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 50558,
            "nodeType": "VariableDeclaration",
            "src": "1122:20:57",
            "nodes": [],
            "baseFunctions": [
              51296
            ],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1137:5:57",
            "scope": 51167,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50557,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1122:7:57",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50563,
            "nodeType": "VariableDeclaration",
            "src": "1148:61:57",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "proteges",
            "nameLocation": "1201:8:57",
            "scope": 51167,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
              "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 50562,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 50559,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1156:7:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1148:43:57",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50561,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50560,
                  "name": "ISuperfluidClub.Protege",
                  "nameLocations": [
                    "1167:15:57",
                    "1183:7:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51226,
                  "src": "1167:23:57"
                },
                "referencedDeclaration": 51226,
                "src": "1167:23:57",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                  "typeString": "struct ISuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 50569,
            "nodeType": "EventDefinition",
            "src": "1216:84:57",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "name": "OwnershipTransferred",
            "nameLocation": "1222:20:57",
            "parameters": {
              "id": 50568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50565,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1259:13:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50569,
                  "src": "1243:29:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50567,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1290:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50569,
                  "src": "1274:24:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1242:57:57"
            }
          },
          {
            "id": 50587,
            "nodeType": "FunctionDefinition",
            "src": "1306:178:57",
            "nodes": [],
            "body": {
              "id": 50586,
              "nodeType": "Block",
              "src": "1482:2:57",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 50581,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50572,
                    "src": "1433:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$48063",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 50582,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50575,
                    "src": "1439:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$46701",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 50583,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50578,
                    "src": "1459:17:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$46647",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 50584,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50580,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1422:10:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53061,
                  "src": "1422:10:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "1422:55:57"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50572,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1330:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50587,
                  "src": "1318:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$48063",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 50571,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50570,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1318:11:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48063,
                      "src": "1318:11:57"
                    },
                    "referencedDeclaration": 48063,
                    "src": "1318:11:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$48063",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50575,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1356:18:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50587,
                  "src": "1336:38:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$46701",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 50574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50573,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1336:19:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46701,
                      "src": "1336:19:57"
                    },
                    "referencedDeclaration": 46701,
                    "src": "1336:19:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$46701",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50578,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1395:17:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50587,
                  "src": "1376:36:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$46647",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 50577,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50576,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1376:18:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 46647,
                      "src": "1376:18:57"
                    },
                    "referencedDeclaration": 46647,
                    "src": "1376:18:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$46647",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1317:96:57"
            },
            "returnParameters": {
              "id": 50585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1482:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50636,
            "nodeType": "FunctionDefinition",
            "src": "1545:304:57",
            "nodes": [],
            "body": {
              "id": 50635,
              "nodeType": "Block",
              "src": "1645:204:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50598,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50558,
                      "src": "1655:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50599,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50594,
                      "src": "1663:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1655:16:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50601,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:16:57"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50602,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1681:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 50604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1686:8:57",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49921,
                      "src": "1681:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 50605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1681:15:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50606,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:15:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 50613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1737:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 50612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1729:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50611,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1729:7:57",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1729:10:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50610,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39139,
                          "src": "1722:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$39139_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 50615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1722:18:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$39139",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1742:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 50617,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50590,
                        "src": "1745:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 50618,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50592,
                        "src": "1751:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$39139",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 50607,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1706:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 50609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1711:10:57",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51502,
                      "src": "1706:15:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$39139_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 50619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1706:52:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50620,
                  "nodeType": "ExpressionStatement",
                  "src": "1706:52:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50626,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1790:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 50625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1782:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50624,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1782:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1782:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 50628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1797:30:57",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1839:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1829:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 50629,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1833:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 50632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1829:12:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50621,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1768:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 50623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1773:8:57",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52428,
                      "src": "1768:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 50633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:74:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50634,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:74:57"
                }
              ]
            },
            "baseFunctions": [
              51287
            ],
            "documentation": {
              "id": 50588,
              "nodeType": "StructuredDocumentation",
              "src": "1490:50:57",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1554:10:57",
            "overrides": {
              "id": 50596,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1636:8:57"
            },
            "parameters": {
              "id": 50595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50590,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1581:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50636,
                  "src": "1565:20:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50589,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50592,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1603:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50636,
                  "src": "1587:22:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 50591,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1587:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50594,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1619:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50636,
                  "src": "1611:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50593,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1564:64:57"
            },
            "returnParameters": {
              "id": 50597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1645:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50656,
            "nodeType": "FunctionDefinition",
            "src": "1909:135:57",
            "nodes": [],
            "body": {
              "id": 50655,
              "nodeType": "Block",
              "src": "1981:63:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 50653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 50645,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50563,
                          "src": "1998:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 50647,
                        "indexExpression": {
                          "id": 50646,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50639,
                          "src": "2007:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1998:17:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$51226_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 50648,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2016:7:57",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51217,
                      "src": "1998:25:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 50651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2035:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 50650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2027:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 50649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:57",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 50652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2027:10:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1998:39:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 50644,
                  "id": 50654,
                  "nodeType": "Return",
                  "src": "1991:46:57"
                }
              ]
            },
            "baseFunctions": [
              51243
            ],
            "documentation": {
              "id": 50637,
              "nodeType": "StructuredDocumentation",
              "src": "1855:49:57",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "1918:9:57",
            "overrides": {
              "id": 50641,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1957:8:57"
            },
            "parameters": {
              "id": 50640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50639,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "1936:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50656,
                  "src": "1928:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1928:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1927:17:57"
            },
            "returnParameters": {
              "id": 50644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50643,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50656,
                  "src": "1975:4:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50642,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:4:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1974:6:57"
            },
            "scope": 51167,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50671,
            "nodeType": "FunctionDefinition",
            "src": "2090:142:57",
            "nodes": [],
            "body": {
              "id": 50670,
              "nodeType": "Block",
              "src": "2191:41:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 50666,
                      "name": "proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50563,
                      "src": "2208:8:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                        "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 50668,
                    "indexExpression": {
                      "id": 50667,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50659,
                      "src": "2217:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2208:17:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$51226_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 50665,
                  "id": 50669,
                  "nodeType": "Return",
                  "src": "2201:24:57"
                }
              ]
            },
            "baseFunctions": [
              51235
            ],
            "documentation": {
              "id": 50657,
              "nodeType": "StructuredDocumentation",
              "src": "2050:35:57",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "2099:10:57",
            "overrides": {
              "id": 50661,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2141:8:57"
            },
            "parameters": {
              "id": 50660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50659,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2118:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50671,
                  "src": "2110:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2110:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2109:17:57"
            },
            "returnParameters": {
              "id": 50665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50664,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50671,
                  "src": "2159:30:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$51226_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 50663,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50662,
                      "name": "ISuperfluidClub.Protege",
                      "nameLocations": [
                        "2159:15:57",
                        "2175:7:57"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51226,
                      "src": "2159:23:57"
                    },
                    "referencedDeclaration": 51226,
                    "src": "2159:23:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2158:32:57"
            },
            "scope": 51167,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50708,
            "nodeType": "FunctionDefinition",
            "src": "2301:329:57",
            "nodes": [],
            "body": {
              "id": 50707,
              "nodeType": "Block",
              "src": "2457:173:57",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    50683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50683,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2475:1:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 50707,
                      "src": "2467:9:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2467:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50685,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 50684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2479:1:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2467:13:57"
                },
                {
                  "body": {
                    "id": 50705,
                    "nodeType": "Block",
                    "src": "2517:107:57",
                    "statements": [
                      {
                        "expression": {
                          "id": 50696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 50689,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50680,
                              "src": "2531:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$51226_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ISuperfluidClub.Protege memory[] memory"
                              }
                            },
                            "id": 50692,
                            "indexExpression": {
                              "id": 50691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2540:3:57",
                              "subExpression": {
                                "id": 50690,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50683,
                                "src": "2540:1:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2531:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$51226_memory_ptr",
                              "typeString": "struct ISuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 50693,
                              "name": "proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50563,
                              "src": "2547:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 50695,
                            "indexExpression": {
                              "id": 50694,
                              "name": "protege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50674,
                              "src": "2556:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2547:17:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$51226_storage",
                              "typeString": "struct ISuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2531:33:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$51226_memory_ptr",
                            "typeString": "struct ISuperfluidClub.Protege memory"
                          }
                        },
                        "id": 50697,
                        "nodeType": "ExpressionStatement",
                        "src": "2531:33:57"
                      },
                      {
                        "expression": {
                          "id": 50703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50698,
                            "name": "protege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50674,
                            "src": "2578:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 50699,
                                "name": "proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50563,
                                "src": "2588:8:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 50701,
                              "indexExpression": {
                                "id": 50700,
                                "name": "protege",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50674,
                                "src": "2597:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2588:17:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$51226_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 50702,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2606:7:57",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51217,
                            "src": "2588:25:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2578:35:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50704,
                        "nodeType": "ExpressionStatement",
                        "src": "2578:35:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 50687,
                        "name": "protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50674,
                        "src": "2507:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50686,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50656,
                      "src": "2497:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 50688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:18:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50706,
                  "nodeType": "WhileStatement",
                  "src": "2490:134:57"
                }
              ]
            },
            "baseFunctions": [
              51253
            ],
            "documentation": {
              "id": 50672,
              "nodeType": "StructuredDocumentation",
              "src": "2238:58:57",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2310:18:57",
            "overrides": {
              "id": 50676,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2384:8:57"
            },
            "parameters": {
              "id": 50675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50674,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2337:7:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50708,
                  "src": "2329:15:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2329:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2328:17:57"
            },
            "returnParameters": {
              "id": 50681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50680,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2443:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50708,
                  "src": "2410:41:57",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$51226_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50678,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50677,
                        "name": "ISuperfluidClub.Protege",
                        "nameLocations": [
                          "2410:15:57",
                          "2426:7:57"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 51226,
                        "src": "2410:23:57"
                      },
                      "referencedDeclaration": 51226,
                      "src": "2410:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                        "typeString": "struct ISuperfluidClub.Protege"
                      }
                    },
                    "id": 50679,
                    "nodeType": "ArrayTypeName",
                    "src": "2410:25:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$51226_storage_$dyn_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2409:43:57"
            },
            "scope": 51167,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50757,
            "nodeType": "FunctionDefinition",
            "src": "2815:334:57",
            "nodes": [],
            "body": {
              "id": 50756,
              "nodeType": "Block",
              "src": "2889:260:57",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 50730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 50725,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2950:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 50724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2942:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50723,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2942:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2942:13:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 50727,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50711,
                          "src": "2957:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 50719,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2923:4:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 50718,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2915:7:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50717,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2915:7:57",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2915:13:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50716,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47390,
                            "src": "2903:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$47390_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 50721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:26:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$47390",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 50722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2930:11:57",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43609,
                        "src": "2903:38:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$47390_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$47390_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 50728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2903:63:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2970:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2903:68:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 50754,
                    "nodeType": "Block",
                    "src": "3061:82:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50750,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50711,
                              "src": "3113:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 50751,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50713,
                              "src": "3123:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 50746,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3095:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 50745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3087:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50744,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3087:7:57",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50747,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3087:13:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 50743,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47390,
                                "src": "3075:11:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$47390_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 50748,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3075:26:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$47390",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 50749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3102:10:57",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42214,
                            "src": "3075:37:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$47390_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$47390_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 50752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3075:57:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50753,
                        "nodeType": "ExpressionStatement",
                        "src": "3075:57:57"
                      }
                    ]
                  },
                  "id": 50755,
                  "nodeType": "IfStatement",
                  "src": "2899:244:57",
                  "trueBody": {
                    "id": 50742,
                    "nodeType": "Block",
                    "src": "2973:82:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50738,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50711,
                              "src": "3025:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 50739,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50713,
                              "src": "3035:8:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 50734,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3007:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 50733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2999:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50732,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2999:7:57",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2999:13:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 50731,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47390,
                                "src": "2987:11:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$47390_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 50736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2987:26:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$47390",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 50737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3014:10:57",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42286,
                            "src": "2987:37:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$47390_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$47390_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 50740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2987:57:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 50741,
                        "nodeType": "ExpressionStatement",
                        "src": "2987:57:57"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 50709,
              "nodeType": "StructuredDocumentation",
              "src": "2636:174:57",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "2824:21:57",
            "parameters": {
              "id": 50714,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50711,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2854:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50757,
                  "src": "2846:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2846:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50713,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "2870:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 50757,
                  "src": "2864:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 50712,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2864:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2845:34:57"
            },
            "returnParameters": {
              "id": 50715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2889:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51016,
            "nodeType": "FunctionDefinition",
            "src": "3207:2884:57",
            "nodes": [],
            "body": {
              "id": 51015,
              "nodeType": "Block",
              "src": "3278:2813:57",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 50765,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50760,
                        "src": "3302:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 50764,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50656,
                      "src": "3292:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 50766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3292:21:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50771,
                  "nodeType": "IfStatement",
                  "src": "3288:76:57",
                  "trueBody": {
                    "id": 50770,
                    "nodeType": "Block",
                    "src": "3315:49:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50767,
                            "name": "ALREADY_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50535,
                            "src": "3336:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3336:17:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50769,
                        "nodeType": "RevertStatement",
                        "src": "3329:24:57"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50773,
                    50775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50773,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3434:13:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "3426:21:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50772,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3426:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50775,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3454:7:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "3449:12:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50774,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3449:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50792,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 50779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 50776,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3466:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3470:6:57",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3466:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 50778,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50558,
                            "src": "3480:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3466:19:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 50780,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3465:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 50787,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3514:3:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3518:6:57",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3514:10:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 50789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3526:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 50790,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3513:19:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 50791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3465:67:57",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 50783,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3498:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 50782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3490:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50781,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3490:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3490:13:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 50785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3505:4:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 50786,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3489:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3425:107:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 50799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3587:25:57",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 50794,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50773,
                            "src": "3598:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50793,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50656,
                          "src": "3588:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 50795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3588:24:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 50798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3616:8:57",
                      "subExpression": {
                        "id": 50797,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50775,
                        "src": "3617:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3587:37:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50804,
                  "nodeType": "IfStatement",
                  "src": "3583:88:57",
                  "trueBody": {
                    "id": 50803,
                    "nodeType": "Block",
                    "src": "3626:45:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50800,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50533,
                            "src": "3647:11:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3647:13:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50802,
                        "nodeType": "RevertStatement",
                        "src": "3640:20:57"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50806
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50806,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "3689:10:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "3681:18:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3681:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50809,
                  "initialValue": {
                    "expression": {
                      "id": 50807,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3702:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 50808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3706:5:57",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3702:9:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3681:30:57"
                },
                {
                  "assignments": [
                    50811
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50811,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "3729:9:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "3721:17:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50810,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3721:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50818,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 50813,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50563,
                            "src": "3745:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 50815,
                          "indexExpression": {
                            "id": 50814,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50773,
                            "src": "3754:13:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3745:23:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$51226_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 50816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3769:23:57",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51223,
                        "src": "3745:47:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 50812,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51078,
                      "src": "3741:3:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 50817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3741:52:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3721:72:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50824,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50811,
                        "src": "3827:9:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 50821,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50558,
                            "src": "3811:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3803:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 50819,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3803:8:57",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3803:14:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 50823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3818:8:57",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3803:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 50825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3803:34:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50826,
                  "nodeType": "ExpressionStatement",
                  "src": "3803:34:57"
                },
                {
                  "expression": {
                    "id": 50829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50827,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50806,
                      "src": "3848:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 50828,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50811,
                      "src": "3862:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3848:23:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50830,
                  "nodeType": "ExpressionStatement",
                  "src": "3848:23:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 50831,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50563,
                          "src": "3885:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 50833,
                        "indexExpression": {
                          "id": 50832,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50773,
                          "src": "3894:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3885:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$51226_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 50834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3909:5:57",
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51219,
                      "src": "3885:29:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50835,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50553,
                      "src": "3918:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3885:54:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50841,
                  "nodeType": "IfStatement",
                  "src": "3881:123:57",
                  "trueBody": {
                    "id": 50840,
                    "nodeType": "Block",
                    "src": "3941:63:57",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50837,
                            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50537,
                            "src": "3962:29:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3962:31:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50839,
                        "nodeType": "RevertStatement",
                        "src": "3955:38:57"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 50849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4078:43:57",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 50842,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50563,
                          "src": "4078:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 50847,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 50845,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4095:4:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 50844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4087:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50843,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4087:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4087:13:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4078:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$51226_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 50848,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4102:17:57",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51221,
                      "src": "4078:41:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 50850,
                  "nodeType": "ExpressionStatement",
                  "src": "4078:43:57"
                },
                {
                  "expression": {
                    "id": 50855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4132:49:57",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 50851,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50563,
                          "src": "4132:8:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 50853,
                        "indexExpression": {
                          "id": 50852,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50773,
                          "src": "4141:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4132:23:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$51226_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 50854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4156:23:57",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51223,
                      "src": "4132:47:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 50856,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:49:57"
                },
                {
                  "assignments": [
                    50858
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50858,
                      "mutability": "mutable",
                      "name": "actualSponsorLevel",
                      "nameLocation": "4197:18:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "4191:24:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 50857,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4191:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50863,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 50859,
                        "name": "proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50563,
                        "src": "4218:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 50861,
                      "indexExpression": {
                        "id": 50860,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50773,
                        "src": "4227:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4218:23:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$51226_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 50862,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4242:5:57",
                    "memberName": "level",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51219,
                    "src": "4218:29:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4191:56:57"
                },
                {
                  "assignments": [
                    50865
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50865,
                      "mutability": "mutable",
                      "name": "level",
                      "nameLocation": "4263:5:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "4257:11:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 50864,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4257:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50869,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 50868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50866,
                      "name": "actualSponsorLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50858,
                      "src": "4271:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 50867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4292:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4271:22:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4257:36:57"
                },
                {
                  "assignments": [
                    50871
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50871,
                      "mutability": "mutable",
                      "name": "protegeDesiredFlowRate",
                      "nameLocation": "4309:22:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "4303:28:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 50870,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "4303:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50880,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 50875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 50873,
                                "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50556,
                                "src": "4343:28:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 50874,
                                "name": "level",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50865,
                                "src": "4374:5:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "4343:36:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 50876,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4342:38:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3836343030",
                          "id": 50877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4383:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "86400"
                        },
                        "src": "4342:46:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50872,
                      "name": "toInt96",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51166,
                      "src": "4334:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                        "typeString": "function (uint256) pure returns (int96)"
                      }
                    },
                    "id": 50879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4334:55:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4303:86:57"
                },
                {
                  "assignments": [
                    50882
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50882,
                      "mutability": "mutable",
                      "name": "distributableAmount",
                      "nameLocation": "4464:19:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "4458:25:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 50881,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "4458:5:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50891,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 50890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 50886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 50884,
                                "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50556,
                                "src": "4495:28:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3836343030",
                                "id": 50885,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4526:5:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "86400"
                              },
                              "src": "4495:36:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 50887,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4494:38:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 50883,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51166,
                        "src": "4486:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 50888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4486:47:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 50889,
                      "name": "protegeDesiredFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50871,
                      "src": "4536:22:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "4486:72:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4458:100:57"
                },
                {
                  "expression": {
                    "id": 50902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50892,
                        "name": "proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50563,
                        "src": "4568:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 50894,
                      "indexExpression": {
                        "id": 50893,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50760,
                        "src": "4577:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4568:20:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$51226_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50896,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50773,
                          "src": "4622:13:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 50897,
                          "name": "level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50865,
                          "src": "4656:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 50898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4694:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 50899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4734:1:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 50900,
                          "name": "protegeDesiredFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50871,
                          "src": "4766:22:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 50895,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51226,
                        "src": "4591:7:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$51226_storage_ptr_$",
                          "typeString": "type(struct ISuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 50901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4613:7:57",
                        "4649:5:57",
                        "4675:17:57",
                        "4709:23:57",
                        "4749:15:57"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4591:208:57",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$51226_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege memory"
                      }
                    },
                    "src": "4568:231:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$51226_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 50903,
                  "nodeType": "ExpressionStatement",
                  "src": "4568:231:57"
                },
                {
                  "assignments": [
                    50905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50905,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4818:1:57",
                      "nodeType": "VariableDeclaration",
                      "scope": 51015,
                      "src": "4810:9:57",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50904,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4810:7:57",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50907,
                  "initialValue": {
                    "id": 50906,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50773,
                    "src": "4822:13:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4810:25:57"
                },
                {
                  "body": {
                    "id": 50988,
                    "nodeType": "Block",
                    "src": "4866:936:57",
                    "statements": [
                      {
                        "assignments": [
                          50913
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 50913,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4929:16:57",
                            "nodeType": "VariableDeclaration",
                            "scope": 50988,
                            "src": "4913:32:57",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                              "typeString": "struct ISuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 50912,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 50911,
                                "name": "Protege",
                                "nameLocations": [
                                  "4913:7:57"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 51226,
                                "src": "4913:7:57"
                              },
                              "referencedDeclaration": 51226,
                              "src": "4913:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 50917,
                        "initialValue": {
                          "baseExpression": {
                            "id": 50914,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50563,
                            "src": "4948:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 50916,
                          "indexExpression": {
                            "id": 50915,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50905,
                            "src": "4957:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4948:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$51226_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4913:46:57"
                      },
                      {
                        "expression": {
                          "id": 50921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4973:36:57",
                          "subExpression": {
                            "expression": {
                              "id": 50918,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50913,
                              "src": "4973:16:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 50920,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4990:17:57",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51221,
                            "src": "4973:34:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 50922,
                        "nodeType": "ExpressionStatement",
                        "src": "4973:36:57"
                      },
                      {
                        "assignments": [
                          50924
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 50924,
                            "mutability": "mutable",
                            "name": "sponsorDesiredFlowRate",
                            "nameLocation": "5029:22:57",
                            "nodeType": "VariableDeclaration",
                            "scope": 50988,
                            "src": "5023:28:57",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            },
                            "typeName": {
                              "id": 50923,
                              "name": "int96",
                              "nodeType": "ElementaryTypeName",
                              "src": "5023:5:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 50937,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 50928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 50925,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50913,
                                "src": "5070:16:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 50926,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5087:5:57",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51219,
                              "src": "5070:22:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 50927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5096:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5070:27:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            },
                            "id": 50935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  "id": 50932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 50930,
                                    "name": "distributableAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50882,
                                    "src": "5123:19:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3530303030",
                                    "id": 50931,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5145:5:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50000_by_1",
                                      "typeString": "int_const 50000"
                                    },
                                    "value": "50000"
                                  },
                                  "src": "5123:27:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "id": 50933,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5122:29:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030303030",
                              "id": 50934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5154:6:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            },
                            "src": "5122:38:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "id": 50936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5070:90:57",
                          "trueExpression": {
                            "id": 50929,
                            "name": "distributableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50882,
                            "src": "5100:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5023:137:57"
                      },
                      {
                        "expression": {
                          "id": 50942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 50938,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50913,
                              "src": "5174:16:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 50940,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5191:15:57",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51225,
                            "src": "5174:32:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 50941,
                            "name": "sponsorDesiredFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50924,
                            "src": "5210:22:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "5174:58:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 50943,
                        "nodeType": "ExpressionStatement",
                        "src": "5174:58:57"
                      },
                      {
                        "expression": {
                          "id": 50946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50944,
                            "name": "distributableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50882,
                            "src": "5246:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 50945,
                            "name": "sponsorDesiredFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50924,
                            "src": "5269:22:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "5246:45:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 50947,
                        "nodeType": "ExpressionStatement",
                        "src": "5246:45:57"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50949,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50905,
                              "src": "5397:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 50950,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50913,
                                "src": "5400:16:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 50951,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5417:15:57",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51225,
                              "src": "5400:32:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 50948,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50757,
                            "src": "5375:21:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 50952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5375:58:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50953,
                        "nodeType": "ExpressionStatement",
                        "src": "5375:58:57"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 50955,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50563,
                                  "src": "5486:8:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 50957,
                                "indexExpression": {
                                  "id": 50956,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50773,
                                  "src": "5495:13:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5486:23:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 50958,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5510:7:57",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51217,
                              "src": "5486:31:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 50959,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50905,
                              "src": "5535:1:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 50960,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50563,
                                  "src": "5554:8:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 50965,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 50963,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5571:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 50962,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5563:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50961,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5563:7:57",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50964,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5563:13:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5554:23:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 50966,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5578:5:57",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51219,
                              "src": "5554:29:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 50967,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50563,
                                  "src": "5601:8:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 50972,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 50970,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5618:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 50969,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5610:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50968,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5610:7:57",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50971,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5610:13:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5601:23:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 50973,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5625:17:57",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51221,
                              "src": "5601:41:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 50974,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50563,
                                  "src": "5660:8:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 50979,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 50977,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5677:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 50976,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5669:7:57",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 50975,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5669:7:57",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 50978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5669:13:57",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5660:23:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$51226_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 50980,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5684:23:57",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 51223,
                              "src": "5660:47:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 50954,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51204,
                            "src": "5453:15:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 50981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5453:268:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50982,
                        "nodeType": "EmitStatement",
                        "src": "5448:273:57"
                      },
                      {
                        "expression": {
                          "id": 50986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50983,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50905,
                            "src": "5735:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 50984,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50913,
                              "src": "5739:16:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$51226_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 50985,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5756:7:57",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 51217,
                            "src": "5739:24:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5735:28:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50987,
                        "nodeType": "ExpressionStatement",
                        "src": "5735:28:57"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 50909,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50905,
                        "src": "4862:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50908,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50656,
                      "src": "4852:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 50910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4852:12:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50989,
                  "nodeType": "WhileStatement",
                  "src": "4845:957:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50997,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50760,
                        "src": "5898:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 50998,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50563,
                            "src": "5910:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 51000,
                          "indexExpression": {
                            "id": 50999,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50760,
                            "src": "5919:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5910:20:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$51226_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 51001,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5931:15:57",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51225,
                        "src": "5910:36:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50993,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5880:4:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 50992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5872:7:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50991,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5872:7:57",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5872:13:57",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50990,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47390,
                          "src": "5860:11:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$47390_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 50995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5860:26:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$47390",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 50996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5887:10:57",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42214,
                      "src": "5860:37:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$47390_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$47390_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 51002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5860:87:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51003,
                  "nodeType": "ExpressionStatement",
                  "src": "5860:87:57"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51004,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50806,
                      "src": "5961:10:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5974:1:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5961:14:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51014,
                  "nodeType": "IfStatement",
                  "src": "5957:128:57",
                  "trueBody": {
                    "id": 51013,
                    "nodeType": "Block",
                    "src": "5977:108:57",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 51010,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50806,
                              "src": "6063:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 51007,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50760,
                              "src": "6043:10:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 51009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6054:8:57",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6043:19:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 51011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6043:31:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51012,
                        "nodeType": "ExpressionStatement",
                        "src": "6043:31:57"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              51259
            ],
            "documentation": {
              "id": 50758,
              "nodeType": "StructuredDocumentation",
              "src": "3155:47:57",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3216:7:57",
            "overrides": {
              "id": 50762,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3269:8:57"
            },
            "parameters": {
              "id": 50761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50760,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3240:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51016,
                  "src": "3224:26:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 50759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:15:57",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3223:28:57"
            },
            "returnParameters": {
              "id": 50763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3278:0:57"
            },
            "scope": 51167,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51031,
            "nodeType": "FunctionDefinition",
            "src": "6149:121:57",
            "nodes": [],
            "body": {
              "id": 51030,
              "nodeType": "Block",
              "src": "6183:87:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51021,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6214:3:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6218:6:57",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6214:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 51023,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50563,
                            "src": "6226:8:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$51226_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 51026,
                          "indexExpression": {
                            "expression": {
                              "id": 51024,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6235:3:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 51025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6239:6:57",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6235:10:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6226:20:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$51226_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 51027,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6247:15:57",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51225,
                        "src": "6226:36:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 51020,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50757,
                      "src": "6192:21:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 51028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6192:71:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51029,
                  "nodeType": "ExpressionStatement",
                  "src": "6192:71:57"
                }
              ]
            },
            "baseFunctions": [
              51263
            ],
            "documentation": {
              "id": 51017,
              "nodeType": "StructuredDocumentation",
              "src": "6097:47:57",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "6158:13:57",
            "parameters": {
              "id": 51018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6171:2:57"
            },
            "returnParameters": {
              "id": 51019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6183:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51078,
            "nodeType": "FunctionDefinition",
            "src": "6324:517:57",
            "nodes": [],
            "body": {
              "id": 51077,
              "nodeType": "Block",
              "src": "6413:428:57",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 51042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51040,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51034,
                      "src": "6427:18:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 51041,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6449:2:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6427:24:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 51048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51046,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51034,
                        "src": "6505:18:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 51047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6527:2:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "6505:24:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 51054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51052,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51034,
                          "src": "6582:18:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 51053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6604:2:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "6582:24:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 51060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 51058,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51034,
                            "src": "6659:18:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 51059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6681:2:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "6659:24:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 51066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 51064,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51034,
                              "src": "6736:18:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 51065,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6758:2:57",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "6736:24:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 51070,
                          "nodeType": "IfStatement",
                          "src": "6732:71:57",
                          "trueBody": {
                            "id": 51069,
                            "nodeType": "Block",
                            "src": "6762:41:57",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 51067,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6783:9:57",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 51039,
                                "id": 51068,
                                "nodeType": "Return",
                                "src": "6776:16:57"
                              }
                            ]
                          }
                        },
                        "id": 51071,
                        "nodeType": "IfStatement",
                        "src": "6655:148:57",
                        "trueBody": {
                          "id": 51063,
                          "nodeType": "Block",
                          "src": "6685:41:57",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "302e33",
                                "id": 51061,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6706:9:57",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 51039,
                              "id": 51062,
                              "nodeType": "Return",
                              "src": "6699:16:57"
                            }
                          ]
                        }
                      },
                      "id": 51072,
                      "nodeType": "IfStatement",
                      "src": "6578:225:57",
                      "trueBody": {
                        "id": 51057,
                        "nodeType": "Block",
                        "src": "6608:41:57",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "302e32",
                              "id": 51055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6629:9:57",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 51039,
                            "id": 51056,
                            "nodeType": "Return",
                            "src": "6622:16:57"
                          }
                        ]
                      }
                    },
                    "id": 51073,
                    "nodeType": "IfStatement",
                    "src": "6501:302:57",
                    "trueBody": {
                      "id": 51051,
                      "nodeType": "Block",
                      "src": "6531:41:57",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "302e31",
                            "id": 51049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6552:9:57",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 51039,
                          "id": 51050,
                          "nodeType": "Return",
                          "src": "6545:16:57"
                        }
                      ]
                    }
                  },
                  "id": 51074,
                  "nodeType": "IfStatement",
                  "src": "6423:380:57",
                  "trueBody": {
                    "id": 51045,
                    "nodeType": "Block",
                    "src": "6453:42:57",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 51043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6474:10:57",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 51039,
                        "id": 51044,
                        "nodeType": "Return",
                        "src": "6467:17:57"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 51075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6820:7:57",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 51039,
                  "id": 51076,
                  "nodeType": "Return",
                  "src": "6813:14:57"
                }
              ]
            },
            "baseFunctions": [
              51271
            ],
            "documentation": {
              "id": 51032,
              "nodeType": "StructuredDocumentation",
              "src": "6276:43:57",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "6333:3:57",
            "overrides": {
              "id": 51036,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6376:8:57"
            },
            "parameters": {
              "id": 51035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51034,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "6344:18:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51078,
                  "src": "6337:25:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 51033,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6337:6:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6336:27:57"
            },
            "returnParameters": {
              "id": 51039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51038,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "6402:9:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51078,
                  "src": "6394:17:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6394:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6393:19:57"
            },
            "scope": 51167,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51101,
            "nodeType": "FunctionDefinition",
            "src": "6896:116:57",
            "nodes": [],
            "body": {
              "id": 51100,
              "nodeType": "Block",
              "src": "6945:67:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51091,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6977:4:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 51090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6969:7:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6969:7:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6969:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51093,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51081,
                        "src": "6984:6:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7002:1:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "6992:9:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 51094,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6996:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 51097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6992:12:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 51086,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "6955:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$51167",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 51088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6960:8:57",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52428,
                      "src": "6955:13:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 51098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6955:50:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51099,
                  "nodeType": "ExpressionStatement",
                  "src": "6955:50:57"
                }
              ]
            },
            "baseFunctions": [
              51277
            ],
            "documentation": {
              "id": 51079,
              "nodeType": "StructuredDocumentation",
              "src": "6847:44:57",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51084,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51083,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6935:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50550,
                  "src": "6935:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "6935:9:57"
              }
            ],
            "name": "mint",
            "nameLocation": "6905:4:57",
            "parameters": {
              "id": 51082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51081,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6918:6:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51101,
                  "src": "6910:14:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51080,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6909:16:57"
            },
            "returnParameters": {
              "id": 51085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6945:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51112,
            "nodeType": "FunctionDefinition",
            "src": "7018:161:57",
            "nodes": [],
            "body": {
              "id": 51111,
              "nodeType": "Block",
              "src": "7090:89:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e636c75622e696d706c656d656e746174696f6e",
                        "id": 51108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7117:54:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.club.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        }
                      ],
                      "id": 51107,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7107:9:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 51109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:65:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 51106,
                  "id": 51110,
                  "nodeType": "Return",
                  "src": "7100:72:57"
                }
              ]
            },
            "baseFunctions": [
              49927
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "7027:13:57",
            "overrides": {
              "id": 51103,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7063:8:57"
            },
            "parameters": {
              "id": 51102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7040:2:57"
            },
            "returnParameters": {
              "id": 51106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51112,
                  "src": "7081:7:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51104,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7081:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7080:9:57"
            },
            "scope": 51167,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 51127,
            "nodeType": "FunctionDefinition",
            "src": "7185:129:57",
            "nodes": [],
            "body": {
              "id": 51126,
              "nodeType": "Block",
              "src": "7253:61:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51123,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51114,
                        "src": "7296:10:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51120,
                        "name": "UUPSProxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49987,
                        "src": "7263:13:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$49987_$",
                          "typeString": "type(contract UUPSProxiable)"
                        }
                      },
                      "id": 51122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7277:18:57",
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49980,
                      "src": "7263:32:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7263:44:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51125,
                  "nodeType": "ExpressionStatement",
                  "src": "7263:44:57"
                }
              ]
            },
            "baseFunctions": [
              49915
            ],
            "functionSelector": "46951954",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 51118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51117,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7243:9:57"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50550,
                  "src": "7243:9:57"
                },
                "nodeType": "ModifierInvocation",
                "src": "7243:9:57"
              }
            ],
            "name": "updateCode",
            "nameLocation": "7194:10:57",
            "overrides": {
              "id": 51116,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7234:8:57"
            },
            "parameters": {
              "id": 51115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51114,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "7213:10:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51127,
                  "src": "7205:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7205:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7204:20:57"
            },
            "returnParameters": {
              "id": 51119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7253:0:57"
            },
            "scope": 51167,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51133,
            "nodeType": "FunctionDefinition",
            "src": "7363:38:57",
            "nodes": [],
            "body": {
              "id": 51132,
              "nodeType": "Block",
              "src": "7399:2:57",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              51290
            ],
            "documentation": {
              "id": 51128,
              "nodeType": "StructuredDocumentation",
              "src": "7320:38:57",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 51130,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7390:8:57"
            },
            "parameters": {
              "id": 51129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7370:2:57"
            },
            "returnParameters": {
              "id": 51131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7399:0:57"
            },
            "scope": 51167,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51166,
            "nodeType": "FunctionDefinition",
            "src": "7553:166:57",
            "nodes": [],
            "body": {
              "id": 51165,
              "nodeType": "Block",
              "src": "7615:104:57",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 51154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 51142,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51136,
                          "src": "7633:5:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 51149,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7662:5:57",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 51148,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7662:5:57",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 51147,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "7657:4:57",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 51150,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7657:11:57",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 51151,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7669:3:57",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "7657:15:57",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 51146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7650:6:57",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 51145,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7650:6:57",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7650:23:57",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 51144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7642:7:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 51143,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7642:7:57",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 51153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7642:32:57",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7633:41:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 51141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7625:7:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 51155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7625:50:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51156,
                  "nodeType": "ExpressionStatement",
                  "src": "7625:50:57"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51161,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51136,
                            "src": "7705:5:57",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 51160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7698:6:57",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 51159,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "7698:6:57",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7698:13:57",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 51158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7692:5:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 51157,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "7692:5:57",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 51163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7692:20:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 51140,
                  "id": 51164,
                  "nodeType": "Return",
                  "src": "7685:27:57"
                }
              ]
            },
            "documentation": {
              "id": 51134,
              "nodeType": "StructuredDocumentation",
              "src": "7407:141:57",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "7562:7:57",
            "parameters": {
              "id": 51137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51136,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7578:5:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 51166,
                  "src": "7570:13:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7569:15:57"
            },
            "returnParameters": {
              "id": 51140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51166,
                  "src": "7608:5:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 51138,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "7608:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7607:7:57"
            },
            "scope": 51167,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50520,
              "name": "ISuperfluidClub",
              "nameLocations": [
                "616:15:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51297,
              "src": "616:15:57"
            },
            "id": 50521,
            "nodeType": "InheritanceSpecifier",
            "src": "616:15:57"
          },
          {
            "baseName": {
              "id": 50522,
              "name": "SuperToken",
              "nameLocations": [
                "633:10:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53061,
              "src": "633:10:57"
            },
            "id": 50523,
            "nodeType": "InheritanceSpecifier",
            "src": "633:10:57"
          },
          {
            "baseName": {
              "id": 50524,
              "name": "UUPSProxiable",
              "nameLocations": [
                "645:13:57"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49987,
              "src": "645:13:57"
            },
            "id": 50525,
            "nodeType": "InheritanceSpecifier",
            "src": "645:13:57"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50519,
          "nodeType": "StructuredDocumentation",
          "src": "483:104:57",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51167,
          49987,
          39061,
          53061,
          51297,
          47390,
          39857,
          39139,
          48547,
          49890,
          48488
        ],
        "name": "SuperfluidClub",
        "nameLocation": "598:14:57",
        "scope": 51168,
        "usedErrors": [
          46947,
          46949,
          46951,
          46953,
          46955,
          46957,
          46959,
          46961,
          46963,
          46965,
          46967,
          46969,
          46971,
          46973,
          48209,
          48211,
          48213,
          48215,
          48217,
          48219,
          50531,
          50533,
          50535,
          50537
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 57
}