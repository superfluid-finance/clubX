{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLAT_COST_SPONSORSHIP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "clubName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "clubSymbol",
          "type": "string"
        }
      ],
      "name": "_initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "calculateFlowRate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct SuperfluidClub.Protege[6]",
          "name": "sponsors",
          "type": "tuple[6]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct SuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldProtege",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "650:9624:115:-:0;;;970:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:95;;;;;3652:41:117;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1097:4:115;;1103:18;;1123:17;;3652:41:117;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:117;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;936:32:26;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;970:178:115;;;650:9624;;640:96:40;719:10;;640:96::o;2426:187:26:-;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:144:119:-;-1:-1:-1;;;;;102:31:119;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:119;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:119;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;650:9624:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "650:9624:115:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15989:151:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4461:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;9255:378:95:-;;;;;;;;;;-1:-1:-1;9255:378:95;;;;;:::i;:::-;;:::i;:::-;;13920:164:117;;;;;;;;;;-1:-1:-1;13920:164:117;;;;;:::i;:::-;;:::i;:::-;;;3071:14:119;;3064:22;3046:41;;3034:2;3019:18;13920:164:117;2906:187:119;1209:311:115;;;;;;;;;;-1:-1:-1;1209:311:115;;;;;:::i;:::-;;:::i;2950:118::-;;;;;;;;;;-1:-1:-1;2950:118:115;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:18:115;;;;;;;:9;:18;;;;;;;;3036:25;;;;;;;;;;;;;;;-1:-1:-1;;;3036:25:115;;;;;;;;;;;-1:-1:-1;;;3036:25:115;;;;;;;;;;;-1:-1:-1;;;3036:25:115;;;;;;;;;;;;;;;;;;;;;;2950:118;;;;;;;;:::i;19161:140:117:-;;;;;;;;;;-1:-1:-1;19161:140:117;;;;;:::i;:::-;;:::i;7322:481:95:-;;;;;;;;;;-1:-1:-1;7322:481:95;;;;;:::i;:::-;;:::i;23728:238:117:-;;;;;;;;;;-1:-1:-1;23728:238:117;;;;;:::i;:::-;;:::i;13168:106::-;;;;;;;;;;-1:-1:-1;13255:12:117;;13168:106;;;6589:25:119;;;6577:2;6562:18;13168:106:117;6443:177:119;10460:2526:95;;;;;;;;;;-1:-1:-1;10460:2526:95;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:95;1696:144;;;-1:-1:-1;;;;;8925:32:119;;;8907:51;;8895:2;8880:18;1696:144:95;8761:203:119;2580:324:115;;;;;;;;;;-1:-1:-1;2580:324:115;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14090:188:117:-;;;;;;;;;;-1:-1:-1;14090:188:117;;;;;:::i;:::-;;:::i;24400:169::-;;;;;;;;;;-1:-1:-1;24400:169:117;;;;;:::i;:::-;;:::i;8709:474:95:-;;;;;;;;;;-1:-1:-1;8709:474:95;;;;;:::i;:::-;;:::i;6296:1324:115:-;;;;;;;;;;-1:-1:-1;6296:1324:115;;;;;:::i;:::-;;:::i;3511:428:95:-;;;;;;;;;;-1:-1:-1;3511:428:95;;;;;:::i;:::-;;:::i;:::-;;;;10460:25:119;;;10516:2;10501:18;;10494:34;;;;10544:18;;;10537:34;10602:2;10587:18;;10580:34;10447:3;10432:19;3511:428:95;10231:389:119;4677:109:117;;;;;;;;;;-1:-1:-1;4677:109:117;;1425:2;10767:36:119;;10755:2;10740:18;4677:109:117;10625:184:119;5252:218:95;;;;;;;;;;-1:-1:-1;5252:218:95;;;;;:::i;:::-;;:::i;14284:217:117:-;;;;;;;;;;-1:-1:-1;14284:217:117;;;;;:::i;:::-;;:::i;17974:231::-;;;;;;;;;;-1:-1:-1;17974:231:117;;;;;:::i;:::-;;:::i;3920:480::-;;;;;;;;;;-1:-1:-1;3920:480:117;;;;;:::i;:::-;;:::i;18740:136::-;;;;;;;;;;-1:-1:-1;18740:136:117;;;;;:::i;:::-;;:::i;23115:248::-;;;;;;;;;;-1:-1:-1;23115:248:117;;;;;:::i;:::-;;:::i;9702:391:95:-;;;;;;;;;;-1:-1:-1;9702:391:95;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:117:-;;;;;;;;;;;;;;;14891:97;;;;;;;;;;-1:-1:-1;14980:1:117;14891:97;;7686:181:115;;;;;;;;;;;;;:::i;18932:173:117:-;;;;;;;;;;-1:-1:-1;18932:173:117;;;;;:::i;:::-;;:::i;22947:162::-;;;;;;;;;;-1:-1:-1;22947:162:117;;;;;:::i;:::-;;:::i;16146:440::-;;;;;;;;;;-1:-1:-1;16146:440:117;;;;;:::i;:::-;;:::i;17808:160::-;;;;;;;;;;-1:-1:-1;17808:160:117;;;;;:::i;:::-;;:::i;7871:338:95:-;;;;;;;;;;-1:-1:-1;7871:338:95;;;;;:::i;:::-;;:::i;13280:297:117:-;;;;;;;;;;-1:-1:-1;13280:297:117;;;;;:::i;:::-;;:::i;1824:101:26:-;;;;;;;;;;;;;:::i;3644:2646:115:-;;;;;;:::i;:::-;;:::i;4231:201:95:-;;;;;;;;;;-1:-1:-1;4231:201:95;;;;;:::i;:::-;;:::i;7942:175:115:-;;;;;;;;;;-1:-1:-1;7942:175:115;;;;;:::i;:::-;;:::i;:::-;;;16736:2:119;16725:22;;;;16707:41;;16695:2;16680:18;7942:175:115;16565:189:119;19339:146:117;;;;;;;;;;-1:-1:-1;19339:146:117;;;;;:::i;:::-;;:::i;8171:647:115:-;;;;;;;;;;-1:-1:-1;8171:647:115;;;;;:::i;:::-;;:::i;1201:85:26:-;;;;;;;;;;-1:-1:-1;1273:6:26;;-1:-1:-1;;;;;1273:6:26;1201:85;;15542:222:117;;;;;;;;;;-1:-1:-1;15542:222:117;;;;;:::i;:::-;;:::i;4567:104::-;;;;;;;;;;;;;:::i;14994:185::-;;;;;;;;;;-1:-1:-1;14994:185:117;;;;;:::i;:::-;;:::i;17579:223::-;;;;;;;;;;-1:-1:-1;17579:223:117;;;;;:::i;:::-;;:::i;9486:116:115:-;;;;;;;;;;-1:-1:-1;9486:116:115;;;;;:::i;:::-;;:::i;8280:359:95:-;;;;;;;;;;-1:-1:-1;8280:359:95;;;;;:::i;:::-;;:::i;18276:154:117:-;;;;;;;;;;-1:-1:-1;18276:154:117;;;;;:::i;:::-;;:::i;14507:322::-;;;;;;;;;;-1:-1:-1;14507:322:117;;;;;:::i;:::-;;:::i;13583:172::-;;;;;;;;;;-1:-1:-1;13583:172:117;;;;;:::i;:::-;;:::i;1598:58:115:-;;;;;;;;;;;;1646:10;1598:58;;1543:49;;;;;;;;;;;;1591:1;1543:49;;4438:533:95;;;;;;;;;;-1:-1:-1;4438:533:95;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:95;;;;;:::i;:::-;;:::i;17208:365:117:-;;;;;;;;;;-1:-1:-1;17208:365:117;;;;;:::i;:::-;;:::i;23369:353::-;;;;;;;;;;-1:-1:-1;23369:353:117;;;;;:::i;:::-;;:::i;23972:251::-;;;;;;;;;;-1:-1:-1;23972:251:117;;;;;:::i;:::-;;:::i;24229:165::-;;;;;;;;;;-1:-1:-1;24229:165:117;;;;;:::i;:::-;;:::i;10158:226:95:-;;;;;;;;;;-1:-1:-1;10158:226:95;;;;;:::i;:::-;;:::i;15357:179:117:-;;;;;;;;;;-1:-1:-1;15357:179:117;;;;;:::i;:::-;;:::i;3945:280:95:-;;;;;;;;;;-1:-1:-1;3945:280:95;;;;;:::i;:::-;;:::i;13761:153:117:-;;;;;;;;;;-1:-1:-1;13761:153:117;;;;;:::i;:::-;-1:-1:-1;;;;;13878:20:117;;;13852:7;13878:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13761:153;2384:127:115;;;;;;;;;;-1:-1:-1;2384:127:115;;;;;:::i;:::-;;:::i;2105:1334:95:-;;;;;;;;;;-1:-1:-1;2105:1334:95;;;;;:::i;:::-;;:::i;:::-;;;;18869:25:119;;;18925:2;18910:18;;18903:34;;;;18953:18;;;18946:34;18857:2;18842:18;2105:1334:95;18669:317:119;18558:128:117;;;;;;;;;;-1:-1:-1;18662:16:117;;-1:-1:-1;;;;;18662:16:117;18558:128;;1486:57;;;;;;;;;;;;;;;8824:246:115;;;;;;;;;;-1:-1:-1;8824:246:115;;;;;:::i;:::-;;:::i;1662:64::-;;;;;;;;;;;;1717:9;1662:64;;9129:302;;;;;;;;;;-1:-1:-1;9129:302:115;;;;;:::i;:::-;;:::i;15770:213:117:-;;;;;;;;;;-1:-1:-1;15770:213:117;;;;;:::i;:::-;;:::i;16592:403::-;;;;;;;;;;-1:-1:-1;16592:403:117;;;;;:::i;:::-;;:::i;15185:166::-;;;;;;;;;;-1:-1:-1;15185:166:117;;;;;:::i;:::-;;:::i;15989:151::-;16057:16;16092:41;16122:10;16092:29;:41::i;:::-;16085:48;;15989:151;:::o;4461:100::-;4517:13;4549:5;4542:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4461:100;:::o;9255:378:95:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:95;;-1:-1:-1;;;9522:39:95:i;:::-;9576:50;;6589:25:119;;;-1:-1:-1;;;;;9576:50:95;;;9598:10;;9576:50;;6577:2:119;6562:18;9576:50:95;;;;;;;9419:214;9255:378;;;;:::o;13920:164:117:-;14003:4;14019:37;14028:10;14040:7;14049:6;14019:8;:37::i;:::-;-1:-1:-1;14073:4:117;13920:164;;;;;:::o;1209:311:115:-;1310:4;;-1:-1:-1;;;1310:4:115;;;;1309:5;1301:37;;;;-1:-1:-1;;;1301:37:115;;21844:2:119;1301:37:115;;;21826:21:119;21883:2;21863:18;;;21856:30;-1:-1:-1;;;21902:18:119;;;21895:49;21961:18;;1301:37:115;;;;;;;;;1348:4;:11;;-1:-1:-1;;;;1348:11:115;-1:-1:-1;;;1348:11:115;;;1369:60;;-1:-1:-1;;;1369:60:115;;:4;;:15;;:60;;1348:11;;;;1408:8;;;;1418:10;;;;1369:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1500:12:115;;;1510:1;1500:12;;;;;;;;;-1:-1:-1;;;1439:74:115;;;:4;;-1:-1:-1;1439:13:115;;-1:-1:-1;1439:74:115;;:4;;1468:30;;1439:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1209:311;;;;:::o;19161:140:117:-;19232:62;19243:10;19255;19267;19279:6;19232:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19161:140;:::o;7322:481:95:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:95;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:95;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:95;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:95;;-1:-1:-1;;;7704:35:95:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:95;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23728:238:117:-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;23909:50:117::1;23923:7;23932;23941:9;23952:6;23909:13;:50::i;:::-;;23728:238:::0;;;;:::o;10460:2526:95:-;13208:57;;-1:-1:-1;;;13208:57:95;;13253:10;13208:57;;;8907:51:119;13208:5:95;-1:-1:-1;;;;;13208:28:95;;;;8880:18:119;;13208:57:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:95;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:95;::::1;11281:91;;-1:-1:-1::0;11344:17:95;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:95;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:95::1;::::0;-1:-1:-1;11879:13:95;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:95::1;::::0;-1:-1:-1;12395:12:95;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:95;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:95;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:95::1;::::0;-1:-1:-1;12539:13:95;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:95::1;12793:17;-1:-1:-1::0;;;;;12718:261:95::1;12753:10;-1:-1:-1::0;;;;;12718:261:95::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2580:324:115:-;2672:46;;:::i;:::-;2746:7;2734:9;2786:112;2793:12;2803:1;2793:9;:12::i;:::-;2786:112;;;-1:-1:-1;;;;;2837:12:115;;;;;;;:9;:12;;;;;;;;2821:28;;;;;;;;;;;;;;;-1:-1:-1;;;2821:28:115;;;;;;;;;;;-1:-1:-1;;;2821:28:115;;;;;;;;;;;-1:-1:-1;;;2821:28:115;;;;;;;;;;;;;;;;;;;;;:8;2830:3;;;;:::i;:::-;;;2821:13;;;;;;;:::i;:::-;;;;;;;;;:28;;;;-1:-1:-1;;;;;2867:12:115;;;;;;;;;;;;;:20;;;;;2786:112;;;2724:180;;2580:324;;;:::o;14090:188:117:-;14196:4;14219:52;14233:10;14245:6;14253:9;14264:6;14219:13;:52::i;:::-;14212:59;14090:188;-1:-1:-1;;;;14090:188:117:o;24400:169::-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24506:56:117::1;24517:10;24529:7;24538;24547:6;24506:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24400:169:::0;;:::o;8709:474:95:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:95;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6589:25:119;;;9161:10:95;;9141:35;;6577:2:119;6562:18;9141:35:95;;;;;;;8826:357;;8709:474;;:::o;6296:1324:115:-;6359:21;6369:10;6359:9;:21::i;:::-;6351:48;;;;-1:-1:-1;;;6351:48:115;;26884:2:119;6351:48:115;;;26866:21:119;26923:2;26903:18;;;26896:30;-1:-1:-1;;;26942:18:119;;;26935:44;26996:18;;6351:48:115;26682:338:119;6351:48:115;6409:21;6448:7;1273:6:26;;-1:-1:-1;;;;;1273:6:26;;1201:85;6448:7:115;-1:-1:-1;;;;;6434:21:115;:10;-1:-1:-1;;;;;6434:21:115;;6433:52;;6475:10;6433:52;;;6467:4;6433:52;-1:-1:-1;;;;;6524:21:115;;;6495:26;6524:21;;;:9;:21;;;;;;;6495:50;;;;;;;;;;;;;;;-1:-1:-1;;;6495:50:115;;;;;;;;-1:-1:-1;;;6495:50:115;;;;;;;;;;;-1:-1:-1;;;6495:50:115;;;;;;;;;;;;;;;;;;;;;6562:21;;;;;;-1:-1:-1;;;;;;6555:28:115;;;;;-1:-1:-1;;6555:28:115;;;;;6409:76;;-1:-1:-1;6495:50:115;;:26;6619:65;;6666:4;;;;6534:10;;6619:38;:65;:::i;:::-;:69;;;6615:164;;;6704:64;6750:4;;6757:10;6704:37;:64::i;:::-;;6615:164;6845:4;6827:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;6827:44:115;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;6892:19;;-1:-1:-1;;;;;6882:30:115;-1:-1:-1;6882:30:115;;;:9;:30;;;;;:56;;-1:-1:-1;;;6882:56:115;;;;;;-1:-1:-1;6882:54:115;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6976:24:115;;-1:-1:-1;6976:24:115;;;:9;:24;;;;;:42;7040:19;;-1:-1:-1;;;6976:42:115;;;;;;;-1:-1:-1;7069:545:115;7076:12;7086:1;7076:9;:12::i;:::-;7069:545;;;-1:-1:-1;;;;;7172:12:115;;7137:32;7172:12;;;:9;:12;;;;;7198:36;;-1:-1:-1;;;7198:36:115;;;;7172:12;7198:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7284;7302:17;7284;:36::i;:::-;7248:32;;;:72;;:32;;:72;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7248:72:115;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7383:32:115;;;7248:72;7383:32;-1:-1:-1;7383:37:115;7379:225;;7440:52;7460:4;7478:1;7481:10;7440:37;:52::i;:::-;;7379:225;;;7556:32;;;;7531:58;;7553:1;;7556:32;;7531:21;:58::i;:::-;7090:524;7069:545;;3511:428:95;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:95;;-1:-1:-1;3511:428:95;;-1:-1:-1;3511:428:95;-1:-1:-1;3511:428:95:o;5252:218::-;-1:-1:-1;;;;;5429:33:95;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:95;;5428:34;;5402:61;;;6589:25:119;5356:24:95;;5402:5;:25;;;;6562:18:119;;5402:61:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:95;;;;;;;;;;;;:::i;14284:217:117:-;14406:10;14381:4;14427:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14427:32:117;;;;;;;;;;14381:4;;14397:76;;14418:7;;14427:45;;14462:10;;14427:45;:::i;:::-;14397:8;:76::i;17974:231::-;24657:10;24679:4;24657:27;24653:63;;24693:23;;-1:-1:-1;;;24693:23:117;;;;;;;;;;;24653:63;18149:49:::1;18163:7;18172:6;18180:9;18191:6;18149:13;:49::i;3920:480::-:0;4076:16;:34;;4120:40;;;-1:-1:-1;;;4120:40:117;-1:-1:-1;;;;;;4120:40:117;;;-1:-1:-1;;;;;4076:34:117;;4120:40;;;;4171:5;:9;4179:1;;4171:5;:9;:::i;:::-;-1:-1:-1;4190:7:117;:11;4200:1;;4190:7;:11;:::i;:::-;;4243:36;4273:4;4243:21;:36::i;:::-;4358:35;;4387:1;6589:25:119;;;4387:1:117;;;-1:-1:-1;;;;;;;;;;;4358:35:117;6577:2:119;6562:18;4358:35:117;;;;;;;;3920:480;;;;;;:::o;18740:136::-;18809:60;18818:10;18830;18842;18854:6;18809:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;23115:248::-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23313:20:117;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23286:70:::1;::::0;23295:7;;23304;;23313:42:::1;::::0;23345:10;;23313:42:::1;:::i;23286:70::-;23115:248:::0;;;:::o;9702:391:95:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:95:o;7686:181:115:-;7738:21;7748:10;7738:9;:21::i;:::-;7730:48;;;;-1:-1:-1;;;7730:48:115;;26884:2:119;7730:48:115;;;26866:21:119;26923:2;26903:18;;;26896:30;-1:-1:-1;;;26942:18:119;;;26935:44;26996:18;;7730:48:115;26682:338:119;7730:48:115;7810:10;7822:21;;;;:9;:21;;;;;:37;;;7788:72;;7810:10;7822:37;;7788:21;:72::i;:::-;7686:181::o;18932:173:117:-;19040:58;19049:10;19061;19073:2;19077:6;19085:8;;19040:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19040:58:117;;;;;;;;;;;;;-1:-1:-1;19040:8:117;;-1:-1:-1;;19040:58:117:i;:::-;18932:173;;;;:::o;22947:162::-;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;23068:34:117::1;23077:7;23086;23095:6;23068:8;:34::i;16146:440::-:0;16374:10;16399:42;:10;16374;16434:6;16399:24;:42::i;:::-;16394:103;;16450:47;;-1:-1:-1;;;16450:47:117;;;;;;;;;;;16394:103;16507:72;16513:8;16523:6;16531:9;16542:6;16550:8;;16507:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16507:72:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16560:12:117;;-1:-1:-1;16560:12:117;;;;16507:72;;16560:12;;;;16507:72;;;;;;;;;-1:-1:-1;16574:4:117;;-1:-1:-1;16507:5:117;;-1:-1:-1;;16507:72:117:i;17808:160::-;24657:10;24679:4;24657:27;24653:63;;24693:23;;-1:-1:-1;;;24693:23:117;;;;;;;;;;;7871:338:95;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:95:o;13280:297:117:-;13354:15;13436:23;13466:35;13493:7;13466:26;:35::i;:::-;13435:66;;;;;13537:1;13518:16;:20;:52;;13553:16;13518:52;;;13541:1;13518:52;13511:59;13280:297;-1:-1:-1;;;13280:297:117:o;1824:101:26:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;3644:2646:115:-:0;3725:21;3735:10;3725:9;:21::i;:::-;3724:22;3716:53;;;;-1:-1:-1;;;3716:53:115;;31262:2:119;3716:53:115;;;31244:21:119;31301:2;31281:18;;;31274:30;-1:-1:-1;;;31320:18:119;;;31313:48;31378:18;;3716:53:115;31060:342:119;3716:53:115;3832:21;3855:12;3886:7;1273:6:26;;-1:-1:-1;;;;;1273:6:26;;1201:85;3886:7:115;-1:-1:-1;;;;;3872:21:115;:10;-1:-1:-1;;;;;3872:21:115;;3871:69;;3922:10;3934:5;3871:69;;;3906:4;3913;3871:69;3831:109;;;;3958:24;3968:13;3958:9;:24::i;:::-;:35;;;;3986:7;3958:35;3950:70;;;;-1:-1:-1;;;3950:70:115;;31609:2:119;3950:70:115;;;31591:21:119;31648:2;31628:18;;;31621:30;-1:-1:-1;;;31667:18:119;;;31660:52;31729:18;;3950:70:115;31407:346:119;3950:70:115;-1:-1:-1;;;;;4095:24:115;;4031:18;4095:24;;;:9;:24;;;;;:48;4052:9;;4031:18;4091:53;;-1:-1:-1;;;4095:48:115;;;;4091:3;:53::i;:::-;4071:73;;4176:9;4162:10;:23;;4154:52;;;;-1:-1:-1;;;4154:52:115;;31960:2:119;4154:52:115;;;31942:21:119;31999:2;31979:18;;;31972:30;-1:-1:-1;;;32018:18:119;;;32011:46;32074:18;;4154:52:115;31758:340:119;4154:52:115;4217:23;4231:9;4217:23;;:::i;:::-;-1:-1:-1;;;;;4258:24:115;;;;;;:9;:24;;;;;:30;4217:23;;-1:-1:-1;1591:1:115;-1:-1:-1;;;4258:30:115;;;;;:54;4250:97;;;;-1:-1:-1;;;4250:97:115;;32438:2:119;4250:97:115;;;32420:21:119;32477:2;32457:18;;;32450:30;32516:32;32496:18;;;32489:60;32566:18;;4250:97:115;32236:354:119;4250:97:115;4440:4;4422:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;4422:44:115;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4477:24:115;;-1:-1:-1;4477:24:115;;;:9;:24;;;;;:50;;-1:-1:-1;;;4477:50:115;;;;;;-1:-1:-1;4477:48:115;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4571:24:115;;-1:-1:-1;4571:24:115;;;:9;:24;;;;;:42;-1:-1:-1;;;4571:42:115;;;;-1:-1:-1;4571:24:115;4658:857;4665:12;4675:1;4665:9;:12::i;:::-;4658:857;;;-1:-1:-1;;;;;4761:12:115;;4726:32;4761:12;;;:9;:12;;;;;4787:36;;-1:-1:-1;;;4787:36:115;;;;4761:12;4787:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4873:53;4891:16;:34;;;;;;;;;;;;4873:17;:53::i;:::-;4837:32;;;:89;;:32;;:89;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;4837:89:115;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5035:32:115;;;5010:58;;5032:1;;4837:89;5035:32;5010:21;:58::i;:::-;-1:-1:-1;;;;;5121:24:115;;;;;;;:9;:24;;;;;;;:32;5208:4;5190:24;;;;;;:30;5088:272;;5190:30;-1:-1:-1;;;5190:30:115;;;33228:36:119;;5238:42:115;-1:-1:-1;;;5238:42:115;;;;33309:18:119;;;33302:43;;;;-1:-1:-1;;;5298:48:115;;;;;;33361:18:119;;;33354:43;5088:272:115;;;;5121:32;;;;;5088:272;;33216:2:119;33201:18;5088:272:115;;;;;;;5400:34;;-1:-1:-1;;;5400:34:115;;;;-1:-1:-1;;;;;;5452:24:115;;-1:-1:-1;4658:857:115;;;5645:7;:63;;5681:27;:23;5707:1;5681:27;:::i;:::-;5645:63;;;5655:23;5645:63;5742:257;;;;;;;;-1:-1:-1;;;;;5742:257:115;;;;;-1:-1:-1;5807:24:115;;;5742:257;5807:24;;;;;;:30;5619:89;;-1:-1:-1;5742:257:115;;;;;5807:34;;-1:-1:-1;;;5807:30:115;;;;5840:1;5807:34;:::i;:::-;5742:257;;;;5874:1;5742:257;;;;;;;;;;;;5946:42;5964:23;5946:17;:42::i;:::-;5742:257;;;;;;;-1:-1:-1;;;;;5718:21:115;;;;;;;:9;:21;;;;;;;;:281;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5718:281:115;;;;;;;-1:-1:-1;;;5718:281:115;;;;;;;;;;;;-1:-1:-1;;;;5718:281:115;-1:-1:-1;;;5718:281:115;;;;;-1:-1:-1;;;;5718:281:115;;-1:-1:-1;;;5718:281:115;;;;;;;;;;;;;;;-1:-1:-1;5718:281:115;;;;;-1:-1:-1;;5718:281:115;-1:-1:-1;;;;;5718:281:115;;;;;;;;;;;6058:88;;6078:4;;5718:21;;6108:37;;;;6058;:88;:::i;:::-;-1:-1:-1;6160:14:115;;6156:128;;6242:31;;-1:-1:-1;;;;;6242:19:115;;;:31;;;;;6262:10;;6242:31;;;;6262:10;6242:19;:31;;;;;;;;;;;;;;;;;;;6156:128;3706:2584;;;;;;3644:2646;:::o;4231:201:95:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;7942:175:115:-;8016:14;8053:57;8061:48;;;;1717:9;8061:48;:::i;:::-;8053:7;:57::i;19339:146:117:-;19424:54;19435:10;19447;19459:2;19463:6;19424:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;8171:647:115:-;8232:17;8287:2;8265:18;:24;;;8261:551;;-1:-1:-1;8335:10:115;;8171:647;-1:-1:-1;8171:647:115:o;8261:551::-;8388:2;8366:18;:24;;;8362:450;;-1:-1:-1;8437:9:115;;8171:647;-1:-1:-1;8171:647:115:o;8362:450::-;8489:2;8467:18;:24;;;8463:349;;-1:-1:-1;8538:9:115;;8171:647;-1:-1:-1;8171:647:115:o;8463:349::-;8590:2;8568:18;:24;;;8564:248;;-1:-1:-1;8639:9:115;;8171:647;-1:-1:-1;8171:647:115:o;8564:248::-;8691:2;8669:18;:24;;;8665:147;;-1:-1:-1;8740:9:115;;8171:647;-1:-1:-1;8171:647:115:o;8665:147::-;-1:-1:-1;8787:7:115;;8171:647;-1:-1:-1;8171:647:115:o;15542:222:117:-;15640:10;15660:46;:10;15640;15697:8;15660:28;:46::i;:::-;15750:6;-1:-1:-1;;;;;15721:36:117;15740:8;-1:-1:-1;;;;;15721:36:117;;;;;;;;;;;15613:151;15542:222;:::o;4567:104::-;4625:13;4657:7;4650:14;;;;;:::i;14994:185::-;15104:68;15110:10;15122;15134:9;15145:6;15153:8;;15104:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15104:68:117;;;;;;;;;;;;;-1:-1:-1;15167:4:117;;-1:-1:-1;15104:5:117;;-1:-1:-1;15104:68:117:i;17579:223::-;24657:10;24679:4;24657:27;24653:63;;24693:23;;-1:-1:-1;;;24693:23:117;;;;;;;;;;;24653:63;17733:15;;17782:12:::1;::::0;;17752:1:::1;17782:12:::0;;::::1;::::0;::::1;::::0;;;17698:97:::1;::::0;17704:10:::1;::::0;17716:7;;17725:6;;17733:20;;::::1;::::0;:15;;17698:5:::1;:97::i;9486:116:115:-:0;1094:13:26;:11;:13::i;:::-;9582:12:115::1;::::0;;9592:1:::1;9582:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;9545:50:115;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;9574:6;;9545:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:95::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:95;;-1:-1:-1;;;8544:35:95:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:95;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18276:154:117:-;18352:71;18366:10;18378;18390:9;18401:21;18411:10;18401:9;:21::i;:::-;18352:13;:71::i;14507:322::-;14609:4;14625:176;14647:10;14671:7;14692:99;14729:15;14692:99;;;;;;;;;;;;;;;;;14704:10;14692:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14692:32:117;;;;;;;;;;;:99;:36;:99::i;13583:172::-;13669:4;13692:56;13706:10;13718;13730:9;13741:6;13692:13;:56::i;4438:533:95:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:95;;4438:533;-1:-1:-1;;;;;;;4438:533:95:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17208:365:117:-;24657:10;24679:4;24657:27;24653:63;;24693:23;;-1:-1:-1;;;24693:23:117;;;;;;;;;;;24653:63;17411:15;;17544:12:::1;::::0;;17430:1:::1;17544:12:::0;;::::1;::::0;::::1;::::0;;;17327:239:::1;::::0;17346:10:::1;::::0;17370:7;;17391:6;;17411:20;;::::1;::::0;;;:15;;17327:5:::1;:239::i;23369:353::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;23545:170:117::1;23567:7;23588;23609:96;23643:15;23609:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23609:20:117;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;23972:251::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24151:65:117::1;24157:10;24169:7;24178:9;24189:6;24197:8;24151:65;;;;;;;;;;;::::0;24211:4:::1;24151:5;:65::i;24229:165::-:0;13396:5:95;-1:-1:-1;;;;;13388:28:95;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:95;;;;;;;;;;;13384:86;24333:54:117::1;24342:10;24354:7;24363;24372:6;24333:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:95:-:0;13208:57;;-1:-1:-1;;;13208:57:95;;13253:10;13208:57;;;8907:51:119;13208:5:95;-1:-1:-1;;;;;13208:28:95;;;;8880:18:119;;13208:57:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:95;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:95;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:95;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:95:o;15357:179:117:-;15459:4;15482:47;:10;15507:8;15517:11;15482:24;:47::i;3945:280:95:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:95;-1:-1:-1;;3945:280:95;-1:-1:-1;;;;3945:280:95:o;2384:127:115:-;-1:-1:-1;;;;;2464:18:115;;;2441:4;2464:18;;;:9;:18;;;;;:26;;:40;;;2384:127::o;2105:1334:95:-;-1:-1:-1;;;;;2370:31:95;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;-1:-1:-1;;;2708:182:95;;2793:4;2708:182;;;34616:34:119;-1:-1:-1;;;;;34686:15:119;;;34666:18;;;34659:43;34718:18;;;34711:34;;;2708:58:95;;;;;;34551:18:119;;2708:182:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:95;-1:-1:-1;2568:322:95;-1:-1:-1;2914:26:95;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:95;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;8824:246:115:-;1094:13:26;:11;:13::i;:::-;8966:19:115::1;8976:8;8966:9;:19::i;:::-;8965:20;8957:61;;;::::0;-1:-1:-1;;;8957:61:115;;35268:2:119;8957:61:115::1;::::0;::::1;35250:21:119::0;35307:2;35287:18;;;35280:30;35346;35326:18;;;35319:58;35394:18;;8957:61:115::1;35066:352:119::0;8957:61:115::1;9028:35;9054:8;9028:25;:35::i;9129:302::-:0;1094:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;9218:22:115;::::1;9210:51;;;::::0;-1:-1:-1;;;9210:51:115;;35625:2:119;9210:51:115::1;::::0;::::1;35607:21:119::0;35664:2;35644:18;;;35637:30;-1:-1:-1;;;35683:18:119;;;35676:46;35739:18;;9210:51:115::1;35423:340:119::0;9210:51:115::1;9288:1;9279:6;:10;9271:37;;;::::0;-1:-1:-1;;;9271:37:115;;35970:2:119;9271:37:115::1;::::0;::::1;35952:21:119::0;36009:2;35989:18;;;35982:30;-1:-1:-1;;;36028:18:119;;;36021:44;36082:18;;9271:37:115::1;35768:338:119::0;9271:37:115::1;9351:6;9326:21;:31;;9318:62;;;::::0;-1:-1:-1;;;9318:62:115;;36313:2:119;9318:62:115::1;::::0;::::1;36295:21:119::0;36352:2;36332:18;;;36325:30;-1:-1:-1;;;36371:18:119;;;36364:48;36429:18;;9318:62:115::1;36111:342:119::0;9318:62:115::1;9390:34;::::0;-1:-1:-1;;;;;9390:26:115;::::1;::::0;:34;::::1;;;::::0;9417:6;;9390:34:::1;::::0;;;9417:6;9390:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;15770:213:117::0;15865:10;15885:43;:10;15865;15919:8;15885:25;:43::i;:::-;15969:6;-1:-1:-1;;;;;15943:33:117;15959:8;-1:-1:-1;;;;;15943:33:117;;;;;;;;;;;15838:145;15770:213;:::o;16592:403::-;16784:10;16809:43;:10;16784;16844:7;16809:24;:43::i;:::-;16804:104;;16861:47;;-1:-1:-1;;;16861:47:117;;;;;;;;;;;16804:104;16918:70;16929:8;16939:7;16948;16957:6;16965:8;;16918:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16918:70:117;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16975:12:117;;-1:-1:-1;16975:12:117;;;;16918:70;;16975:12;;;;16918:70;;;;;;;;;-1:-1:-1;16918:10:117;;-1:-1:-1;;;16918:70:117:i;15185:166::-;15276:68;15287:10;15299;15311;15323:6;15331:8;;15276:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15276:68:117;;;;;;;;;;;;;-1:-1:-1;15276:10:117;;-1:-1:-1;;15276:68:117:i;2294:141:83:-;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:83;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;701:213:85:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10359:394:117;-1:-1:-1;;;;;10450:21:117;;10446:98;;10494:39;;-1:-1:-1;;;10494:39:117;;;;;;;;;;;10446:98;-1:-1:-1;;;;;10557:21:117;;10553:96;;10601:37;;-1:-1:-1;;;10601:37:117;;;;;;;;;;;10553:96;-1:-1:-1;;;;;10659:20:117;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10712:34;;6589:25:119;;;10712:34:117;;6562:18:119;10712:34:117;;;;;;;;10359:394;;;:::o;20659:1142::-;21014:16;;-1:-1:-1;;;;;21014:16:117;21002:85;;21054:33;;-1:-1:-1;;;21054:33:117;;;;;;;;;;;21002:85;21099:24;21125:22;21151:27;21171:6;21151:19;:27::i;:::-;21098:80;;;;21256:86;21262:8;21272:7;21281:14;21297:8;:15;21316:1;21297:20;;21319:8;21329:12;21256:5;:86::i;:::-;21376:16;;:41;;-1:-1:-1;;;21376:41:117;;21411:4;21376:41;;;8907:51:119;21353:20:117;;-1:-1:-1;;;;;21376:16:117;;:26;;8880:18:119;;21376:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21427:16;;21353:64;;-1:-1:-1;21427:51:117;;-1:-1:-1;;;;;21427:16:117;21457:2;21461:16;21427:29;:51::i;:::-;21510:16;;:41;;-1:-1:-1;;;21510:41:117;;21545:4;21510:41;;;8907:51:119;21488:19:117;;-1:-1:-1;;;;;21510:16:117;;:26;;8880:18:119;;21510:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21488:63;-1:-1:-1;21561:30:117;21594:26;21488:63;21594:12;:26;:::i;:::-;21561:59;;21654:22;21634:16;:42;21630:108;;21685:53;;-1:-1:-1;;;21685:53:117;;;;;;;;;;;21630:108;21770:7;-1:-1:-1;;;;;21754:40:117;;21779:14;21754:40;;;;6589:25:119;;6577:2;6562:18;;6443:177;21754:40:117;;;;;;;;20992:809;;;;;20659:1142;;;;;;:::o;920:282:85:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:85;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:85;;920:282;-1:-1:-1;;;920:282:85:o;5402:715:117:-;5527:4;-1:-1:-1;;;;;5551:20:117;;5547:98;;5594:40;;-1:-1:-1;;;5594:40:117;;;;;;;;;;;5547:98;-1:-1:-1;;;;;5658:23:117;;5654:99;;5704:38;;-1:-1:-1;;;5704:38:117;;;;;;;;;;;5654:99;5762:16;5781:10;5762:29;;5802:50;5808:8;5818:6;5826:9;5837:6;5802:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;5878:6;-1:-1:-1;;;;;5867:17:117;:7;-1:-1:-1;;;;;5867:17:117;;5863:226;;5900:178;5926:6;5950:7;5975:89;6008:6;5975:89;;;;;;;;;;;;;;;;;:11;:19;5987:6;-1:-1:-1;;;;;5975:19:117;-1:-1:-1;;;;;5975:19:117;;;;;;;;;;;;:28;5995:7;-1:-1:-1;;;;;5975:28:117;-1:-1:-1;;;;;5975:28:117;;;;;;;;;;;;;:32;;:89;;;;;:::i;5900:178::-;-1:-1:-1;6106:4:117;;5402:715;-1:-1:-1;;;;;5402:715:117:o;6823:230:95:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:95;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:95;;-1:-1:-1;;;;;7006:5:95;34634:15:119;;6983:63:95;;;34616:34:119;7013:4:95;34666:18:119;;;34659:43;601:60:95;34718:18:119;;;34711:34;6908:49:95;;-1:-1:-1;6983:22:95;;;;;;34551:18:119;;6983:63:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:46:-;34837:6;-1:-1:-1;;;;;34962:5:46;:34;;34954:87;;;;-1:-1:-1;;;34954:87:46;;37629:2:119;34954:87:46;;;37611:21:119;37668:2;37648:18;;;37641:30;37707:34;37687:18;;;37680:62;-1:-1:-1;;;37758:18:119;;;37751:38;37806:19;;34954:87:46;37427:404:119;34954:87:46;-1:-1:-1;35065:5:46;34781:297::o;301:119:84:-;403:2;-1:-1:-1;;;;;388:25:84;397:4;-1:-1:-1;;;;;388:25:84;-1:-1:-1;;;;;;;;;;;407:5:84;388:25;;;;6589::119;;6577:2;6562:18;;6443:177;1681:173:85;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;26861:262:56;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:56;;-1:-1:-1;;;;;38115:15:119;;;27080:36:56;;;38097:34:119;38167:15;;;38147:18;;;38140:43;38219:15;;;38199:18;;;38192:43;26995:56:56;;-1:-1:-1;27080:11:56;;;;-1:-1:-1;27080:11:56;;38032:18:119;;27080:36:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:56;;26861:262;-1:-1:-1;;;;;;;26861:262:56:o;3110:182::-;3272:12;;;3209:4;3272:12;;;;;;;;;3236:49;;3247:5;;3254:6;;3262:8;;3236:10;:49::i;3253:333:115:-;3407:1;3341:63;3388:4;;3395:8;3341:38;:63::i;:::-;:67;;;3337:243;;;3424:57;3444:4;3462:8;3472;3424:37;:57::i;3337:243::-;3512:57;3532:4;3550:8;3560;3512:37;:57::i;897:246:83:-;949:89;;-1:-1:-1;;;949:89:83;;-1:-1:-1;;;;;38971:15:119;;949:89:83;;;38953:34:119;998:24:83;39003:18:119;;;38996:34;1032:4:83;39046:18:119;;;39039:43;332:42:83;;949:41;;38888:18:119;;949:89:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:83;;-1:-1:-1;;;1048:88:83;;-1:-1:-1;;;;;38971:15:119;;1048:88:83;;;38953:34:119;1097:23:83;39003:18:119;;;38996:34;1130:4:83;39046:18:119;;;39039:43;332:42:83;;-1:-1:-1;1048:41:83;;-1:-1:-1;38888:18:119;;1048:88:83;38713:375:119;19491:1162:117;19707:16;;-1:-1:-1;;;;;19707:16:117;19695:85;;19747:33;;-1:-1:-1;;;19747:33:117;;;;;;;;;;;19695:85;19792:24;19818:22;19844:27;19864:6;19844:19;:27::i;:::-;19905:16;;:41;;-1:-1:-1;;;19905:41:117;;19940:4;19905:41;;;8907:51:119;19791:80:117;;-1:-1:-1;19791:80:117;;-1:-1:-1;19882:20:117;;-1:-1:-1;;;;;19905:16:117;;;;:26;;8880:18:119;;19905:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19956:16;;19882:64;;-1:-1:-1;19956:75:117;;-1:-1:-1;;;;;19956:16:117;19990:7;20007:4;20014:16;19956:33;:75::i;:::-;20063:16;;:41;;-1:-1:-1;;;20063:41:117;;20098:4;20063:41;;;8907:51:119;20041:19:117;;-1:-1:-1;;;;;20063:16:117;;:26;;8880:18:119;;20063:41:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20041:63;-1:-1:-1;20114:28:117;20145:26;20159:12;20041:63;20145:26;:::i;:::-;20114:57;;20205:20;20185:16;:40;20181:106;;20234:53;;-1:-1:-1;;;20234:53:117;;;;;;;;;;;20181:106;20485:15;;20298:299;;20317:8;;20339:2;;20355:14;;20485:20;;;:8;20575:12;20298:5;:299::i;:::-;20627:2;-1:-1:-1;;;;;20613:33:117;;20631:14;20613:33;;;;6589:25:119;;6577:2;6562:18;;6443:177;1291:300:85;1363:21;1417:10;-1:-1:-1;;;;;1403:25:85;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:85;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:85;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;1149:366:83:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:83;:8;-1:-1:-1;;;;;1281:23:83;;:174;;;-1:-1:-1;;;;;;1338:31:83;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:83;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:83;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6641:686:117:-;-1:-1:-1;;;;;6877:18:117;;6873:96;;6918:40;;-1:-1:-1;;;6918:40:117;;;;;;;;;;;6873:96;-1:-1:-1;;;;;6982:16:117;;6978:92;;7021:38;;-1:-1:-1;;;7021:38:117;;;;;;;;;;;6978:92;7080:69;7098:8;7108:4;7114:2;7118:6;7126:8;7136:12;7080:17;:69::i;:::-;7160:57;7166:8;7176:4;7182:2;7186:6;7194:8;7204:12;7160:5;:57::i;:::-;7228:92;7248:8;7258:4;7264:2;7268:6;7276:8;7286:12;7300:19;7228;:92::i;1359:130:26:-;1273:6;;-1:-1:-1;;;;;1273:6:26;719:10:40;1422:23:26;1414:68;;;;-1:-1:-1;;;1414:68:26;;39295:2:119;1414:68:26;;;39277:21:119;;;39314:18;;;39307:30;39373:34;39353:18;;;39346:62;39425:18;;1414:68:26;39093:356:119;2426:187:26;2518:6;;;-1:-1:-1;;;;;2534:17:26;;;-1:-1:-1;;;;;;2534:17:26;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;904:184:56:-;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;9832:178:115:-;9887:5;-1:-1:-1;;;;;9912:41:115;;;9904:62;;;;-1:-1:-1;;;9904:62:115;;39656:2:119;9904:62:115;;;39638:21:119;39695:1;39675:18;;;39668:29;-1:-1:-1;;;39713:18:119;;;39706:38;39761:18;;9904:62:115;39454:331:119;1521:382:83;1643:8;-1:-1:-1;;;;;1633:18:83;:6;-1:-1:-1;;;;;1633:18:83;;1625:76;;;;-1:-1:-1;;;1625:76:83;;39992:2:119;1625:76:83;;;39974:21:119;40031:2;40011:18;;;40004:30;40070:34;40050:18;;;40043:62;-1:-1:-1;;;40121:18:119;;;40114:43;40174:19;;1625:76:83;39790:409:119;1625:76:83;-1:-1:-1;;;;;1716:31:83;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:83;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:83;;;23115:248:117:o;1712:185:83:-;-1:-1:-1;;;;;1847:22:83;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:83;1882:4;1847:39;;;1521:382;;;:::o;9333:594:117:-;-1:-1:-1;;;;;9540:18:117;;9536:92;;9581:36;;-1:-1:-1;;;9581:36:117;;;;;;;;;;;9536:92;9642:10;9638:118;;;9668:77;9686:8;9696:4;9710:1;9714:6;9722:8;9732:12;9668:17;:77::i;:::-;9766:35;9788:4;9794:6;9766:21;:35::i;:::-;9834:4;-1:-1:-1;;;;;9817:54:117;9824:8;-1:-1:-1;;;;;9817:54:117;;9840:6;9848:8;9858:12;9817:54;;;;;;;;:::i;:::-;;;;;;;;9886:34;;6589:25:119;;;9909:1:117;;-1:-1:-1;;;;;9886:34:117;;;-1:-1:-1;;;;;;;;;;;9886:34:117;6577:2:119;6562:18;9886:34:117;6443:177:119;4959:201:47;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:47;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:47;;;4959:201::o;8357:667:117:-;-1:-1:-1;;;;;8601:21:117;;8597:93;;8645:34;;-1:-1:-1;;;8645:34:117;;;;;;;;;;;8597:93;8700:38;8722:7;8731:6;8700:21;:38::i;:::-;8753:10;8749:144;;;8779:103;8799:8;8817:1;8821:7;8830:6;8838:8;8848:12;8862:19;8779;:103::i;:::-;8925:7;-1:-1:-1;;;;;8908:57:117;8915:8;-1:-1:-1;;;;;8908:57:117;;8934:6;8942:8;8952:12;8908:57;;;;;;;;:::i;:::-;;;;;;;;8980:37;;6589:25:119;;;-1:-1:-1;;;;;8980:37:117;;;8997:1;;-1:-1:-1;;;;;;;;;;;8980:37:117;6577:2:119;6562:18;8980:37:117;;;;;;;8357:667;;;;;;;:::o;2074:198:26:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:26;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:26;;40861:2:119;2154:73:26::1;::::0;::::1;40843:21:119::0;40900:2;40880:18;;;40873:30;40939:34;40919:18;;;40912:62;-1:-1:-1;;;40990:18:119;;;40983:36;41036:19;;2154:73:26::1;40659:402:119::0;2154:73:26::1;2237:28;2256:8;2237:18;:28::i;1909:379:83:-:0;2030:10;-1:-1:-1;;;;;2018:22:83;;;2010:77;;;;-1:-1:-1;;;2010:77:83;;41268:2:119;2010:77:83;;;41250:21:119;41307:2;41287:18;;;41280:30;41346:34;41326:18;;;41319:62;-1:-1:-1;;;41397:18:119;;;41390:40;41447:19;;2010:77:83;41066:406:119;2010:77:83;-1:-1:-1;;;;;2101:31:83;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:83;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:83;2197:4;2148:53;;;23115:248:117;;;:::o;2097:185:83:-;-1:-1:-1;;;;;2239:22:83;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:83;;;1909:379::o;21903:972:117:-;22086:19;;21994:24;;;;;;1425:2;-1:-1:-1;;;22086:19:117;;;:40;:19;:40;22082:787;;;22291:19;;22270:40;;-1:-1:-1;;;22291:19:117;;;;1425:2;22270:40;:::i;:::-;22263:48;;:2;:48;:::i;:::-;22254:57;-1:-1:-1;22344:15:117;22254:57;22344:6;:15;:::i;:::-;22325:34;-1:-1:-1;22429:25:117;22448:6;22325:34;22429:25;:::i;:::-;22412:42;;22082:787;;;22475:19;;1425:2;-1:-1:-1;;;22475:19:117;;;:40;:19;:40;22471:398;;;22659:19;;:40;;1425:2;;-1:-1:-1;;;22659:19:117;;;;:40;:::i;:::-;22652:48;;:2;:48;:::i;:::-;22643:57;-1:-1:-1;22733:15:117;22643:57;22733:6;:15;:::i;:::-;22714:34;;22779:6;22762:23;;22471:398;;;22852:6;22835:23;;;22816:42;;22471:398;22048:827;21903:972;;;:::o;941:175:33:-;1050:58;;-1:-1:-1;;;;;43381:32:119;;1050:58:33;;;43363:51:119;43430:18;;;43423:34;;;1023:86:33;;1043:5;;-1:-1:-1;;;1073:23:33;43336:18:119;;1050:58:33;;;;-1:-1:-1;;1050:58:33;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:33;-1:-1:-1;;;;;;1050:58:33;;;;;;;;;;1023:19;:86::i;7333:367:117:-;7530:50;7552:4;7558:2;7562:17;:6;:15;:17::i;:::-;7530:21;:50::i;:::-;7617:2;-1:-1:-1;;;;;7596:56:117;7611:4;-1:-1:-1;;;;;7596:56:117;7601:8;-1:-1:-1;;;;;7596:56:117;;7621:6;7629:8;7639:12;7596:56;;;;;;;;:::i;:::-;;;;;;;;7682:2;-1:-1:-1;;;;;7667:26:117;7676:4;-1:-1:-1;;;;;7667:26:117;-1:-1:-1;;;;;;;;;;;7686:6:117;7667:26;;;;6589:25:119;;6577:2;6562:18;;6443:177;60355:828:56;60600:10;60594:17;60637:9;60631:16;-1:-1:-1;;;;;60670:26:56;;60666:422;;-1:-1:-1;;;;;60801:27:56;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:56;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:56;;61003:71;60950:125;;;6589:25:119;-1:-1:-1;;;;;60950:35:56;;;;;6562:18:119;;60950:125:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:56;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:56;;61142:34;;;;:::i;:::-;60355:828;;;:::o;3546:458::-;3668:4;3689:16;3707:28;3739:29;3762:5;3739:22;:29::i;:::-;3688:80;;;;3778:4;-1:-1:-1;;;;;3778:18:56;;3810:3;3859;-1:-1:-1;;;;;3859:14:56;;3892:5;3899:6;3907:8;3927:1;-1:-1:-1;;;;;3917:12:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3917:12:56;;3827:117;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3827:117:56;;;;;;;;;;;;;;;-1:-1:-1;;;;;3827:117:56;;;;;;3778:198;;;;;-1:-1:-1;;;;;;3778:198:56;;;;;;-1:-1:-1;3827:117:56;3958:8;;3778:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3778:198:56;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3993:4:56;;3546:458;-1:-1:-1;;;;;;;3546:458:56:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;1355:203:33:-;1482:68;;-1:-1:-1;;;;;34634:15:119;;;1482:68:33;;;34616:34:119;34686:15;;34666:18;;;34659:43;34718:18;;;34711:34;;;1455:96:33;;1475:5;;-1:-1:-1;;;1505:27:33;34551:18:119;;1482:68:33;34351:400:119;11226:510:117;11469:104;;-1:-1:-1;;;11469:104:117;;-1:-1:-1;;;;;43381:32:119;;11469:104:117;;;43363:51:119;440:31:83;43430:18:119;;;43423:34;11435:19:117;;332:42:83;;11469:54:117;;43336:18:119;;11469:104:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11435:138;-1:-1:-1;;;;;;11587:25:117;;;11583:147;;11628:91;;-1:-1:-1;;;11628:91:117;;-1:-1:-1;;;;;11628:39:117;;;;;:91;;11668:8;;11678:4;;11684:2;;11688:6;;11696:8;;11706:12;;11628:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11425:311;11226:510;;;;;;:::o;12425:677::-;12704:105;;-1:-1:-1;;;12704:105:117;;-1:-1:-1;;;;;43381:32:119;;12704:105:117;;;43363:51:119;538:34:83;43430:18:119;;;43423:34;12670:19:117;;332:42:83;;12704:54:117;;43336:18:119;;12704:105:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12670:139;-1:-1:-1;;;;;;12823:25:117;;;12819:277;;12864:96;;-1:-1:-1;;;12864:96:117;;-1:-1:-1;;;;;12864:44:117;;;;;:96;;12909:8;;12919:4;;12925:2;;12929:6;;12937:8;;12947:12;;12864:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12819:277;;;12981:19;12977:119;;;-1:-1:-1;;;;;13020:13:117;;1702:19:39;:23;13016:69:117;;13044:41;;-1:-1:-1;;;13044:41:117;;;;;;;;;;;1342:472:56;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:56;;1606:3;1655;-1:-1:-1;;;;;1655:14:56;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:56;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:56;;1623:119;;;;;;;;;;;:::i;5918:440:95:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:95;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:95;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:95;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:95:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:95;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:95;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:95:o;5196:642:33:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:33;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:33;;47565:2:119;5720:111:33;;;47547:21:119;47604:2;47584:18;;;47577:30;47643:34;47623:18;;;47616:62;-1:-1:-1;;;47694:18:119;;;47687:40;47744:19;;5720:111:33;47363:406:119;6364:453:95;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:95;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:95;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:95;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:95;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:95;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:95:o;57949:1061:56:-;58197:10;58191:17;58234:9;58228:16;-1:-1:-1;;;;;58267:26:56;;58263:652;;-1:-1:-1;;;;;58387:27:56;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:56;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:56;;58589:71;58536:125;;;6589:25:119;-1:-1:-1;;;;;58536:35:56;;;;;6562:18:119;;58536:125:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;58835:10;58828:24;58887:3;58876:9;58869:22;-1:-1:-1;;;;;58931:27:56;;58924:35;;;;:::i;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:56;;2716:3;2765;-1:-1:-1;;;;;2765:14:56;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:56;;;;;;;:::i;4108:223:39:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:39;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:39:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:39;;;8113:60;;;;-1:-1:-1;;;8113:60:39;;48675:2:119;8113:60:39;;;48657:21:119;48714:2;48694:18;;;48687:30;48753:31;48733:18;;;48726:59;48802:18;;8113:60:39;48473:353:119;8113:60:39;-1:-1:-1;8208:10:39;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:39;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:658:119:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:119;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:119;;14:658;-1:-1:-1;;;;;;14:658:119:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:119;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:119;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:119:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:131::-;-1:-1:-1;;;;;1508:31:119;;1498:42;;1488:70;;1554:1;1551;1544:12;1569:367;1632:8;1642:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:55;;1714:1;1711;1704:12;1663:55;-1:-1:-1;1737:20:119;;-1:-1:-1;;;;;1769:30:119;;1766:50;;;1812:1;1809;1802:12;1766:50;1849:4;1841:6;1837:17;1825:29;;1909:3;1902:4;1892:6;1889:1;1885:14;1877:6;1873:27;1869:38;1866:47;1863:67;;;1926:1;1923;1916:12;1863:67;1569:367;;;;;:::o;1941:640::-;2045:6;2053;2061;2069;2122:2;2110:9;2101:7;2097:23;2093:32;2090:52;;;2138:1;2135;2128:12;2090:52;2177:9;2164:23;2196:31;2221:5;2196:31;:::i;:::-;2246:5;-1:-1:-1;2298:2:119;2283:18;;2270:32;;-1:-1:-1;2353:2:119;2338:18;;2325:32;-1:-1:-1;;;;;2369:30:119;;2366:50;;;2412:1;2409;2402:12;2366:50;2451:70;2513:7;2504:6;2493:9;2489:22;2451:70;:::i;:::-;1941:640;;;;-1:-1:-1;2540:8:119;-1:-1:-1;;;;1941:640:119:o;2586:315::-;2654:6;2662;2715:2;2703:9;2694:7;2690:23;2686:32;2683:52;;;2731:1;2728;2721:12;2683:52;2770:9;2757:23;2789:31;2814:5;2789:31;:::i;:::-;2839:5;2891:2;2876:18;;;;2863:32;;-1:-1:-1;;;2586:315:119:o;3098:348::-;3150:8;3160:6;3214:3;3207:4;3199:6;3195:17;3191:27;3181:55;;3232:1;3229;3222:12;3181:55;-1:-1:-1;3255:20:119;;-1:-1:-1;;;;;3287:30:119;;3284:50;;;3330:1;3327;3320:12;3284:50;3367:4;3359:6;3355:17;3343:29;;3419:3;3412:4;3403:6;3395;3391:19;3387:30;3384:39;3381:59;;;3436:1;3433;3426:12;3451:721;3543:6;3551;3559;3567;3620:2;3608:9;3599:7;3595:23;3591:32;3588:52;;;3636:1;3633;3626:12;3588:52;3676:9;3663:23;-1:-1:-1;;;;;3746:2:119;3738:6;3735:14;3732:34;;;3762:1;3759;3752:12;3732:34;3801:59;3852:7;3843:6;3832:9;3828:22;3801:59;:::i;:::-;3879:8;;-1:-1:-1;3775:85:119;-1:-1:-1;3967:2:119;3952:18;;3939:32;;-1:-1:-1;3983:16:119;;;3980:36;;;4012:1;4009;4002:12;3980:36;;4051:61;4104:7;4093:8;4082:9;4078:24;4051:61;:::i;4177:247::-;4236:6;4289:2;4277:9;4268:7;4264:23;4260:32;4257:52;;;4305:1;4302;4295:12;4257:52;4344:9;4331:23;4363:31;4388:5;4363:31;:::i;4429:457::-;4506:12;;-1:-1:-1;;;;;4502:38:119;4490:51;;4594:4;4583:16;;;4577:23;4602:4;4573:34;4557:14;;;4550:58;4654:4;4643:16;;;4637:23;4679:10;4721:21;;;4705:14;;;4698:45;;;;4796:4;4785:16;;;4779:23;4775:32;;;4759:14;;;4752:56;4872:4;4861:16;;;4855:23;4851:2;4840:39;4824:14;;4817:63;4429:457::o;4891:249::-;5077:3;5062:19;;5090:44;5066:9;5116:6;5090:44;:::i;5145:180::-;5204:6;5257:2;5245:9;5236:7;5232:23;5228:32;5225:52;;;5273:1;5270;5263:12;5225:52;-1:-1:-1;5296:23:119;;5145:180;-1:-1:-1;5145:180:119:o;5330:505::-;5425:6;5433;5441;5494:2;5482:9;5473:7;5469:23;5465:32;5462:52;;;5510:1;5507;5500:12;5462:52;5546:9;5533:23;5523:33;;5607:2;5596:9;5592:18;5579:32;-1:-1:-1;;;;;5626:6:119;5623:30;5620:50;;;5666:1;5663;5656:12;5620:50;5705:70;5767:7;5758:6;5747:9;5743:22;5705:70;:::i;:::-;5330:505;;5794:8;;-1:-1:-1;5679:96:119;;-1:-1:-1;;;;5330:505:119:o;5840:598::-;5926:6;5934;5942;5950;6003:3;5991:9;5982:7;5978:23;5974:33;5971:53;;;6020:1;6017;6010:12;5971:53;6059:9;6046:23;6078:31;6103:5;6078:31;:::i;:::-;6128:5;-1:-1:-1;6185:2:119;6170:18;;6157:32;6198:33;6157:32;6198:33;:::i;:::-;6250:7;-1:-1:-1;6309:2:119;6294:18;;6281:32;6322:33;6281:32;6322:33;:::i;:::-;5840:598;;;;-1:-1:-1;6374:7:119;;6428:2;6413:18;6400:32;;-1:-1:-1;;5840:598:119:o;6625:127::-;6686:10;6681:3;6677:20;6674:1;6667:31;6717:4;6714:1;6707:15;6741:4;6738:1;6731:15;6757:275;6828:2;6822:9;6893:2;6874:13;;-1:-1:-1;;6870:27:119;6858:40;;-1:-1:-1;;;;;6913:34:119;;6949:22;;;6910:62;6907:88;;;6975:18;;:::i;:::-;7011:2;7004:22;6757:275;;-1:-1:-1;6757:275:119:o;7037:186::-;7085:4;-1:-1:-1;;;;;7110:6:119;7107:30;7104:56;;;7140:18;;:::i;:::-;-1:-1:-1;7206:2:119;7185:15;-1:-1:-1;;7181:29:119;7212:4;7177:40;;7037:186::o;7228:462::-;7270:5;7323:3;7316:4;7308:6;7304:17;7300:27;7290:55;;7341:1;7338;7331:12;7290:55;7377:6;7364:20;7408:48;7424:31;7452:2;7424:31;:::i;:::-;7408:48;:::i;:::-;7481:2;7472:7;7465:19;7527:3;7520:4;7515:2;7507:6;7503:15;7499:26;7496:35;7493:55;;;7544:1;7541;7534:12;7493:55;7609:2;7602:4;7594:6;7590:17;7583:4;7574:7;7570:18;7557:55;7657:1;7632:16;;;7650:4;7628:27;7621:38;;;;7636:7;7228:462;-1:-1:-1;;;7228:462:119:o;7695:118::-;7781:5;7774:13;7767:21;7760:5;7757:32;7747:60;;7803:1;7800;7793:12;7818:938;7936:6;7944;7952;7960;7968;7976;7984;8037:3;8025:9;8016:7;8012:23;8008:33;8005:53;;;8054:1;8051;8044:12;8005:53;8090:9;8077:23;8067:33;;8151:2;8140:9;8136:18;8123:32;-1:-1:-1;;;;;8170:6:119;8167:30;8164:50;;;8210:1;8207;8200:12;8164:50;8233:49;8274:7;8265:6;8254:9;8250:22;8233:49;:::i;:::-;8223:59;;;8332:2;8321:9;8317:18;8304:32;8345:31;8370:5;8345:31;:::i;:::-;8395:5;-1:-1:-1;8452:2:119;8437:18;;8424:32;8465:30;8424:32;8465:30;:::i;:::-;8514:7;-1:-1:-1;8573:3:119;8558:19;;8545:33;8587;8545;8587;:::i;:::-;7818:938;;;;-1:-1:-1;7818:938:119;;;;8639:7;8693:3;8678:19;;8665:33;;-1:-1:-1;8745:3:119;8730:19;;;8717:33;;7818:938;-1:-1:-1;;7818:938:119:o;8969:543::-;9201:3;9186:19;;9190:9;9282:6;9159:4;9316:190;9330:4;9327:1;9324:11;9316:190;;;9377:45;9418:3;9409:6;9403:13;9377:45;:::i;:::-;9451:4;9442:14;;;;;9491:4;9479:17;;;;;9350:1;9343:9;9316:190;;;9320:3;;;8969:543;;;;:::o;9517:456::-;9594:6;9602;9610;9663:2;9651:9;9642:7;9638:23;9634:32;9631:52;;;9679:1;9676;9669:12;9631:52;9718:9;9705:23;9737:31;9762:5;9737:31;:::i;:::-;9787:5;-1:-1:-1;9844:2:119;9829:18;;9816:32;9857:33;9816:32;9857:33;:::i;:::-;9517:456;;9909:7;;-1:-1:-1;;;9963:2:119;9948:18;;;;9935:32;;9517:456::o;9978:248::-;10046:6;10054;10107:2;10095:9;10086:7;10082:23;10078:32;10075:52;;;10123:1;10120;10113:12;10075:52;-1:-1:-1;;10146:23:119;;;10216:2;10201:18;;;10188:32;;-1:-1:-1;9978:248:119:o;11502:1038::-;11626:6;11634;11642;11650;11658;11666;11719:3;11707:9;11698:7;11694:23;11690:33;11687:53;;;11736:1;11733;11726:12;11687:53;11775:9;11762:23;11794:31;11819:5;11794:31;:::i;:::-;11844:5;-1:-1:-1;11901:2:119;11886:18;;11873:32;11949:4;11936:18;;11924:31;;11914:59;;11969:1;11966;11959:12;11914:59;11992:7;-1:-1:-1;12050:2:119;12035:18;;12022:32;-1:-1:-1;;;;;12103:14:119;;;12100:34;;;12130:1;12127;12120:12;12100:34;12169:59;12220:7;12211:6;12200:9;12196:22;12169:59;:::i;:::-;12247:8;;-1:-1:-1;12143:85:119;-1:-1:-1;12335:2:119;12320:18;;12307:32;;-1:-1:-1;12351:16:119;;;12348:36;;;12380:1;12377;12370:12;12348:36;;12419:61;12472:7;12461:8;12450:9;12446:24;12419:61;:::i;:::-;11502:1038;;;;-1:-1:-1;11502:1038:119;;-1:-1:-1;11502:1038:119;;12499:8;;11502:1038;-1:-1:-1;;;11502:1038:119:o;12545:525::-;12631:6;12639;12647;12655;12708:3;12696:9;12687:7;12683:23;12679:33;12676:53;;;12725:1;12722;12715:12;12676:53;12764:9;12751:23;12783:31;12808:5;12783:31;:::i;:::-;12833:5;-1:-1:-1;12890:2:119;12875:18;;12862:32;12903:33;12862:32;12903:33;:::i;:::-;12545:525;;12955:7;;-1:-1:-1;;;;13009:2:119;12994:18;;12981:32;;13060:2;13045:18;13032:32;;12545:525::o;13075:632::-;13246:2;13298:21;;;13368:13;;13271:18;;;13390:22;;;13217:4;;13246:2;13469:15;;;;13443:2;13428:18;;;13217:4;13512:169;13526:6;13523:1;13520:13;13512:169;;;13587:13;;13575:26;;13656:15;;;;13621:12;;;;13548:1;13541:9;13512:169;;13948:613;14036:6;14044;14052;14060;14113:2;14101:9;14092:7;14088:23;14084:32;14081:52;;;14129:1;14126;14119:12;14081:52;14168:9;14155:23;14187:31;14212:5;14187:31;:::i;:::-;14237:5;-1:-1:-1;14289:2:119;14274:18;;14261:32;;-1:-1:-1;14344:2:119;14329:18;;14316:32;-1:-1:-1;;;;;14360:30:119;;14357:50;;;14403:1;14400;14393:12;14357:50;14442:59;14493:7;14484:6;14473:9;14469:22;14442:59;:::i;14566:1065::-;14683:6;14691;14699;14707;14715;14723;14731;14784:3;14772:9;14763:7;14759:23;14755:33;14752:53;;;14801:1;14798;14791:12;14752:53;14840:9;14827:23;14859:31;14884:5;14859:31;:::i;:::-;14909:5;-1:-1:-1;14966:2:119;14951:18;;14938:32;14979:33;14938:32;14979:33;:::i;:::-;15031:7;-1:-1:-1;15085:2:119;15070:18;;15057:32;;-1:-1:-1;15140:2:119;15125:18;;15112:32;-1:-1:-1;;;;;15193:14:119;;;15190:34;;;15220:1;15217;15210:12;15190:34;15259:59;15310:7;15301:6;15290:9;15286:22;15259:59;:::i;:::-;15337:8;;-1:-1:-1;15233:85:119;-1:-1:-1;15425:3:119;15410:19;;15397:33;;-1:-1:-1;15442:16:119;;;15439:36;;;15471:1;15468;15461:12;15439:36;;15510:61;15563:7;15552:8;15541:9;15537:24;15510:61;:::i;:::-;14566:1065;;;;-1:-1:-1;14566:1065:119;;-1:-1:-1;14566:1065:119;;;;15484:87;;-1:-1:-1;;;14566:1065:119:o;15636:383::-;15713:6;15721;15729;15782:2;15770:9;15761:7;15757:23;15753:32;15750:52;;;15798:1;15795;15788:12;15750:52;15837:9;15824:23;15856:31;15881:5;15856:31;:::i;:::-;15906:5;15958:2;15943:18;;15930:32;;-1:-1:-1;16009:2:119;15994:18;;;15981:32;;15636:383;-1:-1:-1;;;15636:383:119:o;16284:276::-;16342:6;16395:2;16383:9;16374:7;16370:23;16366:32;16363:52;;;16411:1;16408;16401:12;16363:52;16450:9;16437:23;16500:10;16493:5;16489:22;16482:5;16479:33;16469:61;;16526:1;16523;16516:12;16759:523;16845:6;16853;16861;16914:2;16902:9;16893:7;16889:23;16885:32;16882:52;;;16930:1;16927;16920:12;16882:52;16969:9;16956:23;16988:31;17013:5;16988:31;:::i;:::-;17038:5;-1:-1:-1;17090:2:119;17075:18;;17062:32;;-1:-1:-1;17145:2:119;17130:18;;17117:32;-1:-1:-1;;;;;17161:30:119;;17158:50;;;17204:1;17201;17194:12;17158:50;17227:49;17268:7;17259:6;17248:9;17244:22;17227:49;:::i;:::-;17217:59;;;16759:523;;;;;:::o;17287:665::-;17382:6;17390;17398;17406;17459:3;17447:9;17438:7;17434:23;17430:33;17427:53;;;17476:1;17473;17466:12;17427:53;17515:9;17502:23;17534:31;17559:5;17534:31;:::i;:::-;17584:5;-1:-1:-1;17641:2:119;17626:18;;17613:32;17654:33;17613:32;17654:33;:::i;:::-;17706:7;-1:-1:-1;17760:2:119;17745:18;;17732:32;;-1:-1:-1;17815:2:119;17800:18;;17787:32;-1:-1:-1;;;;;17831:30:119;;17828:50;;;17874:1;17871;17864:12;17828:50;17897:49;17938:7;17929:6;17918:9;17914:22;17897:49;:::i;:::-;17887:59;;;17287:665;;;;;;;:::o;18276:388::-;18344:6;18352;18405:2;18393:9;18384:7;18380:23;18376:32;18373:52;;;18421:1;18418;18411:12;18373:52;18460:9;18447:23;18479:31;18504:5;18479:31;:::i;:::-;18529:5;-1:-1:-1;18586:2:119;18571:18;;18558:32;18599:33;18558:32;18599:33;:::i;:::-;18651:7;18641:17;;;18276:388;;;;;:::o;19228:923::-;19336:6;19344;19352;19360;19368;19376;19429:3;19417:9;19408:7;19404:23;19400:33;19397:53;;;19446:1;19443;19436:12;19397:53;19485:9;19472:23;19504:31;19529:5;19504:31;:::i;:::-;19554:5;-1:-1:-1;19606:2:119;19591:18;;19578:32;;-1:-1:-1;19661:2:119;19646:18;;19633:32;-1:-1:-1;;;;;19714:14:119;;;19711:34;;;19741:1;19738;19731:12;20156:478;20235:6;20243;20251;20304:2;20292:9;20283:7;20279:23;20275:32;20272:52;;;20320:1;20317;20310:12;20272:52;20356:9;20343:23;20333:33;;20417:2;20406:9;20402:18;20389:32;-1:-1:-1;;;;;20436:6:119;20433:30;20430:50;;;20476:1;20473;20466:12;20430:50;20515:59;20566:7;20557:6;20546:9;20542:22;20515:59;:::i;20639:380::-;20718:1;20714:12;;;;20761;;;20782:61;;20836:4;20828:6;20824:17;20814:27;;20782:61;20889:2;20881:6;20878:14;20858:18;20855:38;20852:161;;20935:10;20930:3;20926:20;20923:1;20916:31;20970:4;20967:1;20960:15;20998:4;20995:1;20988:15;20852:161;;20639:380;;;:::o;21024:613::-;21310:3;21292:22;;;21351:2;21330:19;;;21323:31;-1:-1:-1;;;21385:3:119;21370:19;;21363:45;-1:-1:-1;;;;;21520:15:119;;;21513:4;21498:20;;21491:45;21572:15;;;;21567:2;21552:18;;21545:43;-1:-1:-1;21604:18:119;;21597:34;;;;21440:3;21425:19;;21024:613::o;21990:267::-;22079:6;22074:3;22067:19;22131:6;22124:5;22117:4;22112:3;22108:14;22095:43;-1:-1:-1;22183:1:119;22158:16;;;22176:4;22154:27;;;22147:38;;;;22239:2;22218:15;;;-1:-1:-1;;22214:29:119;22205:39;;;22201:50;;21990:267::o;22262:640::-;-1:-1:-1;;;;;22557:32:119;;22539:51;;22638:4;22626:17;;22621:2;22606:18;;22599:45;22680:3;22675:2;22660:18;;22653:31;;;-1:-1:-1;;22707:63:119;;22750:19;;22742:6;22734;22707:63;:::i;:::-;22818:9;22810:6;22806:22;22801:2;22790:9;22786:18;22779:50;22846;22889:6;22881;22873;22846:50;:::i;:::-;22838:58;22262:640;-1:-1:-1;;;;;;;;;22262:640:119:o;22907:435::-;23188:1;23184;23179:3;23175:11;23171:19;23163:6;23159:32;23148:9;23141:51;23228:6;23223:2;23212:9;23208:18;23201:34;23271:2;23266;23255:9;23251:18;23244:30;23122:4;23291:45;23332:2;23321:9;23317:18;23309:6;23291:45;:::i;23347:509::-;23605:2;23587:21;;;23644:2;23624:18;;;23617:30;-1:-1:-1;;;23678:3:119;23663:19;;23656:44;-1:-1:-1;;;;;23774:32:119;;;;23767:4;23752:20;;23745:62;-1:-1:-1;23823:18:119;;23816:34;23732:3;23717:19;;23347:509::o;23861:514::-;24060:25;;;24121:2;24116;24101:18;;24094:30;;;24140:18;;24133:34;;;-1:-1:-1;;;;;;24179:31:119;;24176:51;;;24223:1;24220;24213:12;24176:51;24257:6;24254:1;24250:14;24314:6;24306;24301:2;24290:9;24286:18;24273:48;24342:22;;;;24366:2;24338:31;;23861:514;-1:-1:-1;;;;23861:514:119:o;24613:245::-;24680:6;24733:2;24721:9;24712:7;24708:23;24704:32;24701:52;;;24749:1;24746;24739:12;24701:52;24781:9;24775:16;24800:28;24822:5;24800:28;:::i;24863:127::-;24924:10;24919:3;24915:20;24912:1;24905:31;24955:4;24952:1;24945:15;24979:4;24976:1;24969:15;24995:136;25030:3;-1:-1:-1;;;25051:22:119;;25048:48;;25076:18;;:::i;:::-;-1:-1:-1;25116:1:119;25112:13;;24995:136::o;25136:127::-;25197:10;25192:3;25188:20;25185:1;25178:31;25228:4;25225:1;25218:15;25252:4;25249:1;25242:15;25268:216;25332:9;;;25360:11;;;25307:3;25390:9;;25418:10;;25414:19;;25443:10;;25435:19;;25411:44;25408:70;;;25458:18;;:::i;:::-;25408:70;;25268:216;;;;:::o;25489:200::-;25555:9;;;25528:4;25583:9;;25611:10;;25623:12;;;25607:29;25646:12;;;25638:21;;25604:56;25601:82;;;25663:18;;:::i;25694:529::-;25951:6;25940:9;25933:25;26023:1;26019;26014:3;26010:11;26006:19;25998:6;25994:32;25989:2;25978:9;25974:18;25967:60;26063:6;26058:2;26047:9;26043:18;26036:34;26106:6;26101:2;26090:9;26086:18;26079:34;26150:3;26144;26133:9;26129:19;26122:32;25914:4;26171:46;26212:3;26201:9;26197:19;26189:6;26171:46;:::i;26228:135::-;26267:3;26288:17;;;26285:43;;26308:18;;:::i;:::-;-1:-1:-1;26355:1:119;26344:13;;26228:135::o;26368:127::-;26429:10;26424:3;26420:20;26417:1;26410:31;26460:4;26457:1;26450:15;26484:4;26481:1;26474:15;27025:185;27063:3;27107:10;27100:5;27096:22;27137:7;27127:41;;27148:18;;:::i;:::-;-1:-1:-1;;27184:20:119;;27025:185;-1:-1:-1;;27025:185:119:o;27215:232::-;27314:2;27303:17;;;27284;;;;27280:41;-1:-1:-1;;27336:42:119;;-1:-1:-1;;;;;27380:37:119;;27333:85;27330:111;;;27421:18;;:::i;27452:184::-;27522:6;27575:2;27563:9;27554:7;27550:23;27546:32;27543:52;;;27591:1;27588;27581:12;27543:52;-1:-1:-1;27614:16:119;;27452:184;-1:-1:-1;27452:184:119:o;27641:1036::-;27761:6;27792:2;27835;27823:9;27814:7;27810:23;27806:32;27803:52;;;27851:1;27848;27841:12;27803:52;27884:9;27878:16;-1:-1:-1;;;;;27954:2:119;27946:6;27943:14;27940:34;;;27970:1;27967;27960:12;27940:34;28008:6;27997:9;27993:22;27983:32;;28053:7;28046:4;28042:2;28038:13;28034:27;28024:55;;28075:1;28072;28065:12;28024:55;28104:2;28098:9;28126:2;28122;28119:10;28116:36;;;28132:18;;:::i;:::-;28178:2;28175:1;28171:10;28161:20;;28201:28;28225:2;28221;28217:11;28201:28;:::i;:::-;28263:15;;;28333:11;;;28329:20;;;28294:12;;;;28361:19;;;28358:39;;;28393:1;28390;28383:12;28358:39;28417:11;;;;28437:210;28453:6;28448:3;28445:15;28437:210;;;28526:3;28520:10;28507:23;;28543:31;28568:5;28543:31;:::i;:::-;28587:18;;;28470:12;;;;28625;;;;28437:210;;;28666:5;27641:1036;-1:-1:-1;;;;;;;;27641:1036:119:o;28682:125::-;28747:9;;;28768:10;;;28765:36;;;28781:18;;:::i;28938:545::-;29040:2;29035:3;29032:11;29029:448;;;29076:1;29101:5;29097:2;29090:17;29146:4;29142:2;29132:19;29216:2;29204:10;29200:19;29197:1;29193:27;29187:4;29183:38;29252:4;29240:10;29237:20;29234:47;;;-1:-1:-1;29275:4:119;29234:47;29330:2;29325:3;29321:12;29318:1;29314:20;29308:4;29304:31;29294:41;;29385:82;29403:2;29396:5;29393:13;29385:82;;;29448:17;;;29429:1;29418:13;29385:82;;;29389:3;;;28938:545;;;:::o;29659:1206::-;-1:-1:-1;;;;;29778:3:119;29775:27;29772:53;;;29805:18;;:::i;:::-;29834:94;29924:3;29884:38;29916:4;29910:11;29884:38;:::i;:::-;29878:4;29834:94;:::i;:::-;29954:1;29979:2;29974:3;29971:11;29996:1;29991:616;;;;30651:1;30668:3;30665:93;;;-1:-1:-1;30724:19:119;;;30711:33;30665:93;-1:-1:-1;;29616:1:119;29612:11;;;29608:24;29604:29;29594:40;29640:1;29636:11;;;29591:57;30771:78;;29964:895;;29991:616;28885:1;28878:14;;;28922:4;28909:18;;-1:-1:-1;;30027:17:119;;;30128:9;30150:229;30164:7;30161:1;30158:14;30150:229;;;30253:19;;;30240:33;30225:49;;30360:4;30345:20;;;;30313:1;30301:14;;;;30180:12;30150:229;;;30154:3;30407;30398:7;30395:16;30392:159;;;30531:1;30527:6;30521:3;30515;30512:1;30508:11;30504:21;30500:34;30496:39;30483:9;30478:3;30474:19;30461:33;30457:79;30449:6;30442:95;30392:159;;;30594:1;30588:3;30585:1;30581:11;30577:19;30571:4;30564:33;29964:895;;29659:1206;;;:::o;32103:128::-;32170:9;;;32191:11;;;32188:37;;;32205:18;;:::i;32595:201::-;32633:3;32661:10;32706:2;32699:5;32695:14;32733:2;32724:7;32721:15;32718:41;;32739:18;;:::i;:::-;32788:1;32775:15;;32595:201;-1:-1:-1;;;32595:201:119:o;32801:228::-;32898:2;32868:17;;;32887;;;;32864:41;-1:-1:-1;;;;;32920:36:119;;-1:-1:-1;;32958:41:119;;32917:83;32914:109;;;33003:18;;:::i;33408:172::-;33475:10;33505;;;33517;;;33501:27;;33540:11;;;33537:37;;;33554:18;;:::i;33585:148::-;33673:4;33652:12;;;33666;;;33648:31;;33691:13;;33688:39;;;33707:18;;:::i;33738:217::-;33778:1;33804;33794:132;;33848:10;33843:3;33839:20;33836:1;33829:31;33883:4;33880:1;33873:15;33911:4;33908:1;33901:15;33794:132;-1:-1:-1;33940:9:119;;33738:217::o;34756:305::-;34843:6;34851;34859;34912:2;34900:9;34891:7;34887:23;34883:32;34880:52;;;34928:1;34925;34918:12;34880:52;34957:9;34951:16;34941:26;;35007:2;34996:9;34992:18;34986:25;34976:35;;35051:2;35040:9;35036:18;35030:25;35020:35;;34756:305;;;;;:::o;36458:282::-;36559:6;36612:2;36600:9;36591:7;36587:23;36583:32;36580:52;;;36628:1;36625;36618:12;36580:52;36660:9;36654:16;36679:31;36704:5;36679:31;:::i;38246:462::-;38341:6;38349;38357;38365;38418:3;38406:9;38397:7;38393:23;38389:33;38386:53;;;38435:1;38432;38425:12;38386:53;38464:9;38458:16;38448:26;;38517:2;38506:9;38502:18;38496:25;38565:5;38561:2;38550:21;38543:5;38540:32;38530:60;;38586:1;38583;38576:12;38530:60;38654:2;38639:18;;38633:25;38698:2;38683:18;;;38677:25;38246:462;;38609:5;;-1:-1:-1;38246:462:119;-1:-1:-1;;;38246:462:119:o;40204:450::-;40425:6;40414:9;40407:25;40468:2;40463;40452:9;40448:18;40441:30;40388:4;40494:45;40535:2;40524:9;40520:18;40512:6;40494:45;:::i;:::-;40587:9;40579:6;40575:22;40570:2;40559:9;40555:18;40548:50;40615:33;40641:6;40633;40615:33;:::i;41477:151::-;41567:4;41560:12;;;41546;;;41542:31;;41585:14;;41582:40;;;41602:18;;:::i;41633:422::-;41722:1;41765:5;41722:1;41779:270;41800:7;41790:8;41787:21;41779:270;;;41859:4;41855:1;41851:6;41847:17;41841:4;41838:27;41835:53;;;41868:18;;:::i;:::-;41918:7;41908:8;41904:22;41901:55;;;41938:16;;;;41901:55;42017:22;;;;41977:15;;;;41779:270;;;41783:3;41633:422;;;;;:::o;42060:806::-;42109:5;42139:8;42129:80;;-1:-1:-1;42180:1:119;42194:5;;42129:80;42228:4;42218:76;;-1:-1:-1;42265:1:119;42279:5;;42218:76;42310:4;42328:1;42323:59;;;;42396:1;42391:130;;;;42303:218;;42323:59;42353:1;42344:10;;42367:5;;;42391:130;42428:3;42418:8;42415:17;42412:43;;;42435:18;;:::i;:::-;-1:-1:-1;;42491:1:119;42477:16;;42506:5;;42303:218;;42605:2;42595:8;42592:16;42586:3;42580:4;42577:13;42573:36;42567:2;42557:8;42554:16;42549:2;42543:4;42540:12;42536:35;42533:77;42530:159;;;-1:-1:-1;42642:19:119;;;42674:5;;42530:159;42721:34;42746:8;42740:4;42721:34;:::i;:::-;42791:6;42787:1;42783:6;42779:19;42770:7;42767:32;42764:58;;;42802:18;;:::i;:::-;42840:20;;42060:806;-1:-1:-1;;;42060:806:119:o;42871:140::-;42929:5;42958:47;42999:4;42989:8;42985:19;42979:4;42958:47;:::i;43016:168::-;43089:9;;;43120;;43137:15;;;43131:22;;43117:37;43107:71;;43158:18;;:::i;43749:519::-;-1:-1:-1;;;;;44039:15:119;;;44021:34;;44091:15;;;44086:2;44071:18;;44064:43;44143:15;;44138:2;44123:18;;44116:43;44195:3;44190:2;44175:18;;44168:31;;;43964:4;;44216:46;;44242:19;;44234:6;44216:46;:::i;44273:510::-;-1:-1:-1;;;;;44528:32:119;;44510:51;;44597:2;44592;44577:18;;44570:30;;;-1:-1:-1;;44623:45:119;;44649:18;;44641:6;44623:45;:::i;44788:647::-;44867:6;44920:2;44908:9;44899:7;44895:23;44891:32;44888:52;;;44936:1;44933;44926:12;44888:52;44969:9;44963:16;-1:-1:-1;;;;;44994:6:119;44991:30;44988:50;;;45034:1;45031;45024:12;44988:50;45057:22;;45110:4;45102:13;;45098:27;-1:-1:-1;45088:55:119;;45139:1;45136;45129:12;45088:55;45168:2;45162:9;45193:48;45209:31;45237:2;45209:31;:::i;45193:48::-;45264:2;45257:5;45250:17;45304:7;45299:2;45294;45290;45286:11;45282:20;45279:33;45276:53;;;45325:1;45322;45315:12;45276:53;45338:67;45402:2;45397;45390:5;45386:14;45381:2;45377;45373:11;45338:67;:::i;46099:732::-;-1:-1:-1;;;;;46442:15:119;;;46424:34;;46494:15;;;46489:2;46474:18;;46467:43;46546:15;;46541:2;46526:18;;46519:43;46593:2;46578:18;;46571:34;;;46642:3;46636;46621:19;;46614:32;;;46367:4;;46669:46;;46695:19;;46687:6;46669:46;:::i;:::-;46764:9;46756:6;46752:22;46746:3;46735:9;46731:19;46724:51;46792:33;46818:6;46810;46792:33;:::i;46836:522::-;-1:-1:-1;;;;;47122:15:119;;;47104:34;;47174:15;;47169:2;47154:18;;47147:43;47237:2;47226:22;;;47221:2;47206:18;;47199:50;47285:3;47280:2;47265:18;;47258:31;;;47047:4;;47306:46;;47332:19;;47324:6;47306:46;:::i;48181:287::-;48310:3;48348:6;48342:13;48364:66;48423:6;48418:3;48411:4;48403:6;48399:17;48364:66;:::i;:::-;48446:16;;;;;48181:287;-1:-1:-1;;48181:287:119:o",
    "linkReferences": {},
    "immutableReferences": {
      "76370": [
        {
          "start": 1640,
          "length": 32
        },
        {
          "start": 4711,
          "length": 32
        },
        {
          "start": 4822,
          "length": 32
        },
        {
          "start": 5715,
          "length": 32
        },
        {
          "start": 6716,
          "length": 32
        },
        {
          "start": 6923,
          "length": 32
        },
        {
          "start": 7308,
          "length": 32
        },
        {
          "start": 7702,
          "length": 32
        },
        {
          "start": 9534,
          "length": 32
        },
        {
          "start": 10630,
          "length": 32
        },
        {
          "start": 10832,
          "length": 32
        },
        {
          "start": 10984,
          "length": 32
        },
        {
          "start": 11088,
          "length": 32
        },
        {
          "start": 11224,
          "length": 32
        },
        {
          "start": 13660,
          "length": 32
        },
        {
          "start": 13811,
          "length": 32
        },
        {
          "start": 18865,
          "length": 32
        },
        {
          "start": 19440,
          "length": 32
        }
      ],
      "87860": [
        {
          "start": 3522,
          "length": 32
        }
      ],
      "87863": [
        {
          "start": 2216,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "FLAT_COST_SPONSORSHIP()": "b132a50d",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "_initialize(string,string)": "098dce13",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "calculateFlowRate(uint32)": "7ae058dc",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "remove(address)": "29092d0e",
    "renounceOwnership()": "715018a6",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLAT_COST_SPONSORSHIP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"clubName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"clubSymbol\",\"type\":\"string\"}],\"name\":\"_initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"calculateFlowRate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct SuperfluidClub.Protege[6]\",\"name\":\"sponsors\",\"type\":\"tuple[6]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct SuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldProtege\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"_initialize(string,string)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"calculateFlowRate(uint32)\":{\"details\":\"ISuperfluidClub.calculateSponsorFlowRate implementation\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation - WRONG\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"},\"withdraw(address,uint256)\":{\"details\":\"ISuperfluidClub.withdraw implementation\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/custom-supertokens/contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"lib/custom-supertokens/contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"lib/custom-supertokens/contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x3843fa20cdd666eaa8e581a0d06563347daca90e2ac7f16c3a7a46cd90c1a091\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a44f3c0759e6998e586cc67865908a598a850a22c6e443813fd88029eaa80ad\",\"dweb:/ipfs/QmRb7PhP6dyKG4gm2WxckSMVMqGiT1UYH88SmaSHhMNBe8\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0x2936b7104d39a012ed2d78458b2e45f1e3cac3a5d20cf08ee8cfebe92bd29a93\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9a420cda25b096b194e46749c16e034b7b57655770b9bd6e77fdb25749961cc2\",\"dweb:/ipfs/QmdEc9Ube9Vwc8TG5NoK8tYaHJDnmg5bX1hEpTJM4jDHKK\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x2e5f2723593b8ed537df0d3abb799f68db4a42de9a9c9d25ec524ea10bf526cb\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://44e2903f3f40dd170081d0a37f0dd6a6fdc5b26c7807853216274ccd40de4fb3\",\"dweb:/ipfs/QmPuNYjGP6Si9c7ooLYTMEiB4ZAeSVY6nZ77dXKr6Yu4ho\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLAT_COST_SPONSORSHIP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "clubName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "clubSymbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateFlowRate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct SuperfluidClub.Protege[6]",
              "name": "sponsors",
              "type": "tuple[6]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct SuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldProtege",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "_initialize(string,string)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "calculateFlowRate(uint32)": {
            "details": "ISuperfluidClub.calculateSponsorFlowRate implementation"
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation - WRONG"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          },
          "withdraw(address,uint256)": {
            "details": "ISuperfluidClub.withdraw implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/custom-supertokens/contracts/base/SuperTokenBase.sol": {
        "keccak256": "0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571",
        "urls": [
          "bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c",
          "dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/SuperTokenStorage.sol": {
        "keccak256": "0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687",
        "urls": [
          "bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26",
          "dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/UUPSProxy.sol": {
        "keccak256": "0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca",
        "urls": [
          "bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa",
          "dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1"
        ],
        "license": "AGPLv3"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x3843fa20cdd666eaa8e581a0d06563347daca90e2ac7f16c3a7a46cd90c1a091",
        "urls": [
          "bzz-raw://1a44f3c0759e6998e586cc67865908a598a850a22c6e443813fd88029eaa80ad",
          "dweb:/ipfs/QmRb7PhP6dyKG4gm2WxckSMVMqGiT1UYH88SmaSHhMNBe8"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0x2936b7104d39a012ed2d78458b2e45f1e3cac3a5d20cf08ee8cfebe92bd29a93",
        "urls": [
          "bzz-raw://9a420cda25b096b194e46749c16e034b7b57655770b9bd6e77fdb25749961cc2",
          "dweb:/ipfs/QmdEc9Ube9Vwc8TG5NoK8tYaHJDnmg5bX1hEpTJM4jDHKK"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x2e5f2723593b8ed537df0d3abb799f68db4a42de9a9c9d25ec524ea10bf526cb",
        "urls": [
          "bzz-raw://44e2903f3f40dd170081d0a37f0dd6a6fdc5b26c7807853216274ccd40de4fb3",
          "dweb:/ipfs/QmPuNYjGP6Si9c7ooLYTMEiB4ZAeSVY6nZ77dXKr6Yu4ho"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 87658,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        66295
      ],
      "IConstantOutflowNFT": [
        66349
      ],
      "IERC20": [
        44661
      ],
      "ISuperToken": [
        67038
      ],
      "ISuperfluid": [
        67711
      ],
      "ISuperfluidClub": [
        87808
      ],
      "Ownable": [
        43775
      ],
      "SuperToken": [
        89550
      ],
      "SuperTokenBase": [
        167
      ],
      "SuperTokenV1Library": [
        63611
      ],
      "SuperfluidClub": [
        87657
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:10243:115",
    "nodes": [
      {
        "id": 86786,
        "nodeType": "PragmaDirective",
        "src": "32:24:115",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 86788,
        "nodeType": "ImportDirective",
        "src": "58:114:115",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87658,
        "sourceUnit": 63612,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86787,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63611,
              "src": "66:19:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86791,
        "nodeType": "ImportDirective",
        "src": "173:117:115",
        "nodes": [],
        "absolutePath": "lib/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "file": "@superfluid-finance/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87658,
        "sourceUnit": 168,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86789,
              "name": "SuperTokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 167,
              "src": "181:14:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86790,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67038,
              "src": "197:11:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86797,
        "nodeType": "ImportDirective",
        "src": "291:117:115",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87658,
        "sourceUnit": 89551,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86792,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89550,
              "src": "299:10:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86793,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67711,
              "src": "311:11:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86794,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66349,
              "src": "324:19:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86795,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66295,
              "src": "345:18:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86796,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44661,
              "src": "365:6:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86799,
        "nodeType": "ImportDirective",
        "src": "409:67:115",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87658,
        "sourceUnit": 43776,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86798,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43775,
              "src": "417:7:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86801,
        "nodeType": "ImportDirective",
        "src": "477:65:115",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87658,
        "sourceUnit": 87809,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86800,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87808,
              "src": "485:15:115",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87657,
        "nodeType": "ContractDefinition",
        "src": "650:9624:115",
        "nodes": [
          {
            "id": 86810,
            "nodeType": "UsingForDirective",
            "src": "703:42:115",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86807,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "709:19:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63611,
              "src": "709:19:115"
            },
            "typeName": {
              "id": 86809,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86808,
                "name": "ISuperToken",
                "nameLocations": [
                  "733:11:115"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 67038,
                "src": "733:11:115"
              },
              "referencedDeclaration": 67038,
              "src": "733:11:115",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 86822,
            "nodeType": "EventDefinition",
            "src": "751:189:115",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a7",
            "name": "PROTEGE_UPDATED",
            "nameLocation": "757:15:115",
            "parameters": {
              "id": 86821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sponsor",
                  "nameLocation": "798:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86822,
                  "src": "782:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86814,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "831:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86822,
                  "src": "815:23:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86816,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "level",
                  "nameLocation": "854:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86822,
                  "src": "848:11:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 86815,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86818,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "876:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86822,
                  "src": "869:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 86817,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86820,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "directTotalProtegeCount",
                  "nameLocation": "910:23:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86822,
                  "src": "903:30:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 86819,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "903:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:167:115"
            }
          },
          {
            "id": 86824,
            "nodeType": "VariableDeclaration",
            "src": "946:17:115",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "init",
            "nameLocation": "959:4:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 86823,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "946:4:115",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 86842,
            "nodeType": "FunctionDefinition",
            "src": "970:178:115",
            "nodes": [],
            "body": {
              "id": 86841,
              "nodeType": "Block",
              "src": "1146:2:115",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86836,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86827,
                    "src": "1097:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 86837,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86830,
                    "src": "1103:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 86838,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86833,
                    "src": "1123:17:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 86839,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86835,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1086:10:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89550,
                  "src": "1086:10:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "1086:55:115"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86827,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "994:4:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86842,
                  "src": "982:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 86826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86825,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "982:11:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67711,
                      "src": "982:11:115"
                    },
                    "referencedDeclaration": 67711,
                    "src": "982:11:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67711",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86830,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1020:18:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86842,
                  "src": "1000:38:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 86829,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86828,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1000:19:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66349,
                      "src": "1000:19:115"
                    },
                    "referencedDeclaration": 66349,
                    "src": "1000:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66349",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86833,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1059:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86842,
                  "src": "1040:36:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 86832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86831,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1040:18:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66295,
                      "src": "1040:18:115"
                    },
                    "referencedDeclaration": 66295,
                    "src": "1040:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66295",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:96:115"
            },
            "returnParameters": {
              "id": 86840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1146:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86889,
            "nodeType": "FunctionDefinition",
            "src": "1209:311:115",
            "nodes": [],
            "body": {
              "id": 86888,
              "nodeType": "Block",
              "src": "1291:229:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1309:5:115",
                        "subExpression": {
                          "id": 86851,
                          "name": "init",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86824,
                          "src": "1310:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920696e697469616c697a6564",
                        "id": 86853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1316:21:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        },
                        "value": "Already initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d3814fd4e72cfd7651525eee846049aca388165c613a1085fb56751abcdd36c0",
                          "typeString": "literal_string \"Already initialized\""
                        }
                      ],
                      "id": 86850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1301:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:37:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86855,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:37:115"
                },
                {
                  "expression": {
                    "id": 86858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86856,
                      "name": "init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86824,
                      "src": "1348:4:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 86857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1355:4:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1348:11:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86859,
                  "nodeType": "ExpressionStatement",
                  "src": "1348:11:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 86866,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1400:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 86865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1392:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86864,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1392:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1392:10:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86863,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44661,
                          "src": "1385:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44661_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 86868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1385:18:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44661",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1405:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 86870,
                        "name": "clubName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86845,
                        "src": "1408:8:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 86871,
                        "name": "clubSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86847,
                        "src": "1418:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$44661",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 86860,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1369:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1374:10:115",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87991,
                      "src": "1369:15:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$44661_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 86872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1369:60:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86873,
                  "nodeType": "ExpressionStatement",
                  "src": "1369:60:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86879,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1461:4:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 86878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1453:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86877,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1453:7:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1453:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 86881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1468:30:115",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1510:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1500:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 86882,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1504:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 86885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1500:12:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 86874,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1439:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1444:8:115",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88917,
                      "src": "1439:13:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 86886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1439:74:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86887,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:74:115"
                }
              ]
            },
            "documentation": {
              "id": 86843,
              "nodeType": "StructuredDocumentation",
              "src": "1154:50:115",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "098dce13",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initialize",
            "nameLocation": "1218:11:115",
            "parameters": {
              "id": 86848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86845,
                  "mutability": "mutable",
                  "name": "clubName",
                  "nameLocation": "1246:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86889,
                  "src": "1230:24:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86844,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86847,
                  "mutability": "mutable",
                  "name": "clubSymbol",
                  "nameLocation": "1272:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86889,
                  "src": "1256:26:115",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1229:54:115"
            },
            "returnParameters": {
              "id": 86849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86892,
            "nodeType": "VariableDeclaration",
            "src": "1543:49:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "1567:21:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86890,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1543:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 86891,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1591:1:115",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "id": 86895,
            "nodeType": "VariableDeclaration",
            "src": "1598:58:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "b132a50d",
            "mutability": "constant",
            "name": "FLAT_COST_SPONSORSHIP",
            "nameLocation": "1622:21:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86893,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1598:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 86894,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1646:10:115",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "id": 86898,
            "nodeType": "VariableDeclaration",
            "src": "1662:64:115",
            "nodes": [],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "1686:28:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86896,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1662:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 86897,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1717:9:115",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 86901,
            "nodeType": "VariableDeclaration",
            "src": "1732:50:115",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SECONDS_IN_A_DAY",
            "nameLocation": "1758:16:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86899,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1732:7:115",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3836343030",
              "id": 86900,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1777:5:115",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "value": "86400"
            },
            "visibility": "internal"
          },
          {
            "id": 86912,
            "nodeType": "StructDefinition",
            "src": "1841:407:115",
            "nodes": [],
            "canonicalName": "SuperfluidClub.Protege",
            "members": [
              {
                "constant": false,
                "id": 86903,
                "mutability": "mutable",
                "name": "sponsor",
                "nameLocation": "1874:7:115",
                "nodeType": "VariableDeclaration",
                "scope": 86912,
                "src": "1866:15:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 86902,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1866:7:115",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86905,
                "mutability": "mutable",
                "name": "level",
                "nameLocation": "1923:5:115",
                "nodeType": "VariableDeclaration",
                "scope": 86912,
                "src": "1917:11:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 86904,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "1917:5:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86907,
                "mutability": "mutable",
                "name": "totalProtegeCount",
                "nameLocation": "2019:17:115",
                "nodeType": "VariableDeclaration",
                "scope": 86912,
                "src": "2012:24:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 86906,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2012:6:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86909,
                "mutability": "mutable",
                "name": "directTotalProtegeCount",
                "nameLocation": "2101:23:115",
                "nodeType": "VariableDeclaration",
                "scope": 86912,
                "src": "2094:30:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 86908,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2094:6:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 86911,
                "mutability": "mutable",
                "name": "desiredFlowRate",
                "nameLocation": "2189:15:115",
                "nodeType": "VariableDeclaration",
                "scope": 86912,
                "src": "2183:21:115",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int96",
                  "typeString": "int96"
                },
                "typeName": {
                  "id": 86910,
                  "name": "int96",
                  "nodeType": "ElementaryTypeName",
                  "src": "2183:5:115",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Protege",
            "nameLocation": "1848:7:115",
            "scope": 87657,
            "visibility": "public"
          },
          {
            "id": 86917,
            "nodeType": "VariableDeclaration",
            "src": "2277:46:115",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_proteges",
            "nameLocation": "2314:9:115",
            "scope": 87657,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
              "typeString": "mapping(address => struct SuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 86916,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 86913,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2285:7:115",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2277:27:115",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                "typeString": "mapping(address => struct SuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 86915,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86914,
                  "name": "Protege",
                  "nameLocations": [
                    "2296:7:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86912,
                  "src": "2296:7:115"
                },
                "referencedDeclaration": 86912,
                "src": "2296:7:115",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                  "typeString": "struct SuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86936,
            "nodeType": "FunctionDefinition",
            "src": "2384:127:115",
            "nodes": [],
            "body": {
              "id": 86935,
              "nodeType": "Block",
              "src": "2447:64:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 86925,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86917,
                          "src": "2464:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 86927,
                        "indexExpression": {
                          "id": 86926,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86920,
                          "src": "2474:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2464:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 86928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2483:7:115",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86903,
                      "src": "2464:26:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 86931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2502:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 86930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2494:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 86929,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2494:7:115",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 86932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2494:10:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2464:40:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86924,
                  "id": 86934,
                  "nodeType": "Return",
                  "src": "2457:47:115"
                }
              ]
            },
            "documentation": {
              "id": 86918,
              "nodeType": "StructuredDocumentation",
              "src": "2330:49:115",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "2393:9:115",
            "parameters": {
              "id": 86921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86920,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2411:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86936,
                  "src": "2403:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2402:17:115"
            },
            "returnParameters": {
              "id": 86924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86923,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86936,
                  "src": "2441:4:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 86922,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2441:4:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2440:6:115"
            },
            "scope": 87657,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86977,
            "nodeType": "FunctionDefinition",
            "src": "2580:324:115",
            "nodes": [],
            "body": {
              "id": 86976,
              "nodeType": "Block",
              "src": "2724:180:115",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86948
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86948,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "2742:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 86976,
                      "src": "2734:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 86947,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2734:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86950,
                  "initialValue": {
                    "id": 86949,
                    "name": "protege",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86939,
                    "src": "2746:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2734:19:115"
                },
                {
                  "assignments": [
                    86952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86952,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2771:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 86976,
                      "src": "2763:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2763:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86954,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 86953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2775:1:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2763:13:115"
                },
                {
                  "body": {
                    "id": 86974,
                    "nodeType": "Block",
                    "src": "2807:91:115",
                    "statements": [
                      {
                        "expression": {
                          "id": 86965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 86958,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86945,
                              "src": "2821:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$86912_memory_ptr_$6_memory_ptr",
                                "typeString": "struct SuperfluidClub.Protege memory[6] memory"
                              }
                            },
                            "id": 86961,
                            "indexExpression": {
                              "id": 86960,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2830:3:115",
                              "subExpression": {
                                "id": 86959,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86952,
                                "src": "2830:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2821:13:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                              "typeString": "struct SuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 86962,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86917,
                              "src": "2837:9:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 86964,
                            "indexExpression": {
                              "id": 86963,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86948,
                              "src": "2847:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2837:12:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_storage",
                              "typeString": "struct SuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2821:28:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                            "typeString": "struct SuperfluidClub.Protege memory"
                          }
                        },
                        "id": 86966,
                        "nodeType": "ExpressionStatement",
                        "src": "2821:28:115"
                      },
                      {
                        "expression": {
                          "id": 86972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86967,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86948,
                            "src": "2863:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 86968,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86917,
                                "src": "2867:9:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                  "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 86970,
                              "indexExpression": {
                                "id": 86969,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86948,
                                "src": "2877:1:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2867:12:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                "typeString": "struct SuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 86971,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2880:7:115",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86903,
                            "src": "2867:20:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2863:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 86973,
                        "nodeType": "ExpressionStatement",
                        "src": "2863:24:115"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 86956,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86948,
                        "src": "2803:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86955,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86936,
                      "src": "2793:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 86957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2793:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86975,
                  "nodeType": "WhileStatement",
                  "src": "2786:112:115"
                }
              ]
            },
            "documentation": {
              "id": 86937,
              "nodeType": "StructuredDocumentation",
              "src": "2517:58:115",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2589:18:115",
            "parameters": {
              "id": 86940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86939,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2616:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86977,
                  "src": "2608:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2608:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2607:17:115"
            },
            "returnParameters": {
              "id": 86946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86945,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2710:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86977,
                  "src": "2672:46:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$86912_memory_ptr_$6_memory_ptr",
                    "typeString": "struct SuperfluidClub.Protege[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86942,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86941,
                        "name": "Protege",
                        "nameLocations": [
                          "2672:7:115"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 86912,
                        "src": "2672:7:115"
                      },
                      "referencedDeclaration": 86912,
                      "src": "2672:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                        "typeString": "struct SuperfluidClub.Protege"
                      }
                    },
                    "id": 86944,
                    "length": {
                      "id": 86943,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86892,
                      "src": "2680:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2672:30:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$86912_storage_$6_storage_ptr",
                      "typeString": "struct SuperfluidClub.Protege[6]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2671:48:115"
            },
            "scope": 87657,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86991,
            "nodeType": "FunctionDefinition",
            "src": "2950:118:115",
            "nodes": [],
            "body": {
              "id": 86990,
              "nodeType": "Block",
              "src": "3026:42:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 86986,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86917,
                      "src": "3043:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                        "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 86988,
                    "indexExpression": {
                      "id": 86987,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86980,
                      "src": "3053:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3043:18:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86912_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 86985,
                  "id": 86989,
                  "nodeType": "Return",
                  "src": "3036:25:115"
                }
              ]
            },
            "documentation": {
              "id": 86978,
              "nodeType": "StructuredDocumentation",
              "src": "2910:35:115",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "2959:10:115",
            "parameters": {
              "id": 86981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86980,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2978:7:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 86991,
                  "src": "2970:15:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2969:17:115"
            },
            "returnParameters": {
              "id": 86985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86984,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86991,
                  "src": "3010:14:115",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                    "typeString": "struct SuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 86983,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86982,
                      "name": "Protege",
                      "nameLocations": [
                        "3010:7:115"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 86912,
                      "src": "3010:7:115"
                    },
                    "referencedDeclaration": 86912,
                    "src": "3010:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                      "typeString": "struct SuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3009:16:115"
            },
            "scope": 87657,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87040,
            "nodeType": "FunctionDefinition",
            "src": "3253:333:115",
            "nodes": [],
            "body": {
              "id": 87039,
              "nodeType": "Block",
              "src": "3327:259:115",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87008,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3388:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3380:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87006,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3380:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3380:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87010,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86994,
                          "src": "3395:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87002,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3361:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3353:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87000,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3353:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3353:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86999,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67038,
                            "src": "3341:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3341:26:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$67038",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3368:11:115",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61919,
                        "src": "3341:38:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$67038_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3341:63:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3407:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3341:67:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 87037,
                    "nodeType": "Block",
                    "src": "3498:82:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87033,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86994,
                              "src": "3550:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87034,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86996,
                              "src": "3560:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87029,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3532:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87028,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3524:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87027,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3524:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87030,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3524:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87026,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "3512:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3512:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87032,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3539:10:115",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60524,
                            "src": "3512:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3512:57:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87036,
                        "nodeType": "ExpressionStatement",
                        "src": "3512:57:115"
                      }
                    ]
                  },
                  "id": 87038,
                  "nodeType": "IfStatement",
                  "src": "3337:243:115",
                  "trueBody": {
                    "id": 87025,
                    "nodeType": "Block",
                    "src": "3410:82:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87021,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86994,
                              "src": "3462:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87022,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86996,
                              "src": "3472:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87017,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3444:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87016,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3436:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87015,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3436:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87018,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3436:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87014,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "3424:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3424:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3451:10:115",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60596,
                            "src": "3424:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3424:57:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87024,
                        "nodeType": "ExpressionStatement",
                        "src": "3424:57:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 86992,
              "nodeType": "StructuredDocumentation",
              "src": "3074:174:115",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "3262:21:115",
            "parameters": {
              "id": 86997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86994,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3292:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87040,
                  "src": "3284:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3284:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86996,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "3308:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87040,
                  "src": "3302:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 86995,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3302:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3283:34:115"
            },
            "returnParameters": {
              "id": 86998,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3327:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87271,
            "nodeType": "FunctionDefinition",
            "src": "3644:2646:115",
            "nodes": [],
            "body": {
              "id": 87270,
              "nodeType": "Block",
              "src": "3706:2584:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3724:22:115",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87048,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87043,
                              "src": "3735:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 87047,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86936,
                            "src": "3725:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3725:21:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920612070726f7465676521",
                        "id": 87051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3748:20:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa05a65878193080d22f73b94b7666ab57064295edfee1c13443d735e78c58ce",
                          "typeString": "literal_string \"Already a protege!\""
                        },
                        "value": "Already a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa05a65878193080d22f73b94b7666ab57064295edfee1c13443d735e78c58ce",
                          "typeString": "literal_string \"Already a protege!\""
                        }
                      ],
                      "id": 87046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3716:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3716:53:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87053,
                  "nodeType": "ExpressionStatement",
                  "src": "3716:53:115"
                },
                {
                  "assignments": [
                    87055,
                    87057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87055,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3840:13:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "3832:21:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87054,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3832:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87057,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3860:7:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "3855:12:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87056,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3855:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87075,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87058,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3872:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87059,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3876:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3872:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 87060,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43703,
                              "src": "3886:5:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 87061,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3886:7:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3872:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87063,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3871:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 87070,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3922:3:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3926:6:115",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3922:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 87072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3934:5:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 87073,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3921:19:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 87074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3871:69:115",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 87066,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3906:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3898:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3898:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3898:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 87068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3913:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 87069,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3897:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3831:109:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 87078,
                              "name": "actualSponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87055,
                              "src": "3968:13:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87077,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86936,
                            "src": "3958:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87079,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3958:24:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 87080,
                          "name": "messiah",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87057,
                          "src": "3986:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3958:35:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f7420612070726f7465676521",
                        "id": 87082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3995:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3420d9eee9f8560eba39b2585e5c7bf743d39bf54e1bfc9d51eb51756a4d153d",
                          "typeString": "literal_string \"You are not a protege!\""
                        },
                        "value": "You are not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3420d9eee9f8560eba39b2585e5c7bf743d39bf54e1bfc9d51eb51756a4d153d",
                          "typeString": "literal_string \"You are not a protege!\""
                        }
                      ],
                      "id": 87076,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3950:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3950:70:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87084,
                  "nodeType": "ExpressionStatement",
                  "src": "3950:70:115"
                },
                {
                  "assignments": [
                    87086
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87086,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "4039:10:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "4031:18:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87085,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4031:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87089,
                  "initialValue": {
                    "expression": {
                      "id": 87087,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4052:3:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 87088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4056:5:115",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "4052:9:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4031:30:115"
                },
                {
                  "assignments": [
                    87091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87091,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "4079:9:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "4071:17:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4071:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87098,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87093,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86917,
                            "src": "4095:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87095,
                          "indexExpression": {
                            "id": 87094,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87055,
                            "src": "4105:13:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4095:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87096,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4120:23:115",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86909,
                        "src": "4095:48:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 87092,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87507,
                      "src": "4091:3:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 87097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:53:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4071:73:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87100,
                          "name": "coinAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87086,
                          "src": "4162:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 87101,
                          "name": "feeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87091,
                          "src": "4176:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4162:23:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f696e21",
                        "id": 87103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4187:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_168e6ac4f02be699d0499a0de40bc03ce0390360241467a0137faceccf5d9d50",
                          "typeString": "literal_string \"Not enough coin!\""
                        },
                        "value": "Not enough coin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_168e6ac4f02be699d0499a0de40bc03ce0390360241467a0137faceccf5d9d50",
                          "typeString": "literal_string \"Not enough coin!\""
                        }
                      ],
                      "id": 87099,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4154:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4154:52:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87105,
                  "nodeType": "ExpressionStatement",
                  "src": "4154:52:115"
                },
                {
                  "expression": {
                    "id": 87108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87106,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87086,
                      "src": "4217:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 87107,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87091,
                      "src": "4231:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4217:23:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87109,
                  "nodeType": "ExpressionStatement",
                  "src": "4217:23:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 87111,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86917,
                              "src": "4258:9:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 87113,
                            "indexExpression": {
                              "id": 87112,
                              "name": "actualSponsor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87055,
                              "src": "4268:13:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4258:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_storage",
                              "typeString": "struct SuperfluidClub.Protege storage ref"
                            }
                          },
                          "id": 87114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4283:5:115",
                          "memberName": "level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86905,
                          "src": "4258:30:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 87115,
                          "name": "MAX_SPONSORSHIP_LEVEL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86892,
                          "src": "4291:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4258:54:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d61782073706f6e736f7273686970206c6576656c207265616368656421",
                        "id": 87117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4314:32:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28c57c66e722b21827e9c8283ece53493263345a799fbb420526852a89cd9781",
                          "typeString": "literal_string \"Max sponsorship level reached!\""
                        },
                        "value": "Max sponsorship level reached!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28c57c66e722b21827e9c8283ece53493263345a799fbb420526852a89cd9781",
                          "typeString": "literal_string \"Max sponsorship level reached!\""
                        }
                      ],
                      "id": 87110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4250:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4250:97:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87119,
                  "nodeType": "ExpressionStatement",
                  "src": "4250:97:115"
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 87127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4422:44:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87120,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86917,
                          "src": "4422:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87125,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87123,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4440:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4432:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87121,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4432:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4432:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4422:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87126,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4447:17:115",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86907,
                      "src": "4422:42:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87128,
                  "nodeType": "ExpressionStatement",
                  "src": "4422:44:115"
                },
                {
                  "expression": {
                    "id": 87133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4477:50:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87129,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86917,
                          "src": "4477:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87131,
                        "indexExpression": {
                          "id": 87130,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87055,
                          "src": "4487:13:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4477:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87132,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4502:23:115",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86909,
                      "src": "4477:48:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87134,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:50:115"
                },
                {
                  "assignments": [
                    87136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87136,
                      "mutability": "mutable",
                      "name": "lastSponsorProtegeCount",
                      "nameLocation": "4545:23:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "4538:30:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87135,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4538:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87141,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87137,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86917,
                        "src": "4571:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87139,
                      "indexExpression": {
                        "id": 87138,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87055,
                        "src": "4581:13:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4571:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87140,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4596:17:115",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86907,
                    "src": "4571:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4538:75:115"
                },
                {
                  "assignments": [
                    87143
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87143,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4631:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87270,
                      "src": "4623:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87142,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4623:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87145,
                  "initialValue": {
                    "id": 87144,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87055,
                    "src": "4635:13:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4623:25:115"
                },
                {
                  "body": {
                    "id": 87215,
                    "nodeType": "Block",
                    "src": "4679:836:115",
                    "statements": [
                      {
                        "assignments": [
                          87151
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87151,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4742:16:115",
                            "nodeType": "VariableDeclaration",
                            "scope": 87215,
                            "src": "4726:32:115",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                              "typeString": "struct SuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87150,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87149,
                                "name": "Protege",
                                "nameLocations": [
                                  "4726:7:115"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 86912,
                                "src": "4726:7:115"
                              },
                              "referencedDeclaration": 86912,
                              "src": "4726:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87155,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87152,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86917,
                            "src": "4761:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87154,
                          "indexExpression": {
                            "id": 87153,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87143,
                            "src": "4771:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4761:12:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4726:47:115"
                      },
                      {
                        "expression": {
                          "id": 87159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4787:36:115",
                          "subExpression": {
                            "expression": {
                              "id": 87156,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87151,
                              "src": "4787:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87158,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4804:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86907,
                            "src": "4787:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87160,
                        "nodeType": "ExpressionStatement",
                        "src": "4787:36:115"
                      },
                      {
                        "expression": {
                          "id": 87168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87161,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87151,
                              "src": "4837:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87163,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4854:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "4837:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 87165,
                                  "name": "sponsorChainInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87151,
                                  "src": "4891:16:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                    "typeString": "struct SuperfluidClub.Protege storage pointer"
                                  }
                                },
                                "id": 87166,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4908:17:115",
                                "memberName": "totalProtegeCount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 86907,
                                "src": "4891:34:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87164,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87460,
                              "src": "4873:17:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87167,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4873:53:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "4837:89:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87169,
                        "nodeType": "ExpressionStatement",
                        "src": "4837:89:115"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87171,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87143,
                              "src": "5032:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 87172,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87151,
                                "src": "5035:16:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                  "typeString": "struct SuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87173,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5052:15:115",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86911,
                              "src": "5035:32:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 87170,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87040,
                            "src": "5010:21:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 87174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5010:58:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87175,
                        "nodeType": "ExpressionStatement",
                        "src": "5010:58:115"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87177,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86917,
                                  "src": "5121:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87179,
                                "indexExpression": {
                                  "id": 87178,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87055,
                                  "src": "5131:13:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5121:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87180,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5146:7:115",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86903,
                              "src": "5121:32:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87181,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87143,
                              "src": "5171:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87182,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86917,
                                  "src": "5190:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87187,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87185,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5208:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87184,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5200:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87183,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5200:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5200:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5190:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87188,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5215:5:115",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86905,
                              "src": "5190:30:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87189,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86917,
                                  "src": "5238:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87194,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87192,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5256:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5248:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87190,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5248:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5248:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5238:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87195,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5263:17:115",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86907,
                              "src": "5238:42:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87196,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86917,
                                  "src": "5298:9:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                    "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87201,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87199,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5316:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5308:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87197,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5308:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87200,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5308:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5298:24:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                  "typeString": "struct SuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87202,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5323:23:115",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86909,
                              "src": "5298:48:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87176,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86822,
                            "src": "5088:15:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 87203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5088:272:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87204,
                        "nodeType": "EmitStatement",
                        "src": "5083:277:115"
                      },
                      {
                        "expression": {
                          "id": 87208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87205,
                            "name": "lastSponsorProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87136,
                            "src": "5374:23:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87206,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87151,
                              "src": "5400:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87207,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5417:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86907,
                            "src": "5400:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5374:60:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87209,
                        "nodeType": "ExpressionStatement",
                        "src": "5374:60:115"
                      },
                      {
                        "expression": {
                          "id": 87213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87210,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87143,
                            "src": "5448:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87211,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87151,
                              "src": "5452:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5469:7:115",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86903,
                            "src": "5452:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5448:28:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87214,
                        "nodeType": "ExpressionStatement",
                        "src": "5448:28:115"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87147,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87143,
                        "src": "4675:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87146,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86936,
                      "src": "4665:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4665:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87216,
                  "nodeType": "WhileStatement",
                  "src": "4658:857:115"
                },
                {
                  "expression": {
                    "id": 87224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87217,
                      "name": "lastSponsorProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87136,
                      "src": "5619:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 87218,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87057,
                        "src": "5645:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87220,
                          "name": "lastSponsorProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87136,
                          "src": "5681:23:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 87221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5707:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5681:27:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 87223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5645:63:115",
                      "trueExpression": {
                        "id": 87219,
                        "name": "lastSponsorProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87136,
                        "src": "5655:23:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5619:89:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87225,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:89:115"
                },
                {
                  "expression": {
                    "id": 87243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87226,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86917,
                        "src": "5718:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87228,
                      "indexExpression": {
                        "id": 87227,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87043,
                        "src": "5728:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5718:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87230,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87055,
                          "src": "5773:13:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 87236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 87231,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86917,
                                "src": "5807:9:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                                  "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87233,
                              "indexExpression": {
                                "id": 87232,
                                "name": "actualSponsor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87055,
                                "src": "5817:13:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5807:24:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage",
                                "typeString": "struct SuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5832:5:115",
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86905,
                            "src": "5807:30:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 87235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5840:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5807:34:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 87237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5874:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 87238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5914:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 87240,
                              "name": "lastSponsorProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87136,
                              "src": "5964:23:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87239,
                            "name": "calculateFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87460,
                            "src": "5946:17:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                              "typeString": "function (uint32) pure returns (int96)"
                            }
                          },
                          "id": 87241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5946:42:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 87229,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86912,
                        "src": "5742:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$86912_storage_ptr_$",
                          "typeString": "type(struct SuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 87242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5764:7:115",
                        "5800:5:115",
                        "5855:17:115",
                        "5889:23:115",
                        "5929:15:115"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5742:257:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege memory"
                      }
                    },
                    "src": "5718:281:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86912_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 87244,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:281:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87252,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87043,
                        "src": "6096:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87253,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86917,
                            "src": "6108:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87255,
                          "indexExpression": {
                            "id": 87254,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87043,
                            "src": "6118:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6108:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87256,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6130:15:115",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86911,
                        "src": "6108:37:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87248,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6078:4:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6070:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87246,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6070:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6070:13:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87245,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67038,
                          "src": "6058:11:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 87250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6058:26:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$67038",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 87251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6085:10:115",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60524,
                      "src": "6058:37:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 87257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6058:88:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87258,
                  "nodeType": "ExpressionStatement",
                  "src": "6058:88:115"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87259,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87086,
                      "src": "6160:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6173:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6160:14:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87269,
                  "nodeType": "IfStatement",
                  "src": "6156:128:115",
                  "trueBody": {
                    "id": 87268,
                    "nodeType": "Block",
                    "src": "6176:108:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87265,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87086,
                              "src": "6262:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 87262,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87043,
                              "src": "6242:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 87264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6253:8:115",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6242:19:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 87266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6242:31:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87267,
                        "nodeType": "ExpressionStatement",
                        "src": "6242:31:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87041,
              "nodeType": "StructuredDocumentation",
              "src": "3592:47:115",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3653:7:115",
            "parameters": {
              "id": 87044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87043,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3677:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87271,
                  "src": "3661:26:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:15:115",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3660:28:115"
            },
            "returnParameters": {
              "id": 87045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3706:0:115"
            },
            "scope": 87657,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87420,
            "nodeType": "FunctionDefinition",
            "src": "6296:1324:115",
            "nodes": [],
            "body": {
              "id": 87419,
              "nodeType": "Block",
              "src": "6341:1279:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87278,
                            "name": "oldProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87273,
                            "src": "6369:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87277,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86936,
                          "src": "6359:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6359:21:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612070726f7465676521",
                        "id": 87280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6382:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        },
                        "value": "Not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        }
                      ],
                      "id": 87276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6351:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6351:48:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87282,
                  "nodeType": "ExpressionStatement",
                  "src": "6351:48:115"
                },
                {
                  "assignments": [
                    87284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87284,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "6417:13:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87419,
                      "src": "6409:21:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6409:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87298,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87285,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6434:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6438:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6434:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 87287,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43703,
                              "src": "6448:5:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 87288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6448:7:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6434:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87290,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6433:23:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 87295,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6475:3:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 87296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6479:6:115",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6475:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6433:52:115",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 87293,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6467:4:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                            "typeString": "contract SuperfluidClub"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                            "typeString": "contract SuperfluidClub"
                          }
                        ],
                        "id": 87292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6459:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87291,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6459:7:115",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6459:13:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6409:76:115"
                },
                {
                  "assignments": [
                    87301
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87301,
                      "mutability": "mutable",
                      "name": "protegeInfo",
                      "nameLocation": "6510:11:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87419,
                      "src": "6495:26:115",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege"
                      },
                      "typeName": {
                        "id": 87300,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87299,
                          "name": "Protege",
                          "nameLocations": [
                            "6495:7:115"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 86912,
                          "src": "6495:7:115"
                        },
                        "referencedDeclaration": 86912,
                        "src": "6495:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                          "typeString": "struct SuperfluidClub.Protege"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87305,
                  "initialValue": {
                    "baseExpression": {
                      "id": 87302,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86917,
                      "src": "6524:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                        "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 87304,
                    "indexExpression": {
                      "id": 87303,
                      "name": "oldProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87273,
                      "src": "6534:10:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6524:21:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$86912_storage",
                      "typeString": "struct SuperfluidClub.Protege storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6495:50:115"
                },
                {
                  "expression": {
                    "id": 87309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6555:28:115",
                    "subExpression": {
                      "baseExpression": {
                        "id": 87306,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86917,
                        "src": "6562:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87308,
                      "indexExpression": {
                        "id": 87307,
                        "name": "oldProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87273,
                        "src": "6572:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6562:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87310,
                  "nodeType": "ExpressionStatement",
                  "src": "6555:28:115"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87320,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6666:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6658:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6658:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6658:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87322,
                          "name": "oldProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87273,
                          "src": "6673:10:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87314,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6639:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6631:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87312,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6631:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6631:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87311,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67038,
                            "src": "6619:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6619:26:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$67038",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6646:11:115",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61919,
                        "src": "6619:38:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$67038_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6619:65:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6687:1:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6619:69:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87341,
                  "nodeType": "IfStatement",
                  "src": "6615:164:115",
                  "trueBody": {
                    "id": 87340,
                    "nodeType": "Block",
                    "src": "6690:89:115",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87335,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6750:4:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87334,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6742:7:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87333,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6742:7:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6742:13:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87337,
                              "name": "oldProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87273,
                              "src": "6757:10:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87329,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6724:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87328,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6716:7:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87327,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6716:7:115",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87330,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6716:13:115",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87326,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67038,
                                "src": "6704:11:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6704:26:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6731:10:115",
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60668,
                            "src": "6704:37:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                              "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                            }
                          },
                          "id": 87338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6704:64:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87339,
                        "nodeType": "ExpressionStatement",
                        "src": "6704:64:115"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6827:44:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87342,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86917,
                          "src": "6827:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87347,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87345,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6845:4:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6837:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87343,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6837:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6837:13:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6827:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87348,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6852:17:115",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86907,
                      "src": "6827:42:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87350,
                  "nodeType": "ExpressionStatement",
                  "src": "6827:44:115"
                },
                {
                  "expression": {
                    "id": 87356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "6882:56:115",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87351,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86917,
                          "src": "6882:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                            "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87354,
                        "indexExpression": {
                          "expression": {
                            "id": 87352,
                            "name": "protegeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87301,
                            "src": "6892:11:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                              "typeString": "struct SuperfluidClub.Protege memory"
                            }
                          },
                          "id": 87353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6904:7:115",
                          "memberName": "sponsor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 86903,
                          "src": "6892:19:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6882:30:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$86912_storage",
                          "typeString": "struct SuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87355,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6913:23:115",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 86909,
                      "src": "6882:54:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87357,
                  "nodeType": "ExpressionStatement",
                  "src": "6882:56:115"
                },
                {
                  "assignments": [
                    87359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87359,
                      "mutability": "mutable",
                      "name": "totalProtegeCount",
                      "nameLocation": "6956:17:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87419,
                      "src": "6949:24:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87358,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6949:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87364,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87360,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86917,
                        "src": "6976:9:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                          "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87362,
                      "indexExpression": {
                        "id": 87361,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87284,
                        "src": "6986:13:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6976:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_storage",
                        "typeString": "struct SuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87363,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7001:17:115",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86907,
                    "src": "6976:42:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6949:69:115"
                },
                {
                  "assignments": [
                    87366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87366,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "7036:1:115",
                      "nodeType": "VariableDeclaration",
                      "scope": 87419,
                      "src": "7028:9:115",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87365,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7028:7:115",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87369,
                  "initialValue": {
                    "expression": {
                      "id": 87367,
                      "name": "protegeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87301,
                      "src": "7040:11:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$86912_memory_ptr",
                        "typeString": "struct SuperfluidClub.Protege memory"
                      }
                    },
                    "id": 87368,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7052:7:115",
                    "memberName": "sponsor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 86903,
                    "src": "7040:19:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7028:31:115"
                },
                {
                  "body": {
                    "id": 87417,
                    "nodeType": "Block",
                    "src": "7090:524:115",
                    "statements": [
                      {
                        "assignments": [
                          87375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87375,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "7153:16:115",
                            "nodeType": "VariableDeclaration",
                            "scope": 87417,
                            "src": "7137:32:115",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                              "typeString": "struct SuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87374,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87373,
                                "name": "Protege",
                                "nameLocations": [
                                  "7137:7:115"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 86912,
                                "src": "7137:7:115"
                              },
                              "referencedDeclaration": 86912,
                              "src": "7137:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87379,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87376,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86917,
                            "src": "7172:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87378,
                          "indexExpression": {
                            "id": 87377,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87366,
                            "src": "7182:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7172:12:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7137:47:115"
                      },
                      {
                        "expression": {
                          "id": 87383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "7198:36:115",
                          "subExpression": {
                            "expression": {
                              "id": 87380,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87375,
                              "src": "7198:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7215:17:115",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86907,
                            "src": "7198:34:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87384,
                        "nodeType": "ExpressionStatement",
                        "src": "7198:36:115"
                      },
                      {
                        "expression": {
                          "id": 87391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87385,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87375,
                              "src": "7248:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87387,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7265:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "7248:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 87389,
                                "name": "totalProtegeCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87359,
                                "src": "7302:17:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87388,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87460,
                              "src": "7284:17:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7284:36:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "7248:72:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87392,
                        "nodeType": "ExpressionStatement",
                        "src": "7248:72:115"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          },
                          "id": 87396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87393,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87375,
                              "src": "7383:16:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                "typeString": "struct SuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87394,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7400:15:115",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 86911,
                            "src": "7383:32:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7419:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7383:37:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 87415,
                          "nodeType": "Block",
                          "src": "7513:91:115",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87410,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87366,
                                    "src": "7553:1:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 87411,
                                      "name": "sponsorChainInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87375,
                                      "src": "7556:16:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Protege_$86912_storage_ptr",
                                        "typeString": "struct SuperfluidClub.Protege storage pointer"
                                      }
                                    },
                                    "id": 87412,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7573:15:115",
                                    "memberName": "desiredFlowRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 86911,
                                    "src": "7556:32:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  ],
                                  "id": 87409,
                                  "name": "_createOrUpdateStream",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87040,
                                  "src": "7531:21:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                                    "typeString": "function (address,int96)"
                                  }
                                },
                                "id": 87413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7531:58:115",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 87414,
                              "nodeType": "ExpressionStatement",
                              "src": "7531:58:115"
                            }
                          ]
                        },
                        "id": 87416,
                        "nodeType": "IfStatement",
                        "src": "7379:225:115",
                        "trueBody": {
                          "id": 87408,
                          "nodeType": "Block",
                          "src": "7422:85:115",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87404,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87366,
                                    "src": "7478:1:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 87405,
                                    "name": "oldProtege",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87273,
                                    "src": "7481:10:115",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 87400,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "7460:4:115",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          ],
                                          "id": 87399,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7452:7:115",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 87398,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7452:7:115",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 87401,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7452:13:115",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 87397,
                                      "name": "ISuperToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 67038,
                                      "src": "7440:11:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISuperToken_$67038_$",
                                        "typeString": "type(contract ISuperToken)"
                                      }
                                    },
                                    "id": 87402,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7440:26:115",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$67038",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 87403,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7467:10:115",
                                  "memberName": "deleteFlow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60668,
                                  "src": "7440:37:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$67038_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$67038_$",
                                    "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                                  }
                                },
                                "id": 87406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7440:52:115",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 87407,
                              "nodeType": "ExpressionStatement",
                              "src": "7440:52:115"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87371,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87366,
                        "src": "7086:1:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87370,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86936,
                      "src": "7076:9:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7076:12:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87418,
                  "nodeType": "WhileStatement",
                  "src": "7069:545:115"
                }
              ]
            },
            "functionSelector": "29092d0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "6305:6:115",
            "parameters": {
              "id": 87274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87273,
                  "mutability": "mutable",
                  "name": "oldProtege",
                  "nameLocation": "6320:10:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87420,
                  "src": "6312:18:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6312:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6311:20:115"
            },
            "returnParameters": {
              "id": 87275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6341:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87443,
            "nodeType": "FunctionDefinition",
            "src": "7686:181:115",
            "nodes": [],
            "body": {
              "id": 87442,
              "nodeType": "Block",
              "src": "7720:147:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 87426,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7748:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7752:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7748:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87425,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86936,
                          "src": "7738:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7738:21:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612070726f7465676521",
                        "id": 87429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7761:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        },
                        "value": "Not a protege!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f805afb197a56a7a0129a1784cb9516fdff05f62aba7db255d680d9ab3b76e09",
                          "typeString": "literal_string \"Not a protege!\""
                        }
                      ],
                      "id": 87424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7730:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7730:48:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87431,
                  "nodeType": "ExpressionStatement",
                  "src": "7730:48:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87433,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7810:3:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7814:6:115",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7810:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87435,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86917,
                            "src": "7822:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$86912_storage_$",
                              "typeString": "mapping(address => struct SuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87438,
                          "indexExpression": {
                            "expression": {
                              "id": 87436,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7832:3:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7836:6:115",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7832:10:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7822:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$86912_storage",
                            "typeString": "struct SuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87439,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7844:15:115",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 86911,
                        "src": "7822:37:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 87432,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87040,
                      "src": "7788:21:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 87440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7788:72:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87441,
                  "nodeType": "ExpressionStatement",
                  "src": "7788:72:115"
                }
              ]
            },
            "documentation": {
              "id": 87421,
              "nodeType": "StructuredDocumentation",
              "src": "7626:55:115",
              "text": "@dev ISuperfluidClub.sponsor implementation - WRONG"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "7695:13:115",
            "parameters": {
              "id": 87422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7708:2:115"
            },
            "returnParameters": {
              "id": 87423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7720:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87460,
            "nodeType": "FunctionDefinition",
            "src": "7942:175:115",
            "nodes": [],
            "body": {
              "id": 87459,
              "nodeType": "Block",
              "src": "8032:85:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87451,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87449,
                      "src": "8042:8:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87453,
                            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86898,
                            "src": "8061:28:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 87454,
                            "name": "totalProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87446,
                            "src": "8092:17:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8061:48:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87452,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87639,
                        "src": "8053:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 87456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8053:57:115",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "8042:68:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "id": 87458,
                  "nodeType": "ExpressionStatement",
                  "src": "8042:68:115"
                }
              ]
            },
            "documentation": {
              "id": 87444,
              "nodeType": "StructuredDocumentation",
              "src": "7873:64:115",
              "text": "@dev ISuperfluidClub.calculateSponsorFlowRate implementation"
            },
            "functionSelector": "7ae058dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateFlowRate",
            "nameLocation": "7951:17:115",
            "parameters": {
              "id": 87447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87446,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "7976:17:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87460,
                  "src": "7969:24:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87445,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7968:26:115"
            },
            "returnParameters": {
              "id": 87450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87449,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "8022:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87460,
                  "src": "8016:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87448,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8016:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8015:16:115"
            },
            "scope": 87657,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87507,
            "nodeType": "FunctionDefinition",
            "src": "8171:647:115",
            "nodes": [],
            "body": {
              "id": 87506,
              "nodeType": "Block",
              "src": "8251:567:115",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 87470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87468,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87463,
                      "src": "8265:18:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 87469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8287:2:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "8265:24:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 87476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87474,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87463,
                        "src": "8366:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 87475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8388:2:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "8366:24:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87480,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87463,
                          "src": "8467:18:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 87481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8489:2:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "8467:24:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87486,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87463,
                            "src": "8568:18:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 87487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8590:2:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "8568:24:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 87494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87492,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87463,
                              "src": "8669:18:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 87493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8691:2:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "8669:24:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 87500,
                            "nodeType": "Block",
                            "src": "8766:46:115",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 87498,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8787:7:115",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 87467,
                                "id": 87499,
                                "nodeType": "Return",
                                "src": "8780:14:115"
                              }
                            ]
                          },
                          "id": 87501,
                          "nodeType": "IfStatement",
                          "src": "8665:147:115",
                          "trueBody": {
                            "id": 87497,
                            "nodeType": "Block",
                            "src": "8695:65:115",
                            "statements": [
                              {
                                "documentation": "[49;60]",
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 87495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8740:9:115",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 87467,
                                "id": 87496,
                                "nodeType": "Return",
                                "src": "8733:16:115"
                              }
                            ]
                          }
                        },
                        "id": 87502,
                        "nodeType": "IfStatement",
                        "src": "8564:248:115",
                        "trueBody": {
                          "id": 87491,
                          "nodeType": "Block",
                          "src": "8594:65:115",
                          "statements": [
                            {
                              "documentation": "[37;48]",
                              "expression": {
                                "hexValue": "302e33",
                                "id": 87489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8639:9:115",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 87467,
                              "id": 87490,
                              "nodeType": "Return",
                              "src": "8632:16:115"
                            }
                          ]
                        }
                      },
                      "id": 87503,
                      "nodeType": "IfStatement",
                      "src": "8463:349:115",
                      "trueBody": {
                        "id": 87485,
                        "nodeType": "Block",
                        "src": "8493:65:115",
                        "statements": [
                          {
                            "documentation": "[25;36]",
                            "expression": {
                              "hexValue": "302e32",
                              "id": 87483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8538:9:115",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 87467,
                            "id": 87484,
                            "nodeType": "Return",
                            "src": "8531:16:115"
                          }
                        ]
                      }
                    },
                    "id": 87504,
                    "nodeType": "IfStatement",
                    "src": "8362:450:115",
                    "trueBody": {
                      "id": 87479,
                      "nodeType": "Block",
                      "src": "8392:65:115",
                      "statements": [
                        {
                          "documentation": "[13;24]",
                          "expression": {
                            "hexValue": "302e31",
                            "id": 87477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8437:9:115",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 87467,
                          "id": 87478,
                          "nodeType": "Return",
                          "src": "8430:16:115"
                        }
                      ]
                    }
                  },
                  "id": 87505,
                  "nodeType": "IfStatement",
                  "src": "8261:551:115",
                  "trueBody": {
                    "id": 87473,
                    "nodeType": "Block",
                    "src": "8291:65:115",
                    "statements": [
                      {
                        "documentation": "[0;12]",
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 87471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8335:10:115",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 87467,
                        "id": 87472,
                        "nodeType": "Return",
                        "src": "8328:17:115"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87461,
              "nodeType": "StructuredDocumentation",
              "src": "8123:43:115",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "8180:3:115",
            "parameters": {
              "id": 87464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87463,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "8191:18:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87507,
                  "src": "8184:25:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87462,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8184:6:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8183:27:115"
            },
            "returnParameters": {
              "id": 87467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87466,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "8240:9:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87507,
                  "src": "8232:17:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8232:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8231:19:115"
            },
            "scope": 87657,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87530,
            "nodeType": "FunctionDefinition",
            "src": "8824:246:115",
            "nodes": [],
            "body": {
              "id": 87529,
              "nodeType": "Block",
              "src": "8895:175:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8965:20:115",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 87517,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87509,
                              "src": "8976:8:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87516,
                            "name": "isProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86936,
                            "src": "8966:9:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 87518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8966:19:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c75622070726f746567652063616e6e6f74206265206f776e6572",
                        "id": 87520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8987:30:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b03b1c8d1ffb36c06c4731571b780b835ac54a7d400315daaa4ceb0500331b4d",
                          "typeString": "literal_string \"Club protege cannot be owner\""
                        },
                        "value": "Club protege cannot be owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b03b1c8d1ffb36c06c4731571b780b835ac54a7d400315daaa4ceb0500331b4d",
                          "typeString": "literal_string \"Club protege cannot be owner\""
                        }
                      ],
                      "id": 87515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8957:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8957:61:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87522,
                  "nodeType": "ExpressionStatement",
                  "src": "8957:61:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87526,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87509,
                        "src": "9054:8:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87523,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43775,
                        "src": "9028:7:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$43775_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 87525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9036:17:115",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43754,
                      "src": "9028:25:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9028:35:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87528,
                  "nodeType": "ExpressionStatement",
                  "src": "9028:35:115"
                }
              ]
            },
            "baseFunctions": [
              43754
            ],
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87512,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8885:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "8885:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "8885:9:115"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "8833:17:115",
            "overrides": {
              "id": 87511,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8876:8:115"
            },
            "parameters": {
              "id": 87510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87509,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "8859:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87530,
                  "src": "8851:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:18:115"
            },
            "returnParameters": {
              "id": 87514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8895:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87577,
            "nodeType": "FunctionDefinition",
            "src": "9129:302:115",
            "nodes": [],
            "body": {
              "id": 87576,
              "nodeType": "Block",
              "src": "9200:231:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 87546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87541,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87533,
                          "src": "9218:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 87544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9238:1:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 87543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9230:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9230:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9230:10:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9218:22:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207265636569766572",
                        "id": 87547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9242:18:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        },
                        "value": "Invalid receiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_639fbf8a57e0a2443b8b00ec2754ffd5552704689112f38e2d891d676e05931c",
                          "typeString": "literal_string \"Invalid receiver\""
                        }
                      ],
                      "id": 87540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9210:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9210:51:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87549,
                  "nodeType": "ExpressionStatement",
                  "src": "9210:51:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87551,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87535,
                          "src": "9279:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 87552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9288:1:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9279:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420616d6f756e74",
                        "id": 87554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9291:16:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        },
                        "value": "Invalid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
                          "typeString": "literal_string \"Invalid amount\""
                        }
                      ],
                      "id": 87550,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9271:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9271:37:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87556,
                  "nodeType": "ExpressionStatement",
                  "src": "9271:37:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 87560,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9334:4:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9326:7:115",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87558,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9326:7:115",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9326:13:115",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 87562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9340:7:115",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "9326:21:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 87563,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87535,
                          "src": "9351:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9326:31:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f7567682062616c616e6365",
                        "id": 87565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9359:20:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        },
                        "value": "Not enough balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62feb6dde0d8b91e793e4cfea2e07175444fe82cab5a2cd9e870981f43f4dbad",
                          "typeString": "literal_string \"Not enough balance\""
                        }
                      ],
                      "id": 87557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9318:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9318:62:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87567,
                  "nodeType": "ExpressionStatement",
                  "src": "9318:62:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87573,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87535,
                        "src": "9417:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 87570,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87533,
                            "src": "9398:8:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9390:8:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 87568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9390:8:115",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9390:17:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9408:8:115",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9390:26:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9390:34:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87575,
                  "nodeType": "ExpressionStatement",
                  "src": "9390:34:115"
                }
              ]
            },
            "documentation": {
              "id": 87531,
              "nodeType": "StructuredDocumentation",
              "src": "9076:48:115",
              "text": "@dev ISuperfluidClub.withdraw implementation"
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87537,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9190:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "9190:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "9190:9:115"
              }
            ],
            "name": "withdraw",
            "nameLocation": "9138:8:115",
            "parameters": {
              "id": 87536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87533,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "9155:8:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87577,
                  "src": "9147:16:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9147:7:115",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87535,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9173:6:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87577,
                  "src": "9165:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87534,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9165:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9146:34:115"
            },
            "returnParameters": {
              "id": 87539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9200:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87600,
            "nodeType": "FunctionDefinition",
            "src": "9486:116:115",
            "nodes": [],
            "body": {
              "id": 87599,
              "nodeType": "Block",
              "src": "9535:67:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87590,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9567:4:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9559:7:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87588,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9559:7:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9559:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87592,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87580,
                        "src": "9574:6:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87595,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9592:1:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "9582:9:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87593,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9586:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9582:12:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87585,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "9545:4:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87657",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9550:8:115",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88917,
                      "src": "9545:13:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9545:50:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87598,
                  "nodeType": "ExpressionStatement",
                  "src": "9545:50:115"
                }
              ]
            },
            "documentation": {
              "id": 87578,
              "nodeType": "StructuredDocumentation",
              "src": "9437:44:115",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87582,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9525:9:115"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43694,
                  "src": "9525:9:115"
                },
                "nodeType": "ModifierInvocation",
                "src": "9525:9:115"
              }
            ],
            "name": "mint",
            "nameLocation": "9495:4:115",
            "parameters": {
              "id": 87581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87580,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9508:6:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87600,
                  "src": "9500:14:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87579,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9500:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9499:16:115"
            },
            "returnParameters": {
              "id": 87584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9535:0:115"
            },
            "scope": 87657,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87605,
            "nodeType": "FunctionDefinition",
            "src": "9651:29:115",
            "nodes": [],
            "body": {
              "id": 87604,
              "nodeType": "Block",
              "src": "9678:2:115",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 87601,
              "nodeType": "StructuredDocumentation",
              "src": "9608:38:115",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 87602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9658:2:115"
            },
            "returnParameters": {
              "id": 87603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9678:0:115"
            },
            "scope": 87657,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87639,
            "nodeType": "FunctionDefinition",
            "src": "9832:178:115",
            "nodes": [],
            "body": {
              "id": 87638,
              "nodeType": "Block",
              "src": "9894:116:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87614,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87608,
                          "src": "9912:5:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 87621,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9941:5:115",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 87620,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9941:5:115",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 87619,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "9936:4:115",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 87622,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9936:11:115",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 87623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9948:3:115",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "9936:15:115",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 87618,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9929:6:115",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 87617,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9929:6:115",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9929:23:115",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 87616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9921:7:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 87615,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9921:7:115",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9921:32:115",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9912:41:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f766572666c6f77",
                        "id": 87627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9955:10:115",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        },
                        "value": "overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        }
                      ],
                      "id": 87613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9904:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9904:62:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87629,
                  "nodeType": "ExpressionStatement",
                  "src": "9904:62:115"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87634,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87608,
                            "src": "9996:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9989:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87632,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "9989:6:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9989:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87631,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9983:5:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 87630,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "9983:5:115",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9983:20:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 87612,
                  "id": 87637,
                  "nodeType": "Return",
                  "src": "9976:27:115"
                }
              ]
            },
            "documentation": {
              "id": 87606,
              "nodeType": "StructuredDocumentation",
              "src": "9686:141:115",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "9841:7:115",
            "parameters": {
              "id": 87609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87608,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9857:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87639,
                  "src": "9849:13:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9849:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9848:15:115"
            },
            "returnParameters": {
              "id": 87612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87611,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87639,
                  "src": "9887:5:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87610,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9887:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9886:7:115"
            },
            "scope": 87657,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87656,
            "nodeType": "FunctionDefinition",
            "src": "10162:110:115",
            "nodes": [],
            "body": {
              "id": 87655,
              "nodeType": "Block",
              "src": "10226:46:115",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87651,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87642,
                            "src": "10258:5:115",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10251:6:115",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87649,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "10251:6:115",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10251:13:115",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10243:7:115",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10243:7:115",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10243:22:115",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87646,
                  "id": 87654,
                  "nodeType": "Return",
                  "src": "10236:29:115"
                }
              ]
            },
            "documentation": {
              "id": 87640,
              "nodeType": "StructuredDocumentation",
              "src": "10016:141:115",
              "text": " @dev converts a int96 to uint256\n @param value The int96 value to convert\n @return The converted uint256 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nameLocation": "10171:9:115",
            "parameters": {
              "id": 87643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87642,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "10187:5:115",
                  "nodeType": "VariableDeclaration",
                  "scope": 87656,
                  "src": "10181:11:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87641,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "10181:5:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10180:13:115"
            },
            "returnParameters": {
              "id": 87646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87645,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87656,
                  "src": "10217:7:115",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87644,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10217:7:115",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10216:9:115"
            },
            "scope": 87657,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86803,
              "name": "SuperToken",
              "nameLocations": [
                "677:10:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89550,
              "src": "677:10:115"
            },
            "id": 86804,
            "nodeType": "InheritanceSpecifier",
            "src": "677:10:115"
          },
          {
            "baseName": {
              "id": 86805,
              "name": "Ownable",
              "nameLocations": [
                "689:7:115"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43775,
              "src": "689:7:115"
            },
            "id": 86806,
            "nodeType": "InheritanceSpecifier",
            "src": "689:7:115"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86802,
          "nodeType": "StructuredDocumentation",
          "src": "544:104:115",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87657,
          43775,
          45796,
          89550,
          67038,
          45404,
          44661,
          68216,
          77260,
          68136
        ],
        "name": "SuperfluidClub",
        "nameLocation": "659:14:115",
        "scope": 87658,
        "usedErrors": [
          66595,
          66597,
          66599,
          66601,
          66603,
          66605,
          66607,
          66609,
          66611,
          66613,
          66615,
          66617,
          66619,
          66621,
          67857,
          67859,
          67861,
          67863,
          67865,
          67867
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 115
}