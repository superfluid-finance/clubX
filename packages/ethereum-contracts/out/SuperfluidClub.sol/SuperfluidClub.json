{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ALREADY_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_COIN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege[5]",
          "name": "sponsors",
          "type": "tuple[5]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60e06040523480156200001157600080fd5b50604051620061be380380620061be8339810160408190526200003491620000d9565b6001600160a01b0380841660805280831660a081905290821660c052604051849184918491907fcf554eb342edf010a94e07701ae91e99e90b769f649f03aeb1153654ddd43c0190600090a26040516001600160a01b038216907f8837af285f4d380af9227df9ebafa13d992b487fa6d7a4366bd4154576085b8990600090a25050505050506200012d565b6001600160a01b0381168114620000d657600080fd5b50565b600080600060608486031215620000ef57600080fd5b8351620000fc81620000c0565b60208501519093506200010f81620000c0565b60408501519092506200012281620000c0565b809150509250925092565b60805160a05160c051615fea620001d4600039600061070a01526000610c080152600081816104d50152818161110f01528181611180015281816114fe01528181611619015281816116e80152818161194e01528181611ac0015281816121c901528181612727015281816127f101528181612889015281816128f10152818161297b015281816131fd015281816132a40152818161447501526146b40152615fea6000f3fe60806040526004361061032f5760003560e01c806306e485381461033b57806306fdde0314610366578063077f224a14610388578063090c415e146103aa578063095ea7b3146103ca578063099e14ce146103fa57806311bcc81e1461042757806312a6a3f81461044757806316d055d61461046757806318160ddd146104875780631863e809146104a657806320bc4425146104c657806321fb177a1461050257806323b872dd1461052f578063245887fc1461054f578063270483971461056f5780632ec8eec71461058f578063313ce567146105cf578063386fa221146105eb578063395093511461060b57806341b706be1461062b57806342fe09801461064b57806345977d031461066b578063469519541461068b5780634b2763b3146106ab5780634b61cc33146106cb5780634c5c0c85146106f857806350d75d251461072c57806352d1902d14610741578063556f0dc71461075657806357cf7acb1461076a5780635b9d09cc1461077f57806362aa52871461079f57806362ad1b83146107bf57806366a12fb6146107df5780636c2d9f2f146107ff57806370a082311461081f578063766c4f371461083f57806379359f6f1461085257806383ba2525146108725780638934c79a146108925780638da5cb5b146108b2578063959b8c3f146108d857806395d89b41146108f85780639903ad381461090d5780639bd9bbc6146109225780639d87674114610942578063a0712d6814610962578063a1b2bf8b14610982578063a3a7e7f3146109a2578063a457c2d7146109c2578063a9059cbb146109e2578063b5c0b7eb14610a02578063b84cdd4a14610a17578063bb0d196e14610a37578063c68d428314610a57578063c780fd8214610a77578063ca0c1e7f14610a97578063ca78946414610ab7578063cf97256d14610ad7578063d95b637114610af7578063d9d078d614610b17578063dd62ed3e14610b37578063e4a472c814610b7d578063eb3537cc14610b9d578063ee719bc814610bd8578063ef43d2c614610bf6578063f349f56a14610c2a578063f3fef3a314610c47578063fad8b32a14610c67578063fc673c4f14610c87578063fe9d930314610ca757600080fd5b3661033657005b600080fd5b34801561034757600080fd5b50610350610cc7565b60405161035d9190614c10565b60405180910390f35b34801561037257600080fd5b5061037b610cd8565b60405161035d9190614cad565b34801561039457600080fd5b506103a86103a3366004614d1d565b610d6a565b005b3480156103b657600080fd5b506103a86103c5366004614de4565b610eb7565b3480156103d657600080fd5b506103ea6103e5366004614e3f565b610f6a565b604051901515815260200161035d565b34801561040657600080fd5b5061041a610415366004614e6b565b610f81565b60405161035d9190614ed2565b34801561043357600080fd5b506103a8610442366004614ee0565b610ffb565b34801561045357600080fd5b506103a8610462366004614ef9565b61102a565b34801561047357600080fd5b506103a8610482366004614f44565b61110d565b34801561049357600080fd5b506002545b60405190815260200161035d565b3480156104b257600080fd5b506103a86104c1366004615066565b611169565b3480156104d257600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405161035d91906150f8565b34801561050e57600080fd5b5061052261051d366004614e6b565b61140e565b60405161035d919061510c565b34801561053b57600080fd5b506103ea61054a366004615149565b6114e6565b34801561055b57600080fd5b506103a861056a366004614e3f565b6114fc565b34801561057b57600080fd5b506103a861058a36600461518a565b611575565b34801561059b57600080fd5b506105af6105aa366004614e6b565b611611565b60408051948552602085019390935291830152606082015260800161035d565b3480156105db57600080fd5b506040516012815260200161035d565b3480156105f757600080fd5b50610350610606366004614e6b565b6116b4565b34801561061757600080fd5b506103ea610626366004614e3f565b611757565b34801561063757600080fd5b506103a8610646366004614f44565b611793565b34801561065757600080fd5b506103a86106663660046151ac565b6117bf565b34801561067757600080fd5b506103a8610686366004614ee0565b6118e6565b34801561069757600080fd5b506103a86106a6366004614e6b565b611912565b3480156106b757600080fd5b506103a86106c6366004615149565b61194c565b3480156106d757600080fd5b506106eb6106e6366004615246565b6119d3565b60405161035d919061528c565b34801561070457600080fd5b506104f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561073857600080fd5b506104f5611a18565b34801561074d57600080fd5b50610498611a22565b34801561076257600080fd5b506001610498565b34801561077657600080fd5b506103a8611a46565b34801561078b57600080fd5b506103a861079a3660046152c4565b611a67565b3480156107ab57600080fd5b506103a86107ba366004615149565b611abe565b3480156107cb57600080fd5b506103a86107da366004615313565b611b12565b3480156107eb57600080fd5b506103a86107fa366004615149565b611bc0565b34801561080b57600080fd5b506106eb61081a3660046153b1565b611be0565b34801561082b57600080fd5b5061049861083a366004614e6b565b611c22565b6103a861084d366004614e6b565b611c4b565b34801561085e57600080fd5b506103ea61086d366004614e6b565b6121c1565b34801561087e57600080fd5b506103a861088d366004614e3f565b612249565b34801561089e57600080fd5b506104986108ad3660046153e6565b612275565b3480156108be57600080fd5b50601f546104f5906201000090046001600160a01b031681565b3480156108e457600080fd5b506103a86108f3366004614e6b565b612316565b34801561090457600080fd5b5061037b612367565b34801561091957600080fd5b506103a8612376565b34801561092e57600080fd5b506103a861093d3660046152c4565b612486565b34801561094e57600080fd5b506103a861095d36600461540c565b6124da565b34801561096e57600080fd5b506103a861097d366004614ee0565b612520565b34801561098e57600080fd5b506103a861099d366004614ef9565b6125b3565b3480156109ae57600080fd5b506103a86109bd366004614e6b565b61265d565b3480156109ce57600080fd5b506103ea6109dd366004614e3f565b612671565b3480156109ee57600080fd5b506103ea6109fd366004614e3f565b6126c0565b348015610a0e57600080fd5b50610498600581565b348015610a2357600080fd5b506103ea610a32366004614e3f565b6126ce565b348015610a4357600080fd5b506103ea610a52366004614e6b565b61271f565b348015610a6357600080fd5b506103a8610a7236600461540c565b6127a7565b348015610a8357600080fd5b506103a8610a92366004615149565b6127ef565b348015610aa357600080fd5b506103a8610ab2366004615464565b612887565b348015610ac357600080fd5b506103a8610ad2366004614e3f565b6128ef565b348015610ae357600080fd5b506103a8610af2366004614e3f565b612964565b348015610b0357600080fd5b506103ea610b123660046154cf565b612a52565b348015610b2357600080fd5b506103ea610b32366004614e3f565b612a60565b348015610b4357600080fd5b50610498610b523660046154cf565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b348015610b8957600080fd5b506103ea610b98366004614e6b565b612a7a565b348015610ba957600080fd5b50610bbd610bb8366004614e3f565b612a99565b6040805193845260208401929092529082015260600161035d565b348015610be457600080fd5b50600d546001600160a01b03166104f5565b348015610c0257600080fd5b506104f57f000000000000000000000000000000000000000000000000000000000000000081565b348015610c3657600080fd5b5061049868270801d946c940000081565b348015610c5357600080fd5b506103a8610c62366004614e3f565b612bc8565b348015610c7357600080fd5b506103a8610c82366004614e6b565b612c2f565b348015610c9357600080fd5b506103a8610ca2366004615508565b612c80565b348015610cb357600080fd5b506103a8610cc236600461554f565b612d2a565b6060610cd36011612d7b565b905090565b6060600e8054610ce79061558d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d139061558d565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b5050505050905090565b601f805462010000600160b01b031916620100006001600160a01b038416021790556040805163132075a760e31b815290513091639903ad3891600480830192600092919082900301818387803b158015610dc457600080fd5b505af1158015610dd8573d6000803e3d6000fd5b50506040516285fc1360e71b81523092506342fe09809150610e099060009081908a908a908a908a906004016155ea565b600060405180830381600087803b158015610e2357600080fd5b505af1158015610e37573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d42839150610e7e9083906b92efd1b8d0cf37be5aa1cae560291b9060248101615638565b600060405180830381600087803b158015610e9857600080fd5b505af1158015610eac573d6000803e3d6000fd5b505050505050505050565b6000338585604051602001610ece9392919061565f565b604051602081830303815290604052805190602001209050610f2381848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b6040518481526001600160a01b0386169033907f30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d59859060200160405180910390a35050505050565b6000610f77338484612e22565b5060015b92915050565b610f89614bb5565b506001600160a01b0390811660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015290565b611027333333846040518060200160405280600081525060405180602001604052806000815250612ed2565b50565b604051339060009061104290839087906020016156a8565b60408051601f1981840301815291905280516020909101209050611066818461309c565b156110845760405163782a90fb60e11b815260040160405180910390fd5b6110c181858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b816001600160a01b03167f770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d8686866040516110fe939291906156e5565b60405180910390a25050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146111565760405163c51efddd60e01b815260040160405180910390fd5b611162848484846130d8565b5050505050565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906111b59033906004016150f8565b602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f69190615726565b6112135760405163327fd99160e21b815260040160405180910390fd5b600061121d6131f8565b90506001600160a01b0381166112305750845b60008561123d578661123f565b815b9050600083136112dc5761125283615759565b61125b85613337565b1461126857611268615775565b61127184613337565b6001600160a01b0382166000908152600160205260408120805490919061129990849061578b565b90915550506001600160a01b038516600090815260016020526040812080548592906112c690849061578b565b909155506112d790508582866133a5565b6113a6565b85156112ea576112ea615775565b826112f485613337565b6112fe919061578b565b6001600160a01b038316600090815260016020526040812080549091906113269084906157b3565b90915550611335905084613337565b6001600160a01b0388166000908152600160205260408120805490919061135d90849061578b565b90915550506001600160a01b0385166000908152600160205260408120805485929061138a90849061578b565b9091555061139b90508288866133a5565b6113a68286856133a5565b846001600160a01b0316876001600160a01b0316336001600160a01b03167fb8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f8c8589898f6040516113fb9594939291906157d3565b60405180910390a4505050505050505050565b611416614be3565b60005b61142283612a7a565b156114e0576001600160a01b0380841660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015282826114a081615806565b9350600581106114b2576114b261581f565b602090810291909101919091526001600160a01b039384166000908152908052604090205490921691611419565b50919050565b60006114f4338585856130d8565b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146115455760405163c51efddd60e01b815260040160405180910390fd5b611571338384846040518060200160405280600081525060405180602001604052806000815250612ed2565b5050565b604051339060009061158d90839086906020016156a8565b6040516020818303038152906040528051906020012090506115af818461309c565b6115cc5760405163dae1880960e01b815260040160405180910390fd5b6115d681846133d8565b60405184815233907f71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b9060200160405180910390a250505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116999190615835565b90506116a58582612a99565b91979096509094509092509050565b6001600160a01b038181166000908152602081905260409081902054905163c56a069d60e01b8152901960048201526060917f0000000000000000000000000000000000000000000000000000000000000000169063c56a069d90602401600060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f7b919081019061584e565b3360008181526010602090815260408083206001600160a01b03871684529091528120549091610f7791859061178e9086906158ff565b612e22565b3330146117b357604051630fff4cc960e31b815260040160405180910390fd5b611162838584846130d8565b600e80546117cc9061558d565b1590506118205760405162461bcd60e51b815260206004820152601f60248201527f5375706572546f6b656e3a20616c726561647920696e697469616c697a65640060448201526064015b60405180910390fd5b600083900361186a5760405162461bcd60e51b81526020600482015260166024820152755375706572546f6b656e3a20656d707479206e616d6560501b6044820152606401611817565b600d805460ff8716600160a01b026001600160a81b03199091166001600160a01b03891617179055600e61189f848683615960565b50600f6118ad828483615960565b506118b7306133f9565b6040516000808252908190600080516020615f48833981519152906020015b60405180910390a3505050505050565b6110273333338460405180602001604052806000815250604051806020016040528060008152506134e1565b601f546201000090046001600160a01b03163314611943576040516338ebc58960e11b815260040160405180910390fd5b6110278161369e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146119955760405163c51efddd60e01b815260040160405180910390fd5b6001600160a01b038084166000908152601060209081526040808320938616835292905220546119ce908490849061178e9085906158ff565b505050565b606060008585856040516020016119ec9392919061565f565b604051602081830303815290604052805190602001209050611a0e8184613870565b9695505050505050565b6000610cd36138ff565b7fe438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db990565b336000818152602080526040902060010154611a659190600b0b613912565b565b611ab83333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506134e1915050565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611b075760405163c51efddd60e01b815260040160405180910390fd5b6119ce838383612e22565b33611b1f6011828a61393b565b611b3c5760405163f7f0222760e01b815260040160405180910390fd5b611bb68189898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250600192506139e4915050565b5050505050505050565b333014611b0757604051630fff4cc960e31b815260040160405180910390fd5b606060008484604051602001611bf79291906156a8565b604051602081830303815290604052805190602001209050611c198184613870565b95945050505050565b600080611c2e83611611565b505050905060008112611c415780611c44565b60005b9392505050565b611c5481612a7a565b15611c72576040516319c00a8560e01b815260040160405180910390fd5b601f5460009081906201000090046001600160a01b03163314611c9757336000611c9b565b3060015b91509150611ca882612a7a565b158015611cb3575080155b15611cd05760405162e67aa960e31b815260040160405180910390fd5b6001600160a01b0382166000908152602080526040812054349190611d0190600160c81b900463ffffffff16612275565b905080821015611d2457604051631133bf0d60e01b815260040160405180910390fd5b611d2e8183615a1f565b6001600160a01b0385166000908152602080526040902054909250600160a01b900460ff166004198101611d755760405163a2c3d1a560e01b815260040160405180910390fd5b30600090815260208052604090208054600160a81b900463ffffffff16906015611d9e83615a32565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038716600090815260208052604090208054600160c81b900490911691506019611deb83615a32565b91906101000a81548163ffffffff021916908363ffffffff160217905550506000816001611e199190615a55565b90506000611e4962015180611e3a60ff851668270801d946c9400000615a84565b611e449190615a84565b613a5d565b9050600081611e67611e446201518068270801d946c9400000615a84565b611e719190615a98565b90506040518060a00160405280896001600160a01b031681526020018460ff168152602001600063ffffffff168152602001600063ffffffff16815260200183600b0b815250602060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160196101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160006101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555090505060008890505b611fba81612a7a565b1561214b576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff16816015611ff183615a32565b825463ffffffff9182166101009390930a928302919092021990911617905550805460009060ff600160a01b9091041660011461204757620186a06120388561c350615ac5565b6120429190615ae5565b612049565b835b6001830180549192508291600090612065908490600b0b615b23565b92506101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555080846120989190615a98565b60018301549094506120ae908490600b0b613912565b6001600160a01b038b8116600090815260208080526040808320543084529281902054815160ff600160a01b830416815263ffffffff600160a81b8304811694820194909452600160c81b909104909216908201528583169291909116907fb03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a79060600160405180910390a350546001600160a01b03169050611fb1565b6001600160a01b038a1660009081526020805260409020600101546121769030908c90600b0b613a73565b5086156121b5576040516001600160a01b038b169088156108fc029089906000818181858888f193505050501580156121b3573d6000803e3d6000fd5b505b50505050505050505050565b6000610f7b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190615835565b611571333384846040518060200160405280600081525060405180602001604052806000815250612ed2565b6000600c8263ffffffff16116122935750662386f26fc10000919050565b60188263ffffffff16116122b0575067016345785d8a0000919050565b60248263ffffffff16116122cd57506702c68af0bb140000919050565b60308263ffffffff16116122ea5750670429d069189e0000919050565b603c8263ffffffff1611612307575067058d15e176280000919050565b50670de0b6b3a7640000919050565b3361232360118284613a92565b806001600160a01b0316826001600160a01b03167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a35050565b6060600f8054610ce79061558d565b601f54610100900460ff16158080156123965750601f54600160ff909116105b806123b757506123a530613b96565b1580156123b75750601f5460ff166001145b61241a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611817565b601f805460ff19166001179055801561243d57601f805461ff0019166101001790555b801561102757601f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b611ab83333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250600191506139e49050565b3330146124fa57604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119ce91339186918691901515908690613ba5565b601f546201000090046001600160a01b03163314612551576040516338ebc58960e11b815260040160405180910390fd5b6040805160008152602081019182905263c68d428360e01b909152309063c68d428390612585908390859060248101615638565b600060405180830381600087803b15801561259f57600080fd5b505af1158015611162573d6000803e3d6000fd5b60405133906000906125cb90839087906020016156a8565b60405160208183030381529060405280519060200120905061262081858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca8686866040516110fe939291906156e5565b61157133338361266c33611c22565b6130d8565b6000610f77338461178e856040518060600160405280602a8152602001615f1e602a91393360009081526010602090815260408083206001600160a01b038d1684529091529020549190613c66565b6000611c44333385856130d8565b6000806000806126de8686612a99565b92509250925060006127068284116126f7576000613337565b6127018385615a1f565b613337565b612710908561578b565b60001315979650505050505050565b6000610f7b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612783573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190615835565b3330146127c757604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119ce913391869186919015159081908790613c92565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128385760405163c51efddd60e01b815260040160405180910390fd5b6119ce838361178e846040518060600160405280602a8152602001615f1e602a91396001600160a01b03808a166000908152601060209081526040808320938c16835292905220549190613c66565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128d05760405163c51efddd60e01b815260040160405180910390fd5b611ab833858585856040518060200160405280600081525060016139e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146129385760405163c51efddd60e01b815260040160405180910390fd5b6115713383848460405180602001604052806000815250604051806020016040528060008152506134e1565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906129b09033906004016150f8565b602060405180830381865afa1580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f19190615726565b612a0e5760405163327fd99160e21b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902054612a3290829061578b565b6001600160a01b0390921660009081526001602052604090209190915550565b6000611c446011848461393b565b600080612a6d8484612a99565b5050600013949350505050565b6001600160a01b03908116600090815260208052604090205416151590565b6001600160a01b038216600090815260016020526040812054908080612abe866116b4565b905060005b8151811015612bbf576000806000848481518110612ae357612ae361581f565b60200260200101516001600160a01b0316639b2e48bc308c8c6040518463ffffffff1660e01b8152600401612b1a93929190615b50565b606060405180830381865afa158015612b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b5b9190615b74565b91945092509050612b6c82886158ff565b9650612b7881876158ff565b9550612b95818311612b8b576000613337565b6127018284615a1f565b612b9f848a61578b565b612ba991906157b3565b975050505080612bb890615806565b9050612ac3565b50509250925092565b601f546201000090046001600160a01b03163314612bf9576040516338ebc58960e11b815260040160405180910390fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156119ce573d6000803e3d6000fd5b33612c3c60118284613d60565b806001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a35050565b33612c8d6011828961393b565b612caa5760405163f7f0222760e01b815260040160405180910390fd5b612d218188898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250612ed292505050565b50505050505050565b6119ce3333338686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612ed2915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612dd557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612db7575b50505050509050919050565b60005b81518110156119ce576000828281518110612e0157612e0161581f565b6020026020010151905080828501555080612e1b90615806565b9050612de4565b6001600160a01b038316612e4957604051638163862760e01b815260040160405180910390fd5b6001600160a01b038216612e70576040516337c1c09d60e21b815260040160405180910390fd5b6001600160a01b0383811660008181526010602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600d546001600160a01b0316612efb57604051637bce7b2b60e11b815260040160405180910390fd5b600080612f0785613e58565b91509150612f1e8888838751600014158888613ba5565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612f4f9030906004016150f8565b602060405180830381865afa158015612f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f909190615835565b600d54909150612faa906001600160a01b03168885613f14565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612fdb9030906004016150f8565b602060405180830381865afa158015612ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301c9190615835565b9050600061302a8284615a1f565b905080851461304c57604051631c7c26d360e31b815260040160405180910390fd5b896001600160a01b03167f3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d8560405161308791815260200190565b60405180910390a25050505050505050505050565b6000805b828110156130ce578381015480156130bd57600192505050610f7b565b506130c781615806565b90506130a0565b5060009392505050565b60006001600160a01b0384166131015760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0383166131285760405163e219bd3960e01b815260040160405180910390fd5b6000339050613159818686866040518060200160405280600081525060405180602001604052806000815250613f6a565b846001600160a01b0316866001600160a01b0316146131ec576131ec858761178e866040518060600160405280602d8152602001615f68602d9139601060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613c669092919063ffffffff16565b50600195945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327d9190615ba2565b604051638369a0f160e01b81529091506001600160a01b03821690638369a0f1906132f0907f00000000000000000000000000000000000000000000000000000000000000009030907f9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d0990600401615b50565b602060405180830381865afa15801561330d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133319190615ba2565b91505090565b60006001600160ff1b038211156133a15760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611817565b5090565b816001600160a01b0316836001600160a01b0316600080516020615f4883398151915283604051612ec591815260200190565b60005b818110156119ce576000838201556133f281615806565b90506133db565b6040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d906134549084907fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054903090600401615bbf565b600060405180830381600087803b15801561346e57600080fd5b505af1158015613482573d6000803e3d6000fd5b50506040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d91506125859084907faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a903090600401615bbf565b600d546001600160a01b031661350a57604051637bce7b2b60e11b815260040160405180910390fd5b60008061351685613e58565b600d546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a082319061354f9030906004016150f8565b602060405180830381865afa15801561356c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135909190615835565b600d549091506135ab906001600160a01b0316893086614009565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a08231906135dc9030906004016150f8565b602060405180830381865afa1580156135f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361d9190615835565b9050600061362b8383615a1f565b905080851461364d57604051631c7c26d360e31b815260040160405180910390fd5b8651613663908c908b9087901515808c8c613c92565b886001600160a01b03167f25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df8560405161308791815260200190565b60006136a86138ff565b6001600160a01b0316036136fe5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401611817565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561373c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137609190615835565b613768611a22565b146137c15760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401611817565b6001600160a01b03811630036138155760405162461bcd60e51b815260206004820152601960248201527805555505350726f786961626c653a2070726f7879206c6f6f7603c1b6044820152606401611817565b61382b81600080516020615ede83398151915255565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc613854611a22565b604080519182526001600160a01b03841660208301520161247b565b6060816001600160401b0381111561388a5761388a614f95565b6040519080825280602002602001820160405280156138b3578160200160208202803683370190505b50905060005b828110156138f8576000818501549050808383815181106138dc576138dc61581f565b6020908102919091010152506138f181615806565b90506138b9565b5092915050565b600080516020615ede8339815191525490565b61391d30808461402a565b600b0b15613930576119ce3083836140c2565b6119ce308383613a73565b6000816001600160a01b0316836001600160a01b031614806139aa57506001600160a01b038316600090815260018501602052604090205460ff1680156139aa57506001600160a01b03808316600090815260038601602090815260408083209387168352929052205460ff16155b806114f457506001600160a01b03808316600090815260028601602090815260408083209387168352929052205460ff1690509392505050565b6001600160a01b038616613a0b5760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b038516613a325760405163e219bd3960e01b815260040160405180910390fd5b613a408787878787876140e1565b613a4e878787878787613f6a565b612d21878787878787876141f3565b600060016001605f1b038211156133a157600080fd5b604080516000808252602082019092526114f490859085908590614342565b806001600160a01b0316826001600160a01b031603613b095760405162461bcd60e51b815260206004820152602d60248201527f4552433737374f70657261746f72733a20617574686f72697a696e672073656c60448201526c331030b99037b832b930ba37b960991b6064820152608401611817565b6001600160a01b038116600090815260018401602052604090205460ff1615613b5f576001600160a01b03918216600090815260039390930160209081526040808520929093168452529020805460ff19169055565b6001600160a01b0380831660009081526002850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03163b151590565b6001600160a01b038516613bcc57604051632e8aac6160e21b815260040160405180910390fd5b8215613be157613be1868660008786866140e1565b613beb858561446d565b846001600160a01b0316866001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098868585604051613c3293929190615be2565b60405180910390a36040518481526000906001600160a01b03871690600080516020615f48833981519152906020016118d6565b60008184841115613c8a5760405162461bcd60e51b81526004016118179190614cad565b505050900390565b6001600160a01b038616613cb957604051630d24315760e01b815260040160405180910390fd5b613cc3868661457d565b8315613cd957613cd987600088888686896141f3565b856001600160a01b0316876001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d878585604051613d2093929190615be2565b60405180910390a36040518581526001600160a01b03871690600090600080516020615f488339815191529060200160405180910390a350505050505050565b336001600160a01b03821603613dcb5760405162461bcd60e51b815260206004820152602a60248201527f4552433737374f70657261746f72733a207265766f6b696e672073656c662061604482015269399037b832b930ba37b960b11b6064820152608401611817565b6001600160a01b038116600090815260018401602052604090205460ff1615613e25576001600160a01b0380831660009081526003850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03918216600090815260029390930160209081526040808520929093168452529020805460ff19169055565b600d54600090819081906012600160a01b90910460ff161015613eb757600d54613e8d90600160a01b900460ff166012615c0d565b613e9890600a615d0a565b9050613ea48185615a84565b9250613eb08184615d19565b9150613f0e565b600d546012600160a01b90910460ff161115613f0757600d54613ee690601290600160a01b900460ff16615c0d565b613ef190600a615d0a565b9050613efd8185615d19565b9250839150613f0e565b8391508192505b50915091565b6119ce8363a9059cbb60e01b8484604051602401613f33929190615d30565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526145d7565b613f7d8585613f7886613337565b6146ac565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987868686604051613fce93929190615be2565b60405180910390a4836001600160a01b0316856001600160a01b0316600080516020615f48833981519152856040516118d691815260200190565b611ab8846323b872dd60e01b858585604051602401613f3393929190615b50565b600080614036856147ab565b604051631cd43d1160e31b81526001600160a01b03888116600483015287811660248301528681166044830152919350908316915063e6a1e88890606401608060405180830381865afa158015614091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140b59190615d49565b5090979650505050505050565b604080516000808252602082019092526114f4908590859085906148f6565b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9061413d9089907f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89590600401615d30565b602060405180830381865afa15801561415a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061417e9190615ba2565b90506001600160a01b03811615612d2157604051633ad5cbc160e11b81526001600160a01b038216906375ab9782906141c5908a908a908a908a908a908a90600401615d8d565b600060405180830381600087803b1580156141df57600080fd5b505af11580156121b3573d6000803e3d6000fd5b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9061424f9089907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b90600401615d30565b602060405180830381865afa15801561426c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142909190615ba2565b90506001600160a01b0381161561430c576040516223de2960e01b81526001600160a01b038216906223de29906142d5908b908b908b908b908b908b90600401615d8d565b600060405180830381600087803b1580156142ef57600080fd5b505af1158015614303573d6000803e3d6000fd5b50505050611bb6565b8115611bb657614324866001600160a01b0316613b96565b15611bb65760405163fe737d0560e01b815260040160405180910390fd5b600080600061435087614943565b91509150816001600160a01b03166339255d5b82836001600160a01b03166362fc305e8b8b8b60006001600160401b0381111561438f5761438f614f95565b6040519080825280601f01601f1916602001820160405280156143b9576020820181803683370190505b506040516024016143cd9493929190615dda565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252614418939250908990600401615e10565b6000604051808303816000875af1158015614437573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261445f9190810190615e34565b506001979650505050505050565b60006144f5837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156144d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190615835565b5050905061450282613337565b8112156145225760405163043b37d160e21b815260040160405180910390fd5b61452b82613337565b6001600160a01b03841660009081526001602052604090205461454e91906157b3565b6001600160a01b038416600090815260016020526040902055600254614575908390615a1f565b600255505050565b61458681613337565b6001600160a01b0383166000908152600160205260409020546145a9919061578b565b6001600160a01b0383166000908152600160205260409020556002546145d09082906158ff565b6002555050565b600061462c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a949092919063ffffffff16565b905080516000148061464d57508080602001905181019061464d9190615726565b6119ce5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611817565b6000614710847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156144d1573d6000803e3d6000fd5b505090508181121561473557604051632f4cb94160e01b815260040160405180910390fd5b6001600160a01b0384166000908152600160205260409020546147599083906157b3565b6001600160a01b03808616600090815260016020526040808220939093559085168152205461478990839061578b565b6001600160a01b03909316600090815260016020526040902092909255505050565b600080516020615f9583398151915254600080516020615efe833981519152546001600160a01b0381166148c5576001600160a01b03821661484c57826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148499190615ba2565b91505b604051635b69006f60e11b8152600080516020615ebe83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa15801561489e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148c29190615ba2565b90505b6001600160a01b0382166148db576148db615775565b6001600160a01b0381166148f1576148f1615775565b915091565b600080600061490487614943565b91509150816001600160a01b03166339255d5b82836001600160a01b03166350209a628b8b8b60006001600160401b0381111561438f5761438f614f95565b600080516020615f9583398151915254600080516020615efe833981519152546001600160a01b0381166148c5576001600160a01b0382166149e457826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156149bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e19190615ba2565b91505b604051635b69006f60e11b8152600080516020615ebe83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a5a9190615ba2565b905081600080516020615f958339815191525580600080516020615efe833981519152556001600160a01b0382166148db576148db615775565b60606114f4848460008585600080866001600160a01b03168587604051614abb9190615ea1565b60006040518083038185875af1925050503d8060008114614af8576040519150601f19603f3d011682016040523d82523d6000602084013e614afd565b606091505b5091509150614b0e87838387614b19565b979650505050505050565b60608315614b86578251600003614b7f57614b3385613b96565b614b7f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611817565b50816114f4565b6114f48383815115614b9b5781518083602001fd5b8060405162461bcd60e51b81526004016118179190614cad565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060a001604052806005905b614bfa614bb5565b815260200190600190039081614bf25790505090565b6020808252825182820181905260009190848201906040850190845b81811015614c515783516001600160a01b031683529284019291840191600101614c2c565b50909695505050505050565b60005b83811015614c78578181015183820152602001614c60565b50506000910152565b60008151808452614c99816020860160208601614c5d565b601f01601f19169290920160200192915050565b602081526000611c446020830184614c81565b60008083601f840112614cd257600080fd5b5081356001600160401b03811115614ce957600080fd5b602083019150836020828501011115614d0157600080fd5b9250929050565b6001600160a01b038116811461102757600080fd5b600080600080600060608688031215614d3557600080fd5b85356001600160401b0380821115614d4c57600080fd5b614d5889838a01614cc0565b90975095506020880135915080821115614d7157600080fd5b50614d7e88828901614cc0565b9094509250506040860135614d9281614d08565b809150509295509295909350565b60008083601f840112614db257600080fd5b5081356001600160401b03811115614dc957600080fd5b6020830191508360208260051b8501011115614d0157600080fd5b60008060008060608587031215614dfa57600080fd5b8435614e0581614d08565b93506020850135925060408501356001600160401b03811115614e2757600080fd5b614e3387828801614da0565b95989497509550505050565b60008060408385031215614e5257600080fd5b8235614e5d81614d08565b946020939093013593505050565b600060208284031215614e7d57600080fd5b8135611c4481614d08565b80516001600160a01b0316825260208082015160ff169083015260408082015163ffffffff9081169184019190915260608083015190911690830152608090810151600b0b910152565b60a08101610f7b8284614e88565b600060208284031215614ef257600080fd5b5035919050565b600080600060408486031215614f0e57600080fd5b8335925060208401356001600160401b03811115614f2b57600080fd5b614f3786828701614da0565b9497909650939450505050565b60008060008060808587031215614f5a57600080fd5b8435614f6581614d08565b93506020850135614f7581614d08565b92506040850135614f8581614d08565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614fd357614fd3614f95565b604052919050565b60006001600160401b03821115614ff457614ff4614f95565b50601f01601f191660200190565b600082601f83011261501357600080fd5b813561502661502182614fdb565b614fab565b81815284602083860101111561503b57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461102757600080fd5b600080600080600080600060e0888a03121561508157600080fd5b8735965060208801356001600160401b0381111561509e57600080fd5b6150aa8a828b01615002565b96505060408801356150bb81614d08565b945060608801356150cb81615058565b935060808801356150db81614d08565b9699959850939692959460a0840135945060c09093013592915050565b6001600160a01b0391909116815260200190565b6103208101818360005b60058110156151405761512a838351614e88565b60a0929092019160209190910190600101615116565b50505092915050565b60008060006060848603121561515e57600080fd5b833561516981614d08565b9250602084013561517981614d08565b929592945050506040919091013590565b6000806040838503121561519d57600080fd5b50508035926020909101359150565b600080600080600080608087890312156151c557600080fd5b86356151d081614d08565b9550602087013560ff811681146151e657600080fd5b945060408701356001600160401b038082111561520257600080fd5b61520e8a838b01614cc0565b9096509450606089013591508082111561522757600080fd5b5061523489828a01614cc0565b979a9699509497509295939492505050565b6000806000806080858703121561525c57600080fd5b843561526781614d08565b9350602085013561527781614d08565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015614c51578351835292840192918401916001016152a8565b600080600080606085870312156152da57600080fd5b84356152e581614d08565b93506020850135925060408501356001600160401b0381111561530757600080fd5b614e3387828801614cc0565b600080600080600080600060a0888a03121561532e57600080fd5b873561533981614d08565b9650602088013561534981614d08565b95506040880135945060608801356001600160401b038082111561536c57600080fd5b6153788b838c01614cc0565b909650945060808a013591508082111561539157600080fd5b5061539e8a828b01614cc0565b989b979a50959850939692959293505050565b6000806000606084860312156153c657600080fd5b83356153d181614d08565b95602085013595506040909401359392505050565b6000602082840312156153f857600080fd5b813563ffffffff81168114611c4457600080fd5b60008060006060848603121561542157600080fd5b833561542c81614d08565b92506020840135915060408401356001600160401b0381111561544e57600080fd5b61545a86828701615002565b9150509250925092565b6000806000806080858703121561547a57600080fd5b843561548581614d08565b9350602085013561549581614d08565b92506040850135915060608501356001600160401b038111156154b757600080fd5b6154c387828801615002565b91505092959194509250565b600080604083850312156154e257600080fd5b82356154ed81614d08565b915060208301356154fd81614d08565b809150509250929050565b6000806000806000806080878903121561552157600080fd5b863561552c81614d08565b95506020870135945060408701356001600160401b038082111561520257600080fd5b60008060006040848603121561556457600080fd5b8335925060208401356001600160401b0381111561558157600080fd5b614f3786828701614cc0565b600181811c908216806155a157607f821691505b6020821081036114e057634e487b7160e01b600052602260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061561890830186886155c1565b828103606084015261562b8185876155c1565b9998505050505050505050565b60018060a01b0384168152826020820152606060408201526000611c196060830184614c81565b6080808252600e908201526d41677265656d656e74537461746560901b60a08201526001600160a01b039384166020820152919092166040820152606081019190915260c00190565b6060808252600d908201526c41677265656d656e744461746160981b60808201526001600160a01b03929092166020830152604082015260a00190565b838152604060208201819052810182905260006001600160fb1b0383111561570c57600080fd5b8260051b8085606085013791909101606001949350505050565b60006020828403121561573857600080fd5b8151611c4481615058565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161576e5761576e615743565b5060000390565b634e487b7160e01b600052600160045260246000fd5b80820182811260008312801582168215821617156157ab576157ab615743565b505092915050565b81810360008312801583831316838312821617156138f8576138f8615743565b85815260018060a01b038516602082015283604082015282606082015260a060808201526000614b0e60a0830184614c81565b60006001820161581857615818615743565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561584757600080fd5b5051919050565b6000602080838503121561586157600080fd5b82516001600160401b038082111561587857600080fd5b818501915085601f83011261588c57600080fd5b81518181111561589e5761589e614f95565b8060051b91506158af848301614fab565b81815291830184019184810190888411156158c957600080fd5b938501935b838510156158f357845192506158e383614d08565b82825293850193908501906158ce565b98975050505050505050565b80820180821115610f7b57610f7b615743565b601f8211156119ce57600081815260208120601f850160051c810160208610156159395750805b601f850160051c820191505b8181101561595857828155600101615945565b505050505050565b6001600160401b0383111561597757615977614f95565b61598b83615985835461558d565b83615912565b6000601f8411600181146159bf57600085156159a75750838201355b600019600387901b1c1916600186901b178355611162565b600083815260209020601f19861690835b828110156159f057868501358255602094850194600190920191016159d0565b5086821015615a0d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81810381811115610f7b57610f7b615743565b600063ffffffff808316818103615a4b57615a4b615743565b6001019392505050565b60ff8181168382160190811115610f7b57610f7b615743565b634e487b7160e01b600052601260045260246000fd5b600082615a9357615a93615a6e565b500490565b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610f7b57610f7b615743565b600082600b0b82600b0b0280600b0b91508082146138f8576138f8615743565b600081600b0b83600b0b80615afc57615afc615a6e565b60016001605f1b0319821460001982141615615b1a57615b1a615743565b90059392505050565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610f7b57610f7b615743565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080600060608486031215615b8957600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215615bb457600080fd5b8151611c4481614d08565b6001600160a01b0393841681526020810192909252909116604082015260600190565b838152606060208201526000615bfb6060830185614c81565b8281036040840152611a0e8185614c81565b60ff8281168282160390811115610f7b57610f7b615743565b600181815b80851115615c61578160001904821115615c4757615c47615743565b80851615615c5457918102915b93841c9390800290615c2b565b509250929050565b600082615c7857506001610f7b565b81615c8557506000610f7b565b8160018114615c9b5760028114615ca557615cc1565b6001915050610f7b565b60ff841115615cb657615cb6615743565b50506001821b610f7b565b5060208310610133831016604e8410600b8410161715615ce4575081810a610f7b565b615cee8383615c26565b8060001904821115615d0257615d02615743565b029392505050565b6000611c4460ff841683615c69565b8082028115828204841417610f7b57610f7b615743565b6001600160a01b03929092168252602082015260400190565b60008060008060808587031215615d5f57600080fd5b84519350602085015180600b0b8114615d7757600080fd5b6040860151606090960151949790965092505050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c060808201819052600090615dc890830185614c81565b82810360a084015261562b8185614c81565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611a0e90830184614c81565b6001600160a01b0384168152606060208201819052600090615bfb90830185614c81565b600060208284031215615e4657600080fd5b81516001600160401b03811115615e5c57600080fd5b8201601f81018413615e6d57600080fd5b8051615e7b61502182614fdb565b818152856020838501011115615e9057600080fd5b611c19826020830160208601614c5d565b60008251615eb3818460208701614c5d565b919091019291505056fea9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a5375706572546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5375706572546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837a264697066735822122054cb0757042458a0bc698c20aed82968847d2fbd39a5a94277119782627f157764736f6c63430008130033",
    "sourceMap": "589:7383:113:-:0;;;1336:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:92;;;;;3652:41:116;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1463:4:113;;1469:18;;1489:17;;3652:41:116;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:116;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;1336:178:113;;;589:7383;;14:144:118;-1:-1:-1;;;;;102:31:118;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:118;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:118;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;589:7383:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061032f5760003560e01c806306e485381461033b57806306fdde0314610366578063077f224a14610388578063090c415e146103aa578063095ea7b3146103ca578063099e14ce146103fa57806311bcc81e1461042757806312a6a3f81461044757806316d055d61461046757806318160ddd146104875780631863e809146104a657806320bc4425146104c657806321fb177a1461050257806323b872dd1461052f578063245887fc1461054f578063270483971461056f5780632ec8eec71461058f578063313ce567146105cf578063386fa221146105eb578063395093511461060b57806341b706be1461062b57806342fe09801461064b57806345977d031461066b578063469519541461068b5780634b2763b3146106ab5780634b61cc33146106cb5780634c5c0c85146106f857806350d75d251461072c57806352d1902d14610741578063556f0dc71461075657806357cf7acb1461076a5780635b9d09cc1461077f57806362aa52871461079f57806362ad1b83146107bf57806366a12fb6146107df5780636c2d9f2f146107ff57806370a082311461081f578063766c4f371461083f57806379359f6f1461085257806383ba2525146108725780638934c79a146108925780638da5cb5b146108b2578063959b8c3f146108d857806395d89b41146108f85780639903ad381461090d5780639bd9bbc6146109225780639d87674114610942578063a0712d6814610962578063a1b2bf8b14610982578063a3a7e7f3146109a2578063a457c2d7146109c2578063a9059cbb146109e2578063b5c0b7eb14610a02578063b84cdd4a14610a17578063bb0d196e14610a37578063c68d428314610a57578063c780fd8214610a77578063ca0c1e7f14610a97578063ca78946414610ab7578063cf97256d14610ad7578063d95b637114610af7578063d9d078d614610b17578063dd62ed3e14610b37578063e4a472c814610b7d578063eb3537cc14610b9d578063ee719bc814610bd8578063ef43d2c614610bf6578063f349f56a14610c2a578063f3fef3a314610c47578063fad8b32a14610c67578063fc673c4f14610c87578063fe9d930314610ca757600080fd5b3661033657005b600080fd5b34801561034757600080fd5b50610350610cc7565b60405161035d9190614c10565b60405180910390f35b34801561037257600080fd5b5061037b610cd8565b60405161035d9190614cad565b34801561039457600080fd5b506103a86103a3366004614d1d565b610d6a565b005b3480156103b657600080fd5b506103a86103c5366004614de4565b610eb7565b3480156103d657600080fd5b506103ea6103e5366004614e3f565b610f6a565b604051901515815260200161035d565b34801561040657600080fd5b5061041a610415366004614e6b565b610f81565b60405161035d9190614ed2565b34801561043357600080fd5b506103a8610442366004614ee0565b610ffb565b34801561045357600080fd5b506103a8610462366004614ef9565b61102a565b34801561047357600080fd5b506103a8610482366004614f44565b61110d565b34801561049357600080fd5b506002545b60405190815260200161035d565b3480156104b257600080fd5b506103a86104c1366004615066565b611169565b3480156104d257600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405161035d91906150f8565b34801561050e57600080fd5b5061052261051d366004614e6b565b61140e565b60405161035d919061510c565b34801561053b57600080fd5b506103ea61054a366004615149565b6114e6565b34801561055b57600080fd5b506103a861056a366004614e3f565b6114fc565b34801561057b57600080fd5b506103a861058a36600461518a565b611575565b34801561059b57600080fd5b506105af6105aa366004614e6b565b611611565b60408051948552602085019390935291830152606082015260800161035d565b3480156105db57600080fd5b506040516012815260200161035d565b3480156105f757600080fd5b50610350610606366004614e6b565b6116b4565b34801561061757600080fd5b506103ea610626366004614e3f565b611757565b34801561063757600080fd5b506103a8610646366004614f44565b611793565b34801561065757600080fd5b506103a86106663660046151ac565b6117bf565b34801561067757600080fd5b506103a8610686366004614ee0565b6118e6565b34801561069757600080fd5b506103a86106a6366004614e6b565b611912565b3480156106b757600080fd5b506103a86106c6366004615149565b61194c565b3480156106d757600080fd5b506106eb6106e6366004615246565b6119d3565b60405161035d919061528c565b34801561070457600080fd5b506104f57f000000000000000000000000000000000000000000000000000000000000000081565b34801561073857600080fd5b506104f5611a18565b34801561074d57600080fd5b50610498611a22565b34801561076257600080fd5b506001610498565b34801561077657600080fd5b506103a8611a46565b34801561078b57600080fd5b506103a861079a3660046152c4565b611a67565b3480156107ab57600080fd5b506103a86107ba366004615149565b611abe565b3480156107cb57600080fd5b506103a86107da366004615313565b611b12565b3480156107eb57600080fd5b506103a86107fa366004615149565b611bc0565b34801561080b57600080fd5b506106eb61081a3660046153b1565b611be0565b34801561082b57600080fd5b5061049861083a366004614e6b565b611c22565b6103a861084d366004614e6b565b611c4b565b34801561085e57600080fd5b506103ea61086d366004614e6b565b6121c1565b34801561087e57600080fd5b506103a861088d366004614e3f565b612249565b34801561089e57600080fd5b506104986108ad3660046153e6565b612275565b3480156108be57600080fd5b50601f546104f5906201000090046001600160a01b031681565b3480156108e457600080fd5b506103a86108f3366004614e6b565b612316565b34801561090457600080fd5b5061037b612367565b34801561091957600080fd5b506103a8612376565b34801561092e57600080fd5b506103a861093d3660046152c4565b612486565b34801561094e57600080fd5b506103a861095d36600461540c565b6124da565b34801561096e57600080fd5b506103a861097d366004614ee0565b612520565b34801561098e57600080fd5b506103a861099d366004614ef9565b6125b3565b3480156109ae57600080fd5b506103a86109bd366004614e6b565b61265d565b3480156109ce57600080fd5b506103ea6109dd366004614e3f565b612671565b3480156109ee57600080fd5b506103ea6109fd366004614e3f565b6126c0565b348015610a0e57600080fd5b50610498600581565b348015610a2357600080fd5b506103ea610a32366004614e3f565b6126ce565b348015610a4357600080fd5b506103ea610a52366004614e6b565b61271f565b348015610a6357600080fd5b506103a8610a7236600461540c565b6127a7565b348015610a8357600080fd5b506103a8610a92366004615149565b6127ef565b348015610aa357600080fd5b506103a8610ab2366004615464565b612887565b348015610ac357600080fd5b506103a8610ad2366004614e3f565b6128ef565b348015610ae357600080fd5b506103a8610af2366004614e3f565b612964565b348015610b0357600080fd5b506103ea610b123660046154cf565b612a52565b348015610b2357600080fd5b506103ea610b32366004614e3f565b612a60565b348015610b4357600080fd5b50610498610b523660046154cf565b6001600160a01b03918216600090815260106020908152604080832093909416825291909152205490565b348015610b8957600080fd5b506103ea610b98366004614e6b565b612a7a565b348015610ba957600080fd5b50610bbd610bb8366004614e3f565b612a99565b6040805193845260208401929092529082015260600161035d565b348015610be457600080fd5b50600d546001600160a01b03166104f5565b348015610c0257600080fd5b506104f57f000000000000000000000000000000000000000000000000000000000000000081565b348015610c3657600080fd5b5061049868270801d946c940000081565b348015610c5357600080fd5b506103a8610c62366004614e3f565b612bc8565b348015610c7357600080fd5b506103a8610c82366004614e6b565b612c2f565b348015610c9357600080fd5b506103a8610ca2366004615508565b612c80565b348015610cb357600080fd5b506103a8610cc236600461554f565b612d2a565b6060610cd36011612d7b565b905090565b6060600e8054610ce79061558d565b80601f0160208091040260200160405190810160405280929190818152602001828054610d139061558d565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b5050505050905090565b601f805462010000600160b01b031916620100006001600160a01b038416021790556040805163132075a760e31b815290513091639903ad3891600480830192600092919082900301818387803b158015610dc457600080fd5b505af1158015610dd8573d6000803e3d6000fd5b50506040516285fc1360e71b81523092506342fe09809150610e099060009081908a908a908a908a906004016155ea565b600060405180830381600087803b158015610e2357600080fd5b505af1158015610e37573d6000803e3d6000fd5b50506040805160008152602081019182905263c68d428360e01b90915230925063c68d42839150610e7e9083906b92efd1b8d0cf37be5aa1cae560291b9060248101615638565b600060405180830381600087803b158015610e9857600080fd5b505af1158015610eac573d6000803e3d6000fd5b505050505050505050565b6000338585604051602001610ece9392919061565f565b604051602081830303815290604052805190602001209050610f2381848480806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b6040518481526001600160a01b0386169033907f30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d59859060200160405180910390a35050505050565b6000610f77338484612e22565b5060015b92915050565b610f89614bb5565b506001600160a01b0390811660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015290565b611027333333846040518060200160405280600081525060405180602001604052806000815250612ed2565b50565b604051339060009061104290839087906020016156a8565b60408051601f1981840301815291905280516020909101209050611066818461309c565b156110845760405163782a90fb60e11b815260040160405180910390fd5b6110c181858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b816001600160a01b03167f770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d8686866040516110fe939291906156e5565b60405180910390a25050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146111565760405163c51efddd60e01b815260040160405180910390fd5b611162848484846130d8565b5050505050565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906111b59033906004016150f8565b602060405180830381865afa1580156111d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f69190615726565b6112135760405163327fd99160e21b815260040160405180910390fd5b600061121d6131f8565b90506001600160a01b0381166112305750845b60008561123d578661123f565b815b9050600083136112dc5761125283615759565b61125b85613337565b1461126857611268615775565b61127184613337565b6001600160a01b0382166000908152600160205260408120805490919061129990849061578b565b90915550506001600160a01b038516600090815260016020526040812080548592906112c690849061578b565b909155506112d790508582866133a5565b6113a6565b85156112ea576112ea615775565b826112f485613337565b6112fe919061578b565b6001600160a01b038316600090815260016020526040812080549091906113269084906157b3565b90915550611335905084613337565b6001600160a01b0388166000908152600160205260408120805490919061135d90849061578b565b90915550506001600160a01b0385166000908152600160205260408120805485929061138a90849061578b565b9091555061139b90508288866133a5565b6113a68286856133a5565b846001600160a01b0316876001600160a01b0316336001600160a01b03167fb8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f8c8589898f6040516113fb9594939291906157d3565b60405180910390a4505050505050505050565b611416614be3565b60005b61142283612a7a565b156114e0576001600160a01b0380841660009081526020808052604091829020825160a0810184528154948516815260ff600160a01b8604169281019290925263ffffffff600160a81b8504811693830193909352600160c81b9093049091166060820152600190910154600b0b608082015282826114a081615806565b9350600581106114b2576114b261581f565b602090810291909101919091526001600160a01b039384166000908152908052604090205490921691611419565b50919050565b60006114f4338585856130d8565b949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146115455760405163c51efddd60e01b815260040160405180910390fd5b611571338384846040518060200160405280600081525060405180602001604052806000815250612ed2565b5050565b604051339060009061158d90839086906020016156a8565b6040516020818303038152906040528051906020012090506115af818461309c565b6115cc5760405163dae1880960e01b815260040160405180910390fd5b6115d681846133d8565b60405184815233907f71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b9060200160405180910390a250505050565b6000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015611675573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116999190615835565b90506116a58582612a99565b91979096509094509092509050565b6001600160a01b038181166000908152602081905260409081902054905163c56a069d60e01b8152901960048201526060917f0000000000000000000000000000000000000000000000000000000000000000169063c56a069d90602401600060405180830381865afa15801561172f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f7b919081019061584e565b3360008181526010602090815260408083206001600160a01b03871684529091528120549091610f7791859061178e9086906158ff565b612e22565b3330146117b357604051630fff4cc960e31b815260040160405180910390fd5b611162838584846130d8565b600e80546117cc9061558d565b1590506118205760405162461bcd60e51b815260206004820152601f60248201527f5375706572546f6b656e3a20616c726561647920696e697469616c697a65640060448201526064015b60405180910390fd5b600083900361186a5760405162461bcd60e51b81526020600482015260166024820152755375706572546f6b656e3a20656d707479206e616d6560501b6044820152606401611817565b600d805460ff8716600160a01b026001600160a81b03199091166001600160a01b03891617179055600e61189f848683615960565b50600f6118ad828483615960565b506118b7306133f9565b6040516000808252908190600080516020615f48833981519152906020015b60405180910390a3505050505050565b6110273333338460405180602001604052806000815250604051806020016040528060008152506134e1565b601f546201000090046001600160a01b03163314611943576040516338ebc58960e11b815260040160405180910390fd5b6110278161369e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146119955760405163c51efddd60e01b815260040160405180910390fd5b6001600160a01b038084166000908152601060209081526040808320938616835292905220546119ce908490849061178e9085906158ff565b505050565b606060008585856040516020016119ec9392919061565f565b604051602081830303815290604052805190602001209050611a0e8184613870565b9695505050505050565b6000610cd36138ff565b7fe438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db990565b336000818152602080526040902060010154611a659190600b0b613912565b565b611ab83333868686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250604080516020810190915290815292506134e1915050565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611b075760405163c51efddd60e01b815260040160405180910390fd5b6119ce838383612e22565b33611b1f6011828a61393b565b611b3c5760405163f7f0222760e01b815260040160405180910390fd5b611bb68189898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250600192506139e4915050565b5050505050505050565b333014611b0757604051630fff4cc960e31b815260040160405180910390fd5b606060008484604051602001611bf79291906156a8565b604051602081830303815290604052805190602001209050611c198184613870565b95945050505050565b600080611c2e83611611565b505050905060008112611c415780611c44565b60005b9392505050565b611c5481612a7a565b15611c72576040516319c00a8560e01b815260040160405180910390fd5b601f5460009081906201000090046001600160a01b03163314611c9757336000611c9b565b3060015b91509150611ca882612a7a565b158015611cb3575080155b15611cd05760405162e67aa960e31b815260040160405180910390fd5b6001600160a01b0382166000908152602080526040812054349190611d0190600160c81b900463ffffffff16612275565b905080821015611d2457604051631133bf0d60e01b815260040160405180910390fd5b611d2e8183615a1f565b6001600160a01b0385166000908152602080526040902054909250600160a01b900460ff166004198101611d755760405163a2c3d1a560e01b815260040160405180910390fd5b30600090815260208052604090208054600160a81b900463ffffffff16906015611d9e83615a32565b82546101009290920a63ffffffff8181021990931691831602179091556001600160a01b038716600090815260208052604090208054600160c81b900490911691506019611deb83615a32565b91906101000a81548163ffffffff021916908363ffffffff160217905550506000816001611e199190615a55565b90506000611e4962015180611e3a60ff851668270801d946c9400000615a84565b611e449190615a84565b613a5d565b9050600081611e67611e446201518068270801d946c9400000615a84565b611e719190615a98565b90506040518060a00160405280896001600160a01b031681526020018460ff168152602001600063ffffffff168152602001600063ffffffff16815260200183600b0b815250602060008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160000160146101000a81548160ff021916908360ff16021790555060408201518160000160156101000a81548163ffffffff021916908363ffffffff16021790555060608201518160000160196101000a81548163ffffffff021916908363ffffffff16021790555060808201518160010160006101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555090505060008890505b611fba81612a7a565b1561214b576001600160a01b038116600090815260208052604090208054600160a81b900463ffffffff16816015611ff183615a32565b825463ffffffff9182166101009390930a928302919092021990911617905550805460009060ff600160a01b9091041660011461204757620186a06120388561c350615ac5565b6120429190615ae5565b612049565b835b6001830180549192508291600090612065908490600b0b615b23565b92506101000a8154816001600160601b030219169083600b0b6001600160601b0316021790555080846120989190615a98565b60018301549094506120ae908490600b0b613912565b6001600160a01b038b8116600090815260208080526040808320543084529281902054815160ff600160a01b830416815263ffffffff600160a81b8304811694820194909452600160c81b909104909216908201528583169291909116907fb03e738d0e6b0d74a2bfbcaa64c76a9dd601ecb77229d0982c9bfe946c8c39a79060600160405180910390a350546001600160a01b03169050611fb1565b6001600160a01b038a1660009081526020805260409020600101546121769030908c90600b0b613a73565b5086156121b5576040516001600160a01b038b169088156108fc029089906000818181858888f193505050501580156121b3573d6000803e3d6000fd5b505b50505050505050505050565b6000610f7b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b329190615835565b611571333384846040518060200160405280600081525060405180602001604052806000815250612ed2565b6000600c8263ffffffff16116122935750662386f26fc10000919050565b60188263ffffffff16116122b0575067016345785d8a0000919050565b60248263ffffffff16116122cd57506702c68af0bb140000919050565b60308263ffffffff16116122ea5750670429d069189e0000919050565b603c8263ffffffff1611612307575067058d15e176280000919050565b50670de0b6b3a7640000919050565b3361232360118284613a92565b806001600160a01b0316826001600160a01b03167ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f960405160405180910390a35050565b6060600f8054610ce79061558d565b601f54610100900460ff16158080156123965750601f54600160ff909116105b806123b757506123a530613b96565b1580156123b75750601f5460ff166001145b61241a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401611817565b601f805460ff19166001179055801561243d57601f805461ff0019166101001790555b801561102757601f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a150565b611ab83333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250600191506139e49050565b3330146124fa57604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119ce91339186918691901515908690613ba5565b601f546201000090046001600160a01b03163314612551576040516338ebc58960e11b815260040160405180910390fd5b6040805160008152602081019182905263c68d428360e01b909152309063c68d428390612585908390859060248101615638565b600060405180830381600087803b15801561259f57600080fd5b505af1158015611162573d6000803e3d6000fd5b60405133906000906125cb90839087906020016156a8565b60405160208183030381529060405280519060200120905061262081858580806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250612de192505050565b336001600160a01b03167f0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca8686866040516110fe939291906156e5565b61157133338361266c33611c22565b6130d8565b6000610f77338461178e856040518060600160405280602a8152602001615f1e602a91393360009081526010602090815260408083206001600160a01b038d1684529091529020549190613c66565b6000611c44333385856130d8565b6000806000806126de8686612a99565b92509250925060006127068284116126f7576000613337565b6127018385615a1f565b613337565b612710908561578b565b60001315979650505050505050565b6000610f7b827f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa158015612783573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a329190615835565b3330146127c757604051630fff4cc960e31b815260040160405180910390fd5b80516040805160008152602081019091526119ce913391869186919015159081908790613c92565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128385760405163c51efddd60e01b815260040160405180910390fd5b6119ce838361178e846040518060600160405280602a8152602001615f1e602a91396001600160a01b03808a166000908152601060209081526040808320938c16835292905220549190613c66565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146128d05760405163c51efddd60e01b815260040160405180910390fd5b611ab833858585856040518060200160405280600081525060016139e4565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633146129385760405163c51efddd60e01b815260040160405180910390fd5b6115713383848460405180602001604052806000815250604051806020016040528060008152506134e1565b604051632329212160e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638ca48484906129b09033906004016150f8565b602060405180830381865afa1580156129cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f19190615726565b612a0e5760405163327fd99160e21b815260040160405180910390fd5b6001600160a01b038216600090815260016020526040902054612a3290829061578b565b6001600160a01b0390921660009081526001602052604090209190915550565b6000611c446011848461393b565b600080612a6d8484612a99565b5050600013949350505050565b6001600160a01b03908116600090815260208052604090205416151590565b6001600160a01b038216600090815260016020526040812054908080612abe866116b4565b905060005b8151811015612bbf576000806000848481518110612ae357612ae361581f565b60200260200101516001600160a01b0316639b2e48bc308c8c6040518463ffffffff1660e01b8152600401612b1a93929190615b50565b606060405180830381865afa158015612b37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b5b9190615b74565b91945092509050612b6c82886158ff565b9650612b7881876158ff565b9550612b95818311612b8b576000613337565b6127018284615a1f565b612b9f848a61578b565b612ba991906157b3565b975050505080612bb890615806565b9050612ac3565b50509250925092565b601f546201000090046001600160a01b03163314612bf9576040516338ebc58960e11b815260040160405180910390fd5b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156119ce573d6000803e3d6000fd5b33612c3c60118284613d60565b806001600160a01b0316826001600160a01b03167f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa160405160405180910390a35050565b33612c8d6011828961393b565b612caa5760405163f7f0222760e01b815260040160405180910390fd5b612d218188898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250612ed292505050565b50505050505050565b6119ce3333338686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525060408051602081019091529081529250612ed2915050565b606081600001805480602002602001604051908101604052809291908181526020018280548015612dd557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612db7575b50505050509050919050565b60005b81518110156119ce576000828281518110612e0157612e0161581f565b6020026020010151905080828501555080612e1b90615806565b9050612de4565b6001600160a01b038316612e4957604051638163862760e01b815260040160405180910390fd5b6001600160a01b038216612e70576040516337c1c09d60e21b815260040160405180910390fd5b6001600160a01b0383811660008181526010602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600d546001600160a01b0316612efb57604051637bce7b2b60e11b815260040160405180910390fd5b600080612f0785613e58565b91509150612f1e8888838751600014158888613ba5565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612f4f9030906004016150f8565b602060405180830381865afa158015612f6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f909190615835565b600d54909150612faa906001600160a01b03168885613f14565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a0823190612fdb9030906004016150f8565b602060405180830381865afa158015612ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301c9190615835565b9050600061302a8284615a1f565b905080851461304c57604051631c7c26d360e31b815260040160405180910390fd5b896001600160a01b03167f3bc27981aebbb57f9247dc00fde9d6cd91e4b230083fec3238fedbcba1f9ab3d8560405161308791815260200190565b60405180910390a25050505050505050505050565b6000805b828110156130ce578381015480156130bd57600192505050610f7b565b506130c781615806565b90506130a0565b5060009392505050565b60006001600160a01b0384166131015760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b0383166131285760405163e219bd3960e01b815260040160405180910390fd5b6000339050613159818686866040518060200160405280600081525060405180602001604052806000815250613f6a565b846001600160a01b0316866001600160a01b0316146131ec576131ec858761178e866040518060600160405280602d8152602001615f68602d9139601060008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008d6001600160a01b03166001600160a01b0316815260200190815260200160002054613c669092919063ffffffff16565b50600195945050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663289b3c0d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613259573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061327d9190615ba2565b604051638369a0f160e01b81529091506001600160a01b03821690638369a0f1906132f0907f00000000000000000000000000000000000000000000000000000000000000009030907f9f60ae461adf056670e03ae602566409933242392cb06744f5747c9f38b05d0990600401615b50565b602060405180830381865afa15801561330d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133319190615ba2565b91505090565b60006001600160ff1b038211156133a15760405162461bcd60e51b815260206004820152602860248201527f53616665436173743a2076616c756520646f65736e27742066697420696e2061604482015267371034b73a191a9b60c11b6064820152608401611817565b5090565b816001600160a01b0316836001600160a01b0316600080516020615f4883398151915283604051612ec591815260200190565b60005b818110156119ce576000838201556133f281615806565b90506133db565b6040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d906134549084907fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054903090600401615bbf565b600060405180830381600087803b15801561346e57600080fd5b505af1158015613482573d6000803e3d6000fd5b50506040516329965a1d60e01b8152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d91506125859084907faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a903090600401615bbf565b600d546001600160a01b031661350a57604051637bce7b2b60e11b815260040160405180910390fd5b60008061351685613e58565b600d546040516370a0823160e01b81529294509092506000916001600160a01b03909116906370a082319061354f9030906004016150f8565b602060405180830381865afa15801561356c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135909190615835565b600d549091506135ab906001600160a01b0316893086614009565b600d546040516370a0823160e01b81526000916001600160a01b0316906370a08231906135dc9030906004016150f8565b602060405180830381865afa1580156135f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061361d9190615835565b9050600061362b8383615a1f565b905080851461364d57604051631c7c26d360e31b815260040160405180910390fd5b8651613663908c908b9087901515808c8c613c92565b886001600160a01b03167f25ca84076773b0455db53621c459ddc84fe40840e4932a62706a032566f399df8560405161308791815260200190565b60006136a86138ff565b6001600160a01b0316036136fe5760405162461bcd60e51b815260206004820152601d60248201527f5555505350726f786961626c653a206e6f742075706772616461626c650000006044820152606401611817565b806001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561373c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137609190615835565b613768611a22565b146137c15760405162461bcd60e51b815260206004820152602360248201527f5555505350726f786961626c653a206e6f7420636f6d70617469626c65206c6f60448201526267696360e81b6064820152608401611817565b6001600160a01b03811630036138155760405162461bcd60e51b815260206004820152601960248201527805555505350726f786961626c653a2070726f7879206c6f6f7603c1b6044820152606401611817565b61382b81600080516020615ede83398151915255565b7fe011bc04c286c344a8fcbb8de77f953da762c3e25d8cdea984147fc4168a5dcc613854611a22565b604080519182526001600160a01b03841660208301520161247b565b6060816001600160401b0381111561388a5761388a614f95565b6040519080825280602002602001820160405280156138b3578160200160208202803683370190505b50905060005b828110156138f8576000818501549050808383815181106138dc576138dc61581f565b6020908102919091010152506138f181615806565b90506138b9565b5092915050565b600080516020615ede8339815191525490565b61391d30808461402a565b600b0b15613930576119ce3083836140c2565b6119ce308383613a73565b6000816001600160a01b0316836001600160a01b031614806139aa57506001600160a01b038316600090815260018501602052604090205460ff1680156139aa57506001600160a01b03808316600090815260038601602090815260408083209387168352929052205460ff16155b806114f457506001600160a01b03808316600090815260028601602090815260408083209387168352929052205460ff1690509392505050565b6001600160a01b038616613a0b5760405163eecd6c9b60e01b815260040160405180910390fd5b6001600160a01b038516613a325760405163e219bd3960e01b815260040160405180910390fd5b613a408787878787876140e1565b613a4e878787878787613f6a565b612d21878787878787876141f3565b600060016001605f1b038211156133a157600080fd5b604080516000808252602082019092526114f490859085908590614342565b806001600160a01b0316826001600160a01b031603613b095760405162461bcd60e51b815260206004820152602d60248201527f4552433737374f70657261746f72733a20617574686f72697a696e672073656c60448201526c331030b99037b832b930ba37b960991b6064820152608401611817565b6001600160a01b038116600090815260018401602052604090205460ff1615613b5f576001600160a01b03918216600090815260039390930160209081526040808520929093168452529020805460ff19169055565b6001600160a01b0380831660009081526002850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03163b151590565b6001600160a01b038516613bcc57604051632e8aac6160e21b815260040160405180910390fd5b8215613be157613be1868660008786866140e1565b613beb858561446d565b846001600160a01b0316866001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098868585604051613c3293929190615be2565b60405180910390a36040518481526000906001600160a01b03871690600080516020615f48833981519152906020016118d6565b60008184841115613c8a5760405162461bcd60e51b81526004016118179190614cad565b505050900390565b6001600160a01b038616613cb957604051630d24315760e01b815260040160405180910390fd5b613cc3868661457d565b8315613cd957613cd987600088888686896141f3565b856001600160a01b0316876001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d878585604051613d2093929190615be2565b60405180910390a36040518581526001600160a01b03871690600090600080516020615f488339815191529060200160405180910390a350505050505050565b336001600160a01b03821603613dcb5760405162461bcd60e51b815260206004820152602a60248201527f4552433737374f70657261746f72733a207265766f6b696e672073656c662061604482015269399037b832b930ba37b960b11b6064820152608401611817565b6001600160a01b038116600090815260018401602052604090205460ff1615613e25576001600160a01b0380831660009081526003850160209081526040808320938516835292905220805460ff19166001179055505050565b6001600160a01b03918216600090815260029390930160209081526040808520929093168452529020805460ff19169055565b600d54600090819081906012600160a01b90910460ff161015613eb757600d54613e8d90600160a01b900460ff166012615c0d565b613e9890600a615d0a565b9050613ea48185615a84565b9250613eb08184615d19565b9150613f0e565b600d546012600160a01b90910460ff161115613f0757600d54613ee690601290600160a01b900460ff16615c0d565b613ef190600a615d0a565b9050613efd8185615d19565b9250839150613f0e565b8391508192505b50915091565b6119ce8363a9059cbb60e01b8484604051602401613f33929190615d30565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526145d7565b613f7d8585613f7886613337565b6146ac565b836001600160a01b0316856001600160a01b0316876001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987868686604051613fce93929190615be2565b60405180910390a4836001600160a01b0316856001600160a01b0316600080516020615f48833981519152856040516118d691815260200190565b611ab8846323b872dd60e01b858585604051602401613f3393929190615b50565b600080614036856147ab565b604051631cd43d1160e31b81526001600160a01b03888116600483015287811660248301528681166044830152919350908316915063e6a1e88890606401608060405180830381865afa158015614091573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140b59190615d49565b5090979650505050505050565b604080516000808252602082019092526114f4908590859085906148f6565b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9061413d9089907f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89590600401615d30565b602060405180830381865afa15801561415a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061417e9190615ba2565b90506001600160a01b03811615612d2157604051633ad5cbc160e11b81526001600160a01b038216906375ab9782906141c5908a908a908a908a908a908a90600401615d8d565b600060405180830381600087803b1580156141df57600080fd5b505af11580156121b3573d6000803e3d6000fd5b60405163555ddc6560e11b8152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9061424f9089907fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b90600401615d30565b602060405180830381865afa15801561426c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906142909190615ba2565b90506001600160a01b0381161561430c576040516223de2960e01b81526001600160a01b038216906223de29906142d5908b908b908b908b908b908b90600401615d8d565b600060405180830381600087803b1580156142ef57600080fd5b505af1158015614303573d6000803e3d6000fd5b50505050611bb6565b8115611bb657614324866001600160a01b0316613b96565b15611bb65760405163fe737d0560e01b815260040160405180910390fd5b600080600061435087614943565b91509150816001600160a01b03166339255d5b82836001600160a01b03166362fc305e8b8b8b60006001600160401b0381111561438f5761438f614f95565b6040519080825280601f01601f1916602001820160405280156143b9576020820181803683370190505b506040516024016143cd9493929190615dda565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252614418939250908990600401615e10565b6000604051808303816000875af1158015614437573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261445f9190810190615e34565b506001979650505050505050565b60006144f5837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156144d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb89190615835565b5050905061450282613337565b8112156145225760405163043b37d160e21b815260040160405180910390fd5b61452b82613337565b6001600160a01b03841660009081526001602052604090205461454e91906157b3565b6001600160a01b038416600090815260016020526040902055600254614575908390615a1f565b600255505050565b61458681613337565b6001600160a01b0383166000908152600160205260409020546145a9919061578b565b6001600160a01b0383166000908152600160205260409020556002546145d09082906158ff565b6002555050565b600061462c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316614a949092919063ffffffff16565b905080516000148061464d57508080602001905181019061464d9190615726565b6119ce5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401611817565b6000614710847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bbe4fd506040518163ffffffff1660e01b8152600401602060405180830381865afa1580156144d1573d6000803e3d6000fd5b505090508181121561473557604051632f4cb94160e01b815260040160405180910390fd5b6001600160a01b0384166000908152600160205260409020546147599083906157b3565b6001600160a01b03808616600090815260016020526040808220939093559085168152205461478990839061578b565b6001600160a01b03909316600090815260016020526040902092909255505050565b600080516020615f9583398151915254600080516020615efe833981519152546001600160a01b0381166148c5576001600160a01b03821661484c57826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa158015614825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148499190615ba2565b91505b604051635b69006f60e11b8152600080516020615ebe83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa15801561489e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906148c29190615ba2565b90505b6001600160a01b0382166148db576148db615775565b6001600160a01b0381166148f1576148f1615775565b915091565b600080600061490487614943565b91509150816001600160a01b03166339255d5b82836001600160a01b03166350209a628b8b8b60006001600160401b0381111561438f5761438f614f95565b600080516020615f9583398151915254600080516020615efe833981519152546001600160a01b0381166148c5576001600160a01b0382166149e457826001600160a01b03166320bc44256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156149bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906149e19190615ba2565b91505b604051635b69006f60e11b8152600080516020615ebe83398151915260048201526001600160a01b0383169063b6d200de90602401602060405180830381865afa158015614a36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190614a5a9190615ba2565b905081600080516020615f958339815191525580600080516020615efe833981519152556001600160a01b0382166148db576148db615775565b60606114f4848460008585600080866001600160a01b03168587604051614abb9190615ea1565b60006040518083038185875af1925050503d8060008114614af8576040519150601f19603f3d011682016040523d82523d6000602084013e614afd565b606091505b5091509150614b0e87838387614b19565b979650505050505050565b60608315614b86578251600003614b7f57614b3385613b96565b614b7f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401611817565b50816114f4565b6114f48383815115614b9b5781518083602001fd5b8060405162461bcd60e51b81526004016118179190614cad565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b6040518060a001604052806005905b614bfa614bb5565b815260200190600190039081614bf25790505090565b6020808252825182820181905260009190848201906040850190845b81811015614c515783516001600160a01b031683529284019291840191600101614c2c565b50909695505050505050565b60005b83811015614c78578181015183820152602001614c60565b50506000910152565b60008151808452614c99816020860160208601614c5d565b601f01601f19169290920160200192915050565b602081526000611c446020830184614c81565b60008083601f840112614cd257600080fd5b5081356001600160401b03811115614ce957600080fd5b602083019150836020828501011115614d0157600080fd5b9250929050565b6001600160a01b038116811461102757600080fd5b600080600080600060608688031215614d3557600080fd5b85356001600160401b0380821115614d4c57600080fd5b614d5889838a01614cc0565b90975095506020880135915080821115614d7157600080fd5b50614d7e88828901614cc0565b9094509250506040860135614d9281614d08565b809150509295509295909350565b60008083601f840112614db257600080fd5b5081356001600160401b03811115614dc957600080fd5b6020830191508360208260051b8501011115614d0157600080fd5b60008060008060608587031215614dfa57600080fd5b8435614e0581614d08565b93506020850135925060408501356001600160401b03811115614e2757600080fd5b614e3387828801614da0565b95989497509550505050565b60008060408385031215614e5257600080fd5b8235614e5d81614d08565b946020939093013593505050565b600060208284031215614e7d57600080fd5b8135611c4481614d08565b80516001600160a01b0316825260208082015160ff169083015260408082015163ffffffff9081169184019190915260608083015190911690830152608090810151600b0b910152565b60a08101610f7b8284614e88565b600060208284031215614ef257600080fd5b5035919050565b600080600060408486031215614f0e57600080fd5b8335925060208401356001600160401b03811115614f2b57600080fd5b614f3786828701614da0565b9497909650939450505050565b60008060008060808587031215614f5a57600080fd5b8435614f6581614d08565b93506020850135614f7581614d08565b92506040850135614f8581614d08565b9396929550929360600135925050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715614fd357614fd3614f95565b604052919050565b60006001600160401b03821115614ff457614ff4614f95565b50601f01601f191660200190565b600082601f83011261501357600080fd5b813561502661502182614fdb565b614fab565b81815284602083860101111561503b57600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461102757600080fd5b600080600080600080600060e0888a03121561508157600080fd5b8735965060208801356001600160401b0381111561509e57600080fd5b6150aa8a828b01615002565b96505060408801356150bb81614d08565b945060608801356150cb81615058565b935060808801356150db81614d08565b9699959850939692959460a0840135945060c09093013592915050565b6001600160a01b0391909116815260200190565b6103208101818360005b60058110156151405761512a838351614e88565b60a0929092019160209190910190600101615116565b50505092915050565b60008060006060848603121561515e57600080fd5b833561516981614d08565b9250602084013561517981614d08565b929592945050506040919091013590565b6000806040838503121561519d57600080fd5b50508035926020909101359150565b600080600080600080608087890312156151c557600080fd5b86356151d081614d08565b9550602087013560ff811681146151e657600080fd5b945060408701356001600160401b038082111561520257600080fd5b61520e8a838b01614cc0565b9096509450606089013591508082111561522757600080fd5b5061523489828a01614cc0565b979a9699509497509295939492505050565b6000806000806080858703121561525c57600080fd5b843561526781614d08565b9350602085013561527781614d08565b93969395505050506040820135916060013590565b6020808252825182820181905260009190848201906040850190845b81811015614c51578351835292840192918401916001016152a8565b600080600080606085870312156152da57600080fd5b84356152e581614d08565b93506020850135925060408501356001600160401b0381111561530757600080fd5b614e3387828801614cc0565b600080600080600080600060a0888a03121561532e57600080fd5b873561533981614d08565b9650602088013561534981614d08565b95506040880135945060608801356001600160401b038082111561536c57600080fd5b6153788b838c01614cc0565b909650945060808a013591508082111561539157600080fd5b5061539e8a828b01614cc0565b989b979a50959850939692959293505050565b6000806000606084860312156153c657600080fd5b83356153d181614d08565b95602085013595506040909401359392505050565b6000602082840312156153f857600080fd5b813563ffffffff81168114611c4457600080fd5b60008060006060848603121561542157600080fd5b833561542c81614d08565b92506020840135915060408401356001600160401b0381111561544e57600080fd5b61545a86828701615002565b9150509250925092565b6000806000806080858703121561547a57600080fd5b843561548581614d08565b9350602085013561549581614d08565b92506040850135915060608501356001600160401b038111156154b757600080fd5b6154c387828801615002565b91505092959194509250565b600080604083850312156154e257600080fd5b82356154ed81614d08565b915060208301356154fd81614d08565b809150509250929050565b6000806000806000806080878903121561552157600080fd5b863561552c81614d08565b95506020870135945060408701356001600160401b038082111561520257600080fd5b60008060006040848603121561556457600080fd5b8335925060208401356001600160401b0381111561558157600080fd5b614f3786828701614cc0565b600181811c908216806155a157607f821691505b6020821081036114e057634e487b7160e01b600052602260045260246000fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b038716815260ff8616602082015260806040820181905260009061561890830186886155c1565b828103606084015261562b8185876155c1565b9998505050505050505050565b60018060a01b0384168152826020820152606060408201526000611c196060830184614c81565b6080808252600e908201526d41677265656d656e74537461746560901b60a08201526001600160a01b039384166020820152919092166040820152606081019190915260c00190565b6060808252600d908201526c41677265656d656e744461746160981b60808201526001600160a01b03929092166020830152604082015260a00190565b838152604060208201819052810182905260006001600160fb1b0383111561570c57600080fd5b8260051b8085606085013791909101606001949350505050565b60006020828403121561573857600080fd5b8151611c4481615058565b634e487b7160e01b600052601160045260246000fd5b6000600160ff1b820161576e5761576e615743565b5060000390565b634e487b7160e01b600052600160045260246000fd5b80820182811260008312801582168215821617156157ab576157ab615743565b505092915050565b81810360008312801583831316838312821617156138f8576138f8615743565b85815260018060a01b038516602082015283604082015282606082015260a060808201526000614b0e60a0830184614c81565b60006001820161581857615818615743565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561584757600080fd5b5051919050565b6000602080838503121561586157600080fd5b82516001600160401b038082111561587857600080fd5b818501915085601f83011261588c57600080fd5b81518181111561589e5761589e614f95565b8060051b91506158af848301614fab565b81815291830184019184810190888411156158c957600080fd5b938501935b838510156158f357845192506158e383614d08565b82825293850193908501906158ce565b98975050505050505050565b80820180821115610f7b57610f7b615743565b601f8211156119ce57600081815260208120601f850160051c810160208610156159395750805b601f850160051c820191505b8181101561595857828155600101615945565b505050505050565b6001600160401b0383111561597757615977614f95565b61598b83615985835461558d565b83615912565b6000601f8411600181146159bf57600085156159a75750838201355b600019600387901b1c1916600186901b178355611162565b600083815260209020601f19861690835b828110156159f057868501358255602094850194600190920191016159d0565b5086821015615a0d5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b81810381811115610f7b57610f7b615743565b600063ffffffff808316818103615a4b57615a4b615743565b6001019392505050565b60ff8181168382160190811115610f7b57610f7b615743565b634e487b7160e01b600052601260045260246000fd5b600082615a9357615a93615a6e565b500490565b600b82810b9082900b0360016001605f1b0319811260016001605f1b0382131715610f7b57610f7b615743565b600082600b0b82600b0b0280600b0b91508082146138f8576138f8615743565b600081600b0b83600b0b80615afc57615afc615a6e565b60016001605f1b0319821460001982141615615b1a57615b1a615743565b90059392505050565b600b81810b9083900b0160016001605f1b03811360016001605f1b031982121715610f7b57610f7b615743565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080600060608486031215615b8957600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215615bb457600080fd5b8151611c4481614d08565b6001600160a01b0393841681526020810192909252909116604082015260600190565b838152606060208201526000615bfb6060830185614c81565b8281036040840152611a0e8185614c81565b60ff8281168282160390811115610f7b57610f7b615743565b600181815b80851115615c61578160001904821115615c4757615c47615743565b80851615615c5457918102915b93841c9390800290615c2b565b509250929050565b600082615c7857506001610f7b565b81615c8557506000610f7b565b8160018114615c9b5760028114615ca557615cc1565b6001915050610f7b565b60ff841115615cb657615cb6615743565b50506001821b610f7b565b5060208310610133831016604e8410600b8410161715615ce4575081810a610f7b565b615cee8383615c26565b8060001904821115615d0257615d02615743565b029392505050565b6000611c4460ff841683615c69565b8082028115828204841417610f7b57610f7b615743565b6001600160a01b03929092168252602082015260400190565b60008060008060808587031215615d5f57600080fd5b84519350602085015180600b0b8114615d7757600080fd5b6040860151606090960151949790965092505050565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c060808201819052600090615dc890830185614c81565b82810360a084015261562b8185614c81565b6001600160a01b03858116825284166020820152600b83900b6040820152608060608201819052600090611a0e90830184614c81565b6001600160a01b0384168152606060208201819052600090615bfb90830185614c81565b600060208284031215615e4657600080fd5b81516001600160401b03811115615e5c57600080fd5b8201601f81018413615e6d57600080fd5b8051615e7b61502182614fdb565b818152856020838501011115615e9057600080fd5b611c19826020830160208601614c5d565b60008251615eb3818460208701614c5d565b919091019291505056fea9214cc96615e0085d3bb077758db69497dc2dce3b2b1e97bc93c3d18d83efd3360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb969d79d88acd02d04ed7ee7d43b949e7daf093d363abcfbbc43dfdfd1ce969a5375706572546f6b656e3a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5375706572546f6b656e3a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636565599bf746e17a00ea62e3610586992d88101b78eec3cf380706621fb97ea837a264697066735822122054cb0757042458a0bc698c20aed82968847d2fbd39a5a94277119782627f157764736f6c63430008130033",
    "sourceMap": "589:7383:113:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16132:151:116;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4604:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1575:304:113:-;;;;;;;;;;-1:-1:-1;1575:304:113;;;;;:::i;:::-;;:::i;:::-;;9255:378:92;;;;;;;;;;-1:-1:-1;9255:378:92;;;;;:::i;:::-;;:::i;14063:164:116:-;;;;;;;;;;-1:-1:-1;14063:164:116;;;;;:::i;:::-;;:::i;:::-;;;4285:14:118;;4278:22;4260:41;;4248:2;4233:18;14063:164:116;4120:187:118;2120:142:113;;;;;;;;;;-1:-1:-1;2120:142:113;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;19304:140:116:-;;;;;;;;;;-1:-1:-1;19304:140:116;;;;;:::i;:::-;;:::i;7322:481:92:-;;;;;;;;;;-1:-1:-1;7322:481:92;;;;;:::i;:::-;;:::i;23871:238:116:-;;;;;;;;;;-1:-1:-1;23871:238:116;;;;;:::i;:::-;;:::i;13311:106::-;;;;;;;;;;-1:-1:-1;13398:12:116;;13311:106;;;6724:25:118;;;6712:2;6697:18;13311:106:116;6578:177:118;10460:2526:92;;;;;;;;;;-1:-1:-1;10460:2526:92;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:92;1696:144;;;;;;;:::i;2331:328:113:-;;;;;;;;;;-1:-1:-1;2331:328:113;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14233:188:116:-;;;;;;;;;;-1:-1:-1;14233:188:116;;;;;:::i;:::-;;:::i;24543:169::-;;;;;;;;;;-1:-1:-1;24543:169:116;;;;;:::i;:::-;;:::i;8709:474:92:-;;;;;;;;;;-1:-1:-1;8709:474:92;;;;;:::i;:::-;;:::i;3511:428::-;;;;;;;;;;-1:-1:-1;3511:428:92;;;;;:::i;:::-;;:::i;:::-;;;;10595:25:118;;;10651:2;10636:18;;10629:34;;;;10679:18;;;10672:34;10737:2;10722:18;;10715:34;10582:3;10567:19;3511:428:92;10366:389:118;4820:109:116;;;;;;;;;;-1:-1:-1;4820:109:116;;1425:2;10902:36:118;;10890:2;10875:18;4820:109:116;10760:184:118;5252:218:92;;;;;;;;;;-1:-1:-1;5252:218:92;;;;;:::i;:::-;;:::i;14427:217:116:-;;;;;;;;;;-1:-1:-1;14427:217:116;;;;;:::i;:::-;;:::i;18117:231::-;;;;;;;;;;-1:-1:-1;18117:231:116;;;;;:::i;:::-;;:::i;3920:623::-;;;;;;;;;;-1:-1:-1;3920:623:116;;;;;:::i;:::-;;:::i;18883:136::-;;;;;;;;;;-1:-1:-1;18883:136:116;;;;;:::i;:::-;;:::i;7436:129:113:-;;;;;;;;;;-1:-1:-1;7436:129:113;;;;;:::i;:::-;;:::i;23258:248:116:-;;;;;;;;;;-1:-1:-1;23258:248:116;;;;;:::i;:::-;;:::i;9702:391:92:-;;;;;;;;;;-1:-1:-1;9702:391:92;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:116:-;;;;;;;;;;;;;;;400:122:95;;;;;;;;;;;;;:::i;7269:161:113:-;;;;;;;;;;;;;:::i;15034:97:116:-;;;;;;;;;;-1:-1:-1;15123:1:116;15034:97;;6210:121:113;;;;;;;;;;;;;:::i;19075:173:116:-;;;;;;;;;;-1:-1:-1;19075:173:116;;;;;:::i;:::-;;:::i;23090:162::-;;;;;;;;;;-1:-1:-1;23090:162:116;;;;;:::i;:::-;;:::i;16289:440::-;;;;;;;;;;-1:-1:-1;16289:440:116;;;;;:::i;:::-;;:::i;17951:160::-;;;;;;;;;;-1:-1:-1;17951:160:116;;;;;:::i;:::-;;:::i;7871:338:92:-;;;;;;;;;;-1:-1:-1;7871:338:92;;;;;:::i;:::-;;:::i;13423:297:116:-;;;;;;;;;;-1:-1:-1;13423:297:116;;;;;:::i;:::-;;:::i;3236:2916:113:-;;;;;;:::i;:::-;;:::i;4231:201:92:-;;;;;;;;;;-1:-1:-1;4231:201:92;;;;;:::i;:::-;;:::i;19482:146:116:-;;;;;;;;;;-1:-1:-1;19482:146:116;;;;;:::i;:::-;;:::i;6575:517:113:-;;;;;;;;;;-1:-1:-1;6575:517:113;;;;;:::i;:::-;;:::i;1151:21::-;;;;;;;;;;-1:-1:-1;1151:21:113;;;;;;;-1:-1:-1;;;;;1151:21:113;;;15685:222:116;;;;;;;;;;-1:-1:-1;15685:222:116;;;;;:::i;:::-;;:::i;4710:104::-;;;;;;;;;;;;;:::i;731:44:95:-;;;;;;;;;;;;;:::i;15137:185:116:-;;;;;;;;;;-1:-1:-1;15137:185:116;;;;;:::i;:::-;;:::i;17722:223::-;;;;;;;;;;-1:-1:-1;17722:223:116;;;;;:::i;:::-;;:::i;7147:116:113:-;;;;;;;;;;-1:-1:-1;7147:116:113;;;;;:::i;:::-;;:::i;8280:359:92:-;;;;;;;;;;-1:-1:-1;8280:359:92;;;;;:::i;:::-;;:::i;18419:154:116:-;;;;;;;;;;-1:-1:-1;18419:154:116;;;;;:::i;:::-;;:::i;14650:322::-;;;;;;;;;;-1:-1:-1;14650:322:116;;;;;:::i;:::-;;:::i;13726:172::-;;;;;;;;;;-1:-1:-1;13726:172:116;;;;;:::i;:::-;;:::i;1002:49:113:-;;;;;;;;;;;;1050:1;1002:49;;4438:533:92;;;;;;;;;;-1:-1:-1;4438:533:92;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:92;;;;;:::i;:::-;;:::i;17351:365:116:-;;;;;;;;;;-1:-1:-1;17351:365:116;;;;;:::i;:::-;;:::i;23512:353::-;;;;;;;;;;-1:-1:-1;23512:353:116;;;;;:::i;:::-;;:::i;24115:251::-;;;;;;;;;;-1:-1:-1;24115:251:116;;;;;:::i;:::-;;:::i;24372:165::-;;;;;;;;;;-1:-1:-1;24372:165:116;;;;;:::i;:::-;;:::i;10158:226:92:-;;;;;;;;;;-1:-1:-1;10158:226:92;;;;;:::i;:::-;;:::i;15500:179:116:-;;;;;;;;;;-1:-1:-1;15500:179:116;;;;;:::i;:::-;;:::i;3945:280:92:-;;;;;;;;;;-1:-1:-1;3945:280:92;;;;;:::i;:::-;;:::i;13904:153:116:-;;;;;;;;;;-1:-1:-1;13904:153:116;;;;;:::i;:::-;-1:-1:-1;;;;;14021:20:116;;;13995:7;14021:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13904:153;1939:135:113;;;;;;;;;;-1:-1:-1;1939:135:113;;;;;:::i;:::-;;:::i;2105:1334:92:-;;;;;;;;;;-1:-1:-1;2105:1334:92;;;;;:::i;:::-;;:::i;:::-;;;;18992:25:118;;;19048:2;19033:18;;19026:34;;;;19076:18;;;19069:34;18980:2;18965:18;2105:1334:92;18792:317:118;18701:128:116;;;;;;;;;;-1:-1:-1;18805:16:116;;-1:-1:-1;;;;;18805:16:116;18701:128;;1486:57;;;;;;;;;;;;;;;1057:64:113;;;;;;;;;;;;1112:9;1057:64;;6390:131;;;;;;;;;;-1:-1:-1;6390:131:113;;;;;:::i;:::-;;:::i;15913:213:116:-;;;;;;;;;;-1:-1:-1;15913:213:116;;;;;:::i;:::-;;:::i;16735:403::-;;;;;;;;;;-1:-1:-1;16735:403:116;;;;;:::i;:::-;;:::i;15328:166::-;;;;;;;;;;-1:-1:-1;15328:166:116;;;;;:::i;:::-;;:::i;16132:151::-;16200:16;16235:41;16265:10;16235:29;:41::i;:::-;16228:48;;16132:151;:::o;4604:100::-;4660:13;4692:5;4685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:100;:::o;1575:304:113:-;1685:5;:16;;-1:-1:-1;;;;;;1685:16:113;;-1:-1:-1;;;;;1685:16:113;;;;;;1711:15;;;-1:-1:-1;;;1711:15:113;;;;:4;;:13;;:15;;;;;-1:-1:-1;;1711:15:113;;;;;;;-1:-1:-1;1711:4:113;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1736:52:113;;-1:-1:-1;;;1736:52:113;;:4;;-1:-1:-1;1736:15:113;;-1:-1:-1;1736:52:113;;1767:1;;;;1775:4;;;;1781:6;;;;1736:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1859:12:113;;;1869:1;1859:12;;;;;;;;;-1:-1:-1;;;1798:74:113;;;:4;;-1:-1:-1;1798:13:113;;-1:-1:-1;1798:74:113;;:4;;-1:-1:-1;;;1827:30:113;1798:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1575:304;;;;;:::o;9255:378:92:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:92;;-1:-1:-1;;;9522:39:92:i;:::-;9576:50;;6724:25:118;;;-1:-1:-1;;;;;9576:50:92;;;9598:10;;9576:50;;6712:2:118;6697:18;9576:50:92;;;;;;;9419:214;9255:378;;;;:::o;14063:164:116:-;14146:4;14162:37;14171:10;14183:7;14192:6;14162:8;:37::i;:::-;-1:-1:-1;14216:4:116;14063:164;;;;;:::o;2120:142:113:-;2189:30;;:::i;:::-;-1:-1:-1;;;;;;2238:17:113;;;;;;;:8;:17;;;;;;;;2231:24;;;;;;;;;;;;;;;-1:-1:-1;;;2231:24:113;;;;;;;;;;;-1:-1:-1;;;2231:24:113;;;;;;;;;;;-1:-1:-1;;;2231:24:113;;;;;;;;;;;;;;;;;;;;;;2120:142::o;19304:140:116:-;19375:62;19386:10;19398;19410;19422:6;19375:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19304:140;:::o;7322:481:92:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:92;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:92;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:92;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:92;;-1:-1:-1;;;7704:35:92:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:92;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23871:238:116:-;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;24052:50:116::1;24066:7;24075;24084:9;24095:6;24052:13;:50::i;:::-;;23871:238:::0;;;;:::o;10460:2526:92:-;13208:57;;-1:-1:-1;;;13208:57:92;;-1:-1:-1;;;;;13208:5:92;:28;;;;:57;;13253:10;;13208:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:92;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:92;::::1;11281:91;;-1:-1:-1::0;11344:17:92;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:92;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:92;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:92::1;::::0;-1:-1:-1;11879:13:92;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:92;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:92::1;::::0;-1:-1:-1;12395:12:92;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:92;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:92;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:92::1;::::0;-1:-1:-1;12539:13:92;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:92::1;12793:17;-1:-1:-1::0;;;;;12718:261:92::1;12753:10;-1:-1:-1::0;;;;;12718:261:92::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2331:328:113:-;2440:42;;:::i;:::-;2498:9;2517:136;2524:18;2534:7;2524:9;:18::i;:::-;2517:136;;;-1:-1:-1;;;;;2575:17:113;;;;;;;:8;:17;;;;;;;;2558:35;;;;;;;;;;;;;;;-1:-1:-1;;;2558:35:113;;;;;;;;;;;-1:-1:-1;;;2558:35:113;;;;;;;;;;;-1:-1:-1;;;2558:35:113;;;;;;;;;;;;;;;;;;;;;:8;2567:3;;;;:::i;:::-;;;2558:13;;;;;;;:::i;:::-;;;;;;;;;:35;;;;-1:-1:-1;;;;;2617:17:113;;;;;;;;;;;;;:25;;;;;2517:136;;;2488:171;2331:328;;;:::o;14233:188:116:-;14339:4;14362:52;14376:10;14388:6;14396:9;14407:6;14362:13;:52::i;:::-;14355:59;14233:188;-1:-1:-1;;;;14233:188:116:o;24543:169::-;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;24649:56:116::1;24660:10;24672:7;24681;24690:6;24649:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24543:169:::0;;:::o;8709:474:92:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:92;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6724:25:118;;;9161:10:92;;9141:35;;6712:2:118;6697:18;9141:35:92;;;;;;;8826:357;;8709:474;;:::o;3511:428::-;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:92;;-1:-1:-1;3511:428:92;;-1:-1:-1;3511:428:92;-1:-1:-1;3511:428:92:o;5252:218::-;-1:-1:-1;;;;;5429:33:92;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:92;;5428:34;;5402:61;;;6724:25:118;5356:24:92;;5402:5;:25;;;;6697:18:118;;5402:61:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:92;;;;;;;;;;;;:::i;14427:217:116:-;14549:10;14524:4;14570:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14570:32:116;;;;;;;;;;14524:4;;14540:76;;14561:7;;14570:45;;14605:10;;14570:45;:::i;:::-;14540:8;:76::i;18117:231::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:116;;;;;;;;;;;24796:63;18292:49:::1;18306:7;18315:6;18323:9;18334:6;18292:13;:49::i;3920:623::-:0;4090:5;4084:19;;;;;:::i;:::-;:24;;-1:-1:-1;4076:68:116;;;;-1:-1:-1;;;4076:68:116;;27837:2:118;4076:68:116;;;27819:21:118;27876:2;27856:18;;;27849:30;27915:33;27895:18;;;27888:61;27966:18;;4076:68:116;;;;;;;;;4181:1;4162:20;;;4154:55;;;;-1:-1:-1;;;4154:55:116;;28197:2:118;4154:55:116;;;28179:21:118;28236:2;28216:18;;;28209:30;-1:-1:-1;;;28255:18:118;;;28248:52;28317:18;;4154:55:116;27995:346:118;4154:55:116;4219:16;:34;;4263:40;;;-1:-1:-1;;;4263:40:116;-1:-1:-1;;;;;;4263:40:116;;;-1:-1:-1;;;;;4219:34:116;;4263:40;;;;4314:5;:9;4322:1;;4314:5;:9;:::i;:::-;-1:-1:-1;4333:7:116;:11;4343:1;;4333:7;:11;:::i;:::-;;4386:36;4416:4;4386:21;:36::i;:::-;4501:35;;4530:1;6724:25:118;;;4530:1:116;;;-1:-1:-1;;;;;;;;;;;4501:35:116;6712:2:118;6697:18;4501:35:116;;;;;;;;3920:623;;;;;;:::o;18883:136::-;18952:60;18961:10;18973;18985;18997:6;18952:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;7436:129:113:-;912:5;;;;;-1:-1:-1;;;;;912:5:113;898:10;:19;894:68;;940:11;;-1:-1:-1;;;940:11:113;;;;;;;;;;;894:68;7514:44:::1;7547:10;7514:32;:44::i;23258:248:116:-:0;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23456:20:116;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23429:70:::1;::::0;23438:7;;23447;;23456:42:::1;::::0;23488:10;;23456:42:::1;:::i;23429:70::-;23258:248:::0;;;:::o;9702:391:92:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:92:o;400:122:95:-;447:19;489:26;:24;:26::i;7269:161:113:-;7358:65;;7269:161::o;6210:121::-;6275:10;6287:20;;;;:8;:20;;;;;:36;;;6253:71;;6275:10;6287:36;;6253:21;:71::i;:::-;6210:121::o;19075:173:116:-;19183:58;19192:10;19204;19216:2;19220:6;19228:8;;19183:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19183:58:116;;;;;;;;;;;;;-1:-1:-1;19183:8:116;;-1:-1:-1;;19183:58:116:i;:::-;19075:173;;;;:::o;23090:162::-;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;23211:34:116::1;23220:7;23229;23238:6;23211:8;:34::i;16289:440::-:0;16517:10;16542:42;:10;16517;16577:6;16542:24;:42::i;:::-;16537:103;;16593:47;;-1:-1:-1;;;16593:47:116;;;;;;;;;;;16537:103;16650:72;16656:8;16666:6;16674:9;16685:6;16693:8;;16650:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16650:72:116;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16703:12:116;;-1:-1:-1;16703:12:116;;;;16650:72;;16703:12;;;;16650:72;;;;;;;;;-1:-1:-1;16717:4:116;;-1:-1:-1;16650:5:116;;-1:-1:-1;;16650:72:116:i;:::-;16488:241;16289:440;;;;;;;:::o;17951:160::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:116;;;;;;;;;;;7871:338:92;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:92:o;13423:297:116:-;13497:15;13579:23;13609:35;13636:7;13609:26;:35::i;:::-;13578:66;;;;;13680:1;13661:16;:20;:52;;13696:16;13661:52;;;13684:1;13661:52;13654:59;13423:297;-1:-1:-1;;;13423:297:116:o;3236:2916:113:-;3321:21;3331:10;3321:9;:21::i;:::-;3317:76;;;3365:17;;-1:-1:-1;;;3365:17:113;;;;;;;;;;;3317:76;3509:5;;3455:21;;;;3509:5;;;-1:-1:-1;;;;;3509:5:113;3495:10;:19;3494:67;;3543:10;3555:5;3494:67;;;3527:4;3534;3494:67;3454:107;;;;3617:24;3627:13;3617:9;:24::i;:::-;3616:25;:37;;;;;3646:7;3645:8;3616:37;3612:88;;;3676:13;;-1:-1:-1;;;3676:13:113;;;;;;;;;;;3612:88;-1:-1:-1;;;;;3774:23:113;;3710:18;3774:23;;;:8;:23;;;;;:47;3731:9;;3710:18;3770:52;;-1:-1:-1;;;3774:47:113;;;;3770:3;:52::i;:::-;3750:72;;3849:9;3836:10;:22;3832:77;;;3881:17;;-1:-1:-1;;;3881:17:113;;;;;;;;;;;3832:77;3919:23;3933:9;3919:23;;:::i;:::-;-1:-1:-1;;;;;3979:23:113;;3952:24;3979:23;;;:8;:23;;;;;:29;3919:23;;-1:-1:-1;;;;3979:29:113;;;;-1:-1:-1;;4022:43:113;;4018:112;;4088:31;;-1:-1:-1;;;4088:31:113;;;;;;;;;;;4018:112;4221:4;4204:23;;;;:8;:23;;;;;:43;;-1:-1:-1;;;4204:43:113;;;;;:41;:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4258:23:113;;-1:-1:-1;4258:23:113;;;:8;:23;;;;;:49;;-1:-1:-1;;;4258:49:113;;;;;;-1:-1:-1;4258:47:113;:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4318:11;4332:18;4353:1;4332:22;;;;:::i;:::-;4318:36;-1:-1:-1;4364:28:113;4395:55;4444:5;4404:36;;;;1112:9;4404:36;:::i;:::-;4403:46;;;;:::i;:::-;4395:7;:55::i;:::-;4364:86;-1:-1:-1;4519:25:113;4364:86;4547:47;4556:36;4587:5;1112:9;4556:36;:::i;4547:47::-;:72;;;;:::i;:::-;4519:100;;4652:208;;;;;;;;4683:13;-1:-1:-1;;;;;4652:208:113;;;;;4717:5;4652:208;;;;;;4755:1;4652:208;;;;;;4795:1;4652:208;;;;;;4827:22;4652:208;;;;;4629:8;:20;4638:10;-1:-1:-1;;;;;4629:20:113;-1:-1:-1;;;;;4629:20:113;;;;;;;;;;;;:231;;;;;;;;;;;;;-1:-1:-1;;;;;4629:231:113;;;;;-1:-1:-1;;;;;4629:231:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4629:231:113;;;;;;;-1:-1:-1;;;;;4629:231:113;;;;;;;;;4871:9;4883:13;4871:25;;4906:957;4913:12;4923:1;4913:9;:12::i;:::-;4906:957;;;-1:-1:-1;;;;;5009:11:113;;4974:32;5009:11;;;:8;:11;;;;;5034:36;;-1:-1:-1;;;5034:36:113;;;;5009:11;5034:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5131:22:113;;-1:-1:-1;;5131:22:113;-1:-1:-1;;;5131:22:113;;;;-1:-1:-1;5131:27:113;:90;;5215:6;5184:27;:19;5206:5;5184:27;:::i;:::-;5183:38;;;;:::i;:::-;5131:90;;;5161:19;5131:90;5235:32;;;:58;;5084:137;;-1:-1:-1;5084:137:113;;5235:32;;:58;;5084:137;;5235:58;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;5235:58:113;;;;;;;-1:-1:-1;;;;;5235:58:113;;;;;;5330:22;5307:45;;;;;:::i;:::-;5461:32;;;;5307:45;;-1:-1:-1;5436:58:113;;5458:1;;5461:32;;5436:21;:58::i;:::-;-1:-1:-1;;;;;5547:23:113;;;;;;;:8;:23;;;;;;;:31;5632:4;5615:23;;;;;;:29;5514:268;;5615:29;-1:-1:-1;;;5615:29:113;;;32513:36:118;;5662:41:113;-1:-1:-1;;;5662:41:113;;;;32594:18:118;;;32587:43;;;;-1:-1:-1;;;5721:47:113;;;;;;32646:18:118;;;32639:43;5514:268:113;;;;5547:31;;;;;5514:268;;32501:2:118;32486:18;5514:268:113;;;;;;;-1:-1:-1;5800:24:113;-1:-1:-1;;;;;5800:24:113;;-1:-1:-1;4906:957:113;;;-1:-1:-1;;;;;5971:20:113;;;;;;:8;:20;;;;;:36;;;5921:87;;5941:4;;5959:10;;5971:36;;5921:37;:87::i;:::-;-1:-1:-1;6022:14:113;;6018:128;;6104:31;;-1:-1:-1;;;;;6104:19:113;;;:31;;;;;6124:10;;6104:31;;;;6124:10;6104:19;:31;;;;;;;;;;;;;;;;;;;;;6018:128;3307:2845;;;;;;;;;3236:2916;:::o;4231:201:92:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;19482:146:116:-;19567:54;19578:10;19590;19602:2;19606:6;19567:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;6575:517:113:-;6645:17;6700:2;6678:18;:24;;;6674:380;;-1:-1:-1;6725:10:113;;6575:517;-1:-1:-1;6575:517:113:o;6674:380::-;6778:2;6756:18;:24;;;6752:302;;-1:-1:-1;6803:9:113;;6575:517;-1:-1:-1;6575:517:113:o;6752:302::-;6855:2;6833:18;:24;;;6829:225;;-1:-1:-1;6880:9:113;;6575:517;-1:-1:-1;6575:517:113:o;6829:225::-;6932:2;6910:18;:24;;;6906:148;;-1:-1:-1;6957:9:113;;6575:517;-1:-1:-1;6575:517:113:o;6906:148::-;7009:2;6987:18;:24;;;6983:71;;-1:-1:-1;7034:9:113;;6575:517;-1:-1:-1;6575:517:113:o;6983:71::-;-1:-1:-1;7071:7:113;;6575:517;-1:-1:-1;6575:517:113:o;15685:222:116:-;15783:10;15803:46;:10;15783;15840:8;15803:28;:46::i;:::-;15893:6;-1:-1:-1;;;;;15864:36:116;15883:8;-1:-1:-1;;;;;15864:36:116;;;;;;;;;;;15756:151;15685:222;:::o;4710:104::-;4768:13;4800:7;4793:14;;;;;:::i;731:44:95:-;3291:13:25;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:25;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;;3377:33;3404:4;3377:18;:33::i;:::-;3376:34;:55;;;;-1:-1:-1;3414:12:25;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:25;;32895:2:118;3314:190:25;;;32877:21:118;32934:2;32914:18;;;32907:30;32973:34;32953:18;;;32946:62;-1:-1:-1;;;33024:18:118;;;33017:44;33078:19;;3314:190:25;32693:410:118;3314:190:25;3514:12;:16;;-1:-1:-1;;3514:16:25;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:25;;;;;3540:65;3629:14;3625:99;;;3659:13;:21;;-1:-1:-1;;3659:21:25;;;3699:14;;-1:-1:-1;10902:36:118;;3699:14:25;;10890:2:118;10875:18;3699:14:25;;;;;;;;3258:472;731:44:95:o;15137:185:116:-;15247:68;15253:10;15265;15277:9;15288:6;15296:8;;15247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15247:68:116;;;;;;;;;;;;;-1:-1:-1;15310:4:116;;-1:-1:-1;15247:5:116;;-1:-1:-1;15247:68:116:i;17722:223::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:116;;;;;;;;;;;24796:63;17876:15;;17925:12:::1;::::0;;17895:1:::1;17925:12:::0;;::::1;::::0;::::1;::::0;;;17841:97:::1;::::0;17847:10:::1;::::0;17859:7;;17868:6;;17876:20;;::::1;::::0;:15;;17841:5:::1;:97::i;7147:116:113:-:0;912:5;;;;;-1:-1:-1;;;;;912:5:113;898:10;:19;894:68;;940:11;;-1:-1:-1;;;940:11:113;;;;;;;;;;;894:68;7243:12:::1;::::0;;7253:1:::1;7243:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;7206:50:113;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;7235:6;;7206:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:92::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:92;;-1:-1:-1;;;8544:35:92:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:92;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18419:154:116:-;18495:71;18509:10;18521;18533:9;18544:21;18554:10;18544:9;:21::i;:::-;18495:13;:71::i;14650:322::-;14752:4;14768:176;14790:10;14814:7;14835:99;14872:15;14835:99;;;;;;;;;;;;;;;;;14847:10;14835:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14835:32:116;;;;;;;;;;;:99;:36;:99::i;13726:172::-;13812:4;13835:56;13849:10;13861;13873:9;13884:6;13835:13;:56::i;4438:533:92:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:92;;4438:533;-1:-1:-1;;;;;;;4438:533:92:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17351:365:116:-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:116;;;;;;;;;;;24796:63;17554:15;;17687:12:::1;::::0;;17573:1:::1;17687:12:::0;;::::1;::::0;::::1;::::0;;;17470:239:::1;::::0;17489:10:::1;::::0;17513:7;;17534:6;;17554:20;;::::1;::::0;;;:15;;17470:5:::1;:239::i;23512:353::-:0;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;23688:170:116::1;23710:7;23731;23752:96;23786:15;23752:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23752:20:116;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;24115:251::-:0;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;24294:65:116::1;24300:10;24312:7;24321:9;24332:6;24340:8;24294:65;;;;;;;;;;;::::0;24354:4:::1;24294:5;:65::i;24372:165::-:0;13396:5:92;-1:-1:-1;;;;;13388:28:92;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:92;;;;;;;;;;;13384:86;24476:54:116::1;24485:10;24497:7;24506;24515:6;24476:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:92:-:0;13208:57;;-1:-1:-1;;;13208:57:92;;-1:-1:-1;;;;;13208:5:92;:28;;;;:57;;13253:10;;13208:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:92;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:92;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:92;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:92:o;15500:179:116:-;15602:4;15625:47;:10;15650:8;15660:11;15625:24;:47::i;3945:280:92:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:92;-1:-1:-1;;3945:280:92;-1:-1:-1;;;;3945:280:92:o;1939:135:113:-;-1:-1:-1;;;;;2028:17:113;;;2005:4;2028:17;;;:8;:17;;;;;:25;;:39;;;1939:135::o;2105:1334:92:-;-1:-1:-1;;;;;2370:31:92;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2708:58:92;;2793:4;2824:7;2858:9;2708:182;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:92;-1:-1:-1;2568:322:92;-1:-1:-1;2914:26:92;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:92;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;6390:131:113:-;912:5;;;;;-1:-1:-1;;;;;912:5:113;898:10;:19;894:68;;940:11;;-1:-1:-1;;;940:11:113;;;;;;;;;;;894:68;6480:34:::1;::::0;-1:-1:-1;;;;;6480:26:113;::::1;::::0;:34;::::1;;;::::0;6507:6;;6480:34:::1;::::0;;;6507:6;6480:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;15913:213:116::0;16008:10;16028:43;:10;16008;16062:8;16028:25;:43::i;:::-;16112:6;-1:-1:-1;;;;;16086:33:116;16102:8;-1:-1:-1;;;;;16086:33:116;;;;;;;;;;;15981:145;15913:213;:::o;16735:403::-;16927:10;16952:43;:10;16927;16987:7;16952:24;:43::i;:::-;16947:104;;17004:47;;-1:-1:-1;;;17004:47:116;;;;;;;;;;;16947:104;17061:70;17072:8;17082:7;17091;17100:6;17108:8;;17061:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17061:70:116;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17118:12:116;;-1:-1:-1;17118:12:116;;;;17061:70;;17118:12;;;;17061:70;;;;;;;;;-1:-1:-1;17061:10:116;;-1:-1:-1;;;17061:70:116:i;:::-;16898:240;16735:403;;;;;;:::o;15328:166::-;15419:68;15430:10;15442;15454;15466:6;15474:8;;15419:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:68:116;;;;;;;;;;;;;-1:-1:-1;15419:10:116;;-1:-1:-1;;15419:68:116:i;2294:141:80:-;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:80;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;701:213:82:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10502:394:116;-1:-1:-1;;;;;10593:21:116;;10589:98;;10637:39;;-1:-1:-1;;;10637:39:116;;;;;;;;;;;10589:98;-1:-1:-1;;;;;10700:21:116;;10696:96;;10744:37;;-1:-1:-1;;;10744:37:116;;;;;;;;;;;10696:96;-1:-1:-1;;;;;10802:20:116;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10855:34;;6724:25:118;;;10855:34:116;;6697:18:118;10855:34:116;;;;;;;;10502:394;;;:::o;20802:1142::-;21157:16;;-1:-1:-1;;;;;21157:16:116;21145:85;;21197:33;;-1:-1:-1;;;21197:33:116;;;;;;;;;;;21145:85;21242:24;21268:22;21294:27;21314:6;21294:19;:27::i;:::-;21241:80;;;;21399:86;21405:8;21415:7;21424:14;21440:8;:15;21459:1;21440:20;;21462:8;21472:12;21399:5;:86::i;:::-;21519:16;;:41;;-1:-1:-1;;;21519:41:116;;21496:20;;-1:-1:-1;;;;;21519:16:116;;:26;;:41;;21554:4;;21519:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21570:16;;21496:64;;-1:-1:-1;21570:51:116;;-1:-1:-1;;;;;21570:16:116;21600:2;21604:16;21570:29;:51::i;:::-;21653:16;;:41;;-1:-1:-1;;;21653:41:116;;21631:19;;-1:-1:-1;;;;;21653:16:116;;:26;;:41;;21688:4;;21653:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21631:63;-1:-1:-1;21704:30:116;21737:26;21631:63;21737:12;:26;:::i;:::-;21704:59;;21797:22;21777:16;:42;21773:108;;21828:53;;-1:-1:-1;;;21828:53:116;;;;;;;;;;;21773:108;21913:7;-1:-1:-1;;;;;21897:40:116;;21922:14;21897:40;;;;6724:25:118;;6712:2;6697:18;;6578:177;21897:40:116;;;;;;;;21135:809;;;;;20802:1142;;;;;;:::o;920:282:82:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:82;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:82;;920:282;-1:-1:-1;;;920:282:82:o;5545:715:116:-;5670:4;-1:-1:-1;;;;;5694:20:116;;5690:98;;5737:40;;-1:-1:-1;;;5737:40:116;;;;;;;;;;;5690:98;-1:-1:-1;;;;;5801:23:116;;5797:99;;5847:38;;-1:-1:-1;;;5847:38:116;;;;;;;;;;;5797:99;5905:16;5924:10;5905:29;;5945:50;5951:8;5961:6;5969:9;5980:6;5945:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;6021:6;-1:-1:-1;;;;;6010:17:116;:7;-1:-1:-1;;;;;6010:17:116;;6006:226;;6043:178;6069:6;6093:7;6118:89;6151:6;6118:89;;;;;;;;;;;;;;;;;:11;:19;6130:6;-1:-1:-1;;;;;6118:19:116;-1:-1:-1;;;;;6118:19:116;;;;;;;;;;;;:28;6138:7;-1:-1:-1;;;;;6118:28:116;-1:-1:-1;;;;;6118:28:116;;;;;;;;;;;;;:32;;:89;;;;;:::i;6043:178::-;-1:-1:-1;6249:4:116;;5545:715;-1:-1:-1;;;;;5545:715:116:o;6823:230:92:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:92;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:92;;6908:49;;-1:-1:-1;;;;;;6983:22:92;;;;;:63;;7006:5;;7013:4;;601:60;;6983:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:43:-;34837:6;-1:-1:-1;;;;;34962:5:43;:34;;34954:87;;;;-1:-1:-1;;;34954:87:43;;35584:2:118;34954:87:43;;;35566:21:118;35623:2;35603:18;;;35596:30;35662:34;35642:18;;;35635:62;-1:-1:-1;;;35713:18:118;;;35706:38;35761:19;;34954:87:43;35382:404:118;34954:87:43;-1:-1:-1;35065:5:43;34781:297::o;301:119:81:-;403:2;-1:-1:-1;;;;;388:25:81;397:4;-1:-1:-1;;;;;388:25:81;-1:-1:-1;;;;;;;;;;;407:5:81;388:25;;;;6724::118;;6712:2;6697:18;;6578:177;1681:173:82;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;897:246:80;949:89;;-1:-1:-1;;;949:89:80;;332:42;;949:41;;:89;;991:5;;998:24;;1032:4;;949:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:80;;-1:-1:-1;;;1048:88:80;;332:42;;-1:-1:-1;1048:41:80;;-1:-1:-1;1048:88:80;;1090:5;;1097:23;;1130:4;;1048:88;;;:::i;19634:1162:116:-;19850:16;;-1:-1:-1;;;;;19850:16:116;19838:85;;19890:33;;-1:-1:-1;;;19890:33:116;;;;;;;;;;;19838:85;19935:24;19961:22;19987:27;20007:6;19987:19;:27::i;:::-;20048:16;;:41;;-1:-1:-1;;;20048:41:116;;19934:80;;-1:-1:-1;19934:80:116;;-1:-1:-1;20025:20:116;;-1:-1:-1;;;;;20048:16:116;;;;:26;;:41;;20083:4;;20048:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20099:16;;20025:64;;-1:-1:-1;20099:75:116;;-1:-1:-1;;;;;20099:16:116;20133:7;20150:4;20157:16;20099:33;:75::i;:::-;20206:16;;:41;;-1:-1:-1;;;20206:41:116;;20184:19;;-1:-1:-1;;;;;20206:16:116;;:26;;:41;;20241:4;;20206:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20184:63;-1:-1:-1;20257:28:116;20288:26;20302:12;20184:63;20288:26;:::i;:::-;20257:57;;20348:20;20328:16;:40;20324:106;;20377:53;;-1:-1:-1;;;20377:53:116;;;;;;;;;;;20324:106;20628:15;;20441:299;;20460:8;;20482:2;;20498:14;;20628:20;;;:8;20718:12;20441:5;:299::i;:::-;20770:2;-1:-1:-1;;;;;20756:33:116;;20774:14;20756:33;;;;6724:25:118;;6712:2;6697:18;;6578:177;1289:576:95;1457:1;1419:26;:24;:26::i;:::-;-1:-1:-1;;;;;1419:40:95;;1411:82;;;;-1:-1:-1;;;1411:82:95;;36373:2:118;1411:82:95;;;36355:21:118;36412:2;36392:18;;;36385:30;36451:31;36431:18;;;36424:59;36500:18;;1411:82:95;36171:353:118;1411:82:95;1557:10;-1:-1:-1;;;;;1543:39:95;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1524:15;:13;:15::i;:::-;:60;1503:142;;;;-1:-1:-1;;;1503:142:95;;36920:2:118;1503:142:95;;;36902:21:118;36959:2;36939:18;;;36932:30;36998:34;36978:18;;;36971:62;-1:-1:-1;;;37049:18:118;;;37042:33;37092:19;;1503:142:95;36718:399:118;1503:142:95;-1:-1:-1;;;;;1676:27:95;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:95;;37324:2:118;1655:99:95;;;37306:21:118;37363:2;37343:18;;;37336:30;-1:-1:-1;;;37382:18:118;;;37375:55;37447:18;;1655:99:95;37122:349:118;1655:99:95;1764:39;1792:10;-1:-1:-1;;;;;;;;;;;964:87:97;839:228;1764:39:95;1818:40;1830:15;:13;:15::i;:::-;1818:40;;;37650:25:118;;;-1:-1:-1;;;;;37711:32:118;;37706:2;37691:18;;37684:60;37623:18;1818:40:95;37476:274:118;1291:300:82;1363:21;1417:10;-1:-1:-1;;;;;1403:25:82;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:82;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:82;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;618:170:97:-;-1:-1:-1;;;;;;;;;;;745:27:97;;618:170::o;2844:334:113:-;2932:63;2979:4;;2986:8;2932:38;:63::i;:::-;:68;;;2928:244;;3016:57;3036:4;3054:8;3064;3016:37;:57::i;2928:244::-;3104:57;3124:4;3142:8;3152;3104:37;:57::i;1149:366:80:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:80;:8;-1:-1:-1;;;;;1281:23:80;;:174;;;-1:-1:-1;;;;;;1338:31:80;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:80;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:80;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6784:686:116:-;-1:-1:-1;;;;;7020:18:116;;7016:96;;7061:40;;-1:-1:-1;;;7061:40:116;;;;;;;;;;;7016:96;-1:-1:-1;;;;;7125:16:116;;7121:92;;7164:38;;-1:-1:-1;;;7164:38:116;;;;;;;;;;;7121:92;7223:69;7241:8;7251:4;7257:2;7261:6;7269:8;7279:12;7223:17;:69::i;:::-;7303:57;7309:8;7319:4;7325:2;7329:6;7337:8;7347:12;7303:5;:57::i;:::-;7371:92;7391:8;7401:4;7407:2;7411:6;7419:8;7429:12;7443:19;7371;:92::i;7804:166:113:-;7859:5;-1:-1:-1;;;;;7884:41:113;;;7876:50;;;;;904:184:53;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;1521:382:80:-;1643:8;-1:-1:-1;;;;;1633:18:80;:6;-1:-1:-1;;;;;1633:18:80;;1625:76;;;;-1:-1:-1;;;1625:76:80;;37957:2:118;1625:76:80;;;37939:21:118;37996:2;37976:18;;;37969:30;38035:34;38015:18;;;38008:62;-1:-1:-1;;;38086:18:118;;;38079:43;38139:19;;1625:76:80;37755:409:118;1625:76:80;-1:-1:-1;;;;;1716:31:80;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:80;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:80;;;23258:248:116:o;1712:185:80:-;-1:-1:-1;;;;;1847:22:80;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:80;1882:4;1847:39;;;1521:382;;;:::o;1412:320:36:-;-1:-1:-1;;;;;1702:19:36;;:23;;;1412:320::o;9476:594:116:-;-1:-1:-1;;;;;9683:18:116;;9679:92;;9724:36;;-1:-1:-1;;;9724:36:116;;;;;;;;;;;9679:92;9785:10;9781:118;;;9811:77;9829:8;9839:4;9853:1;9857:6;9865:8;9875:12;9811:17;:77::i;:::-;9909:35;9931:4;9937:6;9909:21;:35::i;:::-;9977:4;-1:-1:-1;;;;;9960:54:116;9967:8;-1:-1:-1;;;;;9960:54:116;;9983:6;9991:8;10001:12;9960:54;;;;;;;;:::i;:::-;;;;;;;;10029:34;;6724:25:118;;;10052:1:116;;-1:-1:-1;;;;;10029:34:116;;;-1:-1:-1;;;;;;;;;;;10029:34:116;6712:2:118;6697:18;10029:34:116;6578:177:118;4959:201:44;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:44;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:44;;;4959:201::o;8500:667:116:-;-1:-1:-1;;;;;8744:21:116;;8740:93;;8788:34;;-1:-1:-1;;;8788:34:116;;;;;;;;;;;8740:93;8843:38;8865:7;8874:6;8843:21;:38::i;:::-;8896:10;8892:144;;;8922:103;8942:8;8960:1;8964:7;8973:6;8981:8;8991:12;9005:19;8922;:103::i;:::-;9068:7;-1:-1:-1;;;;;9051:57:116;9058:8;-1:-1:-1;;;;;9051:57:116;;9077:6;9085:8;9095:12;9051:57;;;;;;;;:::i;:::-;;;;;;;;9123:37;;6724:25:118;;;-1:-1:-1;;;;;9123:37:116;;;9140:1;;-1:-1:-1;;;;;;;;;;;9123:37:116;6712:2:118;6697:18;9123:37:116;;;;;;;8500:667;;;;;;;:::o;1909:379:80:-;2030:10;-1:-1:-1;;;;;2018:22:80;;;2010:77;;;;-1:-1:-1;;;2010:77:80;;38826:2:118;2010:77:80;;;38808:21:118;38865:2;38845:18;;;38838:30;38904:34;38884:18;;;38877:62;-1:-1:-1;;;38955:18:118;;;38948:40;39005:19;;2010:77:80;38624:406:118;2010:77:80;-1:-1:-1;;;;;2101:31:80;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:80;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:80;2197:4;2148:53;;;23258:248:116;;;:::o;2097:185:80:-;-1:-1:-1;;;;;2239:22:80;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:80;;;1909:379::o;22046:972:116:-;22229:19;;22137:24;;;;;;1425:2;-1:-1:-1;;;22229:19:116;;;:40;:19;:40;22225:787;;;22434:19;;22413:40;;-1:-1:-1;;;22434:19:116;;;;1425:2;22413:40;:::i;:::-;22406:48;;:2;:48;:::i;:::-;22397:57;-1:-1:-1;22487:15:116;22397:57;22487:6;:15;:::i;:::-;22468:34;-1:-1:-1;22572:25:116;22591:6;22468:34;22572:25;:::i;:::-;22555:42;;22225:787;;;22618:19;;1425:2;-1:-1:-1;;;22618:19:116;;;:40;:19;:40;22614:398;;;22802:19;;:40;;1425:2;;-1:-1:-1;;;22802:19:116;;;;:40;:::i;:::-;22795:48;;:2;:48;:::i;:::-;22786:57;-1:-1:-1;22876:15:116;22786:57;22876:6;:15;:::i;:::-;22857:34;;22922:6;22905:23;;22614:398;;;22995:6;22978:23;;;22959:42;;22614:398;22191:827;22046:972;;;:::o;941:175:30:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1050:58:30;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:30;-1:-1:-1;;;;;;1050:58:30;;;;;;;;;;1023:19;:86::i;7476:367:116:-;7673:50;7695:4;7701:2;7705:17;:6;:15;:17::i;:::-;7673:21;:50::i;:::-;7760:2;-1:-1:-1;;;;;7739:56:116;7754:4;-1:-1:-1;;;;;7739:56:116;7744:8;-1:-1:-1;;;;;7739:56:116;;7764:6;7772:8;7782:12;7739:56;;;;;;;;:::i;:::-;;;;;;;;7825:2;-1:-1:-1;;;;;7810:26:116;7819:4;-1:-1:-1;;;;;7810:26:116;-1:-1:-1;;;;;;;;;;;7829:6:116;7810:26;;;;6724:25:118;;6712:2;6697:18;;6578:177;1355:203:30;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;26861:262:53:-;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:53;;-1:-1:-1;;;;;41685:15:118;;;27080:36:53;;;41667:34:118;41737:15;;;41717:18;;;41710:43;41789:15;;;41769:18;;;41762:43;26995:56:53;;-1:-1:-1;27080:11:53;;;;-1:-1:-1;27080:11:53;;41602:18:118;;27080:36:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:53;;26861:262;-1:-1:-1;;;;;;;26861:262:53:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;11369:510:116:-;11612:104;;-1:-1:-1;;;11612:104:116;;11578:19;;332:42:80;;11612:54:116;;:104;;11667:4;;440:31:80;;11612:104:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11578:138;-1:-1:-1;;;;;;11730:25:116;;;11726:147;;11771:91;;-1:-1:-1;;;11771:91:116;;-1:-1:-1;;;;;11771:39:116;;;;;:91;;11811:8;;11821:4;;11827:2;;11831:6;;11839:8;;11849:12;;11771:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12568:677;12847:105;;-1:-1:-1;;;12847:105:116;;12813:19;;332:42:80;;12847:54:116;;:105;;12902:2;;538:34:80;;12847:105:116;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12813:139;-1:-1:-1;;;;;;12966:25:116;;;12962:277;;13007:96;;-1:-1:-1;;;13007:96:116;;-1:-1:-1;;;;;13007:44:116;;;;;:96;;13052:8;;13062:4;;13068:2;;13072:6;;13080:8;;13090:12;;13007:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12962:277;;;13124:19;13120:119;;;13163:15;:2;-1:-1:-1;;;;;13163:13:116;;:15::i;:::-;13159:69;;;13187:41;;-1:-1:-1;;;13187:41:116;;;;;;;;;;;1342:472:53;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:53;;1606:3;1655;-1:-1:-1;;;;;1655:14:53;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:53;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:53;;1623:119;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1623:119:53;;;;;;;;;;;;;;;-1:-1:-1;;;;;1623:119:53;;;;;;1574:212;;;;;-1:-1:-1;;;;;;1574:212:53;;;;;;-1:-1:-1;1623:119:53;1756:8;;1574:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:212:53;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1803:4:53;;1342:472;-1:-1:-1;;;;;;;1342:472:53:o;5918:440:92:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:92;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:92;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:92;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:92:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:92;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:92;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:92:o;5196:642:30:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:30;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:30;;45195:2:118;5720:111:30;;;45177:21:118;45234:2;45214:18;;;45207:30;45273:34;45253:18;;;45246:62;-1:-1:-1;;;45324:18:118;;;45317:40;45374:19;;5720:111:30;44993:406:118;6364:453:92;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:92;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:92;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:92;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:92;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:92;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:92:o;60355:828:53:-;-1:-1:-1;;;;;;;;;;;60594:17:53;-1:-1:-1;;;;;;;;;;;60631:16:53;-1:-1:-1;;;;;60670:26:53;;60666:422;;-1:-1:-1;;;;;60801:27:53;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:53;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:53;;-1:-1:-1;;;;;;;;;;;60950:125:53;;;6724:25:118;-1:-1:-1;;;;;60950:35:53;;;;;6697:18:118;;60950:125:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:53;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:53;;61142:34;;;;:::i;:::-;60355:828;;;:::o;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:53;;2716:3;2765;-1:-1:-1;;;;;2765:14:53;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:53;;;;;;;:::i;57949:1061::-;-1:-1:-1;;;;;;;;;;;58191:17:53;-1:-1:-1;;;;;;;;;;;58228:16:53;-1:-1:-1;;;;;58267:26:53;;58263:652;;-1:-1:-1;;;;;58387:27:53;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:53;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:53;;-1:-1:-1;;;;;;;;;;;58536:125:53;;;6724:25:118;-1:-1:-1;;;;;58536:35:53;;;;;6697:18:118;;58536:125:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;-1:-1:-1;;;;;;;;;;;58828:24:53;58887:3;-1:-1:-1;;;;;;;;;;;58869:22:53;-1:-1:-1;;;;;58931:27:53;;58924:35;;;;:::i;4108:223:36:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:36;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:36:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;-1:-1:-1;;;8113:60:36;;46586:2:118;8113:60:36;;;46568:21:118;46625:2;46605:18;;;46598:30;46664:31;46644:18;;;46637:59;46713:18;;8113:60:36;46384:353:118;8113:60:36;-1:-1:-1;8208:10:36;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:36;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;14:658:118:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:118;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:118;;14:658;-1:-1:-1;;;;;;14:658:118:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:118;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:118;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:118:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:348::-;1485:8;1495:6;1549:3;1542:4;1534:6;1530:17;1526:27;1516:55;;1567:1;1564;1557:12;1516:55;-1:-1:-1;1590:20:118;;-1:-1:-1;;;;;1622:30:118;;1619:50;;;1665:1;1662;1655:12;1619:50;1702:4;1694:6;1690:17;1678:29;;1754:3;1747:4;1738:6;1730;1726:19;1722:30;1719:39;1716:59;;;1771:1;1768;1761:12;1716:59;1433:348;;;;;:::o;1786:131::-;-1:-1:-1;;;;;1861:31:118;;1851:42;;1841:70;;1907:1;1904;1897:12;1922:856;2023:6;2031;2039;2047;2055;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2151:23;;-1:-1:-1;;;;;2223:14:118;;;2220:34;;;2250:1;2247;2240:12;2220:34;2289:59;2340:7;2331:6;2320:9;2316:22;2289:59;:::i;:::-;2367:8;;-1:-1:-1;2263:85:118;-1:-1:-1;2455:2:118;2440:18;;2427:32;;-1:-1:-1;2471:16:118;;;2468:36;;;2500:1;2497;2490:12;2468:36;;2539:61;2592:7;2581:8;2570:9;2566:24;2539:61;:::i;:::-;2619:8;;-1:-1:-1;2513:87:118;-1:-1:-1;;2704:2:118;2689:18;;2676:32;2717:31;2676:32;2717:31;:::i;:::-;2767:5;2757:15;;;1922:856;;;;;;;;:::o;2783:367::-;2846:8;2856:6;2910:3;2903:4;2895:6;2891:17;2887:27;2877:55;;2928:1;2925;2918:12;2877:55;-1:-1:-1;2951:20:118;;-1:-1:-1;;;;;2983:30:118;;2980:50;;;3026:1;3023;3016:12;2980:50;3063:4;3055:6;3051:17;3039:29;;3123:3;3116:4;3106:6;3103:1;3099:14;3091:6;3087:27;3083:38;3080:47;3077:67;;;3140:1;3137;3130:12;3155:640;3259:6;3267;3275;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3512:2:118;3497:18;;3484:32;;-1:-1:-1;3567:2:118;3552:18;;3539:32;-1:-1:-1;;;;;3583:30:118;;3580:50;;;3626:1;3623;3616:12;3580:50;3665:70;3727:7;3718:6;3707:9;3703:22;3665:70;:::i;:::-;3155:640;;;;-1:-1:-1;3754:8:118;-1:-1:-1;;;;3155:640:118:o;3800:315::-;3868:6;3876;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;3984:9;3971:23;4003:31;4028:5;4003:31;:::i;:::-;4053:5;4105:2;4090:18;;;;4077:32;;-1:-1:-1;;;3800:315:118:o;4312:247::-;4371:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:52;;;4440:1;4437;4430:12;4392:52;4479:9;4466:23;4498:31;4523:5;4498:31;:::i;4564:457::-;4641:12;;-1:-1:-1;;;;;4637:38:118;4625:51;;4729:4;4718:16;;;4712:23;4737:4;4708:34;4692:14;;;4685:58;4789:4;4778:16;;;4772:23;4814:10;4856:21;;;4840:14;;;4833:45;;;;4931:4;4920:16;;;4914:23;4910:32;;;4894:14;;;4887:56;5007:4;4996:16;;;4990:23;4986:2;4975:39;4959:14;;4952:63;4564:457::o;5026:249::-;5212:3;5197:19;;5225:44;5201:9;5251:6;5225:44;:::i;5280:180::-;5339:6;5392:2;5380:9;5371:7;5367:23;5363:32;5360:52;;;5408:1;5405;5398:12;5360:52;-1:-1:-1;5431:23:118;;5280:180;-1:-1:-1;5280:180:118:o;5465:505::-;5560:6;5568;5576;5629:2;5617:9;5608:7;5604:23;5600:32;5597:52;;;5645:1;5642;5635:12;5597:52;5668:23;;;-1:-1:-1;5742:2:118;5727:18;;5714:32;-1:-1:-1;;;;;5758:30:118;;5755:50;;;5801:1;5798;5791:12;5755:50;5840:70;5902:7;5893:6;5882:9;5878:22;5840:70;:::i;:::-;5465:505;;5929:8;;-1:-1:-1;5814:96:118;;-1:-1:-1;;;;5465:505:118:o;5975:598::-;6061:6;6069;6077;6085;6138:3;6126:9;6117:7;6113:23;6109:33;6106:53;;;6155:1;6152;6145:12;6106:53;6194:9;6181:23;6213:31;6238:5;6213:31;:::i;:::-;6263:5;-1:-1:-1;6320:2:118;6305:18;;6292:32;6333:33;6292:32;6333:33;:::i;:::-;6385:7;-1:-1:-1;6444:2:118;6429:18;;6416:32;6457:33;6416:32;6457:33;:::i;:::-;5975:598;;;;-1:-1:-1;6509:7:118;;6563:2;6548:18;6535:32;;-1:-1:-1;;5975:598:118:o;6760:127::-;6821:10;6816:3;6812:20;6809:1;6802:31;6852:4;6849:1;6842:15;6876:4;6873:1;6866:15;6892:275;6963:2;6957:9;7028:2;7009:13;;-1:-1:-1;;7005:27:118;6993:40;;-1:-1:-1;;;;;7048:34:118;;7084:22;;;7045:62;7042:88;;;7110:18;;:::i;:::-;7146:2;7139:22;6892:275;;-1:-1:-1;6892:275:118:o;7172:186::-;7220:4;-1:-1:-1;;;;;7242:30:118;;7239:56;;;7275:18;;:::i;:::-;-1:-1:-1;7341:2:118;7320:15;-1:-1:-1;;7316:29:118;7347:4;7312:40;;7172:186::o;7363:462::-;7405:5;7458:3;7451:4;7443:6;7439:17;7435:27;7425:55;;7476:1;7473;7466:12;7425:55;7512:6;7499:20;7543:48;7559:31;7587:2;7559:31;:::i;:::-;7543:48;:::i;:::-;7616:2;7607:7;7600:19;7662:3;7655:4;7650:2;7642:6;7638:15;7634:26;7631:35;7628:55;;;7679:1;7676;7669:12;7628:55;7744:2;7737:4;7729:6;7725:17;7718:4;7709:7;7705:18;7692:55;7792:1;7767:16;;;7785:4;7763:27;7756:38;;;;7771:7;7363:462;-1:-1:-1;;;7363:462:118:o;7830:118::-;7916:5;7909:13;7902:21;7895:5;7892:32;7882:60;;7938:1;7935;7928:12;7953:938;8071:6;8079;8087;8095;8103;8111;8119;8172:3;8160:9;8151:7;8147:23;8143:33;8140:53;;;8189:1;8186;8179:12;8140:53;8212:23;;;-1:-1:-1;8286:2:118;8271:18;;8258:32;-1:-1:-1;;;;;8302:30:118;;8299:50;;;8345:1;8342;8335:12;8299:50;8368:49;8409:7;8400:6;8389:9;8385:22;8368:49;:::i;:::-;8358:59;;;8467:2;8456:9;8452:18;8439:32;8480:31;8505:5;8480:31;:::i;:::-;8530:5;-1:-1:-1;8587:2:118;8572:18;;8559:32;8600:30;8559:32;8600:30;:::i;:::-;8649:7;-1:-1:-1;8708:3:118;8693:19;;8680:33;8722;8680;8722;:::i;:::-;7953:938;;;;-1:-1:-1;7953:938:118;;;;8774:7;8828:3;8813:19;;8800:33;;-1:-1:-1;8880:3:118;8865:19;;;8852:33;;7953:938;-1:-1:-1;;7953:938:118:o;8896:203::-;-1:-1:-1;;;;;9060:32:118;;;;9042:51;;9030:2;9015:18;;8896:203::o;9104:543::-;9336:3;9321:19;;9325:9;9417:6;9294:4;9451:190;9465:4;9462:1;9459:11;9451:190;;;9512:45;9553:3;9544:6;9538:13;9512:45;:::i;:::-;9586:4;9577:14;;;;;9626:4;9614:17;;;;;9485:1;9478:9;9451:190;;;9455:3;;;9104:543;;;;:::o;9652:456::-;9729:6;9737;9745;9798:2;9786:9;9777:7;9773:23;9769:32;9766:52;;;9814:1;9811;9804:12;9766:52;9853:9;9840:23;9872:31;9897:5;9872:31;:::i;:::-;9922:5;-1:-1:-1;9979:2:118;9964:18;;9951:32;9992:33;9951:32;9992:33;:::i;:::-;9652:456;;10044:7;;-1:-1:-1;;;10098:2:118;10083:18;;;;10070:32;;9652:456::o;10113:248::-;10181:6;10189;10242:2;10230:9;10221:7;10217:23;10213:32;10210:52;;;10258:1;10255;10248:12;10210:52;-1:-1:-1;;10281:23:118;;;10351:2;10336:18;;;10323:32;;-1:-1:-1;10113:248:118:o;11637:1038::-;11761:6;11769;11777;11785;11793;11801;11854:3;11842:9;11833:7;11829:23;11825:33;11822:53;;;11871:1;11868;11861:12;11822:53;11910:9;11897:23;11929:31;11954:5;11929:31;:::i;:::-;11979:5;-1:-1:-1;12036:2:118;12021:18;;12008:32;12084:4;12071:18;;12059:31;;12049:59;;12104:1;12101;12094:12;12049:59;12127:7;-1:-1:-1;12185:2:118;12170:18;;12157:32;-1:-1:-1;;;;;12238:14:118;;;12235:34;;;12265:1;12262;12255:12;12235:34;12304:59;12355:7;12346:6;12335:9;12331:22;12304:59;:::i;:::-;12382:8;;-1:-1:-1;12278:85:118;-1:-1:-1;12470:2:118;12455:18;;12442:32;;-1:-1:-1;12486:16:118;;;12483:36;;;12515:1;12512;12505:12;12483:36;;12554:61;12607:7;12596:8;12585:9;12581:24;12554:61;:::i;:::-;11637:1038;;;;-1:-1:-1;11637:1038:118;;-1:-1:-1;11637:1038:118;;12634:8;;11637:1038;-1:-1:-1;;;11637:1038:118:o;12680:525::-;12766:6;12774;12782;12790;12843:3;12831:9;12822:7;12818:23;12814:33;12811:53;;;12860:1;12857;12850:12;12811:53;12899:9;12886:23;12918:31;12943:5;12918:31;:::i;:::-;12968:5;-1:-1:-1;13025:2:118;13010:18;;12997:32;13038:33;12997:32;13038:33;:::i;:::-;12680:525;;13090:7;;-1:-1:-1;;;;13144:2:118;13129:18;;13116:32;;13195:2;13180:18;13167:32;;12680:525::o;13210:632::-;13381:2;13433:21;;;13503:13;;13406:18;;;13525:22;;;13352:4;;13381:2;13604:15;;;;13578:2;13563:18;;;13352:4;13647:169;13661:6;13658:1;13655:13;13647:169;;;13722:13;;13710:26;;13791:15;;;;13756:12;;;;13683:1;13676:9;13647:169;;14265:613;14353:6;14361;14369;14377;14430:2;14418:9;14409:7;14405:23;14401:32;14398:52;;;14446:1;14443;14436:12;14398:52;14485:9;14472:23;14504:31;14529:5;14504:31;:::i;:::-;14554:5;-1:-1:-1;14606:2:118;14591:18;;14578:32;;-1:-1:-1;14661:2:118;14646:18;;14633:32;-1:-1:-1;;;;;14677:30:118;;14674:50;;;14720:1;14717;14710:12;14674:50;14759:59;14810:7;14801:6;14790:9;14786:22;14759:59;:::i;14883:1065::-;15000:6;15008;15016;15024;15032;15040;15048;15101:3;15089:9;15080:7;15076:23;15072:33;15069:53;;;15118:1;15115;15108:12;15069:53;15157:9;15144:23;15176:31;15201:5;15176:31;:::i;:::-;15226:5;-1:-1:-1;15283:2:118;15268:18;;15255:32;15296:33;15255:32;15296:33;:::i;:::-;15348:7;-1:-1:-1;15402:2:118;15387:18;;15374:32;;-1:-1:-1;15457:2:118;15442:18;;15429:32;-1:-1:-1;;;;;15510:14:118;;;15507:34;;;15537:1;15534;15527:12;15507:34;15576:59;15627:7;15618:6;15607:9;15603:22;15576:59;:::i;:::-;15654:8;;-1:-1:-1;15550:85:118;-1:-1:-1;15742:3:118;15727:19;;15714:33;;-1:-1:-1;15759:16:118;;;15756:36;;;15788:1;15785;15778:12;15756:36;;15827:61;15880:7;15869:8;15858:9;15854:24;15827:61;:::i;:::-;14883:1065;;;;-1:-1:-1;14883:1065:118;;-1:-1:-1;14883:1065:118;;;;15801:87;;-1:-1:-1;;;14883:1065:118:o;15953:383::-;16030:6;16038;16046;16099:2;16087:9;16078:7;16074:23;16070:32;16067:52;;;16115:1;16112;16105:12;16067:52;16154:9;16141:23;16173:31;16198:5;16173:31;:::i;:::-;16223:5;16275:2;16260:18;;16247:32;;-1:-1:-1;16326:2:118;16311:18;;;16298:32;;15953:383;-1:-1:-1;;;15953:383:118:o;16601:276::-;16659:6;16712:2;16700:9;16691:7;16687:23;16683:32;16680:52;;;16728:1;16725;16718:12;16680:52;16767:9;16754:23;16817:10;16810:5;16806:22;16799:5;16796:33;16786:61;;16843:1;16840;16833:12;16882:523;16968:6;16976;16984;17037:2;17025:9;17016:7;17012:23;17008:32;17005:52;;;17053:1;17050;17043:12;17005:52;17092:9;17079:23;17111:31;17136:5;17111:31;:::i;:::-;17161:5;-1:-1:-1;17213:2:118;17198:18;;17185:32;;-1:-1:-1;17268:2:118;17253:18;;17240:32;-1:-1:-1;;;;;17284:30:118;;17281:50;;;17327:1;17324;17317:12;17281:50;17350:49;17391:7;17382:6;17371:9;17367:22;17350:49;:::i;:::-;17340:59;;;16882:523;;;;;:::o;17410:665::-;17505:6;17513;17521;17529;17582:3;17570:9;17561:7;17557:23;17553:33;17550:53;;;17599:1;17596;17589:12;17550:53;17638:9;17625:23;17657:31;17682:5;17657:31;:::i;:::-;17707:5;-1:-1:-1;17764:2:118;17749:18;;17736:32;17777:33;17736:32;17777:33;:::i;:::-;17829:7;-1:-1:-1;17883:2:118;17868:18;;17855:32;;-1:-1:-1;17938:2:118;17923:18;;17910:32;-1:-1:-1;;;;;17954:30:118;;17951:50;;;17997:1;17994;17987:12;17951:50;18020:49;18061:7;18052:6;18041:9;18037:22;18020:49;:::i;:::-;18010:59;;;17410:665;;;;;;;:::o;18399:388::-;18467:6;18475;18528:2;18516:9;18507:7;18503:23;18499:32;18496:52;;;18544:1;18541;18534:12;18496:52;18583:9;18570:23;18602:31;18627:5;18602:31;:::i;:::-;18652:5;-1:-1:-1;18709:2:118;18694:18;;18681:32;18722:33;18681:32;18722:33;:::i;:::-;18774:7;18764:17;;;18399:388;;;;;:::o;19351:923::-;19459:6;19467;19475;19483;19491;19499;19552:3;19540:9;19531:7;19527:23;19523:33;19520:53;;;19569:1;19566;19559:12;19520:53;19608:9;19595:23;19627:31;19652:5;19627:31;:::i;:::-;19677:5;-1:-1:-1;19729:2:118;19714:18;;19701:32;;-1:-1:-1;19784:2:118;19769:18;;19756:32;-1:-1:-1;;;;;19837:14:118;;;19834:34;;;19864:1;19861;19854:12;20279:478;20358:6;20366;20374;20427:2;20415:9;20406:7;20402:23;20398:32;20395:52;;;20443:1;20440;20433:12;20395:52;20466:23;;;-1:-1:-1;20540:2:118;20525:18;;20512:32;-1:-1:-1;;;;;20556:30:118;;20553:50;;;20599:1;20596;20589:12;20553:50;20638:59;20689:7;20680:6;20669:9;20665:22;20638:59;:::i;20762:380::-;20841:1;20837:12;;;;20884;;;20905:61;;20959:4;20951:6;20947:17;20937:27;;20905:61;21012:2;21004:6;21001:14;20981:18;20978:38;20975:161;;21058:10;21053:3;21049:20;21046:1;21039:31;21093:4;21090:1;21083:15;21121:4;21118:1;21111:15;21147:267;21236:6;21231:3;21224:19;21288:6;21281:5;21274:4;21269:3;21265:14;21252:43;-1:-1:-1;21340:1:118;21315:16;;;21333:4;21311:27;;;21304:38;;;;21396:2;21375:15;;;-1:-1:-1;;21371:29:118;21362:39;;;21358:50;;21147:267::o;21419:640::-;-1:-1:-1;;;;;21714:32:118;;21696:51;;21795:4;21783:17;;21778:2;21763:18;;21756:45;21837:3;21832:2;21817:18;;21810:31;;;-1:-1:-1;;21864:63:118;;21907:19;;21899:6;21891;21864:63;:::i;:::-;21975:9;21967:6;21963:22;21958:2;21947:9;21943:18;21936:50;22003;22046:6;22038;22030;22003:50;:::i;:::-;21995:58;21419:640;-1:-1:-1;;;;;;;;;21419:640:118:o;22064:435::-;22345:1;22341;22336:3;22332:11;22328:19;22320:6;22316:32;22305:9;22298:51;22385:6;22380:2;22369:9;22365:18;22358:34;22428:2;22423;22412:9;22408:18;22401:30;22279:4;22448:45;22489:2;22478:9;22474:18;22466:6;22448:45;:::i;22504:613::-;22790:3;22772:22;;;22831:2;22810:19;;;22803:31;-1:-1:-1;;;22865:3:118;22850:19;;22843:45;-1:-1:-1;;;;;23000:15:118;;;22993:4;22978:20;;22971:45;23052:15;;;;23047:2;23032:18;;23025:43;-1:-1:-1;23084:18:118;;23077:34;;;;22920:3;22905:19;;22504:613::o;23122:509::-;23380:2;23362:21;;;23419:2;23399:18;;;23392:30;-1:-1:-1;;;23453:3:118;23438:19;;23431:44;-1:-1:-1;;;;;23549:32:118;;;;23542:4;23527:20;;23520:62;-1:-1:-1;23598:18:118;;23591:34;23507:3;23492:19;;23122:509::o;23636:514::-;23835:25;;;23896:2;23891;23876:18;;23869:30;;;23915:18;;23908:34;;;-1:-1:-1;;;;;;23954:31:118;;23951:51;;;23998:1;23995;23988:12;23951:51;24032:6;24029:1;24025:14;24089:6;24081;24076:2;24065:9;24061:18;24048:48;24117:22;;;;24141:2;24113:31;;23636:514;-1:-1:-1;;;;23636:514:118:o;24388:245::-;24455:6;24508:2;24496:9;24487:7;24483:23;24479:32;24476:52;;;24524:1;24521;24514:12;24476:52;24556:9;24550:16;24575:28;24597:5;24575:28;:::i;24638:127::-;24699:10;24694:3;24690:20;24687:1;24680:31;24730:4;24727:1;24720:15;24754:4;24751:1;24744:15;24770:136;24805:3;-1:-1:-1;;;24826:22:118;;24823:48;;24851:18;;:::i;:::-;-1:-1:-1;24891:1:118;24887:13;;24770:136::o;24911:127::-;24972:10;24967:3;24963:20;24960:1;24953:31;25003:4;25000:1;24993:15;25027:4;25024:1;25017:15;25043:216;25107:9;;;25135:11;;;25082:3;25165:9;;25193:10;;25189:19;;25218:10;;25210:19;;25186:44;25183:70;;;25233:18;;:::i;:::-;25183:70;;25043:216;;;;:::o;25264:200::-;25330:9;;;25303:4;25358:9;;25386:10;;25398:12;;;25382:29;25421:12;;;25413:21;;25379:56;25376:82;;;25438:18;;:::i;25469:529::-;25726:6;25715:9;25708:25;25798:1;25794;25789:3;25785:11;25781:19;25773:6;25769:32;25764:2;25753:9;25749:18;25742:60;25838:6;25833:2;25822:9;25818:18;25811:34;25881:6;25876:2;25865:9;25861:18;25854:34;25925:3;25919;25908:9;25904:19;25897:32;25689:4;25946:46;25987:3;25976:9;25972:19;25964:6;25946:46;:::i;26003:135::-;26042:3;26063:17;;;26060:43;;26083:18;;:::i;:::-;-1:-1:-1;26130:1:118;26119:13;;26003:135::o;26143:127::-;26204:10;26199:3;26195:20;26192:1;26185:31;26235:4;26232:1;26225:15;26259:4;26256:1;26249:15;26275:184;26345:6;26398:2;26386:9;26377:7;26373:23;26369:32;26366:52;;;26414:1;26411;26404:12;26366:52;-1:-1:-1;26437:16:118;;26275:184;-1:-1:-1;26275:184:118:o;26464:1036::-;26584:6;26615:2;26658;26646:9;26637:7;26633:23;26629:32;26626:52;;;26674:1;26671;26664:12;26626:52;26701:16;;-1:-1:-1;;;;;26766:14:118;;;26763:34;;;26793:1;26790;26783:12;26763:34;26831:6;26820:9;26816:22;26806:32;;26876:7;26869:4;26865:2;26861:13;26857:27;26847:55;;26898:1;26895;26888:12;26847:55;26927:2;26921:9;26949:2;26945;26942:10;26939:36;;;26955:18;;:::i;:::-;27001:2;26998:1;26994:10;26984:20;;27024:28;27048:2;27044;27040:11;27024:28;:::i;:::-;27086:15;;;27156:11;;;27152:20;;;27117:12;;;;27184:19;;;27181:39;;;27216:1;27213;27206:12;27181:39;27240:11;;;;27260:210;27276:6;27271:3;27268:15;27260:210;;;27349:3;27343:10;27330:23;;27366:31;27391:5;27366:31;:::i;:::-;27410:18;;;27293:12;;;;27448;;;;27260:210;;;27489:5;26464:1036;-1:-1:-1;;;;;;;;26464:1036:118:o;27505:125::-;27570:9;;;27591:10;;;27588:36;;;27604:18;;:::i;28472:545::-;28574:2;28569:3;28566:11;28563:448;;;28610:1;28635:5;28631:2;28624:17;28680:4;28676:2;28666:19;28750:2;28738:10;28734:19;28731:1;28727:27;28721:4;28717:38;28786:4;28774:10;28771:20;28768:47;;;-1:-1:-1;28809:4:118;28768:47;28864:2;28859:3;28855:12;28852:1;28848:20;28842:4;28838:31;28828:41;;28919:82;28937:2;28930:5;28927:13;28919:82;;;28982:17;;;28963:1;28952:13;28919:82;;;28923:3;;;28472:545;;;:::o;29193:1206::-;-1:-1:-1;;;;;29309:27:118;;29306:53;;;29339:18;;:::i;:::-;29368:94;29458:3;29418:38;29450:4;29444:11;29418:38;:::i;:::-;29412:4;29368:94;:::i;:::-;29488:1;29513:2;29508:3;29505:11;29530:1;29525:616;;;;30185:1;30202:3;30199:93;;;-1:-1:-1;30258:19:118;;;30245:33;30199:93;-1:-1:-1;;29150:1:118;29146:11;;;29142:24;29138:29;29128:40;29174:1;29170:11;;;29125:57;30305:78;;29498:895;;29525:616;28419:1;28412:14;;;28456:4;28443:18;;-1:-1:-1;;29561:17:118;;;29662:9;29684:229;29698:7;29695:1;29692:14;29684:229;;;29787:19;;;29774:33;29759:49;;29894:4;29879:20;;;;29847:1;29835:14;;;;29714:12;29684:229;;;29688:3;29941;29932:7;29929:16;29926:159;;;30065:1;30061:6;30055:3;30049;30046:1;30042:11;30038:21;30034:34;30030:39;30017:9;30012:3;30008:19;29995:33;29991:79;29983:6;29976:95;29926:159;;;30128:1;30122:3;30119:1;30115:11;30111:19;30105:4;30098:33;29498:895;;29193:1206;;;:::o;30594:128::-;30661:9;;;30682:11;;;30679:37;;;30696:18;;:::i;30727:201::-;30765:3;30793:10;30838:2;30831:5;30827:14;30865:2;30856:7;30853:15;30850:41;;30871:18;;:::i;:::-;30920:1;30907:15;;30727:201;-1:-1:-1;;;30727:201:118:o;30933:148::-;31021:4;31000:12;;;31014;;;30996:31;;31039:13;;31036:39;;;31055:18;;:::i;31086:127::-;31147:10;31142:3;31138:20;31135:1;31128:31;31178:4;31175:1;31168:15;31202:4;31199:1;31192:15;31218:120;31258:1;31284;31274:35;;31289:18;;:::i;:::-;-1:-1:-1;31323:9:118;;31218:120::o;31343:216::-;31442:2;31431:17;;;31412;;;;31408:41;-1:-1:-1;;;;;;31464:34:118;;-1:-1:-1;;;;;31500:29:118;;31461:69;31458:95;;;31533:18;;:::i;31564:240::-;31602:7;31681:1;31677:2;31666:17;31662:1;31658:2;31647:17;31643:41;31719:11;31715:2;31704:27;31693:38;;31762:11;31753:7;31750:24;31740:58;;31778:18;;:::i;31809:288::-;31847:1;31889;31885:2;31874:17;31926:1;31922:2;31911:17;31947:3;31937:37;;31954:18;;:::i;:::-;-1:-1:-1;;;;;;31990:32:118;;-1:-1:-1;;32024:15:118;;31986:54;31983:80;;;32043:18;;:::i;:::-;32077:14;;;31809:288;-1:-1:-1;;;31809:288:118:o;32102:212::-;32199:2;32169:17;;;32188;;;;32165:41;-1:-1:-1;;;;;32221:28:118;;-1:-1:-1;;;;;;32251:33:118;;32218:67;32215:93;;;32288:18;;:::i;33698:400::-;-1:-1:-1;;;;;33981:15:118;;;33963:34;;34033:15;;;;34028:2;34013:18;;34006:43;34080:2;34065:18;;34058:34;;;;33913:2;33898:18;;33698:400::o;34103:305::-;34190:6;34198;34206;34259:2;34247:9;34238:7;34234:23;34230:32;34227:52;;;34275:1;34272;34265:12;34227:52;34304:9;34298:16;34288:26;;34354:2;34343:9;34339:18;34333:25;34323:35;;34398:2;34387:9;34383:18;34377:25;34367:35;;34103:305;;;;;:::o;34413:282::-;34514:6;34567:2;34555:9;34546:7;34542:23;34538:32;34535:52;;;34583:1;34580;34573:12;34535:52;34615:9;34609:16;34634:31;34659:5;34634:31;:::i;35791:375::-;-1:-1:-1;;;;;36049:15:118;;;36031:34;;36096:2;36081:18;;36074:34;;;;36144:15;;;36139:2;36124:18;;36117:43;35981:2;35966:18;;35791:375::o;38169:450::-;38390:6;38379:9;38372:25;38433:2;38428;38417:9;38413:18;38406:30;38353:4;38459:45;38500:2;38489:9;38485:18;38477:6;38459:45;:::i;:::-;38552:9;38544:6;38540:22;38535:2;38524:9;38520:18;38513:50;38580:33;38606:6;38598;38580:33;:::i;39035:151::-;39125:4;39118:12;;;39104;;;39100:31;;39143:14;;39140:40;;;39160:18;;:::i;39191:422::-;39280:1;39323:5;39280:1;39337:270;39358:7;39348:8;39345:21;39337:270;;;39417:4;39413:1;39409:6;39405:17;39399:4;39396:27;39393:53;;;39426:18;;:::i;:::-;39476:7;39466:8;39462:22;39459:55;;;39496:16;;;;39459:55;39575:22;;;;39535:15;;;;39337:270;;;39341:3;39191:422;;;;;:::o;39618:806::-;39667:5;39697:8;39687:80;;-1:-1:-1;39738:1:118;39752:5;;39687:80;39786:4;39776:76;;-1:-1:-1;39823:1:118;39837:5;;39776:76;39868:4;39886:1;39881:59;;;;39954:1;39949:130;;;;39861:218;;39881:59;39911:1;39902:10;;39925:5;;;39949:130;39986:3;39976:8;39973:17;39970:43;;;39993:18;;:::i;:::-;-1:-1:-1;;40049:1:118;40035:16;;40064:5;;39861:218;;40163:2;40153:8;40150:16;40144:3;40138:4;40135:13;40131:36;40125:2;40115:8;40112:16;40107:2;40101:4;40098:12;40094:35;40091:77;40088:159;;;-1:-1:-1;40200:19:118;;;40232:5;;40088:159;40279:34;40304:8;40298:4;40279:34;:::i;:::-;40349:6;40345:1;40341:6;40337:19;40328:7;40325:32;40322:58;;;40360:18;;:::i;:::-;40398:20;;39618:806;-1:-1:-1;;;39618:806:118:o;40429:140::-;40487:5;40516:47;40557:4;40547:8;40543:19;40537:4;40516:47;:::i;40574:168::-;40647:9;;;40678;;40695:15;;;40689:22;;40675:37;40665:71;;40716:18;;:::i;40747:274::-;-1:-1:-1;;;;;40939:32:118;;;;40921:51;;41003:2;40988:18;;40981:34;40909:2;40894:18;;40747:274::o;41816:462::-;41911:6;41919;41927;41935;41988:3;41976:9;41967:7;41963:23;41959:33;41956:53;;;42005:1;42002;41995:12;41956:53;42034:9;42028:16;42018:26;;42087:2;42076:9;42072:18;42066:25;42135:5;42131:2;42120:21;42113:5;42110:32;42100:60;;42156:1;42153;42146:12;42100:60;42224:2;42209:18;;42203:25;42268:2;42253:18;;;42247:25;41816:462;;42179:5;;-1:-1:-1;41816:462:118;-1:-1:-1;;;41816:462:118:o;42562:732::-;-1:-1:-1;;;;;42905:15:118;;;42887:34;;42957:15;;;42952:2;42937:18;;42930:43;43009:15;;43004:2;42989:18;;42982:43;43056:2;43041:18;;43034:34;;;43105:3;43099;43084:19;;43077:32;;;42830:4;;43132:46;;43158:19;;43150:6;43132:46;:::i;:::-;43227:9;43219:6;43215:22;43209:3;43198:9;43194:19;43187:51;43255:33;43281:6;43273;43255:33;:::i;43299:522::-;-1:-1:-1;;;;;43585:15:118;;;43567:34;;43637:15;;43632:2;43617:18;;43610:43;43700:2;43689:22;;;43684:2;43669:18;;43662:50;43748:3;43743:2;43728:18;;43721:31;;;43510:4;;43769:46;;43795:19;;43787:6;43769:46;:::i;43826:510::-;-1:-1:-1;;;;;44081:32:118;;44063:51;;44150:2;44145;44130:18;;44123:30;;;-1:-1:-1;;44176:45:118;;44202:18;;44194:6;44176:45;:::i;44341:647::-;44420:6;44473:2;44461:9;44452:7;44448:23;44444:32;44441:52;;;44489:1;44486;44479:12;44441:52;44516:16;;-1:-1:-1;;;;;44544:30:118;;44541:50;;;44587:1;44584;44577:12;44541:50;44610:22;;44663:4;44655:13;;44651:27;-1:-1:-1;44641:55:118;;44692:1;44689;44682:12;44641:55;44721:2;44715:9;44746:48;44762:31;44790:2;44762:31;:::i;44746:48::-;44817:2;44810:5;44803:17;44857:7;44852:2;44847;44843;44839:11;44835:20;44832:33;44829:53;;;44878:1;44875;44868:12;44829:53;44891:67;44955:2;44950;44943:5;44939:14;44934:2;44930;44926:11;44891:67;:::i;46092:287::-;46221:3;46259:6;46253:13;46275:66;46334:6;46329:3;46322:4;46314:6;46310:17;46275:66;:::i;:::-;46357:16;;;;;46092:287;-1:-1:-1;;46092:287:118:o",
    "linkReferences": {},
    "immutableReferences": {
      "76138": [
        {
          "start": 1237,
          "length": 32
        },
        {
          "start": 4367,
          "length": 32
        },
        {
          "start": 4480,
          "length": 32
        },
        {
          "start": 5374,
          "length": 32
        },
        {
          "start": 5657,
          "length": 32
        },
        {
          "start": 5864,
          "length": 32
        },
        {
          "start": 6478,
          "length": 32
        },
        {
          "start": 6848,
          "length": 32
        },
        {
          "start": 8649,
          "length": 32
        },
        {
          "start": 10023,
          "length": 32
        },
        {
          "start": 10225,
          "length": 32
        },
        {
          "start": 10377,
          "length": 32
        },
        {
          "start": 10481,
          "length": 32
        },
        {
          "start": 10619,
          "length": 32
        },
        {
          "start": 12797,
          "length": 32
        },
        {
          "start": 12964,
          "length": 32
        },
        {
          "start": 17525,
          "length": 32
        },
        {
          "start": 18100,
          "length": 32
        }
      ],
      "87768": [
        {
          "start": 3080,
          "length": 32
        }
      ],
      "87771": [
        {
          "start": 1802,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "castrate()": "9903ad38",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getCodeAddress()": "50d75d25",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "initialize(string,string,address)": "077f224a",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "updateCode(address)": "46951954",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALREADY_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL_REACHED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_COIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege[5]\",\"name\":\"sponsors\",\"type\":\"tuple[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"initialize(string,string,address)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"},\"withdraw(address,uint256)\":{\"details\":\"ISuperfluidClub.withdraw implementation\"}},\"stateVariables\":{\"owner\":{\"details\":\"Returns the address of the current owner.\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"events\":{\"PROTEGE_UPDATED(address,address,uint8,uint32,uint32)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"MAX_SPONSORSHIP_LEVEL()\":{\"notice\":\"Constants\"},\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x802d0563bfd177d8d400884f66b3181907fbea47fec7ee0063f6289682bf37f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ea1c0e2df5e447dfb1501a30beb28eebd740430f7f7e38da757c1f8fba215e6\",\"dweb:/ipfs/QmXfH1vZ8kmuTqxdqxkx8pQHrBdwYARv6174bxR1Q9BAjp\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0xb9ca417bd3984a68d33ddedd5a9f7f42f4f8bdaa1eee22185f98bea3e40bbbcd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3eb2434f64c2875942cb948e7da783b848e13c37b916bb58fc07984c315536e7\",\"dweb:/ipfs/QmbYDPJVZHF6YaUYaUdz5cZEbTbPqsjdvGFSRcKwF1945V\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9\",\"dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MAX_SPONSORSHIP_LEVEL_REACHED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_COIN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege[5]",
              "name": "sponsors",
              "type": "tuple[5]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "initialize(string,string,address)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          },
          "withdraw(address,uint256)": {
            "details": "ISuperfluidClub.withdraw implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_SPONSORSHIP_LEVEL()": {
            "notice": "Constants"
          },
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x802d0563bfd177d8d400884f66b3181907fbea47fec7ee0063f6289682bf37f1",
        "urls": [
          "bzz-raw://8ea1c0e2df5e447dfb1501a30beb28eebd740430f7f7e38da757c1f8fba215e6",
          "dweb:/ipfs/QmXfH1vZ8kmuTqxdqxkx8pQHrBdwYARv6174bxR1Q9BAjp"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0xb9ca417bd3984a68d33ddedd5a9f7f42f4f8bdaa1eee22185f98bea3e40bbbcd",
        "urls": [
          "bzz-raw://3eb2434f64c2875942cb948e7da783b848e13c37b916bb58fc07984c315536e7",
          "dweb:/ipfs/QmbYDPJVZHF6YaUYaUdz5cZEbTbPqsjdvGFSRcKwF1945V"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf",
        "urls": [
          "bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9",
          "dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 87578,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        66063
      ],
      "IConstantOutflowNFT": [
        66117
      ],
      "IERC20": [
        44429
      ],
      "ISuperToken": [
        66806
      ],
      "ISuperfluid": [
        67479
      ],
      "ISuperfluidClub": [
        87716
      ],
      "SuperToken": [
        89480
      ],
      "SuperTokenV1Library": [
        63379
      ],
      "SuperfluidClub": [
        87577
      ],
      "UUPSProxiable": [
        77340
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:7941:113",
    "nodes": [
      {
        "id": 86895,
        "nodeType": "PragmaDirective",
        "src": "32:24:113",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 86897,
        "nodeType": "ImportDirective",
        "src": "58:114:113",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87578,
        "sourceUnit": 63380,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86896,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63379,
              "src": "66:19:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86903,
        "nodeType": "ImportDirective",
        "src": "173:117:113",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87578,
        "sourceUnit": 89481,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86898,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89480,
              "src": "181:10:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86899,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67479,
              "src": "193:11:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86900,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66117,
              "src": "206:19:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86901,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66063,
              "src": "227:18:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86902,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44429,
              "src": "247:6:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86906,
        "nodeType": "ImportDirective",
        "src": "291:78:113",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87578,
        "sourceUnit": 87717,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86904,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87716,
              "src": "299:15:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86905,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66806,
              "src": "316:11:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86908,
        "nodeType": "ImportDirective",
        "src": "370:111:113",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87578,
        "sourceUnit": 77341,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86907,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77340,
              "src": "378:13:113",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87577,
        "nodeType": "ContractDefinition",
        "src": "589:7383:113",
        "nodes": [
          {
            "id": 86919,
            "nodeType": "UsingForDirective",
            "src": "665:42:113",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86916,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "671:19:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63379,
              "src": "671:19:113"
            },
            "typeName": {
              "id": 86918,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86917,
                "name": "ISuperToken",
                "nameLocations": [
                  "695:11:113"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66806,
                "src": "695:11:113"
              },
              "referencedDeclaration": 66806,
              "src": "695:11:113",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$66806",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 86921,
            "nodeType": "ErrorDefinition",
            "src": "713:18:113",
            "nodes": [],
            "errorSelector": "71d78b12",
            "name": "NOT_OWNER",
            "nameLocation": "719:9:113",
            "parameters": {
              "id": 86920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:2:113"
            }
          },
          {
            "id": 86923,
            "nodeType": "ErrorDefinition",
            "src": "736:20:113",
            "nodes": [],
            "errorSelector": "0733d548",
            "name": "NOT_PROTEGE",
            "nameLocation": "742:11:113",
            "parameters": {
              "id": 86922,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:2:113"
            }
          },
          {
            "id": 86925,
            "nodeType": "ErrorDefinition",
            "src": "761:24:113",
            "nodes": [],
            "errorSelector": "19c00a85",
            "name": "ALREADY_PROTEGE",
            "nameLocation": "767:15:113",
            "parameters": {
              "id": 86924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:2:113"
            }
          },
          {
            "id": 86927,
            "nodeType": "ErrorDefinition",
            "src": "790:38:113",
            "nodes": [],
            "errorSelector": "a2c3d1a5",
            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
            "nameLocation": "796:29:113",
            "parameters": {
              "id": 86926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "825:2:113"
            }
          },
          {
            "id": 86929,
            "nodeType": "ErrorDefinition",
            "src": "833:24:113",
            "nodes": [],
            "errorSelector": "1133bf0d",
            "name": "NOT_ENOUGH_COIN",
            "nameLocation": "839:15:113",
            "parameters": {
              "id": 86928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "854:2:113"
            }
          },
          {
            "id": 86942,
            "nodeType": "ModifierDefinition",
            "src": "863:116:113",
            "nodes": [],
            "body": {
              "id": 86941,
              "nodeType": "Block",
              "src": "884:95:113",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86931,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "898:3:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "902:6:113",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "898:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 86933,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86950,
                      "src": "912:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "898:19:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86939,
                  "nodeType": "IfStatement",
                  "src": "894:68:113",
                  "trueBody": {
                    "id": 86938,
                    "nodeType": "Block",
                    "src": "919:43:113",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86935,
                            "name": "NOT_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86921,
                            "src": "940:9:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "940:11:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86937,
                        "nodeType": "RevertStatement",
                        "src": "933:18:113"
                      }
                    ]
                  }
                },
                {
                  "id": 86940,
                  "nodeType": "PlaceholderStatement",
                  "src": "971:1:113"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "872:9:113",
            "parameters": {
              "id": 86930,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:113"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86945,
            "nodeType": "VariableDeclaration",
            "src": "1002:49:113",
            "nodes": [],
            "baseFunctions": [
              87620
            ],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "1026:21:113",
            "scope": 87577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86943,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1002:7:113",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 86944,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1050:1:113",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "id": 86948,
            "nodeType": "VariableDeclaration",
            "src": "1057:64:113",
            "nodes": [],
            "baseFunctions": [
              87625
            ],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "1081:28:113",
            "scope": 87577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86946,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1057:7:113",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 86947,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1112:9:113",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 86950,
            "nodeType": "VariableDeclaration",
            "src": "1151:21:113",
            "nodes": [],
            "baseFunctions": [
              87715
            ],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1167:5:113",
            "scope": 87577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 86949,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1151:7:113",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 86955,
            "nodeType": "VariableDeclaration",
            "src": "1178:61:113",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "proteges",
            "nameLocation": "1231:8:113",
            "scope": 87577,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
              "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 86954,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 86951,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1186:7:113",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1178:43:113",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 86953,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86952,
                  "name": "ISuperfluidClub.Protege",
                  "nameLocations": [
                    "1197:15:113",
                    "1213:7:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87636,
                  "src": "1197:23:113"
                },
                "referencedDeclaration": 87636,
                "src": "1197:23:113",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                  "typeString": "struct ISuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86961,
            "nodeType": "EventDefinition",
            "src": "1246:84:113",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "name": "OwnershipTransferred",
            "nameLocation": "1252:20:113",
            "parameters": {
              "id": 86960,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86957,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1289:13:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86961,
                  "src": "1273:29:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86959,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1320:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86961,
                  "src": "1304:24:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1304:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:57:113"
            }
          },
          {
            "id": 86979,
            "nodeType": "FunctionDefinition",
            "src": "1336:178:113",
            "nodes": [],
            "body": {
              "id": 86978,
              "nodeType": "Block",
              "src": "1512:2:113",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86973,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86964,
                    "src": "1463:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67479",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 86974,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86967,
                    "src": "1469:18:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66117",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 86975,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86970,
                    "src": "1489:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66063",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 86976,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86972,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1452:10:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89480,
                  "src": "1452:10:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "1452:55:113"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86964,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1360:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86979,
                  "src": "1348:16:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67479",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 86963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86962,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1348:11:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67479,
                      "src": "1348:11:113"
                    },
                    "referencedDeclaration": 67479,
                    "src": "1348:11:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67479",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86967,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1386:18:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86979,
                  "src": "1366:38:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66117",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 86966,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86965,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1366:19:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66117,
                      "src": "1366:19:113"
                    },
                    "referencedDeclaration": 66117,
                    "src": "1366:19:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66117",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86970,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1425:17:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 86979,
                  "src": "1406:36:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66063",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 86969,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86968,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1406:18:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66063,
                      "src": "1406:18:113"
                    },
                    "referencedDeclaration": 66063,
                    "src": "1406:18:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66063",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:96:113"
            },
            "returnParameters": {
              "id": 86977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1512:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87028,
            "nodeType": "FunctionDefinition",
            "src": "1575:304:113",
            "nodes": [],
            "body": {
              "id": 87027,
              "nodeType": "Block",
              "src": "1675:204:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 86992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86990,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86950,
                      "src": "1685:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 86991,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86986,
                      "src": "1693:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1685:16:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86993,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:16:113"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86994,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1711:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1716:8:113",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77274,
                      "src": "1711:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 86997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:15:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86998,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:15:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 87005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1767:1:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 87004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1759:7:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87003,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1759:7:113",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1759:10:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87002,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44429,
                          "src": "1752:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44429_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 87007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1752:18:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44429",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 87008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1772:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 87009,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86982,
                        "src": "1775:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 87010,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86984,
                        "src": "1781:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$44429",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 86999,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1736:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1741:10:113",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87921,
                      "src": "1736:15:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$44429_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 87011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:52:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87012,
                  "nodeType": "ExpressionStatement",
                  "src": "1736:52:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87018,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1820:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1812:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87016,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1812:7:113",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1812:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 87020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1827:30:113",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1869:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1859:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87021,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1863:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1859:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87013,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1798:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1803:8:113",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88847,
                      "src": "1798:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:74:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87026,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:74:113"
                }
              ]
            },
            "baseFunctions": [
              87706
            ],
            "documentation": {
              "id": 86980,
              "nodeType": "StructuredDocumentation",
              "src": "1520:50:113",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1584:10:113",
            "overrides": {
              "id": 86988,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1666:8:113"
            },
            "parameters": {
              "id": 86987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86982,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1611:4:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87028,
                  "src": "1595:20:113",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86981,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1595:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86984,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1633:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87028,
                  "src": "1617:22:113",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86983,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86986,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1649:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87028,
                  "src": "1641:16:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1641:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:64:113"
            },
            "returnParameters": {
              "id": 86989,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1675:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87048,
            "nodeType": "FunctionDefinition",
            "src": "1939:135:113",
            "nodes": [],
            "body": {
              "id": 87047,
              "nodeType": "Block",
              "src": "2011:63:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87037,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86955,
                          "src": "2028:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87039,
                        "indexExpression": {
                          "id": 87038,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87031,
                          "src": "2037:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2028:17:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87636_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87040,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2046:7:113",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87627,
                      "src": "2028:25:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2065:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2057:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87041,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:7:113",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2057:10:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2028:39:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87036,
                  "id": 87046,
                  "nodeType": "Return",
                  "src": "2021:46:113"
                }
              ]
            },
            "baseFunctions": [
              87653
            ],
            "documentation": {
              "id": 87029,
              "nodeType": "StructuredDocumentation",
              "src": "1885:49:113",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "1948:9:113",
            "overrides": {
              "id": 87033,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1987:8:113"
            },
            "parameters": {
              "id": 87032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87031,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "1966:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87048,
                  "src": "1958:15:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1958:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1957:17:113"
            },
            "returnParameters": {
              "id": 87036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87048,
                  "src": "2005:4:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87034,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:4:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2004:6:113"
            },
            "scope": 87577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87063,
            "nodeType": "FunctionDefinition",
            "src": "2120:142:113",
            "nodes": [],
            "body": {
              "id": 87062,
              "nodeType": "Block",
              "src": "2221:41:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 87058,
                      "name": "proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86955,
                      "src": "2238:8:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                        "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 87060,
                    "indexExpression": {
                      "id": 87059,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87051,
                      "src": "2247:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2238:17:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87636_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 87057,
                  "id": 87061,
                  "nodeType": "Return",
                  "src": "2231:24:113"
                }
              ]
            },
            "baseFunctions": [
              87645
            ],
            "documentation": {
              "id": 87049,
              "nodeType": "StructuredDocumentation",
              "src": "2080:35:113",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "2129:10:113",
            "overrides": {
              "id": 87053,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2171:8:113"
            },
            "parameters": {
              "id": 87052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87051,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2148:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87063,
                  "src": "2140:15:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87050,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2139:17:113"
            },
            "returnParameters": {
              "id": 87057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87056,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87063,
                  "src": "2189:30:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$87636_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 87055,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87054,
                      "name": "ISuperfluidClub.Protege",
                      "nameLocations": [
                        "2189:15:113",
                        "2205:7:113"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87636,
                      "src": "2189:23:113"
                    },
                    "referencedDeclaration": 87636,
                    "src": "2189:23:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:32:113"
            },
            "scope": 87577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87101,
            "nodeType": "FunctionDefinition",
            "src": "2331:328:113",
            "nodes": [],
            "body": {
              "id": 87100,
              "nodeType": "Block",
              "src": "2488:171:113",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87076,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2506:1:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87100,
                      "src": "2498:9:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2498:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87077,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2498:9:113"
                },
                {
                  "body": {
                    "id": 87098,
                    "nodeType": "Block",
                    "src": "2544:109:113",
                    "statements": [
                      {
                        "expression": {
                          "id": 87089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 87081,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87073,
                              "src": "2558:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$87636_memory_ptr_$5_memory_ptr",
                                "typeString": "struct ISuperfluidClub.Protege memory[5] memory"
                              }
                            },
                            "id": 87084,
                            "indexExpression": {
                              "id": 87083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2567:3:113",
                              "subExpression": {
                                "id": 87082,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87076,
                                "src": "2567:1:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2558:13:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87636_memory_ptr",
                              "typeString": "struct ISuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "baseExpression": {
                                  "id": 87085,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86955,
                                  "src": "2575:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87087,
                                "indexExpression": {
                                  "id": 87086,
                                  "name": "protege",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87066,
                                  "src": "2584:7:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2575:17:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              }
                            ],
                            "id": 87088,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2574:19:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87636_storage",
                              "typeString": "struct ISuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2558:35:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87636_memory_ptr",
                            "typeString": "struct ISuperfluidClub.Protege memory"
                          }
                        },
                        "id": 87090,
                        "nodeType": "ExpressionStatement",
                        "src": "2558:35:113"
                      },
                      {
                        "expression": {
                          "id": 87096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87091,
                            "name": "protege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87066,
                            "src": "2607:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 87092,
                                "name": "proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86955,
                                "src": "2617:8:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87094,
                              "indexExpression": {
                                "id": 87093,
                                "name": "protege",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87066,
                                "src": "2626:7:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2617:17:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87095,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2635:7:113",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87627,
                            "src": "2617:25:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2607:35:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87097,
                        "nodeType": "ExpressionStatement",
                        "src": "2607:35:113"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87079,
                        "name": "protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87066,
                        "src": "2534:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87078,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87048,
                      "src": "2524:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2524:18:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87099,
                  "nodeType": "WhileStatement",
                  "src": "2517:136:113"
                }
              ]
            },
            "baseFunctions": [
              87664
            ],
            "documentation": {
              "id": 87064,
              "nodeType": "StructuredDocumentation",
              "src": "2268:58:113",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2340:18:113",
            "overrides": {
              "id": 87068,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2414:8:113"
            },
            "parameters": {
              "id": 87067,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87066,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2367:7:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87101,
                  "src": "2359:15:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2359:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2358:17:113"
            },
            "returnParameters": {
              "id": 87074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87073,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2474:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87101,
                  "src": "2440:42:113",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$87636_memory_ptr_$5_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege[5]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87070,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87069,
                        "name": "ISuperfluidClub.Protege",
                        "nameLocations": [
                          "2440:15:113",
                          "2456:7:113"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 87636,
                        "src": "2440:23:113"
                      },
                      "referencedDeclaration": 87636,
                      "src": "2440:23:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                        "typeString": "struct ISuperfluidClub.Protege"
                      }
                    },
                    "id": 87072,
                    "length": {
                      "hexValue": "35",
                      "id": 87071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2464:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2440:26:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$87636_storage_$5_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege[5]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2439:44:113"
            },
            "scope": 87577,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87150,
            "nodeType": "FunctionDefinition",
            "src": "2844:334:113",
            "nodes": [],
            "body": {
              "id": 87149,
              "nodeType": "Block",
              "src": "2918:260:113",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87118,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2979:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2971:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87116,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2971:7:113",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2971:13:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87120,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87104,
                          "src": "2986:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87112,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2952:4:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87111,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2944:7:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87110,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2944:7:113",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:13:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87109,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66806,
                            "src": "2932:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66806_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2932:26:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$66806",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2959:11:113",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61687,
                        "src": "2932:38:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66806_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66806_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2932:63:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87122,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2999:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2932:68:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 87147,
                    "nodeType": "Block",
                    "src": "3090:82:113",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87143,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87104,
                              "src": "3142:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87144,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87106,
                              "src": "3152:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87139,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3124:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87138,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3116:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87137,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3116:7:113",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3116:13:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87136,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66806,
                                "src": "3104:11:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66806_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3104:26:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66806",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3131:10:113",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60292,
                            "src": "3104:37:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66806_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66806_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3104:57:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87146,
                        "nodeType": "ExpressionStatement",
                        "src": "3104:57:113"
                      }
                    ]
                  },
                  "id": 87148,
                  "nodeType": "IfStatement",
                  "src": "2928:244:113",
                  "trueBody": {
                    "id": 87135,
                    "nodeType": "Block",
                    "src": "3002:82:113",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87131,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87104,
                              "src": "3054:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87132,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87106,
                              "src": "3064:8:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87127,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3036:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3028:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87125,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3028:7:113",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3028:13:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87124,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66806,
                                "src": "3016:11:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66806_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87129,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3016:26:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66806",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3043:10:113",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60364,
                            "src": "3016:37:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66806_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66806_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3016:57:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87134,
                        "nodeType": "ExpressionStatement",
                        "src": "3016:57:113"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87102,
              "nodeType": "StructuredDocumentation",
              "src": "2665:174:113",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "2853:21:113",
            "parameters": {
              "id": 87107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87104,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2883:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87150,
                  "src": "2875:16:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87106,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "2899:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87150,
                  "src": "2893:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87105,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2893:5:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2874:34:113"
            },
            "returnParameters": {
              "id": 87108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87406,
            "nodeType": "FunctionDefinition",
            "src": "3236:2916:113",
            "nodes": [],
            "body": {
              "id": 87405,
              "nodeType": "Block",
              "src": "3307:2845:113",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87158,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87153,
                        "src": "3331:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 87157,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87048,
                      "src": "3321:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3321:21:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87164,
                  "nodeType": "IfStatement",
                  "src": "3317:76:113",
                  "trueBody": {
                    "id": 87163,
                    "nodeType": "Block",
                    "src": "3344:49:113",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87160,
                            "name": "ALREADY_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86925,
                            "src": "3365:15:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3365:17:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87162,
                        "nodeType": "RevertStatement",
                        "src": "3358:24:113"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87166,
                    87168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87166,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3463:13:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "3455:21:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87165,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3455:7:113",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87168,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3483:7:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "3478:12:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87167,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3478:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87185,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87169,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3495:3:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3499:6:113",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3495:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 87171,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86950,
                            "src": "3509:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3495:19:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87173,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3494:21:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 87180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3543:3:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3547:6:113",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3543:10:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 87182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3555:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 87183,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3542:19:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 87184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3494:67:113",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 87176,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3527:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3519:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87174,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3519:7:113",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3519:13:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 87178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3534:4:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 87179,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3518:21:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3454:107:113"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3616:25:113",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 87187,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87166,
                            "src": "3627:13:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87186,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87048,
                          "src": "3617:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3617:24:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 87191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3645:8:113",
                      "subExpression": {
                        "id": 87190,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87168,
                        "src": "3646:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3616:37:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87197,
                  "nodeType": "IfStatement",
                  "src": "3612:88:113",
                  "trueBody": {
                    "id": 87196,
                    "nodeType": "Block",
                    "src": "3655:45:113",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87193,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86923,
                            "src": "3676:11:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3676:13:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87195,
                        "nodeType": "RevertStatement",
                        "src": "3669:20:113"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87199,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "3718:10:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "3710:18:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87198,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3710:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87202,
                  "initialValue": {
                    "expression": {
                      "id": 87200,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3731:3:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 87201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3735:5:113",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3731:9:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3710:30:113"
                },
                {
                  "assignments": [
                    87204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87204,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "3758:9:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "3750:17:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3750:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87211,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87206,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86955,
                            "src": "3774:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87208,
                          "indexExpression": {
                            "id": 87207,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87166,
                            "src": "3783:13:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3774:23:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87636_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87209,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3798:23:113",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87633,
                        "src": "3774:47:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 87205,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87488,
                      "src": "3770:3:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 87210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3770:52:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3750:72:113"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87212,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87199,
                      "src": "3836:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 87213,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87204,
                      "src": "3849:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3836:22:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87219,
                  "nodeType": "IfStatement",
                  "src": "3832:77:113",
                  "trueBody": {
                    "id": 87218,
                    "nodeType": "Block",
                    "src": "3860:49:113",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87215,
                            "name": "NOT_ENOUGH_COIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86929,
                            "src": "3881:15:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3881:17:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87217,
                        "nodeType": "RevertStatement",
                        "src": "3874:24:113"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87220,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87199,
                      "src": "3919:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 87221,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87204,
                      "src": "3933:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3919:23:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87223,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:23:113"
                },
                {
                  "assignments": [
                    87225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87225,
                      "mutability": "mutable",
                      "name": "actualSponsorLevel",
                      "nameLocation": "3958:18:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "3952:24:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 87224,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3952:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87230,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87226,
                        "name": "proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86955,
                        "src": "3979:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87228,
                      "indexExpression": {
                        "id": 87227,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87166,
                        "src": "3988:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3979:23:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87636_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87229,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4003:5:113",
                    "memberName": "level",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87629,
                    "src": "3979:29:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3952:56:113"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87231,
                      "name": "actualSponsorLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87225,
                      "src": "4022:18:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 87232,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86945,
                      "src": "4044:21:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4022:43:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87238,
                  "nodeType": "IfStatement",
                  "src": "4018:112:113",
                  "trueBody": {
                    "id": 87237,
                    "nodeType": "Block",
                    "src": "4067:63:113",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87234,
                            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86927,
                            "src": "4088:29:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4088:31:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87236,
                        "nodeType": "RevertStatement",
                        "src": "4081:38:113"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 87246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4204:43:113",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87239,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86955,
                          "src": "4204:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87244,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87242,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4221:4:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4213:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87240,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4213:7:113",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4213:13:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4204:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87636_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87245,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4228:17:113",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87631,
                      "src": "4204:41:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87247,
                  "nodeType": "ExpressionStatement",
                  "src": "4204:43:113"
                },
                {
                  "expression": {
                    "id": 87252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4258:49:113",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87248,
                          "name": "proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86955,
                          "src": "4258:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87250,
                        "indexExpression": {
                          "id": 87249,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87166,
                          "src": "4267:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4258:23:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87636_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87251,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4282:23:113",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87633,
                      "src": "4258:47:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87253,
                  "nodeType": "ExpressionStatement",
                  "src": "4258:49:113"
                },
                {
                  "assignments": [
                    87255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87255,
                      "mutability": "mutable",
                      "name": "level",
                      "nameLocation": "4324:5:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "4318:11:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 87254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4318:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87259,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 87258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87256,
                      "name": "actualSponsorLevel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87225,
                      "src": "4332:18:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 87257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4353:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4332:22:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4318:36:113"
                },
                {
                  "assignments": [
                    87261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87261,
                      "mutability": "mutable",
                      "name": "protegeDesiredFlowRate",
                      "nameLocation": "4370:22:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "4364:28:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 87260,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "4364:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87270,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 87265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 87263,
                                "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86948,
                                "src": "4404:28:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 87264,
                                "name": "level",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87255,
                                "src": "4435:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "4404:36:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 87266,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4403:38:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "3836343030",
                          "id": 87267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4444:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_86400_by_1",
                            "typeString": "int_const 86400"
                          },
                          "value": "86400"
                        },
                        "src": "4403:46:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 87262,
                      "name": "toInt96",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87576,
                      "src": "4395:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                        "typeString": "function (uint256) pure returns (int96)"
                      }
                    },
                    "id": 87269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4395:55:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4364:86:113"
                },
                {
                  "assignments": [
                    87272
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87272,
                      "mutability": "mutable",
                      "name": "distributableAmount",
                      "nameLocation": "4525:19:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "4519:25:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      },
                      "typeName": {
                        "id": 87271,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "4519:5:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87281,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 87276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 87274,
                                "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86948,
                                "src": "4556:28:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "3836343030",
                                "id": 87275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4587:5:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "value": "86400"
                              },
                              "src": "4556:36:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 87277,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4555:38:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87273,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87576,
                        "src": "4547:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 87278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4547:47:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 87279,
                      "name": "protegeDesiredFlowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87261,
                      "src": "4597:22:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "4547:72:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4519:100:113"
                },
                {
                  "expression": {
                    "id": 87292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87282,
                        "name": "proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86955,
                        "src": "4629:8:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87284,
                      "indexExpression": {
                        "id": 87283,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87153,
                        "src": "4638:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4629:20:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87636_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87286,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87166,
                          "src": "4683:13:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87287,
                          "name": "level",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87255,
                          "src": "4717:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 87288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4755:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 87289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4795:1:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "id": 87290,
                          "name": "protegeDesiredFlowRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87261,
                          "src": "4827:22:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 87285,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87636,
                        "src": "4652:7:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$87636_storage_ptr_$",
                          "typeString": "type(struct ISuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 87291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "4674:7:113",
                        "4710:5:113",
                        "4736:17:113",
                        "4770:23:113",
                        "4810:15:113"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4652:208:113",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87636_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege memory"
                      }
                    },
                    "src": "4629:231:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87636_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 87293,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:231:113"
                },
                {
                  "assignments": [
                    87295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87295,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4879:1:113",
                      "nodeType": "VariableDeclaration",
                      "scope": 87405,
                      "src": "4871:9:113",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87294,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4871:7:113",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87297,
                  "initialValue": {
                    "id": 87296,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87166,
                    "src": "4883:13:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4871:25:113"
                },
                {
                  "body": {
                    "id": 87378,
                    "nodeType": "Block",
                    "src": "4927:936:113",
                    "statements": [
                      {
                        "assignments": [
                          87303
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87303,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4990:16:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 87378,
                            "src": "4974:32:113",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                              "typeString": "struct ISuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87302,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87301,
                                "name": "Protege",
                                "nameLocations": [
                                  "4974:7:113"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 87636,
                                "src": "4974:7:113"
                              },
                              "referencedDeclaration": 87636,
                              "src": "4974:7:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87307,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87304,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86955,
                            "src": "5009:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87306,
                          "indexExpression": {
                            "id": 87305,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87295,
                            "src": "5018:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5009:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87636_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4974:46:113"
                      },
                      {
                        "expression": {
                          "id": 87311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5034:36:113",
                          "subExpression": {
                            "expression": {
                              "id": 87308,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87303,
                              "src": "5034:16:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87310,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5051:17:113",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87631,
                            "src": "5034:34:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87312,
                        "nodeType": "ExpressionStatement",
                        "src": "5034:36:113"
                      },
                      {
                        "assignments": [
                          87314
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87314,
                            "mutability": "mutable",
                            "name": "sponsorDesiredFlowRate",
                            "nameLocation": "5090:22:113",
                            "nodeType": "VariableDeclaration",
                            "scope": 87378,
                            "src": "5084:28:113",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            },
                            "typeName": {
                              "id": 87313,
                              "name": "int96",
                              "nodeType": "ElementaryTypeName",
                              "src": "5084:5:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87327,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 87318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 87315,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87303,
                                "src": "5131:16:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87316,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5148:5:113",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87629,
                              "src": "5131:22:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 87317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5157:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5131:27:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "commonType": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            },
                            "id": 87325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  },
                                  "id": 87322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 87320,
                                    "name": "distributableAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87272,
                                    "src": "5184:19:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3530303030",
                                    "id": 87321,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5206:5:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_50000_by_1",
                                      "typeString": "int_const 50000"
                                    },
                                    "value": "50000"
                                  },
                                  "src": "5184:27:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "id": 87323,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5183:29:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030303030",
                              "id": 87324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5215:6:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100000_by_1",
                                "typeString": "int_const 100000"
                              },
                              "value": "100000"
                            },
                            "src": "5183:38:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "id": 87326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5131:90:113",
                          "trueExpression": {
                            "id": 87319,
                            "name": "distributableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87272,
                            "src": "5161:19:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5084:137:113"
                      },
                      {
                        "expression": {
                          "id": 87332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87328,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87303,
                              "src": "5235:16:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87330,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5252:15:113",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87635,
                            "src": "5235:32:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 87331,
                            "name": "sponsorDesiredFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87314,
                            "src": "5271:22:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "5235:58:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87333,
                        "nodeType": "ExpressionStatement",
                        "src": "5235:58:113"
                      },
                      {
                        "expression": {
                          "id": 87336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87334,
                            "name": "distributableAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87272,
                            "src": "5307:19:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 87335,
                            "name": "sponsorDesiredFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87314,
                            "src": "5330:22:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "5307:45:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87337,
                        "nodeType": "ExpressionStatement",
                        "src": "5307:45:113"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87339,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87295,
                              "src": "5458:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 87340,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87303,
                                "src": "5461:16:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87341,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5478:15:113",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87635,
                              "src": "5461:32:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 87338,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87150,
                            "src": "5436:21:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 87342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5436:58:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87343,
                        "nodeType": "ExpressionStatement",
                        "src": "5436:58:113"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87345,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86955,
                                  "src": "5547:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87347,
                                "indexExpression": {
                                  "id": 87346,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87166,
                                  "src": "5556:13:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5547:23:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87348,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5571:7:113",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87627,
                              "src": "5547:31:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87349,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87295,
                              "src": "5596:1:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87350,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86955,
                                  "src": "5615:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87355,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87353,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5632:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5624:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87351,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5624:7:113",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87354,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5624:13:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5615:23:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87356,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5639:5:113",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87629,
                              "src": "5615:29:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87357,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86955,
                                  "src": "5662:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87362,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87360,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5679:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5671:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87358,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5671:7:113",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5671:13:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5662:23:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87363,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5686:17:113",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87631,
                              "src": "5662:41:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87364,
                                  "name": "proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86955,
                                  "src": "5721:8:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87369,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87367,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5738:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87366,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5730:7:113",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87365,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5730:7:113",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87368,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5730:13:113",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5721:23:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87636_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87370,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5745:23:113",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87633,
                              "src": "5721:47:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87344,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87614,
                            "src": "5514:15:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 87371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5514:268:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87372,
                        "nodeType": "EmitStatement",
                        "src": "5509:273:113"
                      },
                      {
                        "expression": {
                          "id": 87376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87373,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87295,
                            "src": "5796:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87374,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87303,
                              "src": "5800:16:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87636_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87375,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5817:7:113",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87627,
                            "src": "5800:24:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5796:28:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87377,
                        "nodeType": "ExpressionStatement",
                        "src": "5796:28:113"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87299,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87295,
                        "src": "4923:1:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87298,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87048,
                      "src": "4913:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4913:12:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87379,
                  "nodeType": "WhileStatement",
                  "src": "4906:957:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87387,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87153,
                        "src": "5959:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87388,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86955,
                            "src": "5971:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87390,
                          "indexExpression": {
                            "id": 87389,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87153,
                            "src": "5980:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5971:20:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87636_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87391,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5992:15:113",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87635,
                        "src": "5971:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87383,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5941:4:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5933:7:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87381,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5933:7:113",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87384,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5933:13:113",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87380,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66806,
                          "src": "5921:11:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66806_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 87385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5921:26:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$66806",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 87386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5948:10:113",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60292,
                      "src": "5921:37:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66806_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66806_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 87392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5921:87:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87393,
                  "nodeType": "ExpressionStatement",
                  "src": "5921:87:113"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87394,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87199,
                      "src": "6022:10:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6035:1:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6022:14:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87404,
                  "nodeType": "IfStatement",
                  "src": "6018:128:113",
                  "trueBody": {
                    "id": 87403,
                    "nodeType": "Block",
                    "src": "6038:108:113",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87400,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87199,
                              "src": "6124:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 87397,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87153,
                              "src": "6104:10:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 87399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6115:8:113",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6104:19:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 87401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6104:31:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87402,
                        "nodeType": "ExpressionStatement",
                        "src": "6104:31:113"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              87670
            ],
            "documentation": {
              "id": 87151,
              "nodeType": "StructuredDocumentation",
              "src": "3184:47:113",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3245:7:113",
            "overrides": {
              "id": 87155,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3298:8:113"
            },
            "parameters": {
              "id": 87154,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87153,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3269:10:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87406,
                  "src": "3253:26:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87152,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:15:113",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3252:28:113"
            },
            "returnParameters": {
              "id": 87156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3307:0:113"
            },
            "scope": 87577,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87421,
            "nodeType": "FunctionDefinition",
            "src": "6210:121:113",
            "nodes": [],
            "body": {
              "id": 87420,
              "nodeType": "Block",
              "src": "6244:87:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87411,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6275:3:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6279:6:113",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6275:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87413,
                            "name": "proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86955,
                            "src": "6287:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87636_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87416,
                          "indexExpression": {
                            "expression": {
                              "id": 87414,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6296:3:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6300:6:113",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6296:10:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6287:20:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87636_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6308:15:113",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87635,
                        "src": "6287:36:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 87410,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87150,
                      "src": "6253:21:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 87418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6253:71:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87419,
                  "nodeType": "ExpressionStatement",
                  "src": "6253:71:113"
                }
              ]
            },
            "baseFunctions": [
              87674
            ],
            "documentation": {
              "id": 87407,
              "nodeType": "StructuredDocumentation",
              "src": "6158:47:113",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "6219:13:113",
            "parameters": {
              "id": 87408,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6232:2:113"
            },
            "returnParameters": {
              "id": 87409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6244:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87441,
            "nodeType": "FunctionDefinition",
            "src": "6390:131:113",
            "nodes": [],
            "body": {
              "id": 87440,
              "nodeType": "Block",
              "src": "6470:51:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87437,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87426,
                        "src": "6507:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 87434,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87424,
                            "src": "6488:8:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6480:8:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 87432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6480:8:113",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6480:17:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87436,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6498:8:113",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6480:26:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6480:34:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87439,
                  "nodeType": "ExpressionStatement",
                  "src": "6480:34:113"
                }
              ]
            },
            "baseFunctions": [
              87690
            ],
            "documentation": {
              "id": 87422,
              "nodeType": "StructuredDocumentation",
              "src": "6337:48:113",
              "text": "@dev ISuperfluidClub.withdraw implementation"
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87429,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6460:9:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86942,
                  "src": "6460:9:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "6460:9:113"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6399:8:113",
            "overrides": {
              "id": 87428,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6451:8:113"
            },
            "parameters": {
              "id": 87427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87424,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "6416:8:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87441,
                  "src": "6408:16:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6408:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87426,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6434:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87441,
                  "src": "6426:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87425,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6426:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6407:34:113"
            },
            "returnParameters": {
              "id": 87431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6470:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87488,
            "nodeType": "FunctionDefinition",
            "src": "6575:517:113",
            "nodes": [],
            "body": {
              "id": 87487,
              "nodeType": "Block",
              "src": "6664:428:113",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 87452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87450,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87444,
                      "src": "6678:18:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 87451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6700:2:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6678:24:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 87458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87456,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87444,
                        "src": "6756:18:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 87457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6778:2:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "6756:24:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87462,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87444,
                          "src": "6833:18:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 87463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6855:2:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "6833:24:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87468,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87444,
                            "src": "6910:18:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 87469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6932:2:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "6910:24:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 87476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87474,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87444,
                              "src": "6987:18:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 87475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7009:2:113",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "6987:24:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 87480,
                          "nodeType": "IfStatement",
                          "src": "6983:71:113",
                          "trueBody": {
                            "id": 87479,
                            "nodeType": "Block",
                            "src": "7013:41:113",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 87477,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7034:9:113",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 87449,
                                "id": 87478,
                                "nodeType": "Return",
                                "src": "7027:16:113"
                              }
                            ]
                          }
                        },
                        "id": 87481,
                        "nodeType": "IfStatement",
                        "src": "6906:148:113",
                        "trueBody": {
                          "id": 87473,
                          "nodeType": "Block",
                          "src": "6936:41:113",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "302e33",
                                "id": 87471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6957:9:113",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 87449,
                              "id": 87472,
                              "nodeType": "Return",
                              "src": "6950:16:113"
                            }
                          ]
                        }
                      },
                      "id": 87482,
                      "nodeType": "IfStatement",
                      "src": "6829:225:113",
                      "trueBody": {
                        "id": 87467,
                        "nodeType": "Block",
                        "src": "6859:41:113",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "302e32",
                              "id": 87465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6880:9:113",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 87449,
                            "id": 87466,
                            "nodeType": "Return",
                            "src": "6873:16:113"
                          }
                        ]
                      }
                    },
                    "id": 87483,
                    "nodeType": "IfStatement",
                    "src": "6752:302:113",
                    "trueBody": {
                      "id": 87461,
                      "nodeType": "Block",
                      "src": "6782:41:113",
                      "statements": [
                        {
                          "expression": {
                            "hexValue": "302e31",
                            "id": 87459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6803:9:113",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 87449,
                          "id": 87460,
                          "nodeType": "Return",
                          "src": "6796:16:113"
                        }
                      ]
                    }
                  },
                  "id": 87484,
                  "nodeType": "IfStatement",
                  "src": "6674:380:113",
                  "trueBody": {
                    "id": 87455,
                    "nodeType": "Block",
                    "src": "6704:42:113",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 87453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6725:10:113",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 87449,
                        "id": 87454,
                        "nodeType": "Return",
                        "src": "6718:17:113"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 87485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7071:7:113",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 87449,
                  "id": 87486,
                  "nodeType": "Return",
                  "src": "7064:14:113"
                }
              ]
            },
            "baseFunctions": [
              87682
            ],
            "documentation": {
              "id": 87442,
              "nodeType": "StructuredDocumentation",
              "src": "6527:43:113",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "6584:3:113",
            "overrides": {
              "id": 87446,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6627:8:113"
            },
            "parameters": {
              "id": 87445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87444,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "6595:18:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87488,
                  "src": "6588:25:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87443,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6588:6:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6587:27:113"
            },
            "returnParameters": {
              "id": 87449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87448,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "6653:9:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87488,
                  "src": "6645:17:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6645:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6644:19:113"
            },
            "scope": 87577,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87511,
            "nodeType": "FunctionDefinition",
            "src": "7147:116:113",
            "nodes": [],
            "body": {
              "id": 87510,
              "nodeType": "Block",
              "src": "7196:67:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87501,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7228:4:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7220:7:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87499,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7220:7:113",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7220:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87503,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87491,
                        "src": "7235:6:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7253:1:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "7243:9:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87504,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7247:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7243:12:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87496,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "7206:4:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87577",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7211:8:113",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88847,
                      "src": "7206:13:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7206:50:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87509,
                  "nodeType": "ExpressionStatement",
                  "src": "7206:50:113"
                }
              ]
            },
            "baseFunctions": [
              87696
            ],
            "documentation": {
              "id": 87489,
              "nodeType": "StructuredDocumentation",
              "src": "7098:44:113",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87494,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87493,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7186:9:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86942,
                  "src": "7186:9:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "7186:9:113"
              }
            ],
            "name": "mint",
            "nameLocation": "7156:4:113",
            "parameters": {
              "id": 87492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87491,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7169:6:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87511,
                  "src": "7161:14:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87490,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7160:16:113"
            },
            "returnParameters": {
              "id": 87495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7196:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87522,
            "nodeType": "FunctionDefinition",
            "src": "7269:161:113",
            "nodes": [],
            "body": {
              "id": 87521,
              "nodeType": "Block",
              "src": "7341:89:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e636c75622e696d706c656d656e746174696f6e",
                        "id": 87518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7368:54:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.club.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        }
                      ],
                      "id": 87517,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7358:9:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 87519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7358:65:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 87516,
                  "id": 87520,
                  "nodeType": "Return",
                  "src": "7351:72:113"
                }
              ]
            },
            "baseFunctions": [
              77280
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "7278:13:113",
            "overrides": {
              "id": 87513,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7314:8:113"
            },
            "parameters": {
              "id": 87512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7291:2:113"
            },
            "returnParameters": {
              "id": 87516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87515,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87522,
                  "src": "7332:7:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87514,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7332:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7331:9:113"
            },
            "scope": 87577,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87537,
            "nodeType": "FunctionDefinition",
            "src": "7436:129:113",
            "nodes": [],
            "body": {
              "id": 87536,
              "nodeType": "Block",
              "src": "7504:61:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87533,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87524,
                        "src": "7547:10:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87530,
                        "name": "UUPSProxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77340,
                        "src": "7514:13:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$77340_$",
                          "typeString": "type(contract UUPSProxiable)"
                        }
                      },
                      "id": 87532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7528:18:113",
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77333,
                      "src": "7514:32:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7514:44:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87535,
                  "nodeType": "ExpressionStatement",
                  "src": "7514:44:113"
                }
              ]
            },
            "baseFunctions": [
              77268
            ],
            "functionSelector": "46951954",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87527,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7494:9:113"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86942,
                  "src": "7494:9:113"
                },
                "nodeType": "ModifierInvocation",
                "src": "7494:9:113"
              }
            ],
            "name": "updateCode",
            "nameLocation": "7445:10:113",
            "overrides": {
              "id": 87526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7485:8:113"
            },
            "parameters": {
              "id": 87525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87524,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "7464:10:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87537,
                  "src": "7456:18:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7456:7:113",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7455:20:113"
            },
            "returnParameters": {
              "id": 87529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7504:0:113"
            },
            "scope": 87577,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87543,
            "nodeType": "FunctionDefinition",
            "src": "7614:38:113",
            "nodes": [],
            "body": {
              "id": 87542,
              "nodeType": "Block",
              "src": "7650:2:113",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              87709
            ],
            "documentation": {
              "id": 87538,
              "nodeType": "StructuredDocumentation",
              "src": "7571:38:113",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 87540,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7641:8:113"
            },
            "parameters": {
              "id": 87539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7621:2:113"
            },
            "returnParameters": {
              "id": 87541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7650:0:113"
            },
            "scope": 87577,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87576,
            "nodeType": "FunctionDefinition",
            "src": "7804:166:113",
            "nodes": [],
            "body": {
              "id": 87575,
              "nodeType": "Block",
              "src": "7866:104:113",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87552,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87546,
                          "src": "7884:5:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 87559,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7913:5:113",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 87558,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7913:5:113",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 87557,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "7908:4:113",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 87560,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7908:11:113",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 87561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7920:3:113",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "7908:15:113",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 87556,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7901:6:113",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 87555,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7901:6:113",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7901:23:113",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 87554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7893:7:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 87553,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7893:7:113",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7893:32:113",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7884:41:113",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7876:7:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 87565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7876:50:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87566,
                  "nodeType": "ExpressionStatement",
                  "src": "7876:50:113"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87571,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87546,
                            "src": "7956:5:113",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7949:6:113",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87569,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "7949:6:113",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7949:13:113",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7943:5:113",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 87567,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "7943:5:113",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7943:20:113",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 87550,
                  "id": 87574,
                  "nodeType": "Return",
                  "src": "7936:27:113"
                }
              ]
            },
            "documentation": {
              "id": 87544,
              "nodeType": "StructuredDocumentation",
              "src": "7658:141:113",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "7813:7:113",
            "parameters": {
              "id": 87547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87546,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7829:5:113",
                  "nodeType": "VariableDeclaration",
                  "scope": 87576,
                  "src": "7821:13:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7821:7:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7820:15:113"
            },
            "returnParameters": {
              "id": 87550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87549,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87576,
                  "src": "7859:5:113",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87548,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "7859:5:113",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7858:7:113"
            },
            "scope": 87577,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86910,
              "name": "ISuperfluidClub",
              "nameLocations": [
                "616:15:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87716,
              "src": "616:15:113"
            },
            "id": 86911,
            "nodeType": "InheritanceSpecifier",
            "src": "616:15:113"
          },
          {
            "baseName": {
              "id": 86912,
              "name": "SuperToken",
              "nameLocations": [
                "633:10:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89480,
              "src": "633:10:113"
            },
            "id": 86913,
            "nodeType": "InheritanceSpecifier",
            "src": "633:10:113"
          },
          {
            "baseName": {
              "id": 86914,
              "name": "UUPSProxiable",
              "nameLocations": [
                "645:13:113"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77340,
              "src": "645:13:113"
            },
            "id": 86915,
            "nodeType": "InheritanceSpecifier",
            "src": "645:13:113"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86909,
          "nodeType": "StructuredDocumentation",
          "src": "483:104:113",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87577,
          77340,
          43764,
          89480,
          87716,
          66806,
          45172,
          44429,
          67984,
          77028,
          67904
        ],
        "name": "SuperfluidClub",
        "nameLocation": "598:14:113",
        "scope": 87578,
        "usedErrors": [
          66363,
          66365,
          66367,
          66369,
          66371,
          66373,
          66375,
          66377,
          66379,
          66381,
          66383,
          66385,
          66387,
          66389,
          67625,
          67627,
          67629,
          67631,
          67633,
          67635,
          86921,
          86923,
          86925,
          86927,
          86929
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 113
}