{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ALREADY_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_AMOUNT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_COIN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLAT_COST_SPONSORSHIP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "calculateFlowRate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege[]",
          "name": "sponsors",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "589:9466:111:-:0;;;1274:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:91;;;;;3652:41:115;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1401:4:111;;1407:18;;1427:17;;3652:41:115;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:115;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;1274:178:111;;;589:9466;;14:144:117;-1:-1:-1;;;;;102:31:117;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:117;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:117;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;589:9466:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;4604:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1513:316:111:-;;;;;;;;;;-1:-1:-1;1513:316:111;;;;;:::i;:::-;;:::i;:::-;;9255:378:91;;;;;;;;;;-1:-1:-1;9255:378:91;;;;;:::i;:::-;;:::i;14063:164:115:-;;;;;;;;;;-1:-1:-1;14063:164:115;;;;;:::i;:::-;;:::i;:::-;;;4285:14:117;;4278:22;4260:41;;4248:2;4233:18;14063:164:115;4120:187:117;2775:143:111;;;;;;;;;;-1:-1:-1;2775:143:111;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:18:111;;;;;;;:9;:18;;;;;;;;2886:25;;;;;;;;;;;;;;;-1:-1:-1;;;2886:25:111;;;;;;;;;;;-1:-1:-1;;;2886:25:111;;;;;;;;;;;-1:-1:-1;;;2886:25:111;;;;;;;;;;;;;;;;;;;;;;2775:143;;;;;;;;:::i;19304:140:115:-;;;;;;;;;;-1:-1:-1;19304:140:115;;;;;:::i;:::-;;:::i;7322:481:91:-;;;;;;;;;;-1:-1:-1;7322:481:91;;;;;:::i;:::-;;:::i;23871:238:115:-;;;;;;;;;;-1:-1:-1;23871:238:115;;;;;:::i;:::-;;:::i;13311:106::-;;;;;;;;;;-1:-1:-1;13398:12:115;;13311:106;;;6724:25:117;;;6712:2;6697:18;13311:106:115;6578:177:117;10460:2526:91;;;;;;;;;;-1:-1:-1;10460:2526:91;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:91;1696:144;;;-1:-1:-1;;;;;9060:32:117;;;9042:51;;9030:2;9015:18;1696:144:91;8896:203:117;2393:336:111;;;;;;;;;;-1:-1:-1;2393:336:111;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14233:188:115:-;;;;;;;;;;-1:-1:-1;14233:188:115;;;;;:::i;:::-;;:::i;24543:169::-;;;;;;;;;;-1:-1:-1;24543:169:115;;;;;:::i;:::-;;:::i;8709:474:91:-;;;;;;;;;;-1:-1:-1;8709:474:91;;;;;:::i;:::-;;:::i;3511:428::-;;;;;;;;;;-1:-1:-1;3511:428:91;;;;;:::i;:::-;;:::i;:::-;;;;10757:25:117;;;10813:2;10798:18;;10791:34;;;;10841:18;;;10834:34;10899:2;10884:18;;10877:34;10744:3;10729:19;3511:428:91;10528:389:117;4820:109:115;;;;;;;;;;-1:-1:-1;4820:109:115;;1425:2;11064:36:117;;11052:2;11037:18;4820:109:115;10922:184:117;5252:218:91;;;;;;;;;;-1:-1:-1;5252:218:91;;;;;:::i;:::-;;:::i;14427:217:115:-;;;;;;;;;;-1:-1:-1;14427:217:115;;;;;:::i;:::-;;:::i;18117:231::-;;;;;;;;;;-1:-1:-1;18117:231:115;;;;;:::i;:::-;;:::i;3920:623::-;;;;;;;;;;-1:-1:-1;3920:623:115;;;;;:::i;:::-;;:::i;18883:136::-;;;;;;;;;;-1:-1:-1;18883:136:115;;;;;:::i;:::-;;:::i;8753:621:111:-;;;;;;;;;;-1:-1:-1;8753:621:111;;;;;:::i;:::-;;:::i;23258:248:115:-;;;;;;;;;;-1:-1:-1;23258:248:115;;;;;:::i;:::-;;:::i;9702:391:91:-;;;;;;;;;;-1:-1:-1;9702:391:91;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:115:-;;;;;;;;;;;;;;;400:122:94;;;;;;;;;;;;;:::i;8586:161:111:-;;;;;;;;;;-1:-1:-1;8675:65:111;8586:161;;15034:97:115;;;;;;;;;;-1:-1:-1;15123:1:115;15034:97;;6343:205:111;;;;;;;;;;;;;:::i;19075:173:115:-;;;;;;;;;;-1:-1:-1;19075:173:115;;;;;:::i;:::-;;:::i;23090:162::-;;;;;;;;;;-1:-1:-1;23090:162:115;;;;;:::i;:::-;;:::i;16289:440::-;;;;;;;;;;-1:-1:-1;16289:440:115;;;;;:::i;:::-;;:::i;17951:160::-;;;;;;;;;;-1:-1:-1;17951:160:115;;;;;:::i;:::-;;:::i;7871:338:91:-;;;;;;;;;;-1:-1:-1;7871:338:91;;;;;:::i;:::-;;:::i;13423:297:115:-;;;;;;;;;;-1:-1:-1;13423:297:115;;;;;:::i;:::-;;:::i;3494:2783:111:-;;;;;;:::i;:::-;;:::i;4231:201:91:-;;;;;;;;;;-1:-1:-1;4231:201:91;;;;;:::i;:::-;;:::i;6623:184:111:-;;;;;;;;;;-1:-1:-1;6623:184:111;;;;;:::i;:::-;;:::i;:::-;;;17215:2:117;17204:22;;;;17186:41;;17174:2;17159:18;6623:184:111;17044:189:117;19482:146:115;;;;;;;;;;-1:-1:-1;19482:146:115;;;;;:::i;:::-;;:::i;6861:656:111:-;;;;;;;;;;-1:-1:-1;6861:656:111;;;;;:::i;:::-;;:::i;1157:20::-;;;;;;;;;;-1:-1:-1;1157:20:111;;;;;;;-1:-1:-1;;;;;1157:20:111;;;15685:222:115;;;;;;;;;;-1:-1:-1;15685:222:115;;;;;:::i;:::-;;:::i;4710:104::-;;;;;;;;;;;;;:::i;731:44:94:-;;;;;;;;;;;;;:::i;15137:185:115:-;;;;;;;;;;-1:-1:-1;15137:185:115;;;;;:::i;:::-;;:::i;17722:223::-;;;;;;;;;;-1:-1:-1;17722:223:115;;;;;:::i;:::-;;:::i;8464:116:111:-;;;;;;;;;;-1:-1:-1;8464:116:111;;;;;:::i;:::-;;:::i;8280:359:91:-;;;;;;;;;;-1:-1:-1;8280:359:91;;;;;:::i;:::-;;:::i;18419:154:115:-;;;;;;;;;;-1:-1:-1;18419:154:115;;;;;:::i;:::-;;:::i;14650:322::-;;;;;;;;;;-1:-1:-1;14650:322:115;;;;;:::i;:::-;;:::i;13726:172::-;;;;;;;;;;-1:-1:-1;13726:172:115;;;;;:::i;:::-;;:::i;1907:58:111:-;;;;;;;;;;;;1955:10;1907:58;;1852:49;;;;;;;;;;;;1900:1;1852:49;;4438:533:91;;;;;;;;;;-1:-1:-1;4438:533:91;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:91;;;;;:::i;:::-;;:::i;17351:365:115:-;;;;;;;;;;-1:-1:-1;17351:365:115;;;;;:::i;:::-;;:::i;23512:353::-;;;;;;;;;;-1:-1:-1;23512:353:115;;;;;:::i;:::-;;:::i;24115:251::-;;;;;;;;;;-1:-1:-1;24115:251:115;;;;;:::i;:::-;;:::i;24372:165::-;;;;;;;;;;-1:-1:-1;24372:165:115;;;;;:::i;:::-;;:::i;10158:226:91:-;;;;;;;;;;-1:-1:-1;10158:226:91;;;;;:::i;:::-;;:::i;15500:179:115:-;;;;;;;;;;-1:-1:-1;15500:179:115;;;;;:::i;:::-;;:::i;3945:280:91:-;;;;;;;;;;-1:-1:-1;3945:280:91;;;;;:::i;:::-;;:::i;13904:153:115:-;;;;;;;;;;-1:-1:-1;13904:153:115;;;;;:::i;:::-;-1:-1:-1;;;;;14021:20:115;;;13995:7;14021:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13904:153;2188:136:111;;;;;;;;;;-1:-1:-1;2188:136:111;;;;;:::i;:::-;;:::i;2105:1334:91:-;;;;;;;;;;-1:-1:-1;2105:1334:91;;;;;:::i;:::-;;:::i;:::-;;;;19348:25:117;;;19404:2;19389:18;;19382:34;;;;19432:18;;;19425:34;19336:2;19321:18;2105:1334:91;19148:317:117;18701:128:115;;;;;;;;;;-1:-1:-1;18805:16:115;;-1:-1:-1;;;;;18805:16:115;18701:128;;1486:57;;;;;;;;;;;;;;;7523:295:111;;;;;;;;;;-1:-1:-1;7523:295:111;;;;;:::i;:::-;;:::i;1971:64::-;;;;;;;;;;;;2026:9;1971:64;;8024:385;;;;;;;;;;-1:-1:-1;8024:385:111;;;;;:::i;:::-;;:::i;15913:213:115:-;;;;;;;;;;-1:-1:-1;15913:213:115;;;;;:::i;:::-;;:::i;16735:403::-;;;;;;;;;;-1:-1:-1;16735:403:115;;;;;:::i;:::-;;:::i;15328:166::-;;;;;;;;;;-1:-1:-1;15328:166:115;;;;;:::i;:::-;;:::i;16132:151::-;16200:16;16235:41;16265:10;16235:29;:41::i;:::-;16228:48;;16132:151;:::o;4604:100::-;4660:13;4692:5;4685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:100;:::o;1513:316:111:-;1623:28;1642:8;1623:18;:28::i;:::-;1661:4;-1:-1:-1;;;;;1661:13:111;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1686:52:111;;-1:-1:-1;;;1686:52:111;;:4;;-1:-1:-1;1686:15:111;;-1:-1:-1;1686:52:111;;1717:1;;;;1725:4;;;;1731:6;;;;1686:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1809:12:111;;;1819:1;1809:12;;;;;;;;;-1:-1:-1;;;1748:74:111;;;:4;;-1:-1:-1;1748:13:111;;-1:-1:-1;1748:74:111;;:4;;1777:30;;1748:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:316;;;;;:::o;9255:378:91:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:91;;-1:-1:-1;;;9522:39:91:i;:::-;9576:50;;6724:25:117;;;-1:-1:-1;;;;;9576:50:91;;;9598:10;;9576:50;;6712:2:117;6697:18;9576:50:91;;;;;;;9419:214;9255:378;;;;:::o;14063:164:115:-;14146:4;14162:37;14171:10;14183:7;14192:6;14162:8;:37::i;:::-;-1:-1:-1;14216:4:115;14063:164;;;;;:::o;19304:140::-;19375:62;19386:10;19398;19410;19422:6;19375:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19304:140;:::o;7322:481:91:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:91;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:91;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:91;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:91;;-1:-1:-1;;;7704:35:91:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:91;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23871:238:115:-;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;24052:50:115::1;24066:7;24075;24084:9;24095:6;24052:13;:50::i;:::-;;23871:238:::0;;;;:::o;10460:2526:91:-;13208:57;;-1:-1:-1;;;13208:57:91;;13253:10;13208:57;;;9042:51:117;13208:5:91;-1:-1:-1;;;;;13208:28:91;;;;9015:18:117;;13208:57:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:91;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:91;::::1;11281:91;;-1:-1:-1::0;11344:17:91;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:91;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:91;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:91::1;::::0;-1:-1:-1;11879:13:91;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:91;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:91::1;::::0;-1:-1:-1;12395:12:91;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:91;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:91;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:91::1;::::0;-1:-1:-1;12539:13:91;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:91::1;12793:17;-1:-1:-1::0;;;;;12718:261:91::1;12753:10;-1:-1:-1::0;;;;;12718:261:91::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2393:336:111:-;2502:41;2571:7;2559:9;2611:112;2618:12;2628:1;2618:9;:12::i;:::-;2611:112;;;-1:-1:-1;;;;;2662:12:111;;;;;;;:9;:12;;;;;;;;2646:28;;;;;;;;;;;;;;;-1:-1:-1;;;2646:28:111;;;;;;;;;;;-1:-1:-1;;;2646:28:111;;;;;;;;;;;-1:-1:-1;;;2646:28:111;;;;;;;;;;;;;;;;;;;;;:8;2655:3;;;;:::i;:::-;;;2646:13;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;-1:-1:-1;;;;;2692:12:111;;;;;;;;;;;;;:20;;;;;2611:112;;;2549:180;;2393:336;;;:::o;14233:188:115:-;14339:4;14362:52;14376:10;14388:6;14396:9;14407:6;14362:13;:52::i;:::-;14355:59;14233:188;-1:-1:-1;;;;14233:188:115:o;24543:169::-;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;24649:56:115::1;24660:10;24672:7;24681;24690:6;24649:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24543:169:::0;;:::o;8709:474:91:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:91;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6724:25:117;;;9161:10:91;;9141:35;;6712:2:117;6697:18;9141:35:91;;;;;;;8826:357;;8709:474;;:::o;3511:428::-;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:91;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:91;;-1:-1:-1;3511:428:91;;-1:-1:-1;3511:428:91;-1:-1:-1;3511:428:91:o;5252:218::-;-1:-1:-1;;;;;5429:33:91;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:91;;5428:34;;5402:61;;;6724:25:117;5356:24:91;;5402:5;:25;;;;6697:18:117;;5402:61:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:91;;;;;;;;;;;;:::i;14427:217:115:-;14549:10;14524:4;14570:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14570:32:115;;;;;;;;;;14524:4;;14540:76;;14561:7;;14570:45;;14605:10;;14570:45;:::i;:::-;14540:8;:76::i;18117:231::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:115;;;;;;;;;;;24796:63;18292:49:::1;18306:7;18315:6;18323:9;18334:6;18292:13;:49::i;3920:623::-:0;4090:5;4084:19;;;;;:::i;:::-;:24;;-1:-1:-1;4076:68:115;;;;-1:-1:-1;;;4076:68:115;;28193:2:117;4076:68:115;;;28175:21:117;28232:2;28212:18;;;28205:30;28271:33;28251:18;;;28244:61;28322:18;;4076:68:115;;;;;;;;;4181:1;4162:20;;;4154:55;;;;-1:-1:-1;;;4154:55:115;;28553:2:117;4154:55:115;;;28535:21:117;28592:2;28572:18;;;28565:30;-1:-1:-1;;;28611:18:117;;;28604:52;28673:18;;4154:55:115;28351:346:117;4154:55:115;4219:16;:34;;4263:40;;;-1:-1:-1;;;4263:40:115;-1:-1:-1;;;;;;4263:40:115;;;-1:-1:-1;;;;;4219:34:115;;4263:40;;;;4314:5;:9;4322:1;;4314:5;:9;:::i;:::-;-1:-1:-1;4333:7:115;:11;4343:1;;4333:7;:11;:::i;:::-;;4386:36;4416:4;4386:21;:36::i;:::-;4501:35;;4530:1;6724:25:117;;;4530:1:115;;;-1:-1:-1;;;;;;;;;;;4501:35:115;6712:2:117;6697:18;4501:35:115;;;;;;;;3920:623;;;;;;:::o;18883:136::-;18952:60;18961:10;18973;18985;18997:6;18952:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;8753:621:111:-;1084:5;;;;;-1:-1:-1;;;;;1084:5:111;1070:10;:19;1066:68;;1112:11;;-1:-1:-1;;;1112:11:111;;;;;;;;;;;1066:68;8831:44:::1;8864:10;8831:32;:44::i;:::-;9172:10;-1:-1:-1::0;;;;;9161:43:111::1;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9137:69:111::1;:20;-1:-1:-1::0;;;;;9137:69:111::1;;;:156;;;;9260:10;-1:-1:-1::0;;;;;9249:42:111::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9226:67:111::1;:19;-1:-1:-1::0;;;;;9226:67:111::1;;;9137:156;9120:248;;;9325:32;;-1:-1:-1::0;;;9325:32:111::1;;;;;;;;;;;23258:248:115::0;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23456:20:115;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23429:70:::1;::::0;23438:7;;23447;;23456:42:::1;::::0;23488:10;;23456:42:::1;:::i;23429:70::-;23258:248:::0;;;:::o;9702:391:91:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:91:o;400:122:94:-;447:19;489:26;751:20:96;745:27;;618:170;6343:205:111;6392:21;6402:10;6392:9;:21::i;:::-;6387:73;;6436:13;;-1:-1:-1;;;6436:13:111;;;;;;;;;;;6387:73;6491:10;6503:21;;;;:9;:21;;;;;:37;;;6469:72;;6491:10;6503:37;;6469:21;:72::i;:::-;6343:205::o;19075:173:115:-;19183:58;19192:10;19204;19216:2;19220:6;19228:8;;19183:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19183:58:115;;;;;;;;;;;;;-1:-1:-1;19183:8:115;;-1:-1:-1;;19183:58:115:i;:::-;19075:173;;;;:::o;23090:162::-;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;23211:34:115::1;23220:7;23229;23238:6;23211:8;:34::i;16289:440::-:0;16517:10;16542:42;:10;16517;16577:6;16542:24;:42::i;:::-;16537:103;;16593:47;;-1:-1:-1;;;16593:47:115;;;;;;;;;;;16537:103;16650:72;16656:8;16666:6;16674:9;16685:6;16693:8;;16650:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16650:72:115;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16703:12:115;;-1:-1:-1;16703:12:115;;;;16650:72;;16703:12;;;;16650:72;;;;;;;;;-1:-1:-1;16717:4:115;;-1:-1:-1;16650:5:115;;-1:-1:-1;;16650:72:115:i;:::-;16488:241;16289:440;;;;;;;:::o;17951:160::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:115;;;;;;;;;;;7871:338:91;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:91:o;13423:297:115:-;13497:15;13579:23;13609:35;13636:7;13609:26;:35::i;:::-;13578:66;;;;;13680:1;13661:16;:20;:52;;13696:16;13661:52;;;13684:1;13661:52;13654:59;13423:297;-1:-1:-1;;;13423:297:115:o;3494:2783:111:-;3579:21;3589:10;3579:9;:21::i;:::-;3575:76;;;3623:17;;-1:-1:-1;;;3623:17:111;;;;;;;;;;;3575:76;3767:5;;3713:21;;;;3767:5;;;-1:-1:-1;;;;;3767:5:111;3753:10;:19;3752:67;;3801:10;3813:5;3752:67;;;3785:4;3792;3752:67;3712:107;;;;3875:24;3885:13;3875:9;:24::i;:::-;3874:25;:37;;;;;3904:7;3903:8;3874:37;3870:88;;;3934:13;;-1:-1:-1;;;3934:13:111;;;;;;;;;;;3870:88;-1:-1:-1;;;;;4032:24:111;;3968:18;4032:24;;;:9;:24;;;;;:48;3989:9;;3968:18;4028:53;;-1:-1:-1;;;4032:48:111;;;;4028:3;:53::i;:::-;4008:73;;4108:9;4095:10;:22;4091:77;;;4140:17;;-1:-1:-1;;;4140:17:111;;;;;;;;;;;4091:77;4178:23;4192:9;4178:23;;:::i;:::-;-1:-1:-1;;;;;4215:24:111;;;;;;:9;:24;;;;;:30;4178:23;;-1:-1:-1;1900:1:111;-1:-1:-1;;;4215:30:111;;;;;:55;4211:124;;4293:31;;-1:-1:-1;;;4293:31:111;;;;;;;;;;;4211:124;4427:4;4409:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;4409:44:111;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4464:24:111;;-1:-1:-1;4464:24:111;;;:9;:24;;;;;:50;;-1:-1:-1;;;4464:50:111;;;;;;-1:-1:-1;4464:48:111;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4558:24:111;;-1:-1:-1;4558:24:111;;;:9;:24;;;;;:42;-1:-1:-1;;;4558:42:111;;;;-1:-1:-1;4558:24:111;4645:857;4652:12;4662:1;4652:9;:12::i;:::-;4645:857;;;-1:-1:-1;;;;;4748:12:111;;4713:32;4748:12;;;:9;:12;;;;;4774:36;;-1:-1:-1;;;4774:36:111;;;;4748:12;4774:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4860:53;4878:16;:34;;;;;;;;;;;;4860:17;:53::i;:::-;4824:32;;;:89;;:32;;:89;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:32:111;;;4997:58;;5019:1;;4824:89;5022:32;4997:21;:58::i;:::-;-1:-1:-1;;;;;5108:24:111;;;;;;;:9;:24;;;;;;;:32;5195:4;5177:24;;;;;;:30;5075:272;;5177:30;-1:-1:-1;;;5177:30:111;;;32285:36:117;;5225:42:111;-1:-1:-1;;;5225:42:111;;;;32366:18:117;;;32359:43;;;;-1:-1:-1;;;5285:48:111;;;;;;32418:18:117;;;32411:43;5075:272:111;;;;5108:32;;;;;5075:272;;32273:2:117;32258:18;5075:272:111;;;;;;;5387:34;;-1:-1:-1;;;5387:34:111;;;;-1:-1:-1;;;;;;5439:24:111;;-1:-1:-1;4645:857:111;;;5632:7;:63;;5668:27;:23;5694:1;5668:27;:::i;:::-;5632:63;;;5642:23;5632:63;5729:257;;;;;;;;-1:-1:-1;;;;;5729:257:111;;;;;-1:-1:-1;5794:24:111;;;5729:257;5794:24;;;;;;:30;5606:89;;-1:-1:-1;5729:257:111;;;;;5794:34;;-1:-1:-1;;;5794:30:111;;;;5827:1;5794:34;:::i;:::-;5729:257;;;;5861:1;5729:257;;;;;;;;;;;;5933:42;5951:23;5933:17;:42::i;:::-;5729:257;;;;;;;-1:-1:-1;;;;;5705:21:111;;;;;;;:9;:21;;;;;;;;:281;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5705:281:111;;;;;;;-1:-1:-1;;;5705:281:111;;;;;;;;;;;;-1:-1:-1;;;;5705:281:111;-1:-1:-1;;;5705:281:111;;;;;-1:-1:-1;;;;5705:281:111;;-1:-1:-1;;;5705:281:111;;;;;;;;;;;;;;;-1:-1:-1;5705:281:111;;;;;-1:-1:-1;;5705:281:111;;;;;;;;;;;;;6045:88;;6065:4;;5705:21;;6095:37;;;;6045;:88;:::i;:::-;-1:-1:-1;6147:14:111;;6143:128;;6229:31;;-1:-1:-1;;;;;6229:19:111;;;:31;;;;;6249:10;;6229:31;;;;6249:10;6229:19;:31;;;;;;;;;;;;;;;;;;;6143:128;3565:2712;;;;;;3494:2783;:::o;4231:201:91:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:91;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6623:184:111:-;6706:14;6743:57;6751:48;;;;2026:9;6751:48;:::i;:::-;6743:7;:57::i;19482:146:115:-;19567:54;19578:10;19590;19602:2;19606:6;19567:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;6861:656:111:-;6931:17;6986:2;6964:18;:24;;;6960:551;;-1:-1:-1;7034:10:111;;6861:656;-1:-1:-1;6861:656:111:o;6960:551::-;7087:2;7065:18;:24;;;7061:450;;-1:-1:-1;7136:9:111;;6861:656;-1:-1:-1;6861:656:111:o;7061:450::-;7188:2;7166:18;:24;;;7162:349;;-1:-1:-1;7237:9:111;;6861:656;-1:-1:-1;6861:656:111:o;7162:349::-;7289:2;7267:18;:24;;;7263:248;;-1:-1:-1;7338:9:111;;6861:656;-1:-1:-1;6861:656:111:o;7263:248::-;7390:2;7368:18;:24;;;7364:147;;-1:-1:-1;7439:9:111;;6861:656;-1:-1:-1;6861:656:111:o;7364:147::-;-1:-1:-1;7486:7:111;;6861:656;-1:-1:-1;6861:656:111:o;15685:222:115:-;15783:10;15803:46;:10;15783;15840:8;15803:28;:46::i;:::-;15893:6;-1:-1:-1;;;;;15864:36:115;15883:8;-1:-1:-1;;;;;15864:36:115;;;;;;;;;;;15756:151;15685:222;:::o;4710:104::-;4768:13;4800:7;4793:14;;;;;:::i;731:44:94:-;3291:13:24;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:24;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:24;1702:19:35;:23;;;3376:55:24;;-1:-1:-1;3414:12:24;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:24;;33219:2:117;3314:190:24;;;33201:21:117;33258:2;33238:18;;;33231:30;33297:34;33277:18;;;33270:62;-1:-1:-1;;;33348:18:117;;;33341:44;33402:19;;3314:190:24;33017:410:117;3314:190:24;3514:12;:16;;-1:-1:-1;;3514:16:24;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:24;;;;;3540:65;3629:14;3625:99;;;3659:13;:21;;-1:-1:-1;;3659:21:24;;;3699:14;;-1:-1:-1;11064:36:117;;3699:14:24;;11052:2:117;11037:18;3699:14:24;;;;;;;;3258:472;731:44:94:o;15137:185:115:-;15247:68;15253:10;15265;15277:9;15288:6;15296:8;;15247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15247:68:115;;;;;;;;;;;;;-1:-1:-1;15310:4:115;;-1:-1:-1;15247:5:115;;-1:-1:-1;15247:68:115:i;17722:223::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:115;;;;;;;;;;;24796:63;17876:15;;17925:12:::1;::::0;;17895:1:::1;17925:12:::0;;::::1;::::0;::::1;::::0;;;17841:97:::1;::::0;17847:10:::1;::::0;17859:7;;17868:6;;17876:20;;::::1;::::0;:15;;17841:5:::1;:97::i;8464:116:111:-:0;1084:5;;;;;-1:-1:-1;;;;;1084:5:111;1070:10;:19;1066:68;;1112:11;;-1:-1:-1;;;1112:11:111;;;;;;;;;;;1066:68;8560:12:::1;::::0;;8570:1:::1;8560:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;8523:50:111;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;8552:6;;8523:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:91::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:91;;-1:-1:-1;;;8544:35:91:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:91;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18419:154:115:-;18495:71;18509:10;18521;18533:9;18544:21;18554:10;18544:9;:21::i;:::-;18495:13;:71::i;14650:322::-;14752:4;14768:176;14790:10;14814:7;14835:99;14872:15;14835:99;;;;;;;;;;;;;;;;;14847:10;14835:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14835:32:115;;;;;;;;;;;:99;:36;:99::i;13726:172::-;13812:4;13835:56;13849:10;13861;13873:9;13884:6;13835:13;:56::i;4438:533:91:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:91;;4438:533;-1:-1:-1;;;;;;;4438:533:91:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:91;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17351:365:115:-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:115;;;;;;;;;;;24796:63;17554:15;;17687:12:::1;::::0;;17573:1:::1;17687:12:::0;;::::1;::::0;::::1;::::0;;;17470:239:::1;::::0;17489:10:::1;::::0;17513:7;;17534:6;;17554:20;;::::1;::::0;;;:15;;17470:5:::1;:239::i;23512:353::-:0;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;23688:170:115::1;23710:7;23731;23752:96;23786:15;23752:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23752:20:115;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;24115:251::-:0;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;24294:65:115::1;24300:10;24312:7;24321:9;24332:6;24340:8;24294:65;;;;;;;;;;;::::0;24354:4:::1;24294:5;:65::i;24372:165::-:0;13396:5:91;-1:-1:-1;;;;;13388:28:91;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:91;;;;;;;;;;;13384:86;24476:54:115::1;24485:10;24497:7;24506;24515:6;24476:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:91:-:0;13208:57;;-1:-1:-1;;;13208:57:91;;13253:10;13208:57;;;9042:51:117;13208:5:91;-1:-1:-1;;;;;13208:28:91;;;;9015:18:117;;13208:57:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:91;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:91;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:91;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:91:o;15500:179:115:-;15602:4;15625:47;:10;15650:8;15660:11;15625:24;:47::i;3945:280:91:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:91;-1:-1:-1;;3945:280:91;-1:-1:-1;;;;3945:280:91:o;2188:136:111:-;-1:-1:-1;;;;;2277:18:111;;;2254:4;2277:18;;;:9;:18;;;;;:26;;:40;;;2188:136::o;2105:1334:91:-;-1:-1:-1;;;;;2370:31:91;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;-1:-1:-1;;;2708:182:91;;2793:4;2708:182;;;34287:34:117;-1:-1:-1;;;;;34357:15:117;;;34337:18;;;34330:43;34389:18;;;34382:34;;;2708:58:91;;;;;;34222:18:117;;2708:182:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:91;-1:-1:-1;2568:322:91;-1:-1:-1;2914:26:91;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:91;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;7523:295:111:-;1084:5;;;;;-1:-1:-1;;;;;1084:5:111;1070:10;:19;1066:68;;1112:11;;-1:-1:-1;;;1112:11:111;;;;;;;;;;;1066:68;-1:-1:-1;;;;;7608:22:111;::::1;7604:74;;7653:14;;-1:-1:-1::0;;;7653:14:111::1;;;;;;;;;;;7604:74;7691:19;7701:8;7691:9;:19::i;:::-;7687:87;;;7733:30;;-1:-1:-1::0;;;7733:30:111::1;;;;;;;;;;;7687:87;7783:28;7802:8;7783:18;:28::i;8024:385::-:0;1084:5;;;;;-1:-1:-1;;;;;1084:5:111;1070:10;:19;1066:68;;1112:11;;-1:-1:-1;;;1112:11:111;;;;;;;;;;;1066:68;-1:-1:-1;;;;;8118:22:111;::::1;8114:74;;8163:14;;-1:-1:-1::0;;;8163:14:111::1;;;;;;;;;;;8114:74;8211:1;8201:6;:11;8197:65;;8235:16;;-1:-1:-1::0;;;8235:16:111::1;;;;;;;;;;;8197:65;8299:6;8275:21;:30;8271:88;;;8328:20;;-1:-1:-1::0;;;8328:20:111::1;;;;;;;;;;;8271:88;8368:34;::::0;-1:-1:-1;;;;;8368:26:111;::::1;::::0;:34;::::1;;;::::0;8395:6;;8368:34:::1;::::0;;;8395:6;8368:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;15913:213:115::0;16008:10;16028:43;:10;16008;16062:8;16028:25;:43::i;:::-;16112:6;-1:-1:-1;;;;;16086:33:115;16102:8;-1:-1:-1;;;;;16086:33:115;;;;;;;;;;;15981:145;15913:213;:::o;16735:403::-;16927:10;16952:43;:10;16927;16987:7;16952:24;:43::i;:::-;16947:104;;17004:47;;-1:-1:-1;;;17004:47:115;;;;;;;;;;;16947:104;17061:70;17072:8;17082:7;17091;17100:6;17108:8;;17061:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17061:70:115;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17118:12:115;;-1:-1:-1;17118:12:115;;;;17061:70;;17118:12;;;;17061:70;;;;;;;;;-1:-1:-1;17061:10:115;;-1:-1:-1;;;17061:70:115:i;15328:166::-;15419:68;15430:10;15442;15454;15466:6;15474:8;;15419:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:68:115;;;;;;;;;;;;;-1:-1:-1;15419:10:115;;-1:-1:-1;;15419:68:115:i;2294:141:79:-;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:79;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;7824::111:-;7915:5;;7894:37;;-1:-1:-1;;;;;7894:37:111;;;;7915:5;;;;;7894:37;;;;;7941:5;:16;;-1:-1:-1;;;;;7941:16:111;;;;;-1:-1:-1;;;;;;7941:16:111;;;;;;;;;7824:141::o;701:213:81:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10502:394:115;-1:-1:-1;;;;;10593:21:115;;10589:98;;10637:39;;-1:-1:-1;;;10637:39:115;;;;;;;;;;;10589:98;-1:-1:-1;;;;;10700:21:115;;10696:96;;10744:37;;-1:-1:-1;;;10744:37:115;;;;;;;;;;;10696:96;-1:-1:-1;;;;;10802:20:115;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10855:34;;6724:25:117;;;10855:34:115;;6697:18:117;10855:34:115;;;;;;;;10502:394;;;:::o;20802:1142::-;21157:16;;-1:-1:-1;;;;;21157:16:115;21145:85;;21197:33;;-1:-1:-1;;;21197:33:115;;;;;;;;;;;21145:85;21242:24;21268:22;21294:27;21314:6;21294:19;:27::i;:::-;21241:80;;;;21399:86;21405:8;21415:7;21424:14;21440:8;:15;21459:1;21440:20;;21462:8;21472:12;21399:5;:86::i;:::-;21519:16;;:41;;-1:-1:-1;;;21519:41:115;;21554:4;21519:41;;;9042:51:117;21496:20:115;;-1:-1:-1;;;;;21519:16:115;;:26;;9015:18:117;;21519:41:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21570:16;;21496:64;;-1:-1:-1;21570:51:115;;-1:-1:-1;;;;;21570:16:115;21600:2;21604:16;21570:29;:51::i;:::-;21653:16;;:41;;-1:-1:-1;;;21653:41:115;;21688:4;21653:41;;;9042:51:117;21631:19:115;;-1:-1:-1;;;;;21653:16:115;;:26;;9015:18:117;;21653:41:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21631:63;-1:-1:-1;21704:30:115;21737:26;21631:63;21737:12;:26;:::i;:::-;21704:59;;21797:22;21777:16;:42;21773:108;;21828:53;;-1:-1:-1;;;21828:53:115;;;;;;;;;;;21773:108;21913:7;-1:-1:-1;;;;;21897:40:115;;21922:14;21897:40;;;;6724:25:117;;6712:2;6697:18;;6578:177;21897:40:115;;;;;;;;21135:809;;;;;20802:1142;;;;;;:::o;920:282:81:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:81;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:81;;920:282;-1:-1:-1;;;920:282:81:o;5545:715:115:-;5670:4;-1:-1:-1;;;;;5694:20:115;;5690:98;;5737:40;;-1:-1:-1;;;5737:40:115;;;;;;;;;;;5690:98;-1:-1:-1;;;;;5801:23:115;;5797:99;;5847:38;;-1:-1:-1;;;5847:38:115;;;;;;;;;;;5797:99;5905:16;5924:10;5905:29;;5945:50;5951:8;5961:6;5969:9;5980:6;5945:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;6021:6;-1:-1:-1;;;;;6010:17:115;:7;-1:-1:-1;;;;;6010:17:115;;6006:226;;6043:178;6069:6;6093:7;6118:89;6151:6;6118:89;;;;;;;;;;;;;;;;;:11;:19;6130:6;-1:-1:-1;;;;;6118:19:115;-1:-1:-1;;;;;6118:19:115;;;;;;;;;;;;:28;6138:7;-1:-1:-1;;;;;6118:28:115;-1:-1:-1;;;;;6118:28:115;;;;;;;;;;;;;:32;;:89;;;;;:::i;6043:178::-;-1:-1:-1;6249:4:115;;5545:715;-1:-1:-1;;;;;5545:715:115:o;6823:230:91:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:91;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:91;;-1:-1:-1;;;;;7006:5:91;34305:15:117;;6983:63:91;;;34287:34:117;7013:4:91;34337:18:117;;;34330:43;601:60:91;34389:18:117;;;34382:34;6908:49:91;;-1:-1:-1;6983:22:91;;;;;;34222:18:117;;6983:63:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:42:-;34837:6;-1:-1:-1;;;;;34962:5:42;:34;;34954:87;;;;-1:-1:-1;;;34954:87:42;;35908:2:117;34954:87:42;;;35890:21:117;35947:2;35927:18;;;35920:30;35986:34;35966:18;;;35959:62;-1:-1:-1;;;36037:18:117;;;36030:38;36085:19;;34954:87:42;35706:404:117;34954:87:42;-1:-1:-1;35065:5:42;34781:297::o;301:119:80:-;403:2;-1:-1:-1;;;;;388:25:80;397:4;-1:-1:-1;;;;;388:25:80;-1:-1:-1;;;;;;;;;;;407:5:80;388:25;;;;6724::117;;6712:2;6697:18;;6578:177;1681:173:81;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;897:246:79;949:89;;-1:-1:-1;;;949:89:79;;-1:-1:-1;;;;;36373:15:117;;949:89:79;;;36355:34:117;998:24:79;36405:18:117;;;36398:34;1032:4:79;36448:18:117;;;36441:43;332:42:79;;949:41;;36290:18:117;;949:89:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:79;;-1:-1:-1;;;1048:88:79;;-1:-1:-1;;;;;36373:15:117;;1048:88:79;;;36355:34:117;1097:23:79;36405:18:117;;;36398:34;1130:4:79;36448:18:117;;;36441:43;332:42:79;;-1:-1:-1;1048:41:79;;-1:-1:-1;36290:18:117;;1048:88:79;36115:375:117;19634:1162:115;19850:16;;-1:-1:-1;;;;;19850:16:115;19838:85;;19890:33;;-1:-1:-1;;;19890:33:115;;;;;;;;;;;19838:85;19935:24;19961:22;19987:27;20007:6;19987:19;:27::i;:::-;20048:16;;:41;;-1:-1:-1;;;20048:41:115;;20083:4;20048:41;;;9042:51:117;19934:80:115;;-1:-1:-1;19934:80:115;;-1:-1:-1;20025:20:115;;-1:-1:-1;;;;;20048:16:115;;;;:26;;9015:18:117;;20048:41:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20099:16;;20025:64;;-1:-1:-1;20099:75:115;;-1:-1:-1;;;;;20099:16:115;20133:7;20150:4;20157:16;20099:33;:75::i;:::-;20206:16;;:41;;-1:-1:-1;;;20206:41:115;;20241:4;20206:41;;;9042:51:117;20184:19:115;;-1:-1:-1;;;;;20206:16:115;;:26;;9015:18:117;;20206:41:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20184:63;-1:-1:-1;20257:28:115;20288:26;20302:12;20184:63;20288:26;:::i;:::-;20257:57;;20348:20;20328:16;:40;20324:106;;20377:53;;-1:-1:-1;;;20377:53:115;;;;;;;;;;;20324:106;20628:15;;20441:299;;20460:8;;20482:2;;20498:14;;20628:20;;;:8;20718:12;20441:5;:299::i;:::-;20770:2;-1:-1:-1;;;;;20756:33:115;;20774:14;20756:33;;;;6724:25:117;;6712:2;6697:18;;6578:177;1289:576:94;1457:1;1419:26;751:20:96;745:27;;618:170;1419:26:94;-1:-1:-1;;;;;1419:40:94;;1411:82;;;;-1:-1:-1;;;1411:82:94;;36697:2:117;1411:82:94;;;36679:21:117;36736:2;36716:18;;;36709:30;36775:31;36755:18;;;36748:59;36824:18;;1411:82:94;36495:353:117;1411:82:94;1557:10;-1:-1:-1;;;;;1543:39:94;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8675:65:111;1524:60:94;1503:142;;;;-1:-1:-1;;;1503:142:94;;37244:2:117;1503:142:94;;;37226:21:117;37283:2;37263:18;;;37256:30;37322:34;37302:18;;;37295:62;-1:-1:-1;;;37373:18:117;;;37366:33;37416:19;;1503:142:94;37042:399:117;1503:142:94;-1:-1:-1;;;;;1676:27:94;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:94;;37648:2:117;1655:99:94;;;37630:21:117;37687:2;37667:18;;;37660:30;37726:27;37706:18;;;37699:55;37771:18;;1655:99:94;37446:349:117;1655:99:94;1764:39;1792:10;988:20:96;964:87;839:228;1764:39:94;1818:40;8675:65:111;1818:40:94;;;37974:25:117;;;-1:-1:-1;;;;;38035:32:117;;38030:2;38015:18;;38008:60;37947:18;1818:40:94;37800:274:117;1291:300:81;1363:21;1417:10;-1:-1:-1;;;;;1403:25:81;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:81;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:81;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;3103:333:111:-;3257:1;3191:63;3238:4;;3245:8;3191:38;:63::i;:::-;:67;;;3187:243;;;3274:57;3294:4;3312:8;3322;3274:37;:57::i;3187:243::-;3362:57;3382:4;3400:8;3410;3362:37;:57::i;1149:366:79:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:79;:8;-1:-1:-1;;;;;1281:23:79;;:174;;;-1:-1:-1;;;;;;1338:31:79;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:79;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:79;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6784:686:115:-;-1:-1:-1;;;;;7020:18:115;;7016:96;;7061:40;;-1:-1:-1;;;7061:40:115;;;;;;;;;;;7016:96;-1:-1:-1;;;;;7125:16:115;;7121:92;;7164:38;;-1:-1:-1;;;7164:38:115;;;;;;;;;;;7121:92;7223:69;7241:8;7251:4;7257:2;7261:6;7269:8;7279:12;7223:17;:69::i;:::-;7303:57;7309:8;7319:4;7325:2;7329:6;7337:8;7347:12;7303:5;:57::i;:::-;7371:92;7391:8;7401:4;7407:2;7411:6;7419:8;7429:12;7443:19;7371;:92::i;904:184:52:-;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;9613:178:111:-;9668:5;9717:15;9693:41;;;9685:62;;;;-1:-1:-1;;;9685:62:111;;38281:2:117;9685:62:111;;;38263:21:117;38320:1;38300:18;;;38293:29;-1:-1:-1;;;38338:18:117;;;38331:38;38386:18;;9685:62:111;38079:331:117;1521:382:79;1643:8;-1:-1:-1;;;;;1633:18:79;:6;-1:-1:-1;;;;;1633:18:79;;1625:76;;;;-1:-1:-1;;;1625:76:79;;38617:2:117;1625:76:79;;;38599:21:117;38656:2;38636:18;;;38629:30;38695:34;38675:18;;;38668:62;-1:-1:-1;;;38746:18:117;;;38739:43;38799:19;;1625:76:79;38415:409:117;1625:76:79;-1:-1:-1;;;;;1716:31:79;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:79;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:79;;;23258:248:115:o;1712:185:79:-;-1:-1:-1;;;;;1847:22:79;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:79;1882:4;1847:39;;;1521:382;;;:::o;9476:594:115:-;-1:-1:-1;;;;;9683:18:115;;9679:92;;9724:36;;-1:-1:-1;;;9724:36:115;;;;;;;;;;;9679:92;9785:10;9781:118;;;9811:77;9829:8;9839:4;9853:1;9857:6;9865:8;9875:12;9811:17;:77::i;:::-;9909:35;9931:4;9937:6;9909:21;:35::i;:::-;9977:4;-1:-1:-1;;;;;9960:54:115;9967:8;-1:-1:-1;;;;;9960:54:115;;9983:6;9991:8;10001:12;9960:54;;;;;;;;:::i;:::-;;;;;;;;10029:34;;6724:25:117;;;10052:1:115;;-1:-1:-1;;;;;10029:34:115;;;-1:-1:-1;;;;;;;;;;;10029:34:115;6712:2:117;6697:18;10029:34:115;6578:177:117;4959:201:43;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:43;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:43;;;4959:201::o;8500:667:115:-;-1:-1:-1;;;;;8744:21:115;;8740:93;;8788:34;;-1:-1:-1;;;8788:34:115;;;;;;;;;;;8740:93;8843:38;8865:7;8874:6;8843:21;:38::i;:::-;8896:10;8892:144;;;8922:103;8942:8;8960:1;8964:7;8973:6;8981:8;8991:12;9005:19;8922;:103::i;:::-;9068:7;-1:-1:-1;;;;;9051:57:115;9058:8;-1:-1:-1;;;;;9051:57:115;;9077:6;9085:8;9095:12;9051:57;;;;;;;;:::i;:::-;;;;;;;;9123:37;;6724:25:117;;;-1:-1:-1;;;;;9123:37:115;;;9140:1;;-1:-1:-1;;;;;;;;;;;9123:37:115;6712:2:117;6697:18;9123:37:115;;;;;;;8500:667;;;;;;;:::o;1909:379:79:-;2030:10;-1:-1:-1;;;;;2018:22:79;;;2010:77;;;;-1:-1:-1;;;2010:77:79;;39486:2:117;2010:77:79;;;39468:21:117;39525:2;39505:18;;;39498:30;39564:34;39544:18;;;39537:62;-1:-1:-1;;;39615:18:117;;;39608:40;39665:19;;2010:77:79;39284:406:117;2010:77:79;-1:-1:-1;;;;;2101:31:79;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:79;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:79;2197:4;2148:53;;;23258:248:115;;;:::o;2097:185:79:-;-1:-1:-1;;;;;2239:22:79;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:79;;;1909:379::o;22046:972:115:-;22229:19;;22137:24;;;;;;1425:2;-1:-1:-1;;;22229:19:115;;;:40;:19;:40;22225:787;;;22434:19;;22413:40;;-1:-1:-1;;;22434:19:115;;;;1425:2;22413:40;:::i;:::-;22406:48;;:2;:48;:::i;:::-;22397:57;-1:-1:-1;22487:15:115;22397:57;22487:6;:15;:::i;:::-;22468:34;-1:-1:-1;22572:25:115;22591:6;22468:34;22572:25;:::i;:::-;22555:42;;22225:787;;;22618:19;;1425:2;-1:-1:-1;;;22618:19:115;;;:40;:19;:40;22614:398;;;22802:19;;:40;;1425:2;;-1:-1:-1;;;22802:19:115;;;;:40;:::i;:::-;22795:48;;:2;:48;:::i;:::-;22786:57;-1:-1:-1;22876:15:115;22786:57;22876:6;:15;:::i;:::-;22857:34;;22922:6;22905:23;;22614:398;;;22995:6;22978:23;;;22959:42;;22614:398;22191:827;22046:972;;;:::o;941:175:29:-;1050:58;;-1:-1:-1;;;;;41599:32:117;;1050:58:29;;;41581:51:117;41648:18;;;41641:34;;;1023:86:29;;1043:5;;-1:-1:-1;;;1073:23:29;41554:18:117;;1050:58:29;;;;-1:-1:-1;;1050:58:29;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:29;-1:-1:-1;;;;;;1050:58:29;;;;;;;;;;1023:19;:86::i;7476:367:115:-;7673:50;7695:4;7701:2;7705:17;:6;:15;:17::i;:::-;7673:21;:50::i;:::-;7760:2;-1:-1:-1;;;;;7739:56:115;7754:4;-1:-1:-1;;;;;7739:56:115;7744:8;-1:-1:-1;;;;;7739:56:115;;7764:6;7772:8;7782:12;7739:56;;;;;;;;:::i;:::-;;;;;;;;7825:2;-1:-1:-1;;;;;7810:26:115;7819:4;-1:-1:-1;;;;;7810:26:115;-1:-1:-1;;;;;;;;;;;7829:6:115;7810:26;;;;6724:25:117;;6712:2;6697:18;;6578:177;1355:203:29;1482:68;;-1:-1:-1;;;;;34305:15:117;;;1482:68:29;;;34287:34:117;34357:15;;34337:18;;;34330:43;34389:18;;;34382:34;;;1455:96:29;;1475:5;;-1:-1:-1;;;1505:27:29;34222:18:117;;1482:68:29;34022:400:117;26861:262:52;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:52;;-1:-1:-1;;;;;42345:15:117;;;27080:36:52;;;42327:34:117;42397:15;;;42377:18;;;42370:43;42449:15;;;42429:18;;;42422:43;26995:56:52;;-1:-1:-1;27080:11:52;;;;-1:-1:-1;27080:11:52;;42262:18:117;;27080:36:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:52;;26861:262;-1:-1:-1;;;;;;;26861:262:52:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;11369:510:115:-;11612:104;;-1:-1:-1;;;11612:104:115;;-1:-1:-1;;;;;41599:32:117;;11612:104:115;;;41581:51:117;440:31:79;41648:18:117;;;41641:34;11578:19:115;;332:42:79;;11612:54:115;;41554:18:117;;11612:104:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11578:138;-1:-1:-1;;;;;;11730:25:115;;;11726:147;;11771:91;;-1:-1:-1;;;11771:91:115;;-1:-1:-1;;;;;11771:39:115;;;;;:91;;11811:8;;11821:4;;11827:2;;11831:6;;11839:8;;11849:12;;11771:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11568:311;11369:510;;;;;;:::o;12568:677::-;12847:105;;-1:-1:-1;;;12847:105:115;;-1:-1:-1;;;;;41599:32:117;;12847:105:115;;;41581:51:117;538:34:79;41648:18:117;;;41641:34;12813:19:115;;332:42:79;;12847:54:115;;41554:18:117;;12847:105:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12813:139;-1:-1:-1;;;;;;12966:25:115;;;12962:277;;13007:96;;-1:-1:-1;;;13007:96:115;;-1:-1:-1;;;;;13007:44:115;;;;;:96;;13052:8;;13062:4;;13068:2;;13072:6;;13080:8;;13090:12;;13007:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12962:277;;;13124:19;13120:119;;;-1:-1:-1;;;;;13163:13:115;;1702:19:35;:23;13159:69:115;;13187:41;;-1:-1:-1;;;13187:41:115;;;;;;;;;;;1342:472:52;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:52;;1606:3;1655;-1:-1:-1;;;;;1655:14:52;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:52;;1623:119;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1623:119:52;;;;;;;;;;;;;;;-1:-1:-1;;;;;1623:119:52;;;;;;1574:212;;;;;-1:-1:-1;;;;;;1574:212:52;;;;;;-1:-1:-1;1623:119:52;1756:8;;1574:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1574:212:52;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1803:4:52;;1342:472;-1:-1:-1;;;;;;;1342:472:52:o;5918:440:91:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:91;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:91;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:91;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:91;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:91:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:91;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:91;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:91:o;5196:642:29:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:29;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:29;;45855:2:117;5720:111:29;;;45837:21:117;45894:2;45874:18;;;45867:30;45933:34;45913:18;;;45906:62;-1:-1:-1;;;45984:18:117;;;45977:40;46034:19;;5720:111:29;45653:406:117;6364:453:91;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:91;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:91;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:91;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:91;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:91;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:91:o;60355:828:52:-;60600:10;60594:17;60637:9;60631:16;-1:-1:-1;;;;;60670:26:52;;60666:422;;-1:-1:-1;;;;;60801:27:52;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:52;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:52;;61003:71;60950:125;;;6724:25:117;-1:-1:-1;;;;;60950:35:52;;;;;6697:18:117;;60950:125:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:52;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:52;;61142:34;;;;:::i;:::-;60355:828;;;:::o;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:52;;2716:3;2765;-1:-1:-1;;;;;2765:14:52;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:52;;;;;;;:::i;57949:1061::-;58197:10;58191:17;58234:9;58228:16;-1:-1:-1;;;;;58267:26:52;;58263:652;;-1:-1:-1;;;;;58387:27:52;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:52;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:52;;58589:71;58536:125;;;6724:25:117;-1:-1:-1;;;;;58536:35:52;;;;;6697:18:117;;58536:125:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;58835:10;58828:24;58887:3;58876:9;58869:22;-1:-1:-1;;;;;58931:27:52;;58924:35;;;;:::i;4108:223:35:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:35;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:35:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:35;;;8113:60;;;;-1:-1:-1;;;8113:60:35;;47246:2:117;8113:60:35;;;47228:21:117;47285:2;47265:18;;;47258:30;47324:31;47304:18;;;47297:59;47373:18;;8113:60:35;47044:353:117;8113:60:35;-1:-1:-1;8208:10:35;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:35;;;;;;;;:::i;14:658:117:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:117;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:117;;14:658;-1:-1:-1;;;;;;14:658:117:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:117;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:117;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:117:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:348::-;1485:8;1495:6;1549:3;1542:4;1534:6;1530:17;1526:27;1516:55;;1567:1;1564;1557:12;1516:55;-1:-1:-1;1590:20:117;;-1:-1:-1;;;;;1622:30:117;;1619:50;;;1665:1;1662;1655:12;1619:50;1702:4;1694:6;1690:17;1678:29;;1754:3;1747:4;1738:6;1730;1726:19;1722:30;1719:39;1716:59;;;1771:1;1768;1761:12;1716:59;1433:348;;;;;:::o;1786:131::-;-1:-1:-1;;;;;1861:31:117;;1851:42;;1841:70;;1907:1;1904;1897:12;1922:856;2023:6;2031;2039;2047;2055;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2164:9;2151:23;-1:-1:-1;;;;;2234:2:117;2226:6;2223:14;2220:34;;;2250:1;2247;2240:12;2220:34;2289:59;2340:7;2331:6;2320:9;2316:22;2289:59;:::i;:::-;2367:8;;-1:-1:-1;2263:85:117;-1:-1:-1;2455:2:117;2440:18;;2427:32;;-1:-1:-1;2471:16:117;;;2468:36;;;2500:1;2497;2490:12;2468:36;;2539:61;2592:7;2581:8;2570:9;2566:24;2539:61;:::i;:::-;2619:8;;-1:-1:-1;2513:87:117;-1:-1:-1;;2704:2:117;2689:18;;2676:32;2717:31;2676:32;2717:31;:::i;:::-;2767:5;2757:15;;;1922:856;;;;;;;;:::o;2783:367::-;2846:8;2856:6;2910:3;2903:4;2895:6;2891:17;2887:27;2877:55;;2928:1;2925;2918:12;2877:55;-1:-1:-1;2951:20:117;;-1:-1:-1;;;;;2983:30:117;;2980:50;;;3026:1;3023;3016:12;2980:50;3063:4;3055:6;3051:17;3039:29;;3123:3;3116:4;3106:6;3103:1;3099:14;3091:6;3087:27;3083:38;3080:47;3077:67;;;3140:1;3137;3130:12;3155:640;3259:6;3267;3275;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3512:2:117;3497:18;;3484:32;;-1:-1:-1;3567:2:117;3552:18;;3539:32;-1:-1:-1;;;;;3583:30:117;;3580:50;;;3626:1;3623;3616:12;3580:50;3665:70;3727:7;3718:6;3707:9;3703:22;3665:70;:::i;:::-;3155:640;;;;-1:-1:-1;3754:8:117;-1:-1:-1;;;;3155:640:117:o;3800:315::-;3868:6;3876;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;3984:9;3971:23;4003:31;4028:5;4003:31;:::i;:::-;4053:5;4105:2;4090:18;;;;4077:32;;-1:-1:-1;;;3800:315:117:o;4312:247::-;4371:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:52;;;4440:1;4437;4430:12;4392:52;4479:9;4466:23;4498:31;4523:5;4498:31;:::i;4564:457::-;4641:12;;-1:-1:-1;;;;;4637:38:117;4625:51;;4729:4;4718:16;;;4712:23;4737:4;4708:34;4692:14;;;4685:58;4789:4;4778:16;;;4772:23;4814:10;4856:21;;;4840:14;;;4833:45;;;;4931:4;4920:16;;;4914:23;4910:32;;;4894:14;;;4887:56;5007:4;4996:16;;;4990:23;4986:2;4975:39;4959:14;;4952:63;4564:457::o;5026:249::-;5212:3;5197:19;;5225:44;5201:9;5251:6;5225:44;:::i;5280:180::-;5339:6;5392:2;5380:9;5371:7;5367:23;5363:32;5360:52;;;5408:1;5405;5398:12;5360:52;-1:-1:-1;5431:23:117;;5280:180;-1:-1:-1;5280:180:117:o;5465:505::-;5560:6;5568;5576;5629:2;5617:9;5608:7;5604:23;5600:32;5597:52;;;5645:1;5642;5635:12;5597:52;5681:9;5668:23;5658:33;;5742:2;5731:9;5727:18;5714:32;-1:-1:-1;;;;;5761:6:117;5758:30;5755:50;;;5801:1;5798;5791:12;5755:50;5840:70;5902:7;5893:6;5882:9;5878:22;5840:70;:::i;:::-;5465:505;;5929:8;;-1:-1:-1;5814:96:117;;-1:-1:-1;;;;5465:505:117:o;5975:598::-;6061:6;6069;6077;6085;6138:3;6126:9;6117:7;6113:23;6109:33;6106:53;;;6155:1;6152;6145:12;6106:53;6194:9;6181:23;6213:31;6238:5;6213:31;:::i;:::-;6263:5;-1:-1:-1;6320:2:117;6305:18;;6292:32;6333:33;6292:32;6333:33;:::i;:::-;6385:7;-1:-1:-1;6444:2:117;6429:18;;6416:32;6457:33;6416:32;6457:33;:::i;:::-;5975:598;;;;-1:-1:-1;6509:7:117;;6563:2;6548:18;6535:32;;-1:-1:-1;;5975:598:117:o;6760:127::-;6821:10;6816:3;6812:20;6809:1;6802:31;6852:4;6849:1;6842:15;6876:4;6873:1;6866:15;6892:275;6963:2;6957:9;7028:2;7009:13;;-1:-1:-1;;7005:27:117;6993:40;;-1:-1:-1;;;;;7048:34:117;;7084:22;;;7045:62;7042:88;;;7110:18;;:::i;:::-;7146:2;7139:22;6892:275;;-1:-1:-1;6892:275:117:o;7172:186::-;7220:4;-1:-1:-1;;;;;7245:6:117;7242:30;7239:56;;;7275:18;;:::i;:::-;-1:-1:-1;7341:2:117;7320:15;-1:-1:-1;;7316:29:117;7347:4;7312:40;;7172:186::o;7363:462::-;7405:5;7458:3;7451:4;7443:6;7439:17;7435:27;7425:55;;7476:1;7473;7466:12;7425:55;7512:6;7499:20;7543:48;7559:31;7587:2;7559:31;:::i;:::-;7543:48;:::i;:::-;7616:2;7607:7;7600:19;7662:3;7655:4;7650:2;7642:6;7638:15;7634:26;7631:35;7628:55;;;7679:1;7676;7669:12;7628:55;7744:2;7737:4;7729:6;7725:17;7718:4;7709:7;7705:18;7692:55;7792:1;7767:16;;;7785:4;7763:27;7756:38;;;;7771:7;7363:462;-1:-1:-1;;;7363:462:117:o;7830:118::-;7916:5;7909:13;7902:21;7895:5;7892:32;7882:60;;7938:1;7935;7928:12;7953:938;8071:6;8079;8087;8095;8103;8111;8119;8172:3;8160:9;8151:7;8147:23;8143:33;8140:53;;;8189:1;8186;8179:12;8140:53;8225:9;8212:23;8202:33;;8286:2;8275:9;8271:18;8258:32;-1:-1:-1;;;;;8305:6:117;8302:30;8299:50;;;8345:1;8342;8335:12;8299:50;8368:49;8409:7;8400:6;8389:9;8385:22;8368:49;:::i;:::-;8358:59;;;8467:2;8456:9;8452:18;8439:32;8480:31;8505:5;8480:31;:::i;:::-;8530:5;-1:-1:-1;8587:2:117;8572:18;;8559:32;8600:30;8559:32;8600:30;:::i;:::-;8649:7;-1:-1:-1;8708:3:117;8693:19;;8680:33;8722;8680;8722;:::i;:::-;7953:938;;;;-1:-1:-1;7953:938:117;;;;8774:7;8828:3;8813:19;;8800:33;;-1:-1:-1;8880:3:117;8865:19;;;8852:33;;7953:938;-1:-1:-1;;7953:938:117:o;9104:705::-;9327:2;9379:21;;;9449:13;;9352:18;;;9471:22;;;9298:4;;9327:2;9550:15;;;;9524:2;9509:18;;;9298:4;9593:190;9607:6;9604:1;9601:13;9593:190;;;9656:45;9697:3;9688:6;9682:13;9656:45;:::i;:::-;9758:15;;;;9730:4;9721:14;;;;;9629:1;9622:9;9593:190;;9814:456;9891:6;9899;9907;9960:2;9948:9;9939:7;9935:23;9931:32;9928:52;;;9976:1;9973;9966:12;9928:52;10015:9;10002:23;10034:31;10059:5;10034:31;:::i;:::-;10084:5;-1:-1:-1;10141:2:117;10126:18;;10113:32;10154:33;10113:32;10154:33;:::i;:::-;9814:456;;10206:7;;-1:-1:-1;;;10260:2:117;10245:18;;;;10232:32;;9814:456::o;10275:248::-;10343:6;10351;10404:2;10392:9;10383:7;10379:23;10375:32;10372:52;;;10420:1;10417;10410:12;10372:52;-1:-1:-1;;10443:23:117;;;10513:2;10498:18;;;10485:32;;-1:-1:-1;10275:248:117:o;11799:1038::-;11923:6;11931;11939;11947;11955;11963;12016:3;12004:9;11995:7;11991:23;11987:33;11984:53;;;12033:1;12030;12023:12;11984:53;12072:9;12059:23;12091:31;12116:5;12091:31;:::i;:::-;12141:5;-1:-1:-1;12198:2:117;12183:18;;12170:32;12246:4;12233:18;;12221:31;;12211:59;;12266:1;12263;12256:12;12211:59;12289:7;-1:-1:-1;12347:2:117;12332:18;;12319:32;-1:-1:-1;;;;;12400:14:117;;;12397:34;;;12427:1;12424;12417:12;12397:34;12466:59;12517:7;12508:6;12497:9;12493:22;12466:59;:::i;:::-;12544:8;;-1:-1:-1;12440:85:117;-1:-1:-1;12632:2:117;12617:18;;12604:32;;-1:-1:-1;12648:16:117;;;12645:36;;;12677:1;12674;12667:12;12645:36;;12716:61;12769:7;12758:8;12747:9;12743:24;12716:61;:::i;:::-;11799:1038;;;;-1:-1:-1;11799:1038:117;;-1:-1:-1;11799:1038:117;;12796:8;;11799:1038;-1:-1:-1;;;11799:1038:117:o;12842:525::-;12928:6;12936;12944;12952;13005:3;12993:9;12984:7;12980:23;12976:33;12973:53;;;13022:1;13019;13012:12;12973:53;13061:9;13048:23;13080:31;13105:5;13080:31;:::i;:::-;13130:5;-1:-1:-1;13187:2:117;13172:18;;13159:32;13200:33;13159:32;13200:33;:::i;:::-;12842:525;;13252:7;;-1:-1:-1;;;;13306:2:117;13291:18;;13278:32;;13357:2;13342:18;13329:32;;12842:525::o;13372:632::-;13543:2;13595:21;;;13665:13;;13568:18;;;13687:22;;;13514:4;;13543:2;13766:15;;;;13740:2;13725:18;;;13514:4;13809:169;13823:6;13820:1;13817:13;13809:169;;;13884:13;;13872:26;;13953:15;;;;13918:12;;;;13845:1;13838:9;13809:169;;14427:613;14515:6;14523;14531;14539;14592:2;14580:9;14571:7;14567:23;14563:32;14560:52;;;14608:1;14605;14598:12;14560:52;14647:9;14634:23;14666:31;14691:5;14666:31;:::i;:::-;14716:5;-1:-1:-1;14768:2:117;14753:18;;14740:32;;-1:-1:-1;14823:2:117;14808:18;;14795:32;-1:-1:-1;;;;;14839:30:117;;14836:50;;;14882:1;14879;14872:12;14836:50;14921:59;14972:7;14963:6;14952:9;14948:22;14921:59;:::i;15045:1065::-;15162:6;15170;15178;15186;15194;15202;15210;15263:3;15251:9;15242:7;15238:23;15234:33;15231:53;;;15280:1;15277;15270:12;15231:53;15319:9;15306:23;15338:31;15363:5;15338:31;:::i;:::-;15388:5;-1:-1:-1;15445:2:117;15430:18;;15417:32;15458:33;15417:32;15458:33;:::i;:::-;15510:7;-1:-1:-1;15564:2:117;15549:18;;15536:32;;-1:-1:-1;15619:2:117;15604:18;;15591:32;-1:-1:-1;;;;;15672:14:117;;;15669:34;;;15699:1;15696;15689:12;15669:34;15738:59;15789:7;15780:6;15769:9;15765:22;15738:59;:::i;:::-;15816:8;;-1:-1:-1;15712:85:117;-1:-1:-1;15904:3:117;15889:19;;15876:33;;-1:-1:-1;15921:16:117;;;15918:36;;;15950:1;15947;15940:12;15918:36;;15989:61;16042:7;16031:8;16020:9;16016:24;15989:61;:::i;:::-;15045:1065;;;;-1:-1:-1;15045:1065:117;;-1:-1:-1;15045:1065:117;;;;15963:87;;-1:-1:-1;;;15045:1065:117:o;16115:383::-;16192:6;16200;16208;16261:2;16249:9;16240:7;16236:23;16232:32;16229:52;;;16277:1;16274;16267:12;16229:52;16316:9;16303:23;16335:31;16360:5;16335:31;:::i;:::-;16385:5;16437:2;16422:18;;16409:32;;-1:-1:-1;16488:2:117;16473:18;;;16460:32;;16115:383;-1:-1:-1;;;16115:383:117:o;16763:276::-;16821:6;16874:2;16862:9;16853:7;16849:23;16845:32;16842:52;;;16890:1;16887;16880:12;16842:52;16929:9;16916:23;16979:10;16972:5;16968:22;16961:5;16958:33;16948:61;;17005:1;17002;16995:12;17238:523;17324:6;17332;17340;17393:2;17381:9;17372:7;17368:23;17364:32;17361:52;;;17409:1;17406;17399:12;17361:52;17448:9;17435:23;17467:31;17492:5;17467:31;:::i;:::-;17517:5;-1:-1:-1;17569:2:117;17554:18;;17541:32;;-1:-1:-1;17624:2:117;17609:18;;17596:32;-1:-1:-1;;;;;17640:30:117;;17637:50;;;17683:1;17680;17673:12;17637:50;17706:49;17747:7;17738:6;17727:9;17723:22;17706:49;:::i;:::-;17696:59;;;17238:523;;;;;:::o;17766:665::-;17861:6;17869;17877;17885;17938:3;17926:9;17917:7;17913:23;17909:33;17906:53;;;17955:1;17952;17945:12;17906:53;17994:9;17981:23;18013:31;18038:5;18013:31;:::i;:::-;18063:5;-1:-1:-1;18120:2:117;18105:18;;18092:32;18133:33;18092:32;18133:33;:::i;:::-;18185:7;-1:-1:-1;18239:2:117;18224:18;;18211:32;;-1:-1:-1;18294:2:117;18279:18;;18266:32;-1:-1:-1;;;;;18310:30:117;;18307:50;;;18353:1;18350;18343:12;18307:50;18376:49;18417:7;18408:6;18397:9;18393:22;18376:49;:::i;:::-;18366:59;;;17766:665;;;;;;;:::o;18755:388::-;18823:6;18831;18884:2;18872:9;18863:7;18859:23;18855:32;18852:52;;;18900:1;18897;18890:12;18852:52;18939:9;18926:23;18958:31;18983:5;18958:31;:::i;:::-;19008:5;-1:-1:-1;19065:2:117;19050:18;;19037:32;19078:33;19037:32;19078:33;:::i;:::-;19130:7;19120:17;;;18755:388;;;;;:::o;19707:923::-;19815:6;19823;19831;19839;19847;19855;19908:3;19896:9;19887:7;19883:23;19879:33;19876:53;;;19925:1;19922;19915:12;19876:53;19964:9;19951:23;19983:31;20008:5;19983:31;:::i;:::-;20033:5;-1:-1:-1;20085:2:117;20070:18;;20057:32;;-1:-1:-1;20140:2:117;20125:18;;20112:32;-1:-1:-1;;;;;20193:14:117;;;20190:34;;;20220:1;20217;20210:12;20635:478;20714:6;20722;20730;20783:2;20771:9;20762:7;20758:23;20754:32;20751:52;;;20799:1;20796;20789:12;20751:52;20835:9;20822:23;20812:33;;20896:2;20885:9;20881:18;20868:32;-1:-1:-1;;;;;20915:6:117;20912:30;20909:50;;;20955:1;20952;20945:12;20909:50;20994:59;21045:7;21036:6;21025:9;21021:22;20994:59;:::i;21118:380::-;21197:1;21193:12;;;;21240;;;21261:61;;21315:4;21307:6;21303:17;21293:27;;21261:61;21368:2;21360:6;21357:14;21337:18;21334:38;21331:161;;21414:10;21409:3;21405:20;21402:1;21395:31;21449:4;21446:1;21439:15;21477:4;21474:1;21467:15;21331:161;;21118:380;;;:::o;21503:267::-;21592:6;21587:3;21580:19;21644:6;21637:5;21630:4;21625:3;21621:14;21608:43;-1:-1:-1;21696:1:117;21671:16;;;21689:4;21667:27;;;21660:38;;;;21752:2;21731:15;;;-1:-1:-1;;21727:29:117;21718:39;;;21714:50;;21503:267::o;21775:640::-;-1:-1:-1;;;;;22070:32:117;;22052:51;;22151:4;22139:17;;22134:2;22119:18;;22112:45;22193:3;22188:2;22173:18;;22166:31;;;-1:-1:-1;;22220:63:117;;22263:19;;22255:6;22247;22220:63;:::i;:::-;22331:9;22323:6;22319:22;22314:2;22303:9;22299:18;22292:50;22359;22402:6;22394;22386;22359:50;:::i;:::-;22351:58;21775:640;-1:-1:-1;;;;;;;;;21775:640:117:o;22420:435::-;22701:1;22697;22692:3;22688:11;22684:19;22676:6;22672:32;22661:9;22654:51;22741:6;22736:2;22725:9;22721:18;22714:34;22784:2;22779;22768:9;22764:18;22757:30;22635:4;22804:45;22845:2;22834:9;22830:18;22822:6;22804:45;:::i;22860:613::-;23146:3;23128:22;;;23187:2;23166:19;;;23159:31;-1:-1:-1;;;23221:3:117;23206:19;;23199:45;-1:-1:-1;;;;;23356:15:117;;;23349:4;23334:20;;23327:45;23408:15;;;;23403:2;23388:18;;23381:43;-1:-1:-1;23440:18:117;;23433:34;;;;23276:3;23261:19;;22860:613::o;23478:509::-;23736:2;23718:21;;;23775:2;23755:18;;;23748:30;-1:-1:-1;;;23809:3:117;23794:19;;23787:44;-1:-1:-1;;;;;23905:32:117;;;;23898:4;23883:20;;23876:62;-1:-1:-1;23954:18:117;;23947:34;23863:3;23848:19;;23478:509::o;23992:514::-;24191:25;;;24252:2;24247;24232:18;;24225:30;;;24271:18;;24264:34;;;-1:-1:-1;;;;;;24310:31:117;;24307:51;;;24354:1;24351;24344:12;24307:51;24388:6;24385:1;24381:14;24445:6;24437;24432:2;24421:9;24417:18;24404:48;24473:22;;;;24497:2;24469:31;;23992:514;-1:-1:-1;;;;23992:514:117:o;24744:245::-;24811:6;24864:2;24852:9;24843:7;24839:23;24835:32;24832:52;;;24880:1;24877;24870:12;24832:52;24912:9;24906:16;24931:28;24953:5;24931:28;:::i;24994:127::-;25055:10;25050:3;25046:20;25043:1;25036:31;25086:4;25083:1;25076:15;25110:4;25107:1;25100:15;25126:136;25161:3;-1:-1:-1;;;25182:22:117;;25179:48;;25207:18;;:::i;:::-;-1:-1:-1;25247:1:117;25243:13;;25126:136::o;25267:127::-;25328:10;25323:3;25319:20;25316:1;25309:31;25359:4;25356:1;25349:15;25383:4;25380:1;25373:15;25399:216;25463:9;;;25491:11;;;25438:3;25521:9;;25549:10;;25545:19;;25574:10;;25566:19;;25542:44;25539:70;;;25589:18;;:::i;:::-;25539:70;;25399:216;;;;:::o;25620:200::-;25686:9;;;25659:4;25714:9;;25742:10;;25754:12;;;25738:29;25777:12;;;25769:21;;25735:56;25732:82;;;25794:18;;:::i;25825:529::-;26082:6;26071:9;26064:25;26154:1;26150;26145:3;26141:11;26137:19;26129:6;26125:32;26120:2;26109:9;26105:18;26098:60;26194:6;26189:2;26178:9;26174:18;26167:34;26237:6;26232:2;26221:9;26217:18;26210:34;26281:3;26275;26264:9;26260:19;26253:32;26045:4;26302:46;26343:3;26332:9;26328:19;26320:6;26302:46;:::i;26359:135::-;26398:3;26419:17;;;26416:43;;26439:18;;:::i;:::-;-1:-1:-1;26486:1:117;26475:13;;26359:135::o;26499:127::-;26560:10;26555:3;26551:20;26548:1;26541:31;26591:4;26588:1;26581:15;26615:4;26612:1;26605:15;26631:184;26701:6;26754:2;26742:9;26733:7;26729:23;26725:32;26722:52;;;26770:1;26767;26760:12;26722:52;-1:-1:-1;26793:16:117;;26631:184;-1:-1:-1;26631:184:117:o;26820:1036::-;26940:6;26971:2;27014;27002:9;26993:7;26989:23;26985:32;26982:52;;;27030:1;27027;27020:12;26982:52;27063:9;27057:16;-1:-1:-1;;;;;27133:2:117;27125:6;27122:14;27119:34;;;27149:1;27146;27139:12;27119:34;27187:6;27176:9;27172:22;27162:32;;27232:7;27225:4;27221:2;27217:13;27213:27;27203:55;;27254:1;27251;27244:12;27203:55;27283:2;27277:9;27305:2;27301;27298:10;27295:36;;;27311:18;;:::i;:::-;27357:2;27354:1;27350:10;27340:20;;27380:28;27404:2;27400;27396:11;27380:28;:::i;:::-;27442:15;;;27512:11;;;27508:20;;;27473:12;;;;27540:19;;;27537:39;;;27572:1;27569;27562:12;27537:39;27596:11;;;;27616:210;27632:6;27627:3;27624:15;27616:210;;;27705:3;27699:10;27686:23;;27722:31;27747:5;27722:31;:::i;:::-;27766:18;;;27649:12;;;;27804;;;;27616:210;;;27845:5;26820:1036;-1:-1:-1;;;;;;;;26820:1036:117:o;27861:125::-;27926:9;;;27947:10;;;27944:36;;;27960:18;;:::i;28828:545::-;28930:2;28925:3;28922:11;28919:448;;;28966:1;28991:5;28987:2;28980:17;29036:4;29032:2;29022:19;29106:2;29094:10;29090:19;29087:1;29083:27;29077:4;29073:38;29142:4;29130:10;29127:20;29124:47;;;-1:-1:-1;29165:4:117;29124:47;29220:2;29215:3;29211:12;29208:1;29204:20;29198:4;29194:31;29184:41;;29275:82;29293:2;29286:5;29283:13;29275:82;;;29338:17;;;29319:1;29308:13;29275:82;;;29279:3;;;28828:545;;;:::o;29549:1206::-;-1:-1:-1;;;;;29668:3:117;29665:27;29662:53;;;29695:18;;:::i;:::-;29724:94;29814:3;29774:38;29806:4;29800:11;29774:38;:::i;:::-;29768:4;29724:94;:::i;:::-;29844:1;29869:2;29864:3;29861:11;29886:1;29881:616;;;;30541:1;30558:3;30555:93;;;-1:-1:-1;30614:19:117;;;30601:33;30555:93;-1:-1:-1;;29506:1:117;29502:11;;;29498:24;29494:29;29484:40;29530:1;29526:11;;;29481:57;30661:78;;29854:895;;29881:616;28775:1;28768:14;;;28812:4;28799:18;;-1:-1:-1;;29917:17:117;;;30018:9;30040:229;30054:7;30051:1;30048:14;30040:229;;;30143:19;;;30130:33;30115:49;;30250:4;30235:20;;;;30203:1;30191:14;;;;30070:12;30040:229;;;30044:3;30297;30288:7;30285:16;30282:159;;;30421:1;30417:6;30411:3;30405;30402:1;30398:11;30394:21;30390:34;30386:39;30373:9;30368:3;30364:19;30351:33;30347:79;30339:6;30332:95;30282:159;;;30484:1;30478:3;30475:1;30471:11;30467:19;30461:4;30454:33;29854:895;;29549:1206;;;:::o;30950:280::-;31049:6;31102:2;31090:9;31081:7;31077:23;31073:32;31070:52;;;31118:1;31115;31108:12;31070:52;31150:9;31144:16;31169:31;31194:5;31169:31;:::i;31519:128::-;31586:9;;;31607:11;;;31604:37;;;31621:18;;:::i;31652:201::-;31690:3;31718:10;31763:2;31756:5;31752:14;31790:2;31781:7;31778:15;31775:41;;31796:18;;:::i;:::-;31845:1;31832:15;;31652:201;-1:-1:-1;;;31652:201:117:o;31858:228::-;31955:2;31925:17;;;31944;;;;31921:41;32028:26;31977:36;;-1:-1:-1;;32015:41:117;;31974:83;31971:109;;;32060:18;;:::i;32465:172::-;32532:10;32562;;;32574;;;32558:27;;32597:11;;;32594:37;;;32611:18;;:::i;32642:148::-;32730:4;32709:12;;;32723;;;32705:31;;32748:13;;32745:39;;;32764:18;;:::i;32795:217::-;32835:1;32861;32851:132;;32905:10;32900:3;32896:20;32893:1;32886:31;32940:4;32937:1;32930:15;32968:4;32965:1;32958:15;32851:132;-1:-1:-1;32997:9:117;;32795:217::o;34427:305::-;34514:6;34522;34530;34583:2;34571:9;34562:7;34558:23;34554:32;34551:52;;;34599:1;34596;34589:12;34551:52;34628:9;34622:16;34612:26;;34678:2;34667:9;34663:18;34657:25;34647:35;;34722:2;34711:9;34707:18;34701:25;34691:35;;34427:305;;;;;:::o;38829:450::-;39050:6;39039:9;39032:25;39093:2;39088;39077:9;39073:18;39066:30;39013:4;39119:45;39160:2;39149:9;39145:18;39137:6;39119:45;:::i;:::-;39212:9;39204:6;39200:22;39195:2;39184:9;39180:18;39173:50;39240:33;39266:6;39258;39240:33;:::i;39695:151::-;39785:4;39778:12;;;39764;;;39760:31;;39803:14;;39800:40;;;39820:18;;:::i;39851:422::-;39940:1;39983:5;39940:1;39997:270;40018:7;40008:8;40005:21;39997:270;;;40077:4;40073:1;40069:6;40065:17;40059:4;40056:27;40053:53;;;40086:18;;:::i;:::-;40136:7;40126:8;40122:22;40119:55;;;40156:16;;;;40119:55;40235:22;;;;40195:15;;;;39997:270;;;40001:3;39851:422;;;;;:::o;40278:806::-;40327:5;40357:8;40347:80;;-1:-1:-1;40398:1:117;40412:5;;40347:80;40446:4;40436:76;;-1:-1:-1;40483:1:117;40497:5;;40436:76;40528:4;40546:1;40541:59;;;;40614:1;40609:130;;;;40521:218;;40541:59;40571:1;40562:10;;40585:5;;;40609:130;40646:3;40636:8;40633:17;40630:43;;;40653:18;;:::i;:::-;-1:-1:-1;;40709:1:117;40695:16;;40724:5;;40521:218;;40823:2;40813:8;40810:16;40804:3;40798:4;40795:13;40791:36;40785:2;40775:8;40772:16;40767:2;40761:4;40758:12;40754:35;40751:77;40748:159;;;-1:-1:-1;40860:19:117;;;40892:5;;40748:159;40939:34;40964:8;40958:4;40939:34;:::i;:::-;41009:6;41005:1;41001:6;40997:19;40988:7;40985:32;40982:58;;;41020:18;;:::i;:::-;41058:20;;40278:806;-1:-1:-1;;;40278:806:117:o;41089:140::-;41147:5;41176:47;41217:4;41207:8;41203:19;41197:4;41176:47;:::i;41234:168::-;41307:9;;;41338;;41355:15;;;41349:22;;41335:37;41325:71;;41376:18;;:::i;42476:462::-;42571:6;42579;42587;42595;42648:3;42636:9;42627:7;42623:23;42619:33;42616:53;;;42665:1;42662;42655:12;42616:53;42694:9;42688:16;42678:26;;42747:2;42736:9;42732:18;42726:25;42795:5;42791:2;42780:21;42773:5;42770:32;42760:60;;42816:1;42813;42806:12;42760:60;42884:2;42869:18;;42863:25;42928:2;42913:18;;;42907:25;42476:462;;42839:5;;-1:-1:-1;42476:462:117;-1:-1:-1;;;42476:462:117:o;43222:732::-;-1:-1:-1;;;;;43565:15:117;;;43547:34;;43617:15;;;43612:2;43597:18;;43590:43;43669:15;;43664:2;43649:18;;43642:43;43716:2;43701:18;;43694:34;;;43765:3;43759;43744:19;;43737:32;;;43490:4;;43792:46;;43818:19;;43810:6;43792:46;:::i;:::-;43887:9;43879:6;43875:22;43869:3;43858:9;43854:19;43847:51;43915:33;43941:6;43933;43915:33;:::i;43959:522::-;-1:-1:-1;;;;;44245:15:117;;;44227:34;;44297:15;;44292:2;44277:18;;44270:43;44360:2;44349:22;;;44344:2;44329:18;;44322:50;44408:3;44403:2;44388:18;;44381:31;;;44170:4;;44429:46;;44455:19;;44447:6;44429:46;:::i;44486:510::-;-1:-1:-1;;;;;44741:32:117;;44723:51;;44810:2;44805;44790:18;;44783:30;;;-1:-1:-1;;44836:45:117;;44862:18;;44854:6;44836:45;:::i;45001:647::-;45080:6;45133:2;45121:9;45112:7;45108:23;45104:32;45101:52;;;45149:1;45146;45139:12;45101:52;45182:9;45176:16;-1:-1:-1;;;;;45207:6:117;45204:30;45201:50;;;45247:1;45244;45237:12;45201:50;45270:22;;45323:4;45315:13;;45311:27;-1:-1:-1;45301:55:117;;45352:1;45349;45342:12;45301:55;45381:2;45375:9;45406:48;45422:31;45450:2;45422:31;:::i;45406:48::-;45477:2;45470:5;45463:17;45517:7;45512:2;45507;45503;45499:11;45495:20;45492:33;45489:53;;;45538:1;45535;45528:12;45489:53;45551:67;45615:2;45610;45603:5;45599:14;45594:2;45590;45586:11;45551:67;:::i;46752:287::-;46881:3;46919:6;46913:13;46935:66;46994:6;46989:3;46982:4;46974:6;46970:17;46935:66;:::i;:::-;47017:16;;;;;46752:287;-1:-1:-1;;46752:287:117:o",
    "linkReferences": {},
    "immutableReferences": {
      "76099": [
        {
          "start": 1662,
          "length": 32
        },
        {
          "start": 4802,
          "length": 32
        },
        {
          "start": 4913,
          "length": 32
        },
        {
          "start": 5802,
          "length": 32
        },
        {
          "start": 6085,
          "length": 32
        },
        {
          "start": 6292,
          "length": 32
        },
        {
          "start": 7245,
          "length": 32
        },
        {
          "start": 7648,
          "length": 32
        },
        {
          "start": 9312,
          "length": 32
        },
        {
          "start": 10714,
          "length": 32
        },
        {
          "start": 10916,
          "length": 32
        },
        {
          "start": 11068,
          "length": 32
        },
        {
          "start": 11172,
          "length": 32
        },
        {
          "start": 11308,
          "length": 32
        },
        {
          "start": 13822,
          "length": 32
        },
        {
          "start": 13973,
          "length": 32
        },
        {
          "start": 18757,
          "length": 32
        },
        {
          "start": 19332,
          "length": 32
        }
      ],
      "87695": [
        {
          "start": 3624,
          "length": 32
        },
        {
          "start": 7013,
          "length": 32
        }
      ],
      "87698": [
        {
          "start": 2238,
          "length": 32
        },
        {
          "start": 7170,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "FLAT_COST_SPONSORSHIP()": "b132a50d",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "calculateFlowRate(uint32)": "7ae058dc",
    "castrate()": "9903ad38",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getCodeAddress()": "50d75d25",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "initialize(string,string,address)": "077f224a",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "updateCode(address)": "46951954",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALREADY_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CLUB_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CLUB_PROTEGE_CANNOT_BE_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_AMOUNT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL_REACHED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_COIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLAT_COST_SPONSORSHIP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"calculateFlowRate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege[]\",\"name\":\"sponsors\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"calculateFlowRate(uint32)\":{\"details\":\"ISuperfluidClub.calculateSponsorFlowRate implementation\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"initialize(string,string,address)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation - WRONG\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"},\"withdraw(address,uint256)\":{\"details\":\"ISuperfluidClub.withdraw implementation\"}},\"stateVariables\":{\"owner\":{\"details\":\"Returns the address of the current owner.\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"events\":{\"PROTEGE_UPDATED(address,address,uint8,uint32,uint32)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"MAX_SPONSORSHIP_LEVEL()\":{\"notice\":\"Constants\"},\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0xf2d5ffa840297fa34a389ff92bb77833ce06e40a8d924a9a59de4c5cf485f262\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46b8c2a5d3d2c8b566a6a06cbf7c391b3d1b77e27ccba3e2766f69a6a9eedbc4\",\"dweb:/ipfs/QmRDcPm4ckP8mTYFqqj59A6LZY4LHK4eEkn8rmdSAHE4YX\"]},\"src/interfaces/IOwnable.sol\":{\"keccak256\":\"0xf46b2677eaeb6f309b0831329a23eaf25ca435298d1c21b759cea1a0aaacb1a3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://597a1a6dfbfeee598f8ab8099a74fb64561e9db48f4e28f87588f87fae9a2bf8\",\"dweb:/ipfs/QmP1bb1BNSBFGzEnFWWmyycvRMAJeTf1kttrydJAc9iJ84\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0xe0c9bfcd8f74615a02affe574598239159ed7ba74b245032b5d242b48b680dd2\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ff72691706b5196bcbe35df675a9af017ae18f36c6c70903b18d07283e29138d\",\"dweb:/ipfs/QmPa2PKHwQct2CepJCsdBLZqDjW4JpZaB3XmxKFGs5n4uZ\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9\",\"dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CLUB_PROTEGE_CANNOT_BE_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_AMOUNT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MAX_SPONSORSHIP_LEVEL_REACHED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_COIN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLAT_COST_SPONSORSHIP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateFlowRate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege[]",
              "name": "sponsors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "calculateFlowRate(uint32)": {
            "details": "ISuperfluidClub.calculateSponsorFlowRate implementation"
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "initialize(string,string,address)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation - WRONG"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          },
          "withdraw(address,uint256)": {
            "details": "ISuperfluidClub.withdraw implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_SPONSORSHIP_LEVEL()": {
            "notice": "Constants"
          },
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0xf2d5ffa840297fa34a389ff92bb77833ce06e40a8d924a9a59de4c5cf485f262",
        "urls": [
          "bzz-raw://46b8c2a5d3d2c8b566a6a06cbf7c391b3d1b77e27ccba3e2766f69a6a9eedbc4",
          "dweb:/ipfs/QmRDcPm4ckP8mTYFqqj59A6LZY4LHK4eEkn8rmdSAHE4YX"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOwnable.sol": {
        "keccak256": "0xf46b2677eaeb6f309b0831329a23eaf25ca435298d1c21b759cea1a0aaacb1a3",
        "urls": [
          "bzz-raw://597a1a6dfbfeee598f8ab8099a74fb64561e9db48f4e28f87588f87fae9a2bf8",
          "dweb:/ipfs/QmP1bb1BNSBFGzEnFWWmyycvRMAJeTf1kttrydJAc9iJ84"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0xe0c9bfcd8f74615a02affe574598239159ed7ba74b245032b5d242b48b680dd2",
        "urls": [
          "bzz-raw://ff72691706b5196bcbe35df675a9af017ae18f36c6c70903b18d07283e29138d",
          "dweb:/ipfs/QmPa2PKHwQct2CepJCsdBLZqDjW4JpZaB3XmxKFGs5n4uZ"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf",
        "urls": [
          "bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9",
          "dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 87485,
    "exportedSymbols": {
      "IConstantInflowNFT": [
        66024
      ],
      "IConstantOutflowNFT": [
        66078
      ],
      "IERC20": [
        44390
      ],
      "ISuperToken": [
        66767
      ],
      "ISuperfluid": [
        67440
      ],
      "ISuperfluidClub": [
        87643
      ],
      "SuperToken": [
        89407
      ],
      "SuperTokenV1Library": [
        63340
      ],
      "SuperfluidClub": [
        87484
      ],
      "UUPSProxiable": [
        77301
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:10024:111",
    "nodes": [
      {
        "id": 86661,
        "nodeType": "PragmaDirective",
        "src": "32:24:111",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 86663,
        "nodeType": "ImportDirective",
        "src": "58:114:111",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87485,
        "sourceUnit": 63341,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86662,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63340,
              "src": "66:19:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86669,
        "nodeType": "ImportDirective",
        "src": "173:117:111",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87485,
        "sourceUnit": 89408,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86664,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89407,
              "src": "181:10:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86665,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67440,
              "src": "193:11:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86666,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66078,
              "src": "206:19:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86667,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66024,
              "src": "227:18:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86668,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44390,
              "src": "247:6:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86672,
        "nodeType": "ImportDirective",
        "src": "291:78:111",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87485,
        "sourceUnit": 87644,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86670,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 87643,
              "src": "299:15:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86671,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66767,
              "src": "316:11:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86674,
        "nodeType": "ImportDirective",
        "src": "370:111:111",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87485,
        "sourceUnit": 77302,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86673,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77301,
              "src": "378:13:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 87484,
        "nodeType": "ContractDefinition",
        "src": "589:9466:111",
        "nodes": [
          {
            "id": 86685,
            "nodeType": "UsingForDirective",
            "src": "665:42:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86682,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "671:19:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63340,
              "src": "671:19:111"
            },
            "typeName": {
              "id": 86684,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86683,
                "name": "ISuperToken",
                "nameLocations": [
                  "695:11:111"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66767,
                "src": "695:11:111"
              },
              "referencedDeclaration": 66767,
              "src": "695:11:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$66767",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 86687,
            "nodeType": "ErrorDefinition",
            "src": "713:39:111",
            "nodes": [],
            "errorSelector": "fa1faf0a",
            "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
            "nameLocation": "719:30:111",
            "parameters": {
              "id": 86686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:2:111"
            }
          },
          {
            "id": 86689,
            "nodeType": "ErrorDefinition",
            "src": "757:18:111",
            "nodes": [],
            "errorSelector": "71d78b12",
            "name": "NOT_OWNER",
            "nameLocation": "763:9:111",
            "parameters": {
              "id": 86688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "772:2:111"
            }
          },
          {
            "id": 86691,
            "nodeType": "ErrorDefinition",
            "src": "780:20:111",
            "nodes": [],
            "errorSelector": "0733d548",
            "name": "NOT_PROTEGE",
            "nameLocation": "786:11:111",
            "parameters": {
              "id": 86690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "797:2:111"
            }
          },
          {
            "id": 86693,
            "nodeType": "ErrorDefinition",
            "src": "805:24:111",
            "nodes": [],
            "errorSelector": "19c00a85",
            "name": "ALREADY_PROTEGE",
            "nameLocation": "811:15:111",
            "parameters": {
              "id": 86692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "826:2:111"
            }
          },
          {
            "id": 86695,
            "nodeType": "ErrorDefinition",
            "src": "834:37:111",
            "nodes": [],
            "errorSelector": "0bc6c49e",
            "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
            "nameLocation": "840:28:111",
            "parameters": {
              "id": 86694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:2:111"
            }
          },
          {
            "id": 86697,
            "nodeType": "ErrorDefinition",
            "src": "876:24:111",
            "nodes": [],
            "errorSelector": "1133bf0d",
            "name": "NOT_ENOUGH_COIN",
            "nameLocation": "882:15:111",
            "parameters": {
              "id": 86696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "897:2:111"
            }
          },
          {
            "id": 86699,
            "nodeType": "ErrorDefinition",
            "src": "905:38:111",
            "nodes": [],
            "errorSelector": "a2c3d1a5",
            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
            "nameLocation": "911:29:111",
            "parameters": {
              "id": 86698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:2:111"
            }
          },
          {
            "id": 86701,
            "nodeType": "ErrorDefinition",
            "src": "948:23:111",
            "nodes": [],
            "errorSelector": "fae82791",
            "name": "INVALID_AMOUNT",
            "nameLocation": "954:14:111",
            "parameters": {
              "id": 86700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "968:2:111"
            }
          },
          {
            "id": 86703,
            "nodeType": "ErrorDefinition",
            "src": "976:27:111",
            "nodes": [],
            "errorSelector": "8cab1f28",
            "name": "NOT_ENOUGH_BALANCE",
            "nameLocation": "982:18:111",
            "parameters": {
              "id": 86702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:2:111"
            }
          },
          {
            "id": 86705,
            "nodeType": "ErrorDefinition",
            "src": "1008:21:111",
            "nodes": [],
            "errorSelector": "538ba4f9",
            "name": "ZERO_ADDRESS",
            "nameLocation": "1014:12:111",
            "parameters": {
              "id": 86704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1026:2:111"
            }
          },
          {
            "id": 86718,
            "nodeType": "ModifierDefinition",
            "src": "1035:116:111",
            "nodes": [],
            "body": {
              "id": 86717,
              "nodeType": "Block",
              "src": "1056:95:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86707,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1070:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1074:6:111",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1070:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 86709,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86720,
                      "src": "1084:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1070:19:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86715,
                  "nodeType": "IfStatement",
                  "src": "1066:68:111",
                  "trueBody": {
                    "id": 86714,
                    "nodeType": "Block",
                    "src": "1091:43:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86711,
                            "name": "NOT_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86689,
                            "src": "1112:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1112:11:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86713,
                        "nodeType": "RevertStatement",
                        "src": "1105:18:111"
                      }
                    ]
                  }
                },
                {
                  "id": 86716,
                  "nodeType": "PlaceholderStatement",
                  "src": "1143:1:111"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "1044:9:111",
            "parameters": {
              "id": 86706,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1053:2:111"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86720,
            "nodeType": "VariableDeclaration",
            "src": "1157:20:111",
            "nodes": [],
            "baseFunctions": [
              87510
            ],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1172:5:111",
            "scope": 87484,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 86719,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1157:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 86726,
            "nodeType": "EventDefinition",
            "src": "1184:84:111",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "name": "OwnershipTransferred",
            "nameLocation": "1190:20:111",
            "parameters": {
              "id": 86725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86722,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1227:13:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "1211:29:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1211:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86724,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1258:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86726,
                  "src": "1242:24:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1242:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1210:57:111"
            }
          },
          {
            "id": 86744,
            "nodeType": "FunctionDefinition",
            "src": "1274:178:111",
            "nodes": [],
            "body": {
              "id": 86743,
              "nodeType": "Block",
              "src": "1450:2:111",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86738,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86729,
                    "src": "1401:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67440",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 86739,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86732,
                    "src": "1407:18:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 86740,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86735,
                    "src": "1427:17:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 86741,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86737,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1390:10:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89407,
                  "src": "1390:10:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "1390:55:111"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86729,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1298:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86744,
                  "src": "1286:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67440",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 86728,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86727,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1286:11:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67440,
                      "src": "1286:11:111"
                    },
                    "referencedDeclaration": 67440,
                    "src": "1286:11:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67440",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86732,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1324:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86744,
                  "src": "1304:38:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 86731,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86730,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1304:19:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66078,
                      "src": "1304:19:111"
                    },
                    "referencedDeclaration": 66078,
                    "src": "1304:19:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86735,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1363:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86744,
                  "src": "1344:36:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 86734,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86733,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1344:18:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66024,
                      "src": "1344:18:111"
                    },
                    "referencedDeclaration": 66024,
                    "src": "1344:18:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:96:111"
            },
            "returnParameters": {
              "id": 86742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1450:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86793,
            "nodeType": "FunctionDefinition",
            "src": "1513:316:111",
            "nodes": [],
            "body": {
              "id": 86792,
              "nodeType": "Block",
              "src": "1613:216:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86756,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86751,
                        "src": "1642:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86755,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87306,
                      "src": "1623:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 86757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1623:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86758,
                  "nodeType": "ExpressionStatement",
                  "src": "1623:28:111"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86759,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1661:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1666:8:111",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77235,
                      "src": "1661:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 86762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1661:15:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86763,
                  "nodeType": "ExpressionStatement",
                  "src": "1661:15:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 86770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1717:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 86769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1709:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86768,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1709:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1709:10:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86767,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44390,
                          "src": "1702:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44390_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 86772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1702:18:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44390",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1722:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 86774,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86747,
                        "src": "1725:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 86775,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86749,
                        "src": "1731:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$44390",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 86764,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1686:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1691:10:111",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87848,
                      "src": "1686:15:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$44390_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 86776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1686:52:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86777,
                  "nodeType": "ExpressionStatement",
                  "src": "1686:52:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86783,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1770:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 86782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1762:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1762:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1762:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 86785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1777:30:111",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 86788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1819:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 86787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1809:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 86786,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1813:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 86789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1809:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 86778,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1748:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1753:8:111",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88774,
                      "src": "1748:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 86790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:74:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86791,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:74:111"
                }
              ]
            },
            "baseFunctions": [
              87639
            ],
            "documentation": {
              "id": 86745,
              "nodeType": "StructuredDocumentation",
              "src": "1458:50:111",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1522:10:111",
            "overrides": {
              "id": 86753,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1604:8:111"
            },
            "parameters": {
              "id": 86752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86747,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1549:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86793,
                  "src": "1533:20:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86746,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1533:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86749,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1571:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86793,
                  "src": "1555:22:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1555:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86751,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1587:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86793,
                  "src": "1579:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86750,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1532:64:111"
            },
            "returnParameters": {
              "id": 86754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86796,
            "nodeType": "VariableDeclaration",
            "src": "1852:49:111",
            "nodes": [],
            "baseFunctions": [
              87546
            ],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "1876:21:111",
            "scope": 87484,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86794,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1852:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 86795,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1900:1:111",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "id": 86799,
            "nodeType": "VariableDeclaration",
            "src": "1907:58:111",
            "nodes": [],
            "constant": true,
            "functionSelector": "b132a50d",
            "mutability": "constant",
            "name": "FLAT_COST_SPONSORSHIP",
            "nameLocation": "1931:21:111",
            "scope": 87484,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86797,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1907:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 86798,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1955:10:111",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "id": 86802,
            "nodeType": "VariableDeclaration",
            "src": "1971:64:111",
            "nodes": [],
            "baseFunctions": [
              87551
            ],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "1995:28:111",
            "scope": 87484,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86800,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1971:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 86801,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2026:9:111",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 86807,
            "nodeType": "VariableDeclaration",
            "src": "2065:62:111",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_proteges",
            "nameLocation": "2118:9:111",
            "scope": 87484,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
              "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 86806,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 86803,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2073:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2065:43:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 86805,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 86804,
                  "name": "ISuperfluidClub.Protege",
                  "nameLocations": [
                    "2084:15:111",
                    "2100:7:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87562,
                  "src": "2084:23:111"
                },
                "referencedDeclaration": 87562,
                "src": "2084:23:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                  "typeString": "struct ISuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 86827,
            "nodeType": "FunctionDefinition",
            "src": "2188:136:111",
            "nodes": [],
            "body": {
              "id": 86826,
              "nodeType": "Block",
              "src": "2260:64:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 86816,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86807,
                          "src": "2277:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 86818,
                        "indexExpression": {
                          "id": 86817,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86810,
                          "src": "2287:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2277:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87562_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 86819,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2296:7:111",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87553,
                      "src": "2277:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 86822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2315:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 86821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2307:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 86820,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2307:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 86823,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2307:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2277:40:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86815,
                  "id": 86825,
                  "nodeType": "Return",
                  "src": "2270:47:111"
                }
              ]
            },
            "baseFunctions": [
              87570
            ],
            "documentation": {
              "id": 86808,
              "nodeType": "StructuredDocumentation",
              "src": "2134:49:111",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "2197:9:111",
            "overrides": {
              "id": 86812,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2236:8:111"
            },
            "parameters": {
              "id": 86811,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86810,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2215:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86827,
                  "src": "2207:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:17:111"
            },
            "returnParameters": {
              "id": 86815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86814,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86827,
                  "src": "2254:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 86813,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2254:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2253:6:111"
            },
            "scope": 87484,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86868,
            "nodeType": "FunctionDefinition",
            "src": "2393:336:111",
            "nodes": [],
            "body": {
              "id": 86867,
              "nodeType": "Block",
              "src": "2549:180:111",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86839
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86839,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "2567:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 86867,
                      "src": "2559:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 86838,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2559:7:111",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86841,
                  "initialValue": {
                    "id": 86840,
                    "name": "protege",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86830,
                    "src": "2571:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2559:19:111"
                },
                {
                  "assignments": [
                    86843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86843,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2596:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 86867,
                      "src": "2588:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2588:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86845,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 86844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2600:1:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2588:13:111"
                },
                {
                  "body": {
                    "id": 86865,
                    "nodeType": "Block",
                    "src": "2632:91:111",
                    "statements": [
                      {
                        "expression": {
                          "id": 86856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 86849,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86836,
                              "src": "2646:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$87562_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ISuperfluidClub.Protege memory[] memory"
                              }
                            },
                            "id": 86852,
                            "indexExpression": {
                              "id": 86851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2655:3:111",
                              "subExpression": {
                                "id": 86850,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86843,
                                "src": "2655:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2646:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87562_memory_ptr",
                              "typeString": "struct ISuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 86853,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86807,
                              "src": "2662:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 86855,
                            "indexExpression": {
                              "id": 86854,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86839,
                              "src": "2672:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2662:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87562_storage",
                              "typeString": "struct ISuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2646:28:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87562_memory_ptr",
                            "typeString": "struct ISuperfluidClub.Protege memory"
                          }
                        },
                        "id": 86857,
                        "nodeType": "ExpressionStatement",
                        "src": "2646:28:111"
                      },
                      {
                        "expression": {
                          "id": 86863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 86858,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86839,
                            "src": "2688:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 86859,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86807,
                                "src": "2692:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 86861,
                              "indexExpression": {
                                "id": 86860,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86839,
                                "src": "2702:1:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2692:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 86862,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2705:7:111",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87553,
                            "src": "2692:20:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2688:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 86864,
                        "nodeType": "ExpressionStatement",
                        "src": "2688:24:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 86847,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86839,
                        "src": "2628:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86846,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86827,
                      "src": "2618:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 86848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2618:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86866,
                  "nodeType": "WhileStatement",
                  "src": "2611:112:111"
                }
              ]
            },
            "baseFunctions": [
              87580
            ],
            "documentation": {
              "id": 86828,
              "nodeType": "StructuredDocumentation",
              "src": "2330:58:111",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2402:18:111",
            "overrides": {
              "id": 86832,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2476:8:111"
            },
            "parameters": {
              "id": 86831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86830,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2429:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86868,
                  "src": "2421:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2420:17:111"
            },
            "returnParameters": {
              "id": 86837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86836,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2535:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86868,
                  "src": "2502:41:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$87562_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 86834,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 86833,
                        "name": "ISuperfluidClub.Protege",
                        "nameLocations": [
                          "2502:15:111",
                          "2518:7:111"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 87562,
                        "src": "2502:23:111"
                      },
                      "referencedDeclaration": 87562,
                      "src": "2502:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                        "typeString": "struct ISuperfluidClub.Protege"
                      }
                    },
                    "id": 86835,
                    "nodeType": "ArrayTypeName",
                    "src": "2502:25:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$87562_storage_$dyn_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2501:43:111"
            },
            "scope": 87484,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86883,
            "nodeType": "FunctionDefinition",
            "src": "2775:143:111",
            "nodes": [],
            "body": {
              "id": 86882,
              "nodeType": "Block",
              "src": "2876:42:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 86878,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86807,
                      "src": "2893:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                        "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 86880,
                    "indexExpression": {
                      "id": 86879,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86871,
                      "src": "2903:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2893:18:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87562_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 86877,
                  "id": 86881,
                  "nodeType": "Return",
                  "src": "2886:25:111"
                }
              ]
            },
            "baseFunctions": [
              87589
            ],
            "documentation": {
              "id": 86869,
              "nodeType": "StructuredDocumentation",
              "src": "2735:35:111",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "2784:10:111",
            "overrides": {
              "id": 86873,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2826:8:111"
            },
            "parameters": {
              "id": 86872,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86871,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2803:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86883,
                  "src": "2795:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86870,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2794:17:111"
            },
            "returnParameters": {
              "id": 86877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 86883,
                  "src": "2844:30:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$87562_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 86875,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86874,
                      "name": "ISuperfluidClub.Protege",
                      "nameLocations": [
                        "2844:15:111",
                        "2860:7:111"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87562,
                      "src": "2844:23:111"
                    },
                    "referencedDeclaration": 87562,
                    "src": "2844:23:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2843:32:111"
            },
            "scope": 87484,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86932,
            "nodeType": "FunctionDefinition",
            "src": "3103:333:111",
            "nodes": [],
            "body": {
              "id": 86931,
              "nodeType": "Block",
              "src": "3177:259:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 86905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 86900,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3238:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 86899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3230:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 86898,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3230:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3230:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 86902,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86886,
                          "src": "3245:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 86894,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3211:4:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 86893,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3203:7:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 86892,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3203:7:111",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 86895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3203:13:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86891,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66767,
                            "src": "3191:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66767_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 86896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3191:26:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$66767",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 86897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3218:11:111",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61648,
                        "src": "3191:38:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66767_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66767_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 86903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3191:63:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 86904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3257:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3191:67:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 86929,
                    "nodeType": "Block",
                    "src": "3348:82:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86925,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86886,
                              "src": "3400:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 86926,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86888,
                              "src": "3410:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 86921,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3382:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 86920,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3374:7:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 86919,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3374:7:111",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 86922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3374:13:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 86918,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66767,
                                "src": "3362:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66767_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 86923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3362:26:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66767",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 86924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3389:10:111",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60253,
                            "src": "3362:37:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66767_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66767_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 86927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3362:57:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86928,
                        "nodeType": "ExpressionStatement",
                        "src": "3362:57:111"
                      }
                    ]
                  },
                  "id": 86930,
                  "nodeType": "IfStatement",
                  "src": "3187:243:111",
                  "trueBody": {
                    "id": 86917,
                    "nodeType": "Block",
                    "src": "3260:82:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 86913,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86886,
                              "src": "3312:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 86914,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86888,
                              "src": "3322:8:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 86909,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3294:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 86908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3286:7:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 86907,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3286:7:111",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 86910,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3286:13:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 86906,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66767,
                                "src": "3274:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66767_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 86911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3274:26:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66767",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 86912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3301:10:111",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60325,
                            "src": "3274:37:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66767_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66767_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 86915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3274:57:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 86916,
                        "nodeType": "ExpressionStatement",
                        "src": "3274:57:111"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 86884,
              "nodeType": "StructuredDocumentation",
              "src": "2924:174:111",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "3112:21:111",
            "parameters": {
              "id": 86889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86886,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3142:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86932,
                  "src": "3134:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86888,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "3158:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 86932,
                  "src": "3152:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 86887,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3152:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3133:34:111"
            },
            "returnParameters": {
              "id": 86890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3177:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87168,
            "nodeType": "FunctionDefinition",
            "src": "3494:2783:111",
            "nodes": [],
            "body": {
              "id": 87167,
              "nodeType": "Block",
              "src": "3565:2712:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 86940,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86935,
                        "src": "3589:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 86939,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86827,
                      "src": "3579:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 86941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3579:21:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86946,
                  "nodeType": "IfStatement",
                  "src": "3575:76:111",
                  "trueBody": {
                    "id": 86945,
                    "nodeType": "Block",
                    "src": "3602:49:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86942,
                            "name": "ALREADY_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86693,
                            "src": "3623:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3623:17:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86944,
                        "nodeType": "RevertStatement",
                        "src": "3616:24:111"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    86948,
                    86950
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86948,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3721:13:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "3713:21:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 86947,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3713:7:111",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86950,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3741:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "3736:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 86949,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3736:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86967,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 86954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 86951,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3753:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3757:6:111",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3753:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 86953,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86720,
                            "src": "3767:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3753:19:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 86955,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3752:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 86962,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3801:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 86963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3805:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3801:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 86964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3813:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 86965,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3800:19:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 86966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3752:67:111",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 86958,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3785:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 86957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3777:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 86956,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3777:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 86959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3777:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 86960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3792:4:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 86961,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3776:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3712:107:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 86974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3874:25:111",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 86969,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86948,
                            "src": "3885:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86968,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86827,
                          "src": "3875:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 86970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3875:24:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 86973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "3903:8:111",
                      "subExpression": {
                        "id": 86972,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86950,
                        "src": "3904:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3874:37:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86979,
                  "nodeType": "IfStatement",
                  "src": "3870:88:111",
                  "trueBody": {
                    "id": 86978,
                    "nodeType": "Block",
                    "src": "3913:45:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86975,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86691,
                            "src": "3934:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3934:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86977,
                        "nodeType": "RevertStatement",
                        "src": "3927:20:111"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    86981
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86981,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "3976:10:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "3968:18:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86980,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3968:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86984,
                  "initialValue": {
                    "expression": {
                      "id": 86982,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "3989:3:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 86983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3993:5:111",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "3989:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3968:30:111"
                },
                {
                  "assignments": [
                    86986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86986,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "4016:9:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "4008:17:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86985,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4008:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86993,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 86988,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86807,
                            "src": "4032:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 86990,
                          "indexExpression": {
                            "id": 86989,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86948,
                            "src": "4042:13:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4032:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87562_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 86991,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4057:23:111",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87559,
                        "src": "4032:48:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 86987,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87259,
                      "src": "4028:3:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 86992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4028:53:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4008:73:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 86996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 86994,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86981,
                      "src": "4095:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 86995,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86986,
                      "src": "4108:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4095:22:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87001,
                  "nodeType": "IfStatement",
                  "src": "4091:77:111",
                  "trueBody": {
                    "id": 87000,
                    "nodeType": "Block",
                    "src": "4119:49:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86997,
                            "name": "NOT_ENOUGH_COIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86697,
                            "src": "4140:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4140:17:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86999,
                        "nodeType": "RevertStatement",
                        "src": "4133:24:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87002,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86981,
                      "src": "4178:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 87003,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86986,
                      "src": "4192:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4178:23:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87005,
                  "nodeType": "ExpressionStatement",
                  "src": "4178:23:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87006,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86807,
                          "src": "4215:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87008,
                        "indexExpression": {
                          "id": 87007,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86948,
                          "src": "4225:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4215:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87562_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87009,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4240:5:111",
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87555,
                      "src": "4215:30:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 87010,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86796,
                      "src": "4249:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4215:55:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87016,
                  "nodeType": "IfStatement",
                  "src": "4211:124:111",
                  "trueBody": {
                    "id": 87015,
                    "nodeType": "Block",
                    "src": "4272:63:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87012,
                            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86699,
                            "src": "4293:29:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4293:31:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87014,
                        "nodeType": "RevertStatement",
                        "src": "4286:38:111"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 87024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4409:44:111",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87017,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86807,
                          "src": "4409:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87022,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87020,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4427:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4419:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87018,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4419:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4419:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4409:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87562_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87023,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4434:17:111",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87557,
                      "src": "4409:42:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87025,
                  "nodeType": "ExpressionStatement",
                  "src": "4409:44:111"
                },
                {
                  "expression": {
                    "id": 87030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4464:50:111",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87026,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86807,
                          "src": "4464:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87028,
                        "indexExpression": {
                          "id": 87027,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86948,
                          "src": "4474:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4464:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87562_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4489:23:111",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87559,
                      "src": "4464:48:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87031,
                  "nodeType": "ExpressionStatement",
                  "src": "4464:50:111"
                },
                {
                  "assignments": [
                    87033
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87033,
                      "mutability": "mutable",
                      "name": "lastSponsorProtegeCount",
                      "nameLocation": "4532:23:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "4525:30:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87032,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4525:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87038,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87034,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86807,
                        "src": "4558:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87036,
                      "indexExpression": {
                        "id": 87035,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86948,
                        "src": "4568:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4558:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87562_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87037,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4583:17:111",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87557,
                    "src": "4558:42:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4525:75:111"
                },
                {
                  "assignments": [
                    87040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87040,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4618:1:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 87167,
                      "src": "4610:9:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87039,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4610:7:111",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87042,
                  "initialValue": {
                    "id": 87041,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86948,
                    "src": "4622:13:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4610:25:111"
                },
                {
                  "body": {
                    "id": 87112,
                    "nodeType": "Block",
                    "src": "4666:836:111",
                    "statements": [
                      {
                        "assignments": [
                          87048
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87048,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4729:16:111",
                            "nodeType": "VariableDeclaration",
                            "scope": 87112,
                            "src": "4713:32:111",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                              "typeString": "struct ISuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87047,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87046,
                                "name": "Protege",
                                "nameLocations": [
                                  "4713:7:111"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 87562,
                                "src": "4713:7:111"
                              },
                              "referencedDeclaration": 87562,
                              "src": "4713:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87052,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87049,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86807,
                            "src": "4748:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87051,
                          "indexExpression": {
                            "id": 87050,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87040,
                            "src": "4758:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4748:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87562_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4713:47:111"
                      },
                      {
                        "expression": {
                          "id": 87056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4774:36:111",
                          "subExpression": {
                            "expression": {
                              "id": 87053,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87048,
                              "src": "4774:16:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87055,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4791:17:111",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87557,
                            "src": "4774:34:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87057,
                        "nodeType": "ExpressionStatement",
                        "src": "4774:36:111"
                      },
                      {
                        "expression": {
                          "id": 87065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87058,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87048,
                              "src": "4824:16:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87060,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4841:15:111",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87561,
                            "src": "4824:32:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 87062,
                                  "name": "sponsorChainInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87048,
                                  "src": "4878:16:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                    "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                  }
                                },
                                "id": 87063,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4895:17:111",
                                "memberName": "totalProtegeCount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87557,
                                "src": "4878:34:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87061,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87211,
                              "src": "4860:17:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4860:53:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "4824:89:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87066,
                        "nodeType": "ExpressionStatement",
                        "src": "4824:89:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87068,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87040,
                              "src": "5019:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 87069,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87048,
                                "src": "5022:16:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87070,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5039:15:111",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87561,
                              "src": "5022:32:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 87067,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86932,
                            "src": "4997:21:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 87071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4997:58:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87072,
                        "nodeType": "ExpressionStatement",
                        "src": "4997:58:111"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87074,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86807,
                                  "src": "5108:9:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87076,
                                "indexExpression": {
                                  "id": 87075,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86948,
                                  "src": "5118:13:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5108:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87077,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5133:7:111",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87553,
                              "src": "5108:32:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87078,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87040,
                              "src": "5158:1:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87079,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86807,
                                  "src": "5177:9:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87084,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87082,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5195:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87081,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5187:7:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87080,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5187:7:111",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87083,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5187:13:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5177:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87085,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5202:5:111",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87555,
                              "src": "5177:30:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87086,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86807,
                                  "src": "5225:9:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87091,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87089,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5243:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5235:7:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87087,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5235:7:111",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5235:13:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5225:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87092,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5250:17:111",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87557,
                              "src": "5225:42:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87093,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 86807,
                                  "src": "5285:9:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87098,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87096,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5303:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87095,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5295:7:111",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87094,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5295:7:111",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87097,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5295:13:111",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5285:24:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87099,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5310:23:111",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87559,
                              "src": "5285:48:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87073,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87540,
                            "src": "5075:15:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 87100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5075:272:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87101,
                        "nodeType": "EmitStatement",
                        "src": "5070:277:111"
                      },
                      {
                        "expression": {
                          "id": 87105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87102,
                            "name": "lastSponsorProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87033,
                            "src": "5361:23:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87103,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87048,
                              "src": "5387:16:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87104,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5404:17:111",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87557,
                            "src": "5387:34:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5361:60:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87106,
                        "nodeType": "ExpressionStatement",
                        "src": "5361:60:111"
                      },
                      {
                        "expression": {
                          "id": 87110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87107,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87040,
                            "src": "5435:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87108,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87048,
                              "src": "5439:16:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87109,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5456:7:111",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87553,
                            "src": "5439:24:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5435:28:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87111,
                        "nodeType": "ExpressionStatement",
                        "src": "5435:28:111"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87044,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87040,
                        "src": "4662:1:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87043,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86827,
                      "src": "4652:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4652:12:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87113,
                  "nodeType": "WhileStatement",
                  "src": "4645:857:111"
                },
                {
                  "expression": {
                    "id": 87121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87114,
                      "name": "lastSponsorProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87033,
                      "src": "5606:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 87115,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86950,
                        "src": "5632:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87117,
                          "name": "lastSponsorProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87033,
                          "src": "5668:23:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 87118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5694:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5668:27:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 87120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5632:63:111",
                      "trueExpression": {
                        "id": 87116,
                        "name": "lastSponsorProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87033,
                        "src": "5642:23:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5606:89:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87122,
                  "nodeType": "ExpressionStatement",
                  "src": "5606:89:111"
                },
                {
                  "expression": {
                    "id": 87140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87123,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86807,
                        "src": "5705:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87125,
                      "indexExpression": {
                        "id": 87124,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86935,
                        "src": "5715:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5705:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87562_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87127,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86948,
                          "src": "5760:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 87133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 87128,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86807,
                                "src": "5794:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87130,
                              "indexExpression": {
                                "id": 87129,
                                "name": "actualSponsor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86948,
                                "src": "5804:13:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5794:24:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87562_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87131,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5819:5:111",
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87555,
                            "src": "5794:30:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 87132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5827:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "5794:34:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 87134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5861:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 87135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5901:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 87137,
                              "name": "lastSponsorProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87033,
                              "src": "5951:23:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87136,
                            "name": "calculateFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87211,
                            "src": "5933:17:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                              "typeString": "function (uint32) pure returns (int96)"
                            }
                          },
                          "id": 87138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5933:42:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 87126,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87562,
                        "src": "5729:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$87562_storage_ptr_$",
                          "typeString": "type(struct ISuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 87139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5751:7:111",
                        "5787:5:111",
                        "5842:17:111",
                        "5876:23:111",
                        "5916:15:111"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5729:257:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87562_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege memory"
                      }
                    },
                    "src": "5705:281:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87562_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 87141,
                  "nodeType": "ExpressionStatement",
                  "src": "5705:281:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87149,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86935,
                        "src": "6083:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87150,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86807,
                            "src": "6095:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87152,
                          "indexExpression": {
                            "id": 87151,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86935,
                            "src": "6105:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6095:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87562_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6117:15:111",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87561,
                        "src": "6095:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87145,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6065:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6057:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87143,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6057:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6057:13:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87142,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66767,
                          "src": "6045:11:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66767_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 87147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6045:26:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$66767",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 87148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6072:10:111",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60253,
                      "src": "6045:37:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66767_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66767_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 87154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6045:88:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87155,
                  "nodeType": "ExpressionStatement",
                  "src": "6045:88:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87156,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86981,
                      "src": "6147:10:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6160:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6147:14:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87166,
                  "nodeType": "IfStatement",
                  "src": "6143:128:111",
                  "trueBody": {
                    "id": 87165,
                    "nodeType": "Block",
                    "src": "6163:108:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87162,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86981,
                              "src": "6249:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 87159,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86935,
                              "src": "6229:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 87161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6240:8:111",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6229:19:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 87163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6229:31:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87164,
                        "nodeType": "ExpressionStatement",
                        "src": "6229:31:111"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              87595
            ],
            "documentation": {
              "id": 86933,
              "nodeType": "StructuredDocumentation",
              "src": "3442:47:111",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3503:7:111",
            "overrides": {
              "id": 86937,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3556:8:111"
            },
            "parameters": {
              "id": 86936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86935,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3527:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87168,
                  "src": "3511:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 86934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3511:15:111",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3510:28:111"
            },
            "returnParameters": {
              "id": 86938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3565:0:111"
            },
            "scope": 87484,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87193,
            "nodeType": "FunctionDefinition",
            "src": "6343:205:111",
            "nodes": [],
            "body": {
              "id": 87192,
              "nodeType": "Block",
              "src": "6377:171:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 87176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6391:22:111",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 87173,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6402:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6406:6:111",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6402:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87172,
                        "name": "isProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86827,
                        "src": "6392:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 87175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6392:21:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87181,
                  "nodeType": "IfStatement",
                  "src": "6387:73:111",
                  "trueBody": {
                    "id": 87180,
                    "nodeType": "Block",
                    "src": "6415:45:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87177,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86691,
                            "src": "6436:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6436:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87179,
                        "nodeType": "RevertStatement",
                        "src": "6429:20:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87183,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6491:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6495:6:111",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6491:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87185,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86807,
                            "src": "6503:9:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87562_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87188,
                          "indexExpression": {
                            "expression": {
                              "id": 87186,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6513:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87187,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6517:6:111",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6513:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6503:21:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87562_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87189,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6525:15:111",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87561,
                        "src": "6503:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 87182,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86932,
                      "src": "6469:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 87190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6469:72:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87191,
                  "nodeType": "ExpressionStatement",
                  "src": "6469:72:111"
                }
              ]
            },
            "baseFunctions": [
              87599
            ],
            "documentation": {
              "id": 87169,
              "nodeType": "StructuredDocumentation",
              "src": "6283:55:111",
              "text": "@dev ISuperfluidClub.sponsor implementation - WRONG"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "6352:13:111",
            "parameters": {
              "id": 87170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6365:2:111"
            },
            "returnParameters": {
              "id": 87171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6377:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87211,
            "nodeType": "FunctionDefinition",
            "src": "6623:184:111",
            "nodes": [],
            "body": {
              "id": 87210,
              "nodeType": "Block",
              "src": "6722:85:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87202,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87200,
                      "src": "6732:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87204,
                            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86802,
                            "src": "6751:28:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 87205,
                            "name": "totalProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87196,
                            "src": "6782:17:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "6751:48:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87203,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87466,
                        "src": "6743:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 87207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6743:57:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "6732:68:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "id": 87209,
                  "nodeType": "ExpressionStatement",
                  "src": "6732:68:111"
                }
              ]
            },
            "baseFunctions": [
              87607
            ],
            "documentation": {
              "id": 87194,
              "nodeType": "StructuredDocumentation",
              "src": "6554:64:111",
              "text": "@dev ISuperfluidClub.calculateSponsorFlowRate implementation"
            },
            "functionSelector": "7ae058dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateFlowRate",
            "nameLocation": "6632:17:111",
            "overrides": {
              "id": 87198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6688:8:111"
            },
            "parameters": {
              "id": 87197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87196,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "6657:17:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87211,
                  "src": "6650:24:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87195,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6650:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6649:26:111"
            },
            "returnParameters": {
              "id": 87201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87200,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "6712:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87211,
                  "src": "6706:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87199,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "6706:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6705:16:111"
            },
            "scope": 87484,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87259,
            "nodeType": "FunctionDefinition",
            "src": "6861:656:111",
            "nodes": [],
            "body": {
              "id": 87258,
              "nodeType": "Block",
              "src": "6950:567:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 87222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87220,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87214,
                      "src": "6964:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 87221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6986:2:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "6964:24:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 87228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87226,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87214,
                        "src": "7065:18:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 87227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7087:2:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "7065:24:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87232,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87214,
                          "src": "7166:18:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 87233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7188:2:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "7166:24:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87238,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87214,
                            "src": "7267:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 87239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7289:2:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "7267:24:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 87246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87244,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87214,
                              "src": "7368:18:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 87245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7390:2:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "7368:24:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 87252,
                            "nodeType": "Block",
                            "src": "7465:46:111",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 87250,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7486:7:111",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 87219,
                                "id": 87251,
                                "nodeType": "Return",
                                "src": "7479:14:111"
                              }
                            ]
                          },
                          "id": 87253,
                          "nodeType": "IfStatement",
                          "src": "7364:147:111",
                          "trueBody": {
                            "id": 87249,
                            "nodeType": "Block",
                            "src": "7394:65:111",
                            "statements": [
                              {
                                "documentation": "[49;60]",
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 87247,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7439:9:111",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 87219,
                                "id": 87248,
                                "nodeType": "Return",
                                "src": "7432:16:111"
                              }
                            ]
                          }
                        },
                        "id": 87254,
                        "nodeType": "IfStatement",
                        "src": "7263:248:111",
                        "trueBody": {
                          "id": 87243,
                          "nodeType": "Block",
                          "src": "7293:65:111",
                          "statements": [
                            {
                              "documentation": "[37;48]",
                              "expression": {
                                "hexValue": "302e33",
                                "id": 87241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7338:9:111",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 87219,
                              "id": 87242,
                              "nodeType": "Return",
                              "src": "7331:16:111"
                            }
                          ]
                        }
                      },
                      "id": 87255,
                      "nodeType": "IfStatement",
                      "src": "7162:349:111",
                      "trueBody": {
                        "id": 87237,
                        "nodeType": "Block",
                        "src": "7192:65:111",
                        "statements": [
                          {
                            "documentation": "[25;36]",
                            "expression": {
                              "hexValue": "302e32",
                              "id": 87235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7237:9:111",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 87219,
                            "id": 87236,
                            "nodeType": "Return",
                            "src": "7230:16:111"
                          }
                        ]
                      }
                    },
                    "id": 87256,
                    "nodeType": "IfStatement",
                    "src": "7061:450:111",
                    "trueBody": {
                      "id": 87231,
                      "nodeType": "Block",
                      "src": "7091:65:111",
                      "statements": [
                        {
                          "documentation": "[13;24]",
                          "expression": {
                            "hexValue": "302e31",
                            "id": 87229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7136:9:111",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 87219,
                          "id": 87230,
                          "nodeType": "Return",
                          "src": "7129:16:111"
                        }
                      ]
                    }
                  },
                  "id": 87257,
                  "nodeType": "IfStatement",
                  "src": "6960:551:111",
                  "trueBody": {
                    "id": 87225,
                    "nodeType": "Block",
                    "src": "6990:65:111",
                    "statements": [
                      {
                        "documentation": "[0;12]",
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 87223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7034:10:111",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 87219,
                        "id": 87224,
                        "nodeType": "Return",
                        "src": "7027:17:111"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              87615
            ],
            "documentation": {
              "id": 87212,
              "nodeType": "StructuredDocumentation",
              "src": "6813:43:111",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "6870:3:111",
            "overrides": {
              "id": 87216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6913:8:111"
            },
            "parameters": {
              "id": 87215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87214,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "6881:18:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87259,
                  "src": "6874:25:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87213,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6874:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6873:27:111"
            },
            "returnParameters": {
              "id": 87219,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87218,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "6939:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87259,
                  "src": "6931:17:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87217,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6931:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6930:19:111"
            },
            "scope": 87484,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87291,
            "nodeType": "FunctionDefinition",
            "src": "7523:295:111",
            "nodes": [],
            "body": {
              "id": 87290,
              "nodeType": "Block",
              "src": "7594:224:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87267,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87261,
                      "src": "7608:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7628:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7620:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87268,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7620:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7620:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7608:22:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87277,
                  "nodeType": "IfStatement",
                  "src": "7604:74:111",
                  "trueBody": {
                    "id": 87276,
                    "nodeType": "Block",
                    "src": "7632:46:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87273,
                            "name": "ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86705,
                            "src": "7653:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7653:14:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87275,
                        "nodeType": "RevertStatement",
                        "src": "7646:21:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87279,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87261,
                        "src": "7701:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87278,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86827,
                      "src": "7691:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7691:19:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87285,
                  "nodeType": "IfStatement",
                  "src": "7687:87:111",
                  "trueBody": {
                    "id": 87284,
                    "nodeType": "Block",
                    "src": "7712:62:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87281,
                            "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86695,
                            "src": "7733:28:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7733:30:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87283,
                        "nodeType": "RevertStatement",
                        "src": "7726:37:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87287,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87261,
                        "src": "7802:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87286,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87306,
                      "src": "7783:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7783:28:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87289,
                  "nodeType": "ExpressionStatement",
                  "src": "7783:28:111"
                }
              ]
            },
            "baseFunctions": [
              87516
            ],
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87265,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87264,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "7584:9:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86718,
                  "src": "7584:9:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "7584:9:111"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "7532:17:111",
            "overrides": {
              "id": 87263,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7575:8:111"
            },
            "parameters": {
              "id": 87262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87261,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "7558:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87291,
                  "src": "7550:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87260,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7550:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7549:18:111"
            },
            "returnParameters": {
              "id": 87266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7594:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87306,
            "nodeType": "FunctionDefinition",
            "src": "7824:141:111",
            "nodes": [],
            "body": {
              "id": 87305,
              "nodeType": "Block",
              "src": "7879:86:111",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 87297,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86720,
                        "src": "7915:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87298,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87293,
                        "src": "7922:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87296,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86726,
                      "src": "7894:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 87299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7894:37:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87300,
                  "nodeType": "EmitStatement",
                  "src": "7889:42:111"
                },
                {
                  "expression": {
                    "id": 87303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87301,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86720,
                      "src": "7941:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87302,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87293,
                      "src": "7949:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7941:16:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87304,
                  "nodeType": "ExpressionStatement",
                  "src": "7941:16:111"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "7833:18:111",
            "parameters": {
              "id": 87294,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87293,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "7860:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87306,
                  "src": "7852:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87292,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7852:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7851:18:111"
            },
            "returnParameters": {
              "id": 87295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7879:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87357,
            "nodeType": "FunctionDefinition",
            "src": "8024:385:111",
            "nodes": [],
            "body": {
              "id": 87356,
              "nodeType": "Block",
              "src": "8104:305:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87317,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87309,
                      "src": "8118:8:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8138:1:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8130:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87318,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8130:7:111",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8130:10:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8118:22:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87327,
                  "nodeType": "IfStatement",
                  "src": "8114:74:111",
                  "trueBody": {
                    "id": 87326,
                    "nodeType": "Block",
                    "src": "8142:46:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87323,
                            "name": "ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86705,
                            "src": "8163:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8163:14:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87325,
                        "nodeType": "RevertStatement",
                        "src": "8156:21:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87328,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87311,
                      "src": "8201:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8211:1:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8201:11:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87335,
                  "nodeType": "IfStatement",
                  "src": "8197:65:111",
                  "trueBody": {
                    "id": 87334,
                    "nodeType": "Block",
                    "src": "8214:48:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87331,
                            "name": "INVALID_AMOUNT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86701,
                            "src": "8235:14:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8235:16:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87333,
                        "nodeType": "RevertStatement",
                        "src": "8228:23:111"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 87338,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8283:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8275:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87336,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8275:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8275:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8289:7:111",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "8275:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 87341,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87311,
                      "src": "8299:6:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8275:30:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87347,
                  "nodeType": "IfStatement",
                  "src": "8271:88:111",
                  "trueBody": {
                    "id": 87346,
                    "nodeType": "Block",
                    "src": "8307:52:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87343,
                            "name": "NOT_ENOUGH_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86703,
                            "src": "8328:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8328:20:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87345,
                        "nodeType": "RevertStatement",
                        "src": "8321:27:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87353,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87311,
                        "src": "8395:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 87350,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87309,
                            "src": "8376:8:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8368:8:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 87348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8368:8:111",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8368:17:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8386:8:111",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "8368:26:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8368:34:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87355,
                  "nodeType": "ExpressionStatement",
                  "src": "8368:34:111"
                }
              ]
            },
            "baseFunctions": [
              87623
            ],
            "documentation": {
              "id": 87307,
              "nodeType": "StructuredDocumentation",
              "src": "7971:48:111",
              "text": "@dev ISuperfluidClub.withdraw implementation"
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87315,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87314,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8094:9:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86718,
                  "src": "8094:9:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "8094:9:111"
              }
            ],
            "name": "withdraw",
            "nameLocation": "8033:8:111",
            "overrides": {
              "id": 87313,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8085:8:111"
            },
            "parameters": {
              "id": 87312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87309,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "8050:8:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87357,
                  "src": "8042:16:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8042:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87311,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8068:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87357,
                  "src": "8060:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8060:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8041:34:111"
            },
            "returnParameters": {
              "id": 87316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8104:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87380,
            "nodeType": "FunctionDefinition",
            "src": "8464:116:111",
            "nodes": [],
            "body": {
              "id": 87379,
              "nodeType": "Block",
              "src": "8513:67:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87370,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8545:4:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8537:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8537:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8537:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87372,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87360,
                        "src": "8552:6:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8570:1:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "8560:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87373,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8564:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8560:12:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87365,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "8523:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87484",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8528:8:111",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88774,
                      "src": "8523:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8523:50:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87378,
                  "nodeType": "ExpressionStatement",
                  "src": "8523:50:111"
                }
              ]
            },
            "baseFunctions": [
              87629
            ],
            "documentation": {
              "id": 87358,
              "nodeType": "StructuredDocumentation",
              "src": "8415:44:111",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87363,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87362,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8503:9:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86718,
                  "src": "8503:9:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "8503:9:111"
              }
            ],
            "name": "mint",
            "nameLocation": "8473:4:111",
            "parameters": {
              "id": 87361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87360,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8486:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87380,
                  "src": "8478:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87359,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8477:16:111"
            },
            "returnParameters": {
              "id": 87364,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8513:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87391,
            "nodeType": "FunctionDefinition",
            "src": "8586:161:111",
            "nodes": [],
            "body": {
              "id": 87390,
              "nodeType": "Block",
              "src": "8658:89:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e636c75622e696d706c656d656e746174696f6e",
                        "id": 87387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8685:54:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.club.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        }
                      ],
                      "id": 87386,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8675:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 87388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8675:65:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 87385,
                  "id": 87389,
                  "nodeType": "Return",
                  "src": "8668:72:111"
                }
              ]
            },
            "baseFunctions": [
              77241
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "8595:13:111",
            "overrides": {
              "id": 87382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8631:8:111"
            },
            "parameters": {
              "id": 87381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8608:2:111"
            },
            "returnParameters": {
              "id": 87385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87384,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87391,
                  "src": "8649:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87383,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8649:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8648:9:111"
            },
            "scope": 87484,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87426,
            "nodeType": "FunctionDefinition",
            "src": "8753:621:111",
            "nodes": [],
            "body": {
              "id": 87425,
              "nodeType": "Block",
              "src": "8821:553:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87402,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87393,
                        "src": "8864:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87399,
                        "name": "UUPSProxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77301,
                        "src": "8831:13:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$77301_$",
                          "typeString": "type(contract UUPSProxiable)"
                        }
                      },
                      "id": 87401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8845:18:111",
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77294,
                      "src": "8831:32:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8831:44:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87404,
                  "nodeType": "ExpressionStatement",
                  "src": "8831:44:111"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                        "typeString": "contract IConstantOutflowNFT"
                      },
                      "id": 87411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87405,
                        "name": "CONSTANT_OUTFLOW_NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87695,
                        "src": "9137:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 87407,
                                "name": "newAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "9172:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 87406,
                              "name": "SuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89407,
                              "src": "9161:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SuperToken_$89407_$",
                                "typeString": "type(contract SuperToken)"
                              }
                            },
                            "id": 87408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9161:22:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperToken_$89407",
                              "typeString": "contract SuperToken"
                            }
                          },
                          "id": 87409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9184:20:111",
                          "memberName": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87695,
                          "src": "9161:43:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$66078_$",
                            "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                          }
                        },
                        "id": 87410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9161:45:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66078",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      "src": "9137:69:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                        "typeString": "contract IConstantInflowNFT"
                      },
                      "id": 87418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87412,
                        "name": "CONSTANT_INFLOW_NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87698,
                        "src": "9226:19:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 87414,
                                "name": "newAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87393,
                                "src": "9260:10:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 87413,
                              "name": "SuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89407,
                              "src": "9249:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SuperToken_$89407_$",
                                "typeString": "type(contract SuperToken)"
                              }
                            },
                            "id": 87415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9249:22:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperToken_$89407",
                              "typeString": "contract SuperToken"
                            }
                          },
                          "id": 87416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9272:19:111",
                          "memberName": "CONSTANT_INFLOW_NFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87698,
                          "src": "9249:42:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$66024_$",
                            "typeString": "function () view external returns (contract IConstantInflowNFT)"
                          }
                        },
                        "id": 87417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9249:44:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$66024",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      "src": "9226:67:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "9137:156:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87424,
                  "nodeType": "IfStatement",
                  "src": "9120:248:111",
                  "trueBody": {
                    "id": 87423,
                    "nodeType": "Block",
                    "src": "9304:64:111",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87420,
                            "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86687,
                            "src": "9325:30:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9325:32:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87422,
                        "nodeType": "RevertStatement",
                        "src": "9318:39:111"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              77229
            ],
            "functionSelector": "46951954",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87397,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87396,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "8811:9:111"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86718,
                  "src": "8811:9:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "8811:9:111"
              }
            ],
            "name": "updateCode",
            "nameLocation": "8762:10:111",
            "overrides": {
              "id": 87395,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8802:8:111"
            },
            "parameters": {
              "id": 87394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87393,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "8781:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87426,
                  "src": "8773:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8773:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8772:20:111"
            },
            "returnParameters": {
              "id": 87398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8821:0:111"
            },
            "scope": 87484,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87432,
            "nodeType": "FunctionDefinition",
            "src": "9423:38:111",
            "nodes": [],
            "body": {
              "id": 87431,
              "nodeType": "Block",
              "src": "9459:2:111",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              87642
            ],
            "documentation": {
              "id": 87427,
              "nodeType": "StructuredDocumentation",
              "src": "9380:38:111",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 87429,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9450:8:111"
            },
            "parameters": {
              "id": 87428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9430:2:111"
            },
            "returnParameters": {
              "id": 87430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9459:0:111"
            },
            "scope": 87484,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87466,
            "nodeType": "FunctionDefinition",
            "src": "9613:178:111",
            "nodes": [],
            "body": {
              "id": 87465,
              "nodeType": "Block",
              "src": "9675:116:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87441,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87435,
                          "src": "9693:5:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 87448,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9722:5:111",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 87447,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9722:5:111",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 87446,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "9717:4:111",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 87449,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9717:11:111",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 87450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "9729:3:111",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "9717:15:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 87445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9710:6:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 87444,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9710:6:111",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9710:23:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 87443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9702:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 87442,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9702:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9702:32:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9693:41:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f766572666c6f77",
                        "id": 87454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9736:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        },
                        "value": "overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        }
                      ],
                      "id": 87440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9685:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9685:62:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87456,
                  "nodeType": "ExpressionStatement",
                  "src": "9685:62:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87461,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87435,
                            "src": "9777:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9770:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87459,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "9770:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9770:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "9764:5:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 87457,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "9764:5:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9764:20:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 87439,
                  "id": 87464,
                  "nodeType": "Return",
                  "src": "9757:27:111"
                }
              ]
            },
            "documentation": {
              "id": 87433,
              "nodeType": "StructuredDocumentation",
              "src": "9467:141:111",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "9622:7:111",
            "parameters": {
              "id": 87436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87435,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9638:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87466,
                  "src": "9630:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9630:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9629:15:111"
            },
            "returnParameters": {
              "id": 87439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87438,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87466,
                  "src": "9668:5:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87437,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9668:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9667:7:111"
            },
            "scope": 87484,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87483,
            "nodeType": "FunctionDefinition",
            "src": "9943:110:111",
            "nodes": [],
            "body": {
              "id": 87482,
              "nodeType": "Block",
              "src": "10007:46:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87478,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87469,
                            "src": "10039:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10032:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87476,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "10032:6:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10032:13:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "10024:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87474,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10024:7:111",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10024:22:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87473,
                  "id": 87481,
                  "nodeType": "Return",
                  "src": "10017:29:111"
                }
              ]
            },
            "documentation": {
              "id": 87467,
              "nodeType": "StructuredDocumentation",
              "src": "9797:141:111",
              "text": " @dev converts a int96 to uint256\n @param value The int96 value to convert\n @return The converted uint256 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nameLocation": "9952:9:111",
            "parameters": {
              "id": 87470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87469,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "9968:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 87483,
                  "src": "9962:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87468,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "9962:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9961:13:111"
            },
            "returnParameters": {
              "id": 87473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87472,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87483,
                  "src": "9998:7:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9998:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9997:9:111"
            },
            "scope": 87484,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86676,
              "name": "ISuperfluidClub",
              "nameLocations": [
                "616:15:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 87643,
              "src": "616:15:111"
            },
            "id": 86677,
            "nodeType": "InheritanceSpecifier",
            "src": "616:15:111"
          },
          {
            "baseName": {
              "id": 86678,
              "name": "SuperToken",
              "nameLocations": [
                "633:10:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89407,
              "src": "633:10:111"
            },
            "id": 86679,
            "nodeType": "InheritanceSpecifier",
            "src": "633:10:111"
          },
          {
            "baseName": {
              "id": 86680,
              "name": "UUPSProxiable",
              "nameLocations": [
                "645:13:111"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77301,
              "src": "645:13:111"
            },
            "id": 86681,
            "nodeType": "InheritanceSpecifier",
            "src": "645:13:111"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86675,
          "nodeType": "StructuredDocumentation",
          "src": "483:104:111",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87484,
          77301,
          43725,
          89407,
          87643,
          87517,
          66767,
          45133,
          44390,
          67945,
          76989,
          67865
        ],
        "name": "SuperfluidClub",
        "nameLocation": "598:14:111",
        "scope": 87485,
        "usedErrors": [
          66324,
          66326,
          66328,
          66330,
          66332,
          66334,
          66336,
          66338,
          66340,
          66342,
          66344,
          66346,
          66348,
          66350,
          67586,
          67588,
          67590,
          67592,
          67594,
          67596,
          86687,
          86689,
          86691,
          86693,
          86695,
          86697,
          86699,
          86701,
          86703,
          86705
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 111
}