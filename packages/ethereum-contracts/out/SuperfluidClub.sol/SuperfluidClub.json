{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ISuperfluid",
          "name": "host",
          "type": "address"
        },
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        },
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ALREADY_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INVALID_AMOUNT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_ENOUGH_COIN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_PROTEGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_GOV_OWNER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_HOST",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_ONLY_SELF",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAmountReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "uuid",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "name": "CodeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantInflowNFT",
          "name": "constantInflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantInflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IConstantOutflowNFT",
          "name": "constantOutflowNFT",
          "type": "address"
        }
      ],
      "name": "ConstantOutflowNFTCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "protege",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "directTotalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "PROTEGE_UPDATED",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDowngraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CONSTANT_INFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantInflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONSTANT_OUTFLOW_NFT",
      "outputs": [
        {
          "internalType": "contract IConstantOutflowNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "FLAT_COST_SPONSORSHIP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_LEVEL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "totalProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "calculateFlowRate",
      "outputs": [
        {
          "internalType": "int96",
          "name": "flowRate",
          "type": "int96"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "castrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "downgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "directProtegeCount",
          "type": "uint32"
        }
      ],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getChainOfSponsors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege[]",
          "name": "sponsors",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCodeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "codeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "getProtege",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8"
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32"
            },
            {
              "internalType": "int96",
              "name": "desiredFlowRate",
              "type": "int96"
            }
          ],
          "internalType": "struct ISuperfluidClub.Protege",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnderlyingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "underlyingToken",
          "type": "address"
        },
        {
          "internalType": "uint8",
          "name": "underlyingDecimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "n",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "protege",
          "type": "address"
        }
      ],
      "name": "isProtege",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "operationDecreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationDowngrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "operationIncreaseAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "operationSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "operationUpgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "oldProtege",
          "type": "address"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "restartStream",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfApproveFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "selfMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "selfTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newProtege",
          "type": "address"
        }
      ],
      "name": "sponsor",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateCode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "upgrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "824:10863:114:-:0;;;1509:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1618:12:94;;;;;3652:41:118;;::::1;;::::0;;;3703:39;;::::1;;::::0;3758:45:::1;::::0;1636:4:114;;1642:18;;1662:17;;3652:41:118;3758:45:::1;::::0;;;::::1;3818:43;::::0;-1:-1:-1;;;;;3818:43:118;::::1;::::0;::::1;::::0;;;::::1;3284:584:::0;;;1509:178:114;;;824:10863;;14:144:120;-1:-1:-1;;;;;102:31:120;;92:42;;82:70;;148:1;145;138:12;82:70;14:144;:::o;163:636::-;329:6;337;345;398:2;386:9;377:7;373:23;369:32;366:52;;;414:1;411;404:12;366:52;446:9;440:16;465:44;503:5;465:44;:::i;:::-;578:2;563:18;;557:25;528:5;;-1:-1:-1;591:46:120;557:25;591:46;:::i;:::-;708:2;693:18;;687:25;656:7;;-1:-1:-1;721:46:120;687:25;721:46;:::i;:::-;786:7;776:17;;;163:636;;;;;:::o;:::-;824:10863:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMapi;:::-;;;;;;;:::i;:::-;;;;;;;;4604:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1748:316:114:-;;;;;;;;;;-1:-1:-1;1748:316:114;;;;;:::i;:::-;;:::i;:::-;;9255:378:94;;;;;;;;;;-1:-1:-1;9255:378:94;;;;;:::i;:::-;;:::i;14063:164:118:-;;;;;;;;;;-1:-1:-1;14063:164:118;;;;;:::i;:::-;;:::i;:::-;;;4285:14:120;;4278:22;4260:41;;4248:2;4233:18;14063:164:118;4120:187:120;3010:143:114;;;;;;;;;;-1:-1:-1;3010:143:114;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:18:114;;;;;;;:9;:18;;;;;;;;3121:25;;;;;;;;;;;;;;;-1:-1:-1;;;3121:25:114;;;;;;;;;;;-1:-1:-1;;;3121:25:114;;;;;;;;;;;-1:-1:-1;;;3121:25:114;;;;;;;;;;;;;;;;;;;;;;3010:143;;;;;;;;:::i;19304:140:118:-;;;;;;;;;;-1:-1:-1;19304:140:118;;;;;:::i;:::-;;:::i;7322:481:94:-;;;;;;;;;;-1:-1:-1;7322:481:94;;;;;:::i;:::-;;:::i;23871:238:118:-;;;;;;;;;;-1:-1:-1;23871:238:118;;;;;:::i;:::-;;:::i;13311:106::-;;;;;;;;;;-1:-1:-1;13398:12:118;;13311:106;;;6724:25:120;;;6712:2;6697:18;13311:106:118;6578:177:120;10460:2526:94;;;;;;;;;;-1:-1:-1;10460:2526:94;;;;;:::i;:::-;;:::i;1696:144::-;;;;;;;;;;-1:-1:-1;1827:5:94;1696:144;;;-1:-1:-1;;;;;9060:32:120;;;9042:51;;9030:2;9015:18;1696:144:94;8896:203:120;2628:336:114;;;;;;;;;;-1:-1:-1;2628:336:114;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;14233:188:118:-;;;;;;;;;;-1:-1:-1;14233:188:118;;;;;:::i;:::-;;:::i;24543:169::-;;;;;;;;;;-1:-1:-1;24543:169:118;;;;;:::i;:::-;;:::i;8709:474:94:-;;;;;;;;;;-1:-1:-1;8709:474:94;;;;;:::i;:::-;;:::i;6518:1355:114:-;;;;;;;;;;-1:-1:-1;6518:1355:114;;;;;:::i;:::-;;:::i;3511:428:94:-;;;;;;;;;;-1:-1:-1;3511:428:94;;;;;:::i;:::-;;:::i;:::-;;;;10757:25:120;;;10813:2;10798:18;;10791:34;;;;10841:18;;;10834:34;10899:2;10884:18;;10877:34;10744:3;10729:19;3511:428:94;10528:389:120;4820:109:118;;;;;;;;;;-1:-1:-1;4820:109:118;;1425:2;11064:36:120;;11052:2;11037:18;4820:109:118;10922:184:120;5252:218:94;;;;;;;;;;-1:-1:-1;5252:218:94;;;;;:::i;:::-;;:::i;14427:217:118:-;;;;;;;;;;-1:-1:-1;14427:217:118;;;;;:::i;:::-;;:::i;18117:231::-;;;;;;;;;;-1:-1:-1;18117:231:118;;;;;:::i;:::-;;:::i;3920:623::-;;;;;;;;;;-1:-1:-1;3920:623:118;;;;;:::i;:::-;;:::i;18883:136::-;;;;;;;;;;-1:-1:-1;18883:136:118;;;;;:::i;:::-;;:::i;10385:621:114:-;;;;;;;;;;-1:-1:-1;10385:621:114;;;;;:::i;:::-;;:::i;23258:248:118:-;;;;;;;;;;-1:-1:-1;23258:248:118;;;;;:::i;:::-;;:::i;9702:391:94:-;;;;;;;;;;-1:-1:-1;9702:391:94;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1602:55:118:-;;;;;;;;;;;;;;;400:122:97;;;;;;;;;;;;;:::i;10218:161:114:-;;;;;;;;;;-1:-1:-1;10307:65:114;10218:161;;15034:97:118;;;;;;;;;;-1:-1:-1;15123:1:118;15034:97;;7939:205:114;;;;;;;;;;;;;:::i;19075:173:118:-;;;;;;;;;;-1:-1:-1;19075:173:118;;;;;:::i;:::-;;:::i;23090:162::-;;;;;;;;;;-1:-1:-1;23090:162:118;;;;;:::i;:::-;;:::i;16289:440::-;;;;;;;;;;-1:-1:-1;16289:440:118;;;;;:::i;:::-;;:::i;17951:160::-;;;;;;;;;;-1:-1:-1;17951:160:118;;;;;:::i;:::-;;:::i;7871:338:94:-;;;;;;;;;;-1:-1:-1;7871:338:94;;;;;:::i;:::-;;:::i;13423:297:118:-;;;;;;;;;;-1:-1:-1;13423:297:118;;;;;:::i;:::-;;:::i;3729:2783:114:-;;;;;;:::i;:::-;;:::i;4231:201:94:-;;;;;;;;;;-1:-1:-1;4231:201:94;;;;;:::i;:::-;;:::i;8219:184:114:-;;;;;;;;;;-1:-1:-1;8219:184:114;;;;;:::i;:::-;;:::i;:::-;;;17215:2:120;17204:22;;;;17186:41;;17174:2;17159:18;8219:184:114;17044:189:120;19482:146:118;;;;;;;;;;-1:-1:-1;19482:146:118;;;;;:::i;:::-;;:::i;8457:656:114:-;;;;;;;;;;-1:-1:-1;8457:656:114;;;;;:::i;:::-;;:::i;1392:20::-;;;;;;;;;;-1:-1:-1;1392:20:114;;;;;;;-1:-1:-1;;;;;1392:20:114;;;15685:222:118;;;;;;;;;;-1:-1:-1;15685:222:118;;;;;:::i;:::-;;:::i;4710:104::-;;;;;;;;;;;;;:::i;731:44:97:-;;;;;;;;;;;;;:::i;15137:185:118:-;;;;;;;;;;-1:-1:-1;15137:185:118;;;;;:::i;:::-;;:::i;17722:223::-;;;;;;;;;;-1:-1:-1;17722:223:118;;;;;:::i;:::-;;:::i;10096:116:114:-;;;;;;;;;;-1:-1:-1;10096:116:114;;;;;:::i;:::-;;:::i;8280:359:94:-;;;;;;;;;;-1:-1:-1;8280:359:94;;;;;:::i;:::-;;:::i;18419:154:118:-;;;;;;;;;;-1:-1:-1;18419:154:118;;;;;:::i;:::-;;:::i;14650:322::-;;;;;;;;;;-1:-1:-1;14650:322:118;;;;;:::i;:::-;;:::i;13726:172::-;;;;;;;;;;-1:-1:-1;13726:172:118;;;;;:::i;:::-;;:::i;2142:58:114:-;;;;;;;;;;;;2190:10;2142:58;;2087:49;;;;;;;;;;;;2135:1;2087:49;;4438:533:94;;;;;;;;;;-1:-1:-1;4438:533:94;;;;;:::i;:::-;;:::i;4977:197::-;;;;;;;;;;-1:-1:-1;4977:197:94;;;;;:::i;:::-;;:::i;17351:365:118:-;;;;;;;;;;-1:-1:-1;17351:365:118;;;;;:::i;:::-;;:::i;23512:353::-;;;;;;;;;;-1:-1:-1;23512:353:118;;;;;:::i;:::-;;:::i;24115:251::-;;;;;;;;;;-1:-1:-1;24115:251:118;;;;;:::i;:::-;;:::i;24372:165::-;;;;;;;;;;-1:-1:-1;24372:165:118;;;;;:::i;:::-;;:::i;10158:226:94:-;;;;;;;;;;-1:-1:-1;10158:226:94;;;;;:::i;:::-;;:::i;15500:179:118:-;;;;;;;;;;-1:-1:-1;15500:179:118;;;;;:::i;:::-;;:::i;3945:280:94:-;;;;;;;;;;-1:-1:-1;3945:280:94;;;;;:::i;:::-;;:::i;13904:153:118:-;;;;;;;;;;-1:-1:-1;13904:153:118;;;;;:::i;:::-;-1:-1:-1;;;;;14021:20:118;;;13995:7;14021:20;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;13904:153;2423:136:114;;;;;;;;;;-1:-1:-1;2423:136:114;;;;;:::i;:::-;;:::i;2105:1334:94:-;;;;;;;;;;-1:-1:-1;2105:1334:94;;;;;:::i;:::-;;:::i;:::-;;;;19348:25:120;;;19404:2;19389:18;;19382:34;;;;19432:18;;;19425:34;19336:2;19321:18;2105:1334:94;19148:317:120;18701:128:118;;;;;;;;;;-1:-1:-1;18805:16:118;;-1:-1:-1;;;;;18805:16:118;18701:128;;1486:57;;;;;;;;;;;;;;;9119:295:114;;;;;;;;;;-1:-1:-1;9119:295:114;;;;;:::i;:::-;;:::i;2206:64::-;;;;;;;;;;;;2261:9;2206:64;;9656:385;;;;;;;;;;-1:-1:-1;9656:385:114;;;;;:::i;:::-;;:::i;15913:213:118:-;;;;;;;;;;-1:-1:-1;15913:213:118;;;;;:::i;:::-;;:::i;16735:403::-;;;;;;;;;;-1:-1:-1;16735:403:118;;;;;:::i;:::-;;:::i;15328:166::-;;;;;;;;;;-1:-1:-1;15328:166:118;;;;;:::i;:::-;;:::i;16132:151::-;16200:16;16235:41;16265:10;16235:29;:41::i;:::-;16228:48;;16132:151;:::o;4604:100::-;4660:13;4692:5;4685:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4604:100;:::o;1748:316:114:-;1858:28;1877:8;1858:18;:28::i;:::-;1896:4;-1:-1:-1;;;;;1896:13:114;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1921:52:114;;-1:-1:-1;;;1921:52:114;;:4;;-1:-1:-1;1921:15:114;;-1:-1:-1;1921:52:114;;1952:1;;;;1960:4;;;;1966:6;;;;1921:52;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2044:12:114;;;2054:1;2044:12;;;;;;;;;-1:-1:-1;;;1983:74:114;;;:4;;-1:-1:-1;1983:13:114;;-1:-1:-1;1983:74:114;;:4;;2012:30;;1983:74;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1748:316;;;;;:::o;9255:378:94:-;9429:12;9483:10;9495:7;9504:6;9454:57;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9444:68;;;;;;9429:83;;9522:39;9546:4;9552:8;;9522:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9522:23:94;;-1:-1:-1;;;9522:39:94:i;:::-;9576:50;;6724:25:120;;;-1:-1:-1;;;;;9576:50:94;;;9598:10;;9576:50;;6712:2:120;6697:18;9576:50:94;;;;;;;9419:214;9255:378;;;;:::o;14063:164:118:-;14146:4;14162:37;14171:10;14183:7;14192:6;14162:8;:37::i;:::-;-1:-1:-1;14216:4:118;14063:164;;;;;:::o;19304:140::-;19375:62;19386:10;19398;19410;19422:6;19375:62;;;;;;;;;;;;;;;;;;;;;;;;:10;:62::i;:::-;19304:140;:::o;7322:481:94:-;7524:47;;7479:10;;7454:22;;7524:47;;7479:10;;7568:2;;7524:47;;;:::i;:::-;;;;-1:-1:-1;;7524:47:94;;;;;;;;;7514:58;;7524:47;7514:58;;;;;-1:-1:-1;7586:40:94;7514:58;7614:4;7586:21;:40::i;:::-;7582:113;;;7649:35;;-1:-1:-1;;;7649:35:94;;;;;;;;;;;7582:113;7704:35;7728:4;7734;;7704:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7704:23:94;;-1:-1:-1;;;7704:35:94:i;:::-;7771:14;-1:-1:-1;;;;;7754:42:94;;7787:2;7791:4;;7754:42;;;;;;;;:::i;:::-;;;;;;;;7444:359;;7322:481;;;:::o;23871:238:118:-;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;24052:50:118::1;24066:7;24075;24084:9;24095:6;24052:13;:50::i;:::-;;23871:238:::0;;;;:::o;10460:2526:94:-;13208:57;;-1:-1:-1;;;13208:57:94;;13253:10;13208:57;;;9042:51:120;13208:5:94;-1:-1:-1;;;;;13208:28:94;;;;9015:18:120;;13208:57:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:94;;;;;;;;;;;13203:128;11040:21:::1;11064:19;:17;:19::i;:::-;11040:43:::0;-1:-1:-1;;;;;;11285:27:94;::::1;11281:91;;-1:-1:-1::0;11344:17:94;11281:91:::1;11382:28;11413:23;:59;;11455:17;11413:59;;;11439:13;11413:59;11382:90;;11516:1;11487:25;:30;11483:1220;;11645:26;11646:25:::0;11645:26:::1;:::i;:::-;11618:23;:12;:21;:23::i;:::-;:53;11611:61;;;;:::i;:::-;11735:23;:12;:21;:23::i;:::-;-1:-1:-1::0;;;;;11687:44:94;::::1;;::::0;;;:22:::1;:44;::::0;;;;:71;;:44;;;:71:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;11772:37:94;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;11813:25;;11772:37;:66:::1;::::0;11813:25;;11772:66:::1;:::i;:::-;::::0;;;-1:-1:-1;11852:77:94::1;::::0;-1:-1:-1;11879:13:94;11894:20;11916:12;11852:26:::1;:77::i;:::-;11483:1220;;;12204:23;12203:24;12196:32;;;;:::i;:::-;12310:25;12284:23;:12;:21;:23::i;:::-;:51;;;;:::i;:::-;-1:-1:-1::0;;;;;12242:37:94;::::1;;::::0;;;:22:::1;:37;::::0;;;;:94;;:37;;;:94:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;12395:23:94::1;::::0;-1:-1:-1;12395:12:94;:21:::1;:23::i;:::-;-1:-1:-1::0;;;;;12350:41:94;::::1;;::::0;;;:22:::1;:41;::::0;;;;:68;;:41;;;:68:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;12432:37:94;::::1;;::::0;;;:22:::1;:37;::::0;;;;:66;;12473:25;;12432:37;:66:::1;::::0;12473:25;;12432:66:::1;:::i;:::-;::::0;;;-1:-1:-1;12512:74:94::1;::::0;-1:-1:-1;12539:13:94;12554:17;12573:12;12512:26:::1;:74::i;:::-;12600:92;12627:13;12642;12665:25;12600:26;:92::i;:::-;12824:13;-1:-1:-1::0;;;;;12718:261:94::1;12793:17;-1:-1:-1::0;;;;;12718:261:94::1;12753:10;-1:-1:-1::0;;;;;12718:261:94::1;;12777:2;12851:20;12885:12;12911:25;12950:19;12718:261;;;;;;;;;;:::i;:::-;;;;;;;;11030:1956;;10460:2526:::0;;;;;;;:::o;2628:336:114:-;2737:41;2806:7;2794:9;2846:112;2853:12;2863:1;2853:9;:12::i;:::-;2846:112;;;-1:-1:-1;;;;;2897:12:114;;;;;;;:9;:12;;;;;;;;2881:28;;;;;;;;;;;;;;;-1:-1:-1;;;2881:28:114;;;;;;;;;;;-1:-1:-1;;;2881:28:114;;;;;;;;;;;-1:-1:-1;;;2881:28:114;;;;;;;;;;;;;;;;;;;;;:8;2890:3;;;;:::i;:::-;;;2881:13;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;;-1:-1:-1;;;;;2927:12:114;;;;;;;;;;;;;:20;;;;;2846:112;;;2784:180;;2628:336;;;:::o;14233:188:118:-;14339:4;14362:52;14376:10;14388:6;14396:9;14407:6;14362:13;:52::i;:::-;14355:59;14233:188;-1:-1:-1;;;;14233:188:118:o;24543:169::-;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;24649:56:118::1;24660:10;24672:7;24681;24690:6;24649:56;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:10:::1;:56::i;:::-;24543:169:::0;;:::o;8709:474:94:-;8906:47;;8861:10;;8836:22;;8906:47;;8861:10;;8950:2;;8906:47;;;:::i;:::-;;;;;;;;;;;;;8896:58;;;;;;8881:73;;8969:38;8991:4;8996:10;8969:21;:38::i;:::-;8964:112;;9030:35;;-1:-1:-1;;;9030:35:94;;;;;;;;;;;8964:112;9085:41;9109:4;9115:10;9085:23;:41::i;:::-;9141:35;;6724:25:120;;;9161:10:94;;9141:35;;6712:2:120;6697:18;9141:35:94;;;;;;;8826:357;;8709:474;;:::o;6518:1355:114:-;6587:21;6597:10;6587:9;:21::i;:::-;6582:73;;6631:13;;-1:-1:-1;;;6631:13:114;;;;;;;;;;;6582:73;6703:5;;6664:21;;6703:5;;;-1:-1:-1;;;;;6703:5:114;6689:10;:19;6688:50;;6728:10;6688:50;;;6720:4;6688:50;-1:-1:-1;;;;;6777:21:114;;;6748:26;6777:21;;;:9;:21;;;;;;;6748:50;;;;;;;;;;;;;;;-1:-1:-1;;;6748:50:114;;;;;;;;-1:-1:-1;;;6748:50:114;;;;;;;;;;;-1:-1:-1;;;6748:50:114;;;;;;;;;;;;;;;;;;;;;6815:21;;;;;;-1:-1:-1;;;;;;6808:28:114;;;;;-1:-1:-1;;6808:28:114;;;;;6664:74;;-1:-1:-1;6748:50:114;;:26;6872:65;;6919:4;;;;6787:10;;6872:38;:65;:::i;:::-;:69;;;6868:164;;;6957:64;7003:4;;7010:10;6957:37;:64::i;:::-;;6868:164;7098:4;7080:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;7080:44:114;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7145:19;;-1:-1:-1;;;;;7135:30:114;-1:-1:-1;7135:30:114;;;:9;:30;;;;;:56;;-1:-1:-1;;;7135:56:114;;;;;;-1:-1:-1;7135:54:114;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7229:24:114;;-1:-1:-1;7229:24:114;;;:9;:24;;;;;:42;7293:19;;-1:-1:-1;;;7229:42:114;;;;;;;-1:-1:-1;7322:545:114;7329:12;7339:1;7329:9;:12::i;:::-;7322:545;;;-1:-1:-1;;;;;7425:12:114;;7390:32;7425:12;;;:9;:12;;;;;7451:36;;-1:-1:-1;;;7451:36:114;;;;7425:12;7451:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;7537;7555:17;7537;:36::i;:::-;7501:32;;;:72;;:32;;:72;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;7501:72:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7636:32:114;;;7501:72;7636:32;-1:-1:-1;7636:37:114;7632:225;;7693:52;7713:4;7731:1;7734:10;7693:37;:52::i;:::-;;7632:225;;;7809:32;;;;7784:58;;7806:1;;7809:32;;7784:21;:58::i;:::-;7343:524;7322:545;;3511:428:94;3638:23;3675:15;3704:19;3737:17;3782:5;-1:-1:-1;;;;;3782:12:94;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3770:26;;3895:37;3913:7;3922:9;3895:17;:37::i;:::-;3806:126;;;;-1:-1:-1;3806:126:94;;-1:-1:-1;3511:428:94;;-1:-1:-1;3511:428:94;-1:-1:-1;3511:428:94:o;5252:218::-;-1:-1:-1;;;;;5429:33:94;;;:24;:33;;;;;;;;;;;;;5402:61;;-1:-1:-1;;;5402:61:94;;5428:34;;5402:61;;;6724:25:120;5356:24:94;;5402:5;:25;;;;6697:18:120;;5402:61:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5402:61:94;;;;;;;;;;;;:::i;14427:217:118:-;14549:10;14524:4;14570:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14570:32:118;;;;;;;;;;14524:4;;14540:76;;14561:7;;14570:45;;14605:10;;14570:45;:::i;:::-;14540:8;:76::i;18117:231::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:118;;;;;;;;;;;24796:63;18292:49:::1;18306:7;18315:6;18323:9;18334:6;18292:13;:49::i;3920:623::-:0;4090:5;4084:19;;;;;:::i;:::-;:24;;-1:-1:-1;4076:68:118;;;;-1:-1:-1;;;4076:68:118;;28620:2:120;4076:68:118;;;28602:21:120;28659:2;28639:18;;;28632:30;28698:33;28678:18;;;28671:61;28749:18;;4076:68:118;;;;;;;;;4181:1;4162:20;;;4154:55;;;;-1:-1:-1;;;4154:55:118;;28980:2:120;4154:55:118;;;28962:21:120;29019:2;28999:18;;;28992:30;-1:-1:-1;;;29038:18:120;;;29031:52;29100:18;;4154:55:118;28778:346:120;4154:55:118;4219:16;:34;;4263:40;;;-1:-1:-1;;;4263:40:118;-1:-1:-1;;;;;;4263:40:118;;;-1:-1:-1;;;;;4219:34:118;;4263:40;;;;4314:5;:9;4322:1;;4314:5;:9;:::i;:::-;-1:-1:-1;4333:7:118;:11;4343:1;;4333:7;:11;:::i;:::-;;4386:36;4416:4;4386:21;:36::i;:::-;4501:35;;4530:1;6724:25:120;;;4530:1:118;;;-1:-1:-1;;;;;;;;;;;4501:35:118;6712:2:120;6697:18;4501:35:118;;;;;;;;3920:623;;;;;;:::o;18883:136::-;18952:60;18961:10;18973;18985;18997:6;18952:60;;;;;;;;;;;;;;;;;;;;;;;;:8;:60::i;10385:621:114:-;1319:5;;;;;-1:-1:-1;;;;;1319:5:114;1305:10;:19;1301:68;;1347:11;;-1:-1:-1;;;1347:11:114;;;;;;;;;;;1301:68;10463:44:::1;10496:10;10463:32;:44::i;:::-;10804:10;-1:-1:-1::0;;;;;10793:43:114::1;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10769:69:114::1;:20;-1:-1:-1::0;;;;;10769:69:114::1;;;:156;;;;10892:10;-1:-1:-1::0;;;;;10881:42:114::1;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10858:67:114::1;:19;-1:-1:-1::0;;;;;10858:67:114::1;;;10769:156;10752:248;;;10957:32;;-1:-1:-1::0;;;10957:32:114::1;;;;;;;;;;;23258:248:118::0;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;-1:-1:-1;;;;;23456:20:118;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;23429:70:::1;::::0;23438:7;;23447;;23456:42:::1;::::0;23488:10;;23456:42:::1;:::i;23429:70::-;23258:248:::0;;;:::o;9702:391:94:-;9901:25;9938:12;9992:14;10008:7;10017:6;9963:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9953:72;;;;;;9938:87;;10046:40;10069:4;10075:10;10046:22;:40::i;:::-;10035:51;9702:391;-1:-1:-1;;;;;;9702:391:94:o;400:122:97:-;447:19;489:26;751:20:99;745:27;;618:170;7939:205:114;7988:21;7998:10;7988:9;:21::i;:::-;7983:73;;8032:13;;-1:-1:-1;;;8032:13:114;;;;;;;;;;;7983:73;8087:10;8099:21;;;;:9;:21;;;;;:37;;;8065:72;;8087:10;8099:37;;8065:21;:72::i;:::-;7939:205::o;19075:173:118:-;19183:58;19192:10;19204;19216:2;19220:6;19228:8;;19183:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19183:58:118;;;;;;;;;;;;;-1:-1:-1;19183:8:118;;-1:-1:-1;;19183:58:118:i;:::-;19075:173;;;;:::o;23090:162::-;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;23211:34:118::1;23220:7;23229;23238:6;23211:8;:34::i;16289:440::-:0;16517:10;16542:42;:10;16517;16577:6;16542:24;:42::i;:::-;16537:103;;16593:47;;-1:-1:-1;;;16593:47:118;;;;;;;;;;;16537:103;16650:72;16656:8;16666:6;16674:9;16685:6;16693:8;;16650:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16650:72:118;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16703:12:118;;-1:-1:-1;16703:12:118;;;;16650:72;;16703:12;;;;16650:72;;;;;;;;;-1:-1:-1;16717:4:118;;-1:-1:-1;16650:5:118;;-1:-1:-1;;16650:72:118:i;:::-;16488:241;16289:440;;;;;;;:::o;17951:160::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:118;;;;;;;;;;;7871:338:94;8035:21;8072:12;8125:14;8141:2;8097:47;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8087:58;;;;;;8072:73;;8162:40;8185:4;8191:10;8162:22;:40::i;:::-;8155:47;7871:338;-1:-1:-1;;;;;7871:338:94:o;13423:297:118:-;13497:15;13579:23;13609:35;13636:7;13609:26;:35::i;:::-;13578:66;;;;;13680:1;13661:16;:20;:52;;13696:16;13661:52;;;13684:1;13661:52;13654:59;13423:297;-1:-1:-1;;;13423:297:118:o;3729:2783:114:-;3814:21;3824:10;3814:9;:21::i;:::-;3810:76;;;3858:17;;-1:-1:-1;;;3858:17:114;;;;;;;;;;;3810:76;4002:5;;3948:21;;;;4002:5;;;-1:-1:-1;;;;;4002:5:114;3988:10;:19;3987:67;;4036:10;4048:5;3987:67;;;4020:4;4027;3987:67;3947:107;;;;4110:24;4120:13;4110:9;:24::i;:::-;4109:25;:37;;;;;4139:7;4138:8;4109:37;4105:88;;;4169:13;;-1:-1:-1;;;4169:13:114;;;;;;;;;;;4105:88;-1:-1:-1;;;;;4267:24:114;;4203:18;4267:24;;;:9;:24;;;;;:48;4224:9;;4203:18;4263:53;;-1:-1:-1;;;4267:48:114;;;;4263:3;:53::i;:::-;4243:73;;4343:9;4330:10;:22;4326:77;;;4375:17;;-1:-1:-1;;;4375:17:114;;;;;;;;;;;4326:77;4413:23;4427:9;4413:23;;:::i;:::-;-1:-1:-1;;;;;4450:24:114;;;;;;:9;:24;;;;;:30;4413:23;;-1:-1:-1;2135:1:114;-1:-1:-1;;;4450:30:114;;;;;:55;4446:124;;4528:31;;-1:-1:-1;;;4528:31:114;;;;;;;;;;;4446:124;4662:4;4644:24;;;;:9;:24;;;;;:44;;-1:-1:-1;;;4644:44:114;;;;;:42;:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4699:24:114;;-1:-1:-1;4699:24:114;;;:9;:24;;;;;:50;;-1:-1:-1;;;4699:50:114;;;;;;-1:-1:-1;4699:48:114;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4793:24:114;;-1:-1:-1;4793:24:114;;;:9;:24;;;;;:42;-1:-1:-1;;;4793:42:114;;;;-1:-1:-1;4793:24:114;4880:857;4887:12;4897:1;4887:9;:12::i;:::-;4880:857;;;-1:-1:-1;;;;;4983:12:114;;4948:32;4983:12;;;:9;:12;;;;;5009:36;;-1:-1:-1;;;5009:36:114;;;;4983:12;5009:34;:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5095:53;5113:16;:34;;;;;;;;;;;;5095:17;:53::i;:::-;5059:32;;;:89;;:32;;:89;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;5059:89:114;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5257:32:114;;;5232:58;;5254:1;;5059:89;5257:32;5232:21;:58::i;:::-;-1:-1:-1;;;;;5343:24:114;;;;;;;:9;:24;;;;;;;:32;5430:4;5412:24;;;;;;:30;5310:272;;5412:30;-1:-1:-1;;;5412:30:114;;;32712:36:120;;5460:42:114;-1:-1:-1;;;5460:42:114;;;;32793:18:120;;;32786:43;;;;-1:-1:-1;;;5520:48:114;;;;;;32845:18:120;;;32838:43;5310:272:114;;;;5343:32;;;;;5310:272;;32700:2:120;32685:18;5310:272:114;;;;;;;5622:34;;-1:-1:-1;;;5622:34:114;;;;-1:-1:-1;;;;;;5674:24:114;;-1:-1:-1;4880:857:114;;;5867:7;:63;;5903:27;:23;5929:1;5903:27;:::i;:::-;5867:63;;;5877:23;5867:63;5964:257;;;;;;;;-1:-1:-1;;;;;5964:257:114;;;;;-1:-1:-1;6029:24:114;;;5964:257;6029:24;;;;;;:30;5841:89;;-1:-1:-1;5964:257:114;;;;;6029:34;;-1:-1:-1;;;6029:30:114;;;;6062:1;6029:34;:::i;:::-;5964:257;;;;6096:1;5964:257;;;;;;;;;;;;6168:42;6186:23;6168:17;:42::i;:::-;5964:257;;;;;;;-1:-1:-1;;;;;5940:21:114;;;;;;;:9;:21;;;;;;;;:281;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5940:281:114;;;;;;;-1:-1:-1;;;5940:281:114;;;;;;;;;;;;-1:-1:-1;;;;5940:281:114;-1:-1:-1;;;5940:281:114;;;;;-1:-1:-1;;;;5940:281:114;;-1:-1:-1;;;5940:281:114;;;;;;;;;;;;;;;-1:-1:-1;5940:281:114;;;;;-1:-1:-1;;5940:281:114;-1:-1:-1;;;;;5940:281:114;;;;;;;;;;;6280:88;;6300:4;;5940:21;;6330:37;;;;6280;:88;:::i;:::-;-1:-1:-1;6382:14:114;;6378:128;;6464:31;;-1:-1:-1;;;;;6464:19:114;;;:31;;;;;6484:10;;6464:31;;;;6484:10;6464:19;:31;;;;;;;;;;;;;;;;;;;6378:128;3800:2712;;;;;;3729:2783;:::o;4231:201:94:-;4345:15;4383:42;4401:7;4410:5;-1:-1:-1;;;;;4410:12:94;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8219:184:114:-;8302:14;8339:57;8347:48;;;;2261:9;8347:48;:::i;:::-;8339:7;:57::i;19482:146:118:-;19567:54;19578:10;19590;19602:2;19606:6;19567:54;;;;;;;;;;;;;;;;;;;;;;;;:10;:54::i;8457:656:114:-;8527:17;8582:2;8560:18;:24;;;8556:551;;-1:-1:-1;8630:10:114;;8457:656;-1:-1:-1;8457:656:114:o;8556:551::-;8683:2;8661:18;:24;;;8657:450;;-1:-1:-1;8732:9:114;;8457:656;-1:-1:-1;8457:656:114:o;8657:450::-;8784:2;8762:18;:24;;;8758:349;;-1:-1:-1;8833:9:114;;8457:656;-1:-1:-1;8457:656:114:o;8758:349::-;8885:2;8863:18;:24;;;8859:248;;-1:-1:-1;8934:9:114;;8457:656;-1:-1:-1;8457:656:114:o;8859:248::-;8986:2;8964:18;:24;;;8960:147;;-1:-1:-1;9035:9:114;;8457:656;-1:-1:-1;8457:656:114:o;8960:147::-;-1:-1:-1;9082:7:114;;8457:656;-1:-1:-1;8457:656:114:o;15685:222:118:-;15783:10;15803:46;:10;15783;15840:8;15803:28;:46::i;:::-;15893:6;-1:-1:-1;;;;;15864:36:118;15883:8;-1:-1:-1;;;;;15864:36:118;;;;;;;;;;;15756:151;15685:222;:::o;4710:104::-;4768:13;4800:7;4793:14;;;;;:::i;731:44:97:-;3291:13:27;;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:27;;3369:1;3354:12;;;;:16;3336:34;3335:97;;;-1:-1:-1;3404:4:27;1702:19:38;:23;;;3376:55:27;;-1:-1:-1;3414:12:27;;;;;:17;3376:55;3314:190;;;;-1:-1:-1;;;3314:190:27;;33646:2:120;3314:190:27;;;33628:21:120;33685:2;33665:18;;;33658:30;33724:34;33704:18;;;33697:62;-1:-1:-1;;;33775:18:120;;;33768:44;33829:19;;3314:190:27;33444:410:120;3314:190:27;3514:12;:16;;-1:-1:-1;;3514:16:27;3529:1;3514:16;;;3540:65;;;;3574:13;:20;;-1:-1:-1;;3574:20:27;;;;;3540:65;3629:14;3625:99;;;3659:13;:21;;-1:-1:-1;;3659:21:27;;;3699:14;;-1:-1:-1;11064:36:120;;3699:14:27;;11052:2:120;11037:18;3699:14:27;;;;;;;;3258:472;731:44:97:o;15137:185:118:-;15247:68;15253:10;15265;15277:9;15288:6;15296:8;;15247:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15247:68:118;;;;;;;;;;;;;-1:-1:-1;15310:4:118;;-1:-1:-1;15247:5:118;;-1:-1:-1;15247:68:118:i;17722:223::-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:118;;;;;;;;;;;24796:63;17876:15;;17925:12:::1;::::0;;17895:1:::1;17925:12:::0;;::::1;::::0;::::1;::::0;;;17841:97:::1;::::0;17847:10:::1;::::0;17859:7;;17868:6;;17876:20;;::::1;::::0;:15;;17841:5:::1;:97::i;10096:116:114:-:0;1319:5;;;;;-1:-1:-1;;;;;1319:5:114;1305:10;:19;1301:68;;1347:11;;-1:-1:-1;;;1347:11:114;;;;;;;;;;;1301:68;10192:12:::1;::::0;;10202:1:::1;10192:12:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;10155:50:114;;;:4:::1;::::0;:13:::1;::::0;:50:::1;::::0;:4;;10184:6;;10155:50;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;8280:359:94::0;8486:47;;8441:10;;8416:22;;8486:47;;8441:10;;8530:2;;8486:47;;;:::i;:::-;;;;;;;;;;;;;8476:58;;;;;;8461:73;;8544:35;8568:4;8574;;8544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8544:23:94;;-1:-1:-1;;;8544:35:94:i;:::-;8611:10;-1:-1:-1;;;;;8594:38:94;;8623:2;8627:4;;8594:38;;;;;;;;:::i;18419:154:118:-;18495:71;18509:10;18521;18533:9;18544:21;18554:10;18544:9;:21::i;:::-;18495:13;:71::i;14650:322::-;14752:4;14768:176;14790:10;14814:7;14835:99;14872:15;14835:99;;;;;;;;;;;;;;;;;14847:10;14835:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;14835:32:118;;;;;;;;;;;:99;:36;:99::i;13726:172::-;13812:4;13835:56;13849:10;13861;13873:9;13884:6;13835:13;:56::i;4438:533:94:-;4575:14;4606:23;4631:15;4648:19;4683:37;4701:7;4710:9;4683:17;:37::i;:::-;4605:115;;;;;;4810:19;4863:64;4874:11;4864:7;:21;:51;;4914:1;4863:62;:64::i;4864:51::-;4889:21;4899:11;4889:7;:21;:::i;:::-;4863:62;:64::i;:::-;4832:95;;:16;:95;:::i;:::-;4963:1;-1:-1:-1;4944:20:94;;4438:533;-1:-1:-1;;;;;;;4438:533:94:o;4977:197::-;5089:14;5126:41;5143:7;5152:5;-1:-1:-1;;;;;5152:12:94;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;17351:365:118:-;24800:10;24822:4;24800:27;24796:63;;24836:23;;-1:-1:-1;;;24836:23:118;;;;;;;;;;;24796:63;17554:15;;17687:12:::1;::::0;;17573:1:::1;17687:12:::0;;::::1;::::0;::::1;::::0;;;17470:239:::1;::::0;17489:10:::1;::::0;17513:7;;17534:6;;17554:20;;::::1;::::0;;;:15;;17470:5:::1;:239::i;23512:353::-:0;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;23688:170:118::1;23710:7;23731;23752:96;23786:15;23752:96;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;23752:20:118;;::::1;;::::0;;;:11:::1;:20;::::0;;;;;;;:29;;::::1;::::0;;;;;;;;:96;:33:::1;:96::i;24115:251::-:0;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;24294:65:118::1;24300:10;24312:7;24321:9;24332:6;24340:8;24294:65;;;;;;;;;;;::::0;24354:4:::1;24294:5;:65::i;24372:165::-:0;13396:5:94;-1:-1:-1;;;;;13388:28:94;13406:10;13388:28;13384:86;;13439:20;;-1:-1:-1;;;13439:20:94;;;;;;;;;;;13384:86;24476:54:118::1;24485:10;24497:7;24506;24515:6;24476:54;;;;;;;;;;;::::0;::::1;;;;;;;;;;;::::0;:8:::1;:54::i;10158:226:94:-:0;13208:57;;-1:-1:-1;;;13208:57:94;;13253:10;13208:57;;;9042:51:120;13208:5:94;-1:-1:-1;;;;;13208:28:94;;;;9015:18:120;;13208:57:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13203:128;;13288:32;;-1:-1:-1;;;13288:32:94;;;;;;;;;;;13203:128;-1:-1:-1;;;;;10338:31:94;::::1;;::::0;;;:22:::1;:31;::::0;;;;;:39:::1;::::0;10372:5;;10338:39:::1;:::i;:::-;-1:-1:-1::0;;;;;10304:31:94;;::::1;;::::0;;;:22:::1;:31;::::0;;;;:73;;;;-1:-1:-1;10158:226:94:o;15500:179:118:-;15602:4;15625:47;:10;15650:8;15660:11;15625:24;:47::i;3945:280:94:-;4083:15;4115:23;4144:37;4162:7;4171:9;4144:17;:37::i;:::-;-1:-1:-1;;4217:1:94;-1:-1:-1;;3945:280:94;-1:-1:-1;;;;3945:280:94:o;2423:136:114:-;-1:-1:-1;;;;;2512:18:114;;;2489:4;2512:18;;;:9;:18;;;;;:26;;:40;;;2423:136::o;2105:1334:94:-;-1:-1:-1;;;;;2370:31:94;;2252:23;2370:31;;;:22;:31;;;;;;;2252:23;;2455:35;2393:7;2455:26;:35::i;:::-;2411:79;;2505:9;2500:933;2524:16;:23;2520:1;:27;2500:933;;;2586:30;2634:24;2676:28;2708:16;2725:1;2708:19;;;;;;;;:::i;:::-;;;;;;;;;;;:182;;-1:-1:-1;;;2708:182:94;;2793:4;2708:182;;;34714:34:120;-1:-1:-1;;;;;34784:15:120;;;34764:18;;;34757:43;34816:18;;;34809:34;;;2708:58:94;;;;;;34649:18:120;;2708:182:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2568:322;;-1:-1:-1;2568:322:94;-1:-1:-1;2568:322:94;-1:-1:-1;2914:26:94;2568:322;2914:7;:26;:::i;:::-;2904:36;-1:-1:-1;2968:34:94;2982:20;2968:11;:34;:::i;:::-;2954:48;;3264:158;3305:20;3286:16;:39;:107;;3392:1;4863:62;:64::i;3286:107::-;3349:39;3368:20;3349:16;:39;:::i;3264:158::-;3187:58;3222:23;3187:16;:58;:::i;:::-;:235;;;;:::i;:::-;3168:254;;2554:879;;;2549:3;;;;:::i;:::-;;;2500:933;;;;2341:1098;2105:1334;;;;;:::o;9119:295:114:-;1319:5;;;;;-1:-1:-1;;;;;1319:5:114;1305:10;:19;1301:68;;1347:11;;-1:-1:-1;;;1347:11:114;;;;;;;;;;;1301:68;-1:-1:-1;;;;;9204:22:114;::::1;9200:74;;9249:14;;-1:-1:-1::0;;;9249:14:114::1;;;;;;;;;;;9200:74;9287:19;9297:8;9287:9;:19::i;:::-;9283:87;;;9329:30;;-1:-1:-1::0;;;9329:30:114::1;;;;;;;;;;;9283:87;9379:28;9398:8;9379:18;:28::i;9656:385::-:0;1319:5;;;;;-1:-1:-1;;;;;1319:5:114;1305:10;:19;1301:68;;1347:11;;-1:-1:-1;;;1347:11:114;;;;;;;;;;;1301:68;-1:-1:-1;;;;;9750:22:114;::::1;9746:74;;9795:14;;-1:-1:-1::0;;;9795:14:114::1;;;;;;;;;;;9746:74;9843:1;9833:6;:11;9829:65;;9867:16;;-1:-1:-1::0;;;9867:16:114::1;;;;;;;;;;;9829:65;9931:6;9907:21;:30;9903:88;;;9960:20;;-1:-1:-1::0;;;9960:20:114::1;;;;;;;;;;;9903:88;10000:34;::::0;-1:-1:-1;;;;;10000:26:114;::::1;::::0;:34;::::1;;;::::0;10027:6;;10000:34:::1;::::0;;;10027:6;10000:26;:34;::::1;;;;;;;;;;;;;::::0;::::1;;;;15913:213:118::0;16008:10;16028:43;:10;16008;16062:8;16028:25;:43::i;:::-;16112:6;-1:-1:-1;;;;;16086:33:118;16102:8;-1:-1:-1;;;;;16086:33:118;;;;;;;;;;;15981:145;15913:213;:::o;16735:403::-;16927:10;16952:43;:10;16927;16987:7;16952:24;:43::i;:::-;16947:104;;17004:47;;-1:-1:-1;;;17004:47:118;;;;;;;;;;;16947:104;17061:70;17072:8;17082:7;17091;17100:6;17108:8;;17061:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17061:70:118;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17118:12:118;;-1:-1:-1;17118:12:118;;;;17061:70;;17118:12;;;;17061:70;;;;;;;;;-1:-1:-1;17061:10:118;;-1:-1:-1;;;17061:70:118:i;15328:166::-;15419:68;15430:10;15442;15454;15466:6;15474:8;;15419:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15419:68:118;;;;;;;;;;;;;-1:-1:-1;15419:10:118;;-1:-1:-1;;15419:68:118:i;2294:141:82:-;2367:16;2402:4;:26;;2395:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2395:33:82;;;;;;;;;;;;;;;;;;;;;;;2294:141;;;:::o;9420:177:114:-;9504:5;;;-1:-1:-1;;;;;9519:16:114;;;9504:5;9519:16;;;-1:-1:-1;;;;;;9519:16:114;;;;;;9550:40;;9504:5;;;;;;;;9550:40;;9485:16;;9550:40;9475:122;9420:177;:::o;701:213:84:-;781:6;776:132;797:4;:11;793:1;:15;776:132;;;829:9;841:4;846:1;841:7;;;;;;;;:::i;:::-;;;;;;;829:19;;894:1;890;884:4;880:12;873:23;871:27;810:3;;;;:::i;:::-;;;776:132;;10502:394:118;-1:-1:-1;;;;;10593:21:118;;10589:98;;10637:39;;-1:-1:-1;;;10637:39:118;;;;;;;;;;;10589:98;-1:-1:-1;;;;;10700:21:118;;10696:96;;10744:37;;-1:-1:-1;;;10744:37:118;;;;;;;;;;;10696:96;-1:-1:-1;;;;;10802:20:118;;;;;;;:11;:20;;;;;;;;:29;;;;;;;;;;;;;:38;;;10855:34;;6724:25:120;;;10855:34:118;;6697:18:120;10855:34:118;;;;;;;;10502:394;;;:::o;20802:1142::-;21157:16;;-1:-1:-1;;;;;21157:16:118;21145:85;;21197:33;;-1:-1:-1;;;21197:33:118;;;;;;;;;;;21145:85;21242:24;21268:22;21294:27;21314:6;21294:19;:27::i;:::-;21241:80;;;;21399:86;21405:8;21415:7;21424:14;21440:8;:15;21459:1;21440:20;;21462:8;21472:12;21399:5;:86::i;:::-;21519:16;;:41;;-1:-1:-1;;;21519:41:118;;21554:4;21519:41;;;9042:51:120;21496:20:118;;-1:-1:-1;;;;;21519:16:118;;:26;;9015:18:120;;21519:41:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21570:16;;21496:64;;-1:-1:-1;21570:51:118;;-1:-1:-1;;;;;21570:16:118;21600:2;21604:16;21570:29;:51::i;:::-;21653:16;;:41;;-1:-1:-1;;;21653:41:118;;21688:4;21653:41;;;9042:51:120;21631:19:118;;-1:-1:-1;;;;;21653:16:118;;:26;;9015:18:120;;21653:41:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21631:63;-1:-1:-1;21704:30:118;21737:26;21631:63;21737:12;:26;:::i;:::-;21704:59;;21797:22;21777:16;:42;21773:108;;21828:53;;-1:-1:-1;;;21828:53:118;;;;;;;;;;;21773:108;21913:7;-1:-1:-1;;;;;21897:40:118;;21922:14;21897:40;;;;6724:25:120;;6712:2;6697:18;;6578:177;21897:40:118;;;;;;;;21135:809;;;;;20802:1142;;;;;;:::o;920:282:84:-;991:4;;1007:167;1028:10;1024:1;:14;1007:167;;;1104:12;;;1098:19;1136:14;;1132:31;;1159:4;1152:11;;;;;;1132:31;-1:-1:-1;1040:3:84;;;:::i;:::-;;;1007:167;;;-1:-1:-1;1190:5:84;;920:282;-1:-1:-1;;;920:282:84:o;5545:715:118:-;5670:4;-1:-1:-1;;;;;5694:20:118;;5690:98;;5737:40;;-1:-1:-1;;;5737:40:118;;;;;;;;;;;5690:98;-1:-1:-1;;;;;5801:23:118;;5797:99;;5847:38;;-1:-1:-1;;;5847:38:118;;;;;;;;;;;5797:99;5905:16;5924:10;5905:29;;5945:50;5951:8;5961:6;5969:9;5980:6;5945:50;;;;;;;;;;;;;;;;;;;;;;;;:5;:50::i;:::-;6021:6;-1:-1:-1;;;;;6010:17:118;:7;-1:-1:-1;;;;;6010:17:118;;6006:226;;6043:178;6069:6;6093:7;6118:89;6151:6;6118:89;;;;;;;;;;;;;;;;;:11;:19;6130:6;-1:-1:-1;;;;;6118:19:118;-1:-1:-1;;;;;6118:19:118;;;;;;;;;;;;:28;6138:7;-1:-1:-1;;;;;6118:28:118;-1:-1:-1;;;;;6118:28:118;;;;;;;;;;;;;:32;;:89;;;;;:::i;6043:178::-;-1:-1:-1;6249:4:118;;5545:715;-1:-1:-1;;;;;5545:715:118:o;6823:230:94:-;6875:21;6908:25;6936:5;-1:-1:-1;;;;;6936:19:94;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6983:63;;-1:-1:-1;;;6983:63:94;;-1:-1:-1;;;;;7006:5:94;34732:15:120;;6983:63:94;;;34714:34:120;7013:4:94;34764:18:120;;;34757:43;601:60:94;34816:18:120;;;34809:34;6908:49:94;;-1:-1:-1;6983:22:94;;;;;;34649:18:120;;6983:63:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6967:79;;6898:155;6823:230;:::o;34781:297:45:-;34837:6;-1:-1:-1;;;;;34962:5:45;:34;;34954:87;;;;-1:-1:-1;;;34954:87:45;;36335:2:120;34954:87:45;;;36317:21:120;36374:2;36354:18;;;36347:30;36413:34;36393:18;;;36386:62;-1:-1:-1;;;36464:18:120;;;36457:38;36512:19;;34954:87:45;36133:404:120;34954:87:45;-1:-1:-1;35065:5:45;34781:297::o;301:119:83:-;403:2;-1:-1:-1;;;;;388:25:83;397:4;-1:-1:-1;;;;;388:25:83;-1:-1:-1;;;;;;;;;;;407:5:83;388:25;;;;6724::120;;6712:2;6697:18;;6578:177;1681:173:84;1755:6;1750:98;1771:10;1767:1;:14;1750:98;;;1834:1;1820:12;;;1813:23;1783:3;1830:1;1783:3;:::i;:::-;;;1750:98;;26861:262:55;26965:14;26998:28;27030:21;27045:5;27030:14;:21::i;:::-;27080:36;;-1:-1:-1;;;27080:36:55;;-1:-1:-1;;;;;36821:15:120;;;27080:36:55;;;36803:34:120;36873:15;;;36853:18;;;36846:43;36925:15;;;36905:18;;;36898:43;26995:56:55;;-1:-1:-1;27080:11:55;;;;-1:-1:-1;27080:11:55;;36738:18:120;;27080:36:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;27061:55:55;;26861:262;-1:-1:-1;;;;;;;26861:262:55:o;3110:182::-;3272:12;;;3209:4;3272:12;;;;;;;;;3236:49;;3247:5;;3254:6;;3262:8;;3236:10;:49::i;3338:333:114:-;3492:1;3426:63;3473:4;;3480:8;3426:38;:63::i;:::-;:67;;;3422:243;;;3509:57;3529:4;3547:8;3557;3509:37;:57::i;3422:243::-;3597:57;3617:4;3635:8;3645;3597:37;:57::i;897:246:82:-;949:89;;-1:-1:-1;;;949:89:82;;-1:-1:-1;;;;;37677:15:120;;949:89:82;;;37659:34:120;998:24:82;37709:18:120;;;37702:34;1032:4:82;37752:18:120;;;37745:43;332:42:82;;949:41;;37594:18:120;;949:89:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1048:88:82;;-1:-1:-1;;;1048:88:82;;-1:-1:-1;;;;;37677:15:120;;1048:88:82;;;37659:34:120;1097:23:82;37709:18:120;;;37702:34;1130:4:82;37752:18:120;;;37745:43;332:42:82;;-1:-1:-1;1048:41:82;;-1:-1:-1;37594:18:120;;1048:88:82;37419:375:120;19634:1162:118;19850:16;;-1:-1:-1;;;;;19850:16:118;19838:85;;19890:33;;-1:-1:-1;;;19890:33:118;;;;;;;;;;;19838:85;19935:24;19961:22;19987:27;20007:6;19987:19;:27::i;:::-;20048:16;;:41;;-1:-1:-1;;;20048:41:118;;20083:4;20048:41;;;9042:51:120;19934:80:118;;-1:-1:-1;19934:80:118;;-1:-1:-1;20025:20:118;;-1:-1:-1;;;;;20048:16:118;;;;:26;;9015:18:120;;20048:41:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20099:16;;20025:64;;-1:-1:-1;20099:75:118;;-1:-1:-1;;;;;20099:16:118;20133:7;20150:4;20157:16;20099:33;:75::i;:::-;20206:16;;:41;;-1:-1:-1;;;20206:41:118;;20241:4;20206:41;;;9042:51:120;20184:19:118;;-1:-1:-1;;;;;20206:16:118;;:26;;9015:18:120;;20206:41:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20184:63;-1:-1:-1;20257:28:118;20288:26;20302:12;20184:63;20288:26;:::i;:::-;20257:57;;20348:20;20328:16;:40;20324:106;;20377:53;;-1:-1:-1;;;20377:53:118;;;;;;;;;;;20324:106;20628:15;;20441:299;;20460:8;;20482:2;;20498:14;;20628:20;;;:8;20718:12;20441:5;:299::i;:::-;20770:2;-1:-1:-1;;;;;20756:33:118;;20774:14;20756:33;;;;6724:25:120;;6712:2;6697:18;;6578:177;1289:576:97;1457:1;1419:26;751:20:99;745:27;;618:170;1419:26:97;-1:-1:-1;;;;;1419:40:97;;1411:82;;;;-1:-1:-1;;;1411:82:97;;38001:2:120;1411:82:97;;;37983:21:120;38040:2;38020:18;;;38013:30;38079:31;38059:18;;;38052:59;38128:18;;1411:82:97;37799:353:120;1411:82:97;1557:10;-1:-1:-1;;;;;1543:39:97;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10307:65:114;1524:60:97;1503:142;;;;-1:-1:-1;;;1503:142:97;;38548:2:120;1503:142:97;;;38530:21:120;38587:2;38567:18;;;38560:30;38626:34;38606:18;;;38599:62;-1:-1:-1;;;38677:18:120;;;38670:33;38720:19;;1503:142:97;38346:399:120;1503:142:97;-1:-1:-1;;;;;1676:27:97;;1684:4;1676:27;1655:99;;;;-1:-1:-1;;;1655:99:97;;38952:2:120;1655:99:97;;;38934:21:120;38991:2;38971:18;;;38964:30;39030:27;39010:18;;;39003:55;39075:18;;1655:99:97;38750:349:120;1655:99:97;1764:39;1792:10;988:20:99;964:87;839:228;1764:39:97;1818:40;10307:65:114;1818:40:97;;;39278:25:120;;;-1:-1:-1;;;;;39339:32:120;;39334:2;39319:18;;39312:60;39251:18;1818:40:97;39104:274:120;1291:300:84;1363:21;1417:10;-1:-1:-1;;;;;1403:25:84;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:25:84;;1396:32;;1443:6;1438:147;1459:10;1455:1;:14;1438:147;;;1490:9;1545:1;1539:4;1535:12;1529:19;1524:24;;1573:1;1563:4;1568:1;1563:7;;;;;;;;:::i;:::-;;;;;;;;;;:11;-1:-1:-1;1471:3:84;;;:::i;:::-;;;1438:147;;;;1291:300;;;;:::o;1149:366:82:-;1258:4;1293:11;-1:-1:-1;;;;;1281:23:82;:8;-1:-1:-1;;;;;1281:23:82;;:174;;;-1:-1:-1;;;;;;1338:31:82;;;;;;:21;;;:31;;;;;;;;:103;;;;-1:-1:-1;;;;;;1390:41:82;;;;;;;:28;;;:41;;;;;;;;:51;;;;;;;;;;;;1389:52;1338:103;1281:227;;;-1:-1:-1;;;;;;1471:27:82;;;;;;;:14;;;:27;;;;;;;;:37;;;;;;;;;;;;1274:234;;1149:366;;;;;:::o;6784:686:118:-;-1:-1:-1;;;;;7020:18:118;;7016:96;;7061:40;;-1:-1:-1;;;7061:40:118;;;;;;;;;;;7016:96;-1:-1:-1;;;;;7125:16:118;;7121:92;;7164:38;;-1:-1:-1;;;7164:38:118;;;;;;;;;;;7121:92;7223:69;7241:8;7251:4;7257:2;7261:6;7269:8;7279:12;7223:17;:69::i;:::-;7303:57;7309:8;7319:4;7325:2;7329:6;7337:8;7347:12;7303:5;:57::i;:::-;7371:92;7391:8;7401:4;7407:2;7411:6;7419:8;7429:12;7443:19;7371;:92::i;904:184:55:-;1068:12;;;1003:4;1068:12;;;;;;;;;1030:51;;1041:5;;1048:8;;1058;;1030:10;:51::i;11245:178:114:-;11300:5;-1:-1:-1;;;;;11325:41:114;;;11317:62;;;;-1:-1:-1;;;11317:62:114;;39585:2:120;11317:62:114;;;39567:21:120;39624:1;39604:18;;;39597:29;-1:-1:-1;;;39642:18:120;;;39635:38;39690:18;;11317:62:114;39383:331:120;1521:382:82;1643:8;-1:-1:-1;;;;;1633:18:82;:6;-1:-1:-1;;;;;1633:18:82;;1625:76;;;;-1:-1:-1;;;1625:76:82;;39921:2:120;1625:76:82;;;39903:21:120;39960:2;39940:18;;;39933:30;39999:34;39979:18;;;39972:62;-1:-1:-1;;;40050:18:120;;;40043:43;40103:19;;1625:76:82;39719:409:120;1625:76:82;-1:-1:-1;;;;;1716:31:82;;;;;;:21;;;:31;;;;;;;;1712:185;;;-1:-1:-1;;;;;1770:36:82;;;;;;;:28;;;;;:36;;;;;;;;:46;;;;;;;;;1763:53;;-1:-1:-1;;1763:53:82;;;23258:248:118:o;1712:185:82:-;-1:-1:-1;;;;;1847:22:82;;;;;;;:14;;;:22;;;;;;;;:32;;;;;;;;;:39;;-1:-1:-1;;1847:39:82;1882:4;1847:39;;;1521:382;;;:::o;9476:594:118:-;-1:-1:-1;;;;;9683:18:118;;9679:92;;9724:36;;-1:-1:-1;;;9724:36:118;;;;;;;;;;;9679:92;9785:10;9781:118;;;9811:77;9829:8;9839:4;9853:1;9857:6;9865:8;9875:12;9811:17;:77::i;:::-;9909:35;9931:4;9937:6;9909:21;:35::i;:::-;9977:4;-1:-1:-1;;;;;9960:54:118;9967:8;-1:-1:-1;;;;;9960:54:118;;9983:6;9991:8;10001:12;9960:54;;;;;;;;:::i;:::-;;;;;;;;10029:34;;6724:25:120;;;10052:1:118;;-1:-1:-1;;;;;10029:34:118;;;-1:-1:-1;;;;;;;;;;;10029:34:118;6712:2:120;6697:18;10029:34:118;6578:177:120;4959:201:46;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:46;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:46;;;4959:201::o;8500:667:118:-;-1:-1:-1;;;;;8744:21:118;;8740:93;;8788:34;;-1:-1:-1;;;8788:34:118;;;;;;;;;;;8740:93;8843:38;8865:7;8874:6;8843:21;:38::i;:::-;8896:10;8892:144;;;8922:103;8942:8;8960:1;8964:7;8973:6;8981:8;8991:12;9005:19;8922;:103::i;:::-;9068:7;-1:-1:-1;;;;;9051:57:118;9058:8;-1:-1:-1;;;;;9051:57:118;;9077:6;9085:8;9095:12;9051:57;;;;;;;;:::i;:::-;;;;;;;;9123:37;;6724:25:120;;;-1:-1:-1;;;;;9123:37:118;;;9140:1;;-1:-1:-1;;;;;;;;;;;9123:37:118;6712:2:120;6697:18;9123:37:118;;;;;;;8500:667;;;;;;;:::o;1909:379:82:-;2030:10;-1:-1:-1;;;;;2018:22:82;;;2010:77;;;;-1:-1:-1;;;2010:77:82;;40790:2:120;2010:77:82;;;40772:21:120;40829:2;40809:18;;;40802:30;40868:34;40848:18;;;40841:62;-1:-1:-1;;;40919:18:120;;;40912:40;40969:19;;2010:77:82;40588:406:120;2010:77:82;-1:-1:-1;;;;;2101:31:82;;;;;;:21;;;:31;;;;;;;;2097:185;;;-1:-1:-1;;;;;2148:36:82;;;;;;;:28;;;:36;;;;;;;;:46;;;;;;;;;:53;;-1:-1:-1;;2148:53:82;2197:4;2148:53;;;23258:248:118;;;:::o;2097:185:82:-;-1:-1:-1;;;;;2239:22:82;;;;;;;:14;;;;;:22;;;;;;;;:32;;;;;;;;;2232:39;;-1:-1:-1;;2232:39:82;;;1909:379::o;22046:972:118:-;22229:19;;22137:24;;;;;;1425:2;-1:-1:-1;;;22229:19:118;;;:40;:19;:40;22225:787;;;22434:19;;22413:40;;-1:-1:-1;;;22434:19:118;;;;1425:2;22413:40;:::i;:::-;22406:48;;:2;:48;:::i;:::-;22397:57;-1:-1:-1;22487:15:118;22397:57;22487:6;:15;:::i;:::-;22468:34;-1:-1:-1;22572:25:118;22591:6;22468:34;22572:25;:::i;:::-;22555:42;;22225:787;;;22618:19;;1425:2;-1:-1:-1;;;22618:19:118;;;:40;:19;:40;22614:398;;;22802:19;;:40;;1425:2;;-1:-1:-1;;;22802:19:118;;;;:40;:::i;:::-;22795:48;;:2;:48;:::i;:::-;22786:57;-1:-1:-1;22876:15:118;22786:57;22876:6;:15;:::i;:::-;22857:34;;22922:6;22905:23;;22614:398;;;22995:6;22978:23;;;22959:42;;22614:398;22191:827;22046:972;;;:::o;941:175:32:-;1050:58;;-1:-1:-1;;;;;42903:32:120;;1050:58:32;;;42885:51:120;42952:18;;;42945:34;;;1023:86:32;;1043:5;;-1:-1:-1;;;1073:23:32;42858:18:120;;1050:58:32;;;;-1:-1:-1;;1050:58:32;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:32;-1:-1:-1;;;;;;1050:58:32;;;;;;;;;;1023:19;:86::i;7476:367:118:-;7673:50;7695:4;7701:2;7705:17;:6;:15;:17::i;:::-;7673:21;:50::i;:::-;7760:2;-1:-1:-1;;;;;7739:56:118;7754:4;-1:-1:-1;;;;;7739:56:118;7744:8;-1:-1:-1;;;;;7739:56:118;;7764:6;7772:8;7782:12;7739:56;;;;;;;;:::i;:::-;;;;;;;;7825:2;-1:-1:-1;;;;;7810:26:118;7819:4;-1:-1:-1;;;;;7810:26:118;-1:-1:-1;;;;;;;;;;;7829:6:118;7810:26;;;;6724:25:120;;6712:2;6697:18;;6578:177;60355:828:55;60600:10;60594:17;60637:9;60631:16;-1:-1:-1;;;;;60670:26:55;;60666:422;;-1:-1:-1;;;;;60801:27:55;;60797:101;;60867:5;-1:-1:-1;;;;;60867:13:55;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60848:35;;60797:101;60950:125;;-1:-1:-1;;;60950:125:55;;61003:71;60950:125;;;6724:25:120;-1:-1:-1;;;;;60950:35:55;;;;;6697:18:120;;60950:125:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;60911:166;;60666:422;-1:-1:-1;;;;;61104:27:55;;61097:35;;;;:::i;:::-;-1:-1:-1;;;;;61149:26:55;;61142:34;;;;:::i;:::-;60355:828;;;:::o;3546:458::-;3668:4;3689:16;3707:28;3739:29;3762:5;3739:22;:29::i;:::-;3688:80;;;;3778:4;-1:-1:-1;;;;;3778:18:55;;3810:3;3859;-1:-1:-1;;;;;3859:14:55;;3892:5;3899:6;3907:8;3927:1;-1:-1:-1;;;;;3917:12:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3917:12:55;;3827:117;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;3827:117:55;;;;;;;;;;;;;;;-1:-1:-1;;;;;3827:117:55;;;;;;3778:198;;;;;-1:-1:-1;;;;;;3778:198:55;;;;;;-1:-1:-1;3827:117:55;3958:8;;3778:198;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3778:198:55;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3993:4:55;;3546:458;-1:-1:-1;;;;;;;3546:458:55:o;2013:184::-;2177:12;;;2112:4;2177:12;;;;;;;;;2139:51;;2150:5;;2157:8;;2167;;2139:10;:51::i;1355:203:32:-;1482:68;;-1:-1:-1;;;;;34732:15:120;;;1482:68:32;;;34714:34:120;34784:15;;34764:18;;;34757:43;34816:18;;;34809:34;;;1455:96:32;;1475:5;;-1:-1:-1;;;1505:27:32;34649:18:120;;1482:68:32;34449:400:120;11369:510:118;11612:104;;-1:-1:-1;;;11612:104:118;;-1:-1:-1;;;;;42903:32:120;;11612:104:118;;;42885:51:120;440:31:82;42952:18:120;;;42945:34;11578:19:118;;332:42:82;;11612:54:118;;42858:18:120;;11612:104:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11578:138;-1:-1:-1;;;;;;11730:25:118;;;11726:147;;11771:91;;-1:-1:-1;;;11771:91:118;;-1:-1:-1;;;;;11771:39:118;;;;;:91;;11811:8;;11821:4;;11827:2;;11831:6;;11839:8;;11849:12;;11771:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11568:311;11369:510;;;;;;:::o;12568:677::-;12847:105;;-1:-1:-1;;;12847:105:118;;-1:-1:-1;;;;;42903:32:120;;12847:105:118;;;42885:51:120;538:34:82;42952:18:120;;;42945:34;12813:19:118;;332:42:82;;12847:54:118;;42858:18:120;;12847:105:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12813:139;-1:-1:-1;;;;;;12966:25:118;;;12962:277;;13007:96;;-1:-1:-1;;;13007:96:118;;-1:-1:-1;;;;;13007:44:118;;;;;:96;;13052:8;;13062:4;;13068:2;;13072:6;;13080:8;;13090:12;;13007:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12962:277;;;13124:19;13120:119;;;-1:-1:-1;;;;;13163:13:118;;1702:19:38;:23;13159:69:118;;13187:41;;-1:-1:-1;;;13187:41:118;;;;;;;;;;;1342:472:55;1464:4;1485:16;1503:28;1535:29;1558:5;1535:22;:29::i;:::-;1484:80;;;;1574:4;-1:-1:-1;;;;;1574:18:55;;1606:3;1655;-1:-1:-1;;;;;1655:14:55;;1688:5;1695:8;1705;1725:1;-1:-1:-1;;;;;1715:12:55;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1715:12:55;;1623:119;;;;;;;;;;;:::i;5918:440:94:-;6020:23;6049:42;6067:7;6076:5;-1:-1:-1;;;;;6076:12:94;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6049:42::-;6019:72;;;;6124:17;:6;:15;:17::i;:::-;6105:16;:36;6101:110;;;6164:36;;-1:-1:-1;;;6164:36:94;;;;;;;;;;;6101:110;6288:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;6254:31:94;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;6220:31:94;;;;;;:22;:31;;;;;:85;6330:12;;:21;;6345:6;;6330:21;:::i;:::-;6315:12;:36;-1:-1:-1;;;5918:440:94:o;5673:239::-;5842:17;:6;:15;:17::i;:::-;-1:-1:-1;;;;;5808:31:94;;;;;;:22;:31;;;;;;:51;;;;:::i;:::-;-1:-1:-1;;;;;5774:31:94;;;;;;:22;:31;;;;;:85;5884:12;;:21;;5899:6;;5884:21;:::i;:::-;5869:12;:36;-1:-1:-1;;5673:239:94:o;5196:642:32:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:32;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:32;;47087:2:120;5720:111:32;;;47069:21:120;47126:2;47106:18;;;47099:30;47165:34;47145:18;;;47138:62;-1:-1:-1;;;47216:18:120;;;47209:40;47266:19;;5720:111:32;46885:406:120;6364:453:94;6482:23;6511:39;6529:4;6535:5;-1:-1:-1;;;;;6535:12:94;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6511:39;6481:69;;;;6583:6;6564:16;:25;6560:99;;;6612:36;;-1:-1:-1;;;6612:36:94;;;;;;;;;;;6560:99;-1:-1:-1;;;;;6699:28:94;;;;;;:22;:28;;;;;;:37;;6730:6;;6699:37;:::i;:::-;-1:-1:-1;;;;;6668:28:94;;;;;;;:22;:28;;;;;;:68;;;;6775:26;;;;;;;:35;;6804:6;;6775:35;:::i;:::-;-1:-1:-1;;;;;6746:26:94;;;;;;;:22;:26;;;;;:64;;;;-1:-1:-1;;;6364:453:94:o;57949:1061:55:-;58197:10;58191:17;58234:9;58228:16;-1:-1:-1;;;;;58267:26:55;;58263:652;;-1:-1:-1;;;;;58387:27:55;;58383:101;;58453:5;-1:-1:-1;;;;;58453:13:55;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58434:35;;58383:101;58536:125;;-1:-1:-1;;;58536:125:55;;58589:71;58536:125;;;6724:25:120;-1:-1:-1;;;;;58536:35:55;;;;;6697:18:120;;58536:125:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;58497:166;;58847:4;58835:10;58828:24;58887:3;58876:9;58869:22;-1:-1:-1;;;;;58931:27:55;;58924:35;;;;:::i;2452:460::-;2574:4;2595:16;2613:28;2645:29;2668:5;2645:22;:29::i;:::-;2594:80;;;;2684:4;-1:-1:-1;;;;;2684:18:55;;2716:3;2765;-1:-1:-1;;;;;2765:14:55;;2798:5;2805:8;2815;2835:1;-1:-1:-1;;;;;2825:12:55;;;;;;;:::i;4108:223:38:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:38;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:38:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:38;;;8113:60;;;;-1:-1:-1;;;8113:60:38;;48197:2:120;8113:60:38;;;48179:21:120;48236:2;48216:18;;;48209:30;48275:31;48255:18;;;48248:59;48324:18;;8113:60:38;47995:353:120;8113:60:38;-1:-1:-1;8208:10:38;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:38;;;;;;;;:::i;14:658:120:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:120;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:120;;14:658;-1:-1:-1;;;;;;14:658:120:o;677:250::-;762:1;772:113;786:6;783:1;780:13;772:113;;;862:11;;;856:18;843:11;;;836:39;808:2;801:10;772:113;;;-1:-1:-1;;919:1:120;901:16;;894:27;677:250::o;932:271::-;974:3;1012:5;1006:12;1039:6;1034:3;1027:19;1055:76;1124:6;1117:4;1112:3;1108:14;1101:4;1094:5;1090:16;1055:76;:::i;:::-;1185:2;1164:15;-1:-1:-1;;1160:29:120;1151:39;;;;1192:4;1147:50;;932:271;-1:-1:-1;;932:271:120:o;1208:220::-;1357:2;1346:9;1339:21;1320:4;1377:45;1418:2;1407:9;1403:18;1395:6;1377:45;:::i;1433:348::-;1485:8;1495:6;1549:3;1542:4;1534:6;1530:17;1526:27;1516:55;;1567:1;1564;1557:12;1516:55;-1:-1:-1;1590:20:120;;-1:-1:-1;;;;;1622:30:120;;1619:50;;;1665:1;1662;1655:12;1619:50;1702:4;1694:6;1690:17;1678:29;;1754:3;1747:4;1738:6;1730;1726:19;1722:30;1719:39;1716:59;;;1771:1;1768;1761:12;1716:59;1433:348;;;;;:::o;1786:131::-;-1:-1:-1;;;;;1861:31:120;;1851:42;;1841:70;;1907:1;1904;1897:12;1922:856;2023:6;2031;2039;2047;2055;2108:2;2096:9;2087:7;2083:23;2079:32;2076:52;;;2124:1;2121;2114:12;2076:52;2164:9;2151:23;-1:-1:-1;;;;;2234:2:120;2226:6;2223:14;2220:34;;;2250:1;2247;2240:12;2220:34;2289:59;2340:7;2331:6;2320:9;2316:22;2289:59;:::i;:::-;2367:8;;-1:-1:-1;2263:85:120;-1:-1:-1;2455:2:120;2440:18;;2427:32;;-1:-1:-1;2471:16:120;;;2468:36;;;2500:1;2497;2490:12;2468:36;;2539:61;2592:7;2581:8;2570:9;2566:24;2539:61;:::i;:::-;2619:8;;-1:-1:-1;2513:87:120;-1:-1:-1;;2704:2:120;2689:18;;2676:32;2717:31;2676:32;2717:31;:::i;:::-;2767:5;2757:15;;;1922:856;;;;;;;;:::o;2783:367::-;2846:8;2856:6;2910:3;2903:4;2895:6;2891:17;2887:27;2877:55;;2928:1;2925;2918:12;2877:55;-1:-1:-1;2951:20:120;;-1:-1:-1;;;;;2983:30:120;;2980:50;;;3026:1;3023;3016:12;2980:50;3063:4;3055:6;3051:17;3039:29;;3123:3;3116:4;3106:6;3103:1;3099:14;3091:6;3087:27;3083:38;3080:47;3077:67;;;3140:1;3137;3130:12;3155:640;3259:6;3267;3275;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3512:2:120;3497:18;;3484:32;;-1:-1:-1;3567:2:120;3552:18;;3539:32;-1:-1:-1;;;;;3583:30:120;;3580:50;;;3626:1;3623;3616:12;3580:50;3665:70;3727:7;3718:6;3707:9;3703:22;3665:70;:::i;:::-;3155:640;;;;-1:-1:-1;3754:8:120;-1:-1:-1;;;;3155:640:120:o;3800:315::-;3868:6;3876;3929:2;3917:9;3908:7;3904:23;3900:32;3897:52;;;3945:1;3942;3935:12;3897:52;3984:9;3971:23;4003:31;4028:5;4003:31;:::i;:::-;4053:5;4105:2;4090:18;;;;4077:32;;-1:-1:-1;;;3800:315:120:o;4312:247::-;4371:6;4424:2;4412:9;4403:7;4399:23;4395:32;4392:52;;;4440:1;4437;4430:12;4392:52;4479:9;4466:23;4498:31;4523:5;4498:31;:::i;4564:457::-;4641:12;;-1:-1:-1;;;;;4637:38:120;4625:51;;4729:4;4718:16;;;4712:23;4737:4;4708:34;4692:14;;;4685:58;4789:4;4778:16;;;4772:23;4814:10;4856:21;;;4840:14;;;4833:45;;;;4931:4;4920:16;;;4914:23;4910:32;;;4894:14;;;4887:56;5007:4;4996:16;;;4990:23;4986:2;4975:39;4959:14;;4952:63;4564:457::o;5026:249::-;5212:3;5197:19;;5225:44;5201:9;5251:6;5225:44;:::i;5280:180::-;5339:6;5392:2;5380:9;5371:7;5367:23;5363:32;5360:52;;;5408:1;5405;5398:12;5360:52;-1:-1:-1;5431:23:120;;5280:180;-1:-1:-1;5280:180:120:o;5465:505::-;5560:6;5568;5576;5629:2;5617:9;5608:7;5604:23;5600:32;5597:52;;;5645:1;5642;5635:12;5597:52;5681:9;5668:23;5658:33;;5742:2;5731:9;5727:18;5714:32;-1:-1:-1;;;;;5761:6:120;5758:30;5755:50;;;5801:1;5798;5791:12;5755:50;5840:70;5902:7;5893:6;5882:9;5878:22;5840:70;:::i;:::-;5465:505;;5929:8;;-1:-1:-1;5814:96:120;;-1:-1:-1;;;;5465:505:120:o;5975:598::-;6061:6;6069;6077;6085;6138:3;6126:9;6117:7;6113:23;6109:33;6106:53;;;6155:1;6152;6145:12;6106:53;6194:9;6181:23;6213:31;6238:5;6213:31;:::i;:::-;6263:5;-1:-1:-1;6320:2:120;6305:18;;6292:32;6333:33;6292:32;6333:33;:::i;:::-;6385:7;-1:-1:-1;6444:2:120;6429:18;;6416:32;6457:33;6416:32;6457:33;:::i;:::-;5975:598;;;;-1:-1:-1;6509:7:120;;6563:2;6548:18;6535:32;;-1:-1:-1;;5975:598:120:o;6760:127::-;6821:10;6816:3;6812:20;6809:1;6802:31;6852:4;6849:1;6842:15;6876:4;6873:1;6866:15;6892:275;6963:2;6957:9;7028:2;7009:13;;-1:-1:-1;;7005:27:120;6993:40;;-1:-1:-1;;;;;7048:34:120;;7084:22;;;7045:62;7042:88;;;7110:18;;:::i;:::-;7146:2;7139:22;6892:275;;-1:-1:-1;6892:275:120:o;7172:186::-;7220:4;-1:-1:-1;;;;;7245:6:120;7242:30;7239:56;;;7275:18;;:::i;:::-;-1:-1:-1;7341:2:120;7320:15;-1:-1:-1;;7316:29:120;7347:4;7312:40;;7172:186::o;7363:462::-;7405:5;7458:3;7451:4;7443:6;7439:17;7435:27;7425:55;;7476:1;7473;7466:12;7425:55;7512:6;7499:20;7543:48;7559:31;7587:2;7559:31;:::i;:::-;7543:48;:::i;:::-;7616:2;7607:7;7600:19;7662:3;7655:4;7650:2;7642:6;7638:15;7634:26;7631:35;7628:55;;;7679:1;7676;7669:12;7628:55;7744:2;7737:4;7729:6;7725:17;7718:4;7709:7;7705:18;7692:55;7792:1;7767:16;;;7785:4;7763:27;7756:38;;;;7771:7;7363:462;-1:-1:-1;;;7363:462:120:o;7830:118::-;7916:5;7909:13;7902:21;7895:5;7892:32;7882:60;;7938:1;7935;7928:12;7953:938;8071:6;8079;8087;8095;8103;8111;8119;8172:3;8160:9;8151:7;8147:23;8143:33;8140:53;;;8189:1;8186;8179:12;8140:53;8225:9;8212:23;8202:33;;8286:2;8275:9;8271:18;8258:32;-1:-1:-1;;;;;8305:6:120;8302:30;8299:50;;;8345:1;8342;8335:12;8299:50;8368:49;8409:7;8400:6;8389:9;8385:22;8368:49;:::i;:::-;8358:59;;;8467:2;8456:9;8452:18;8439:32;8480:31;8505:5;8480:31;:::i;:::-;8530:5;-1:-1:-1;8587:2:120;8572:18;;8559:32;8600:30;8559:32;8600:30;:::i;:::-;8649:7;-1:-1:-1;8708:3:120;8693:19;;8680:33;8722;8680;8722;:::i;:::-;7953:938;;;;-1:-1:-1;7953:938:120;;;;8774:7;8828:3;8813:19;;8800:33;;-1:-1:-1;8880:3:120;8865:19;;;8852:33;;7953:938;-1:-1:-1;;7953:938:120:o;9104:705::-;9327:2;9379:21;;;9449:13;;9352:18;;;9471:22;;;9298:4;;9327:2;9550:15;;;;9524:2;9509:18;;;9298:4;9593:190;9607:6;9604:1;9601:13;9593:190;;;9656:45;9697:3;9688:6;9682:13;9656:45;:::i;:::-;9758:15;;;;9730:4;9721:14;;;;;9629:1;9622:9;9593:190;;9814:456;9891:6;9899;9907;9960:2;9948:9;9939:7;9935:23;9931:32;9928:52;;;9976:1;9973;9966:12;9928:52;10015:9;10002:23;10034:31;10059:5;10034:31;:::i;:::-;10084:5;-1:-1:-1;10141:2:120;10126:18;;10113:32;10154:33;10113:32;10154:33;:::i;:::-;9814:456;;10206:7;;-1:-1:-1;;;10260:2:120;10245:18;;;;10232:32;;9814:456::o;10275:248::-;10343:6;10351;10404:2;10392:9;10383:7;10379:23;10375:32;10372:52;;;10420:1;10417;10410:12;10372:52;-1:-1:-1;;10443:23:120;;;10513:2;10498:18;;;10485:32;;-1:-1:-1;10275:248:120:o;11799:1038::-;11923:6;11931;11939;11947;11955;11963;12016:3;12004:9;11995:7;11991:23;11987:33;11984:53;;;12033:1;12030;12023:12;11984:53;12072:9;12059:23;12091:31;12116:5;12091:31;:::i;:::-;12141:5;-1:-1:-1;12198:2:120;12183:18;;12170:32;12246:4;12233:18;;12221:31;;12211:59;;12266:1;12263;12256:12;12211:59;12289:7;-1:-1:-1;12347:2:120;12332:18;;12319:32;-1:-1:-1;;;;;12400:14:120;;;12397:34;;;12427:1;12424;12417:12;12397:34;12466:59;12517:7;12508:6;12497:9;12493:22;12466:59;:::i;:::-;12544:8;;-1:-1:-1;12440:85:120;-1:-1:-1;12632:2:120;12617:18;;12604:32;;-1:-1:-1;12648:16:120;;;12645:36;;;12677:1;12674;12667:12;12645:36;;12716:61;12769:7;12758:8;12747:9;12743:24;12716:61;:::i;:::-;11799:1038;;;;-1:-1:-1;11799:1038:120;;-1:-1:-1;11799:1038:120;;12796:8;;11799:1038;-1:-1:-1;;;11799:1038:120:o;12842:525::-;12928:6;12936;12944;12952;13005:3;12993:9;12984:7;12980:23;12976:33;12973:53;;;13022:1;13019;13012:12;12973:53;13061:9;13048:23;13080:31;13105:5;13080:31;:::i;:::-;13130:5;-1:-1:-1;13187:2:120;13172:18;;13159:32;13200:33;13159:32;13200:33;:::i;:::-;12842:525;;13252:7;;-1:-1:-1;;;;13306:2:120;13291:18;;13278:32;;13357:2;13342:18;13329:32;;12842:525::o;13372:632::-;13543:2;13595:21;;;13665:13;;13568:18;;;13687:22;;;13514:4;;13543:2;13766:15;;;;13740:2;13725:18;;;13514:4;13809:169;13823:6;13820:1;13817:13;13809:169;;;13884:13;;13872:26;;13953:15;;;;13918:12;;;;13845:1;13838:9;13809:169;;14427:613;14515:6;14523;14531;14539;14592:2;14580:9;14571:7;14567:23;14563:32;14560:52;;;14608:1;14605;14598:12;14560:52;14647:9;14634:23;14666:31;14691:5;14666:31;:::i;:::-;14716:5;-1:-1:-1;14768:2:120;14753:18;;14740:32;;-1:-1:-1;14823:2:120;14808:18;;14795:32;-1:-1:-1;;;;;14839:30:120;;14836:50;;;14882:1;14879;14872:12;14836:50;14921:59;14972:7;14963:6;14952:9;14948:22;14921:59;:::i;15045:1065::-;15162:6;15170;15178;15186;15194;15202;15210;15263:3;15251:9;15242:7;15238:23;15234:33;15231:53;;;15280:1;15277;15270:12;15231:53;15319:9;15306:23;15338:31;15363:5;15338:31;:::i;:::-;15388:5;-1:-1:-1;15445:2:120;15430:18;;15417:32;15458:33;15417:32;15458:33;:::i;:::-;15510:7;-1:-1:-1;15564:2:120;15549:18;;15536:32;;-1:-1:-1;15619:2:120;15604:18;;15591:32;-1:-1:-1;;;;;15672:14:120;;;15669:34;;;15699:1;15696;15689:12;15669:34;15738:59;15789:7;15780:6;15769:9;15765:22;15738:59;:::i;:::-;15816:8;;-1:-1:-1;15712:85:120;-1:-1:-1;15904:3:120;15889:19;;15876:33;;-1:-1:-1;15921:16:120;;;15918:36;;;15950:1;15947;15940:12;15918:36;;15989:61;16042:7;16031:8;16020:9;16016:24;15989:61;:::i;:::-;15045:1065;;;;-1:-1:-1;15045:1065:120;;-1:-1:-1;15045:1065:120;;;;15963:87;;-1:-1:-1;;;15045:1065:120:o;16115:383::-;16192:6;16200;16208;16261:2;16249:9;16240:7;16236:23;16232:32;16229:52;;;16277:1;16274;16267:12;16229:52;16316:9;16303:23;16335:31;16360:5;16335:31;:::i;:::-;16385:5;16437:2;16422:18;;16409:32;;-1:-1:-1;16488:2:120;16473:18;;;16460:32;;16115:383;-1:-1:-1;;;16115:383:120:o;16763:276::-;16821:6;16874:2;16862:9;16853:7;16849:23;16845:32;16842:52;;;16890:1;16887;16880:12;16842:52;16929:9;16916:23;16979:10;16972:5;16968:22;16961:5;16958:33;16948:61;;17005:1;17002;16995:12;17238:523;17324:6;17332;17340;17393:2;17381:9;17372:7;17368:23;17364:32;17361:52;;;17409:1;17406;17399:12;17361:52;17448:9;17435:23;17467:31;17492:5;17467:31;:::i;:::-;17517:5;-1:-1:-1;17569:2:120;17554:18;;17541:32;;-1:-1:-1;17624:2:120;17609:18;;17596:32;-1:-1:-1;;;;;17640:30:120;;17637:50;;;17683:1;17680;17673:12;17637:50;17706:49;17747:7;17738:6;17727:9;17723:22;17706:49;:::i;:::-;17696:59;;;17238:523;;;;;:::o;17766:665::-;17861:6;17869;17877;17885;17938:3;17926:9;17917:7;17913:23;17909:33;17906:53;;;17955:1;17952;17945:12;17906:53;17994:9;17981:23;18013:31;18038:5;18013:31;:::i;:::-;18063:5;-1:-1:-1;18120:2:120;18105:18;;18092:32;18133:33;18092:32;18133:33;:::i;:::-;18185:7;-1:-1:-1;18239:2:120;18224:18;;18211:32;;-1:-1:-1;18294:2:120;18279:18;;18266:32;-1:-1:-1;;;;;18310:30:120;;18307:50;;;18353:1;18350;18343:12;18307:50;18376:49;18417:7;18408:6;18397:9;18393:22;18376:49;:::i;:::-;18366:59;;;17766:665;;;;;;;:::o;18755:388::-;18823:6;18831;18884:2;18872:9;18863:7;18859:23;18855:32;18852:52;;;18900:1;18897;18890:12;18852:52;18939:9;18926:23;18958:31;18983:5;18958:31;:::i;:::-;19008:5;-1:-1:-1;19065:2:120;19050:18;;19037:32;19078:33;19037:32;19078:33;:::i;:::-;19130:7;19120:17;;;18755:388;;;;;:::o;19707:923::-;19815:6;19823;19831;19839;19847;19855;19908:3;19896:9;19887:7;19883:23;19879:33;19876:53;;;19925:1;19922;19915:12;19876:53;19964:9;19951:23;19983:31;20008:5;19983:31;:::i;:::-;20033:5;-1:-1:-1;20085:2:120;20070:18;;20057:32;;-1:-1:-1;20140:2:120;20125:18;;20112:32;-1:-1:-1;;;;;20193:14:120;;;20190:34;;;20220:1;20217;20210:12;20635:478;20714:6;20722;20730;20783:2;20771:9;20762:7;20758:23;20754:32;20751:52;;;20799:1;20796;20789:12;20751:52;20835:9;20822:23;20812:33;;20896:2;20885:9;20881:18;20868:32;-1:-1:-1;;;;;20915:6:120;20912:30;20909:50;;;20955:1;20952;20945:12;20909:50;20994:59;21045:7;21036:6;21025:9;21021:22;20994:59;:::i;21118:380::-;21197:1;21193:12;;;;21240;;;21261:61;;21315:4;21307:6;21303:17;21293:27;;21261:61;21368:2;21360:6;21357:14;21337:18;21334:38;21331:161;;21414:10;21409:3;21405:20;21402:1;21395:31;21449:4;21446:1;21439:15;21477:4;21474:1;21467:15;21331:161;;21118:380;;;:::o;21503:267::-;21592:6;21587:3;21580:19;21644:6;21637:5;21630:4;21625:3;21621:14;21608:43;-1:-1:-1;21696:1:120;21671:16;;;21689:4;21667:27;;;21660:38;;;;21752:2;21731:15;;;-1:-1:-1;;21727:29:120;21718:39;;;21714:50;;21503:267::o;21775:640::-;-1:-1:-1;;;;;22070:32:120;;22052:51;;22151:4;22139:17;;22134:2;22119:18;;22112:45;22193:3;22188:2;22173:18;;22166:31;;;-1:-1:-1;;22220:63:120;;22263:19;;22255:6;22247;22220:63;:::i;:::-;22331:9;22323:6;22319:22;22314:2;22303:9;22299:18;22292:50;22359;22402:6;22394;22386;22359:50;:::i;:::-;22351:58;21775:640;-1:-1:-1;;;;;;;;;21775:640:120:o;22420:435::-;22701:1;22697;22692:3;22688:11;22684:19;22676:6;22672:32;22661:9;22654:51;22741:6;22736:2;22725:9;22721:18;22714:34;22784:2;22779;22768:9;22764:18;22757:30;22635:4;22804:45;22845:2;22834:9;22830:18;22822:6;22804:45;:::i;22860:613::-;23146:3;23128:22;;;23187:2;23166:19;;;23159:31;-1:-1:-1;;;23221:3:120;23206:19;;23199:45;-1:-1:-1;;;;;23356:15:120;;;23349:4;23334:20;;23327:45;23408:15;;;;23403:2;23388:18;;23381:43;-1:-1:-1;23440:18:120;;23433:34;;;;23276:3;23261:19;;22860:613::o;23478:509::-;23736:2;23718:21;;;23775:2;23755:18;;;23748:30;-1:-1:-1;;;23809:3:120;23794:19;;23787:44;-1:-1:-1;;;;;23905:32:120;;;;23898:4;23883:20;;23876:62;-1:-1:-1;23954:18:120;;23947:34;23863:3;23848:19;;23478:509::o;23992:514::-;24191:25;;;24252:2;24247;24232:18;;24225:30;;;24271:18;;24264:34;;;-1:-1:-1;;;;;;24310:31:120;;24307:51;;;24354:1;24351;24344:12;24307:51;24388:6;24385:1;24381:14;24445:6;24437;24432:2;24421:9;24417:18;24404:48;24473:22;;;;24497:2;24469:31;;23992:514;-1:-1:-1;;;;23992:514:120:o;24744:245::-;24811:6;24864:2;24852:9;24843:7;24839:23;24835:32;24832:52;;;24880:1;24877;24870:12;24832:52;24912:9;24906:16;24931:28;24953:5;24931:28;:::i;24994:127::-;25055:10;25050:3;25046:20;25043:1;25036:31;25086:4;25083:1;25076:15;25110:4;25107:1;25100:15;25126:136;25161:3;-1:-1:-1;;;25182:22:120;;25179:48;;25207:18;;:::i;:::-;-1:-1:-1;25247:1:120;25243:13;;25126:136::o;25267:127::-;25328:10;25323:3;25319:20;25316:1;25309:31;25359:4;25356:1;25349:15;25383:4;25380:1;25373:15;25399:216;25463:9;;;25491:11;;;25438:3;25521:9;;25549:10;;25545:19;;25574:10;;25566:19;;25542:44;25539:70;;;25589:18;;:::i;:::-;25539:70;;25399:216;;;;:::o;25620:200::-;25686:9;;;25659:4;25714:9;;25742:10;;25754:12;;;25738:29;25777:12;;;25769:21;;25735:56;25732:82;;;25794:18;;:::i;25825:529::-;26082:6;26071:9;26064:25;26154:1;26150;26145:3;26141:11;26137:19;26129:6;26125:32;26120:2;26109:9;26105:18;26098:60;26194:6;26189:2;26178:9;26174:18;26167:34;26237:6;26232:2;26221:9;26217:18;26210:34;26281:3;26275;26264:9;26260:19;26253:32;26045:4;26302:46;26343:3;26332:9;26328:19;26320:6;26302:46;:::i;26359:135::-;26398:3;26419:17;;;26416:43;;26439:18;;:::i;:::-;-1:-1:-1;26486:1:120;26475:13;;26359:135::o;26499:127::-;26560:10;26555:3;26551:20;26548:1;26541:31;26591:4;26588:1;26581:15;26615:4;26612:1;26605:15;26631:185;26669:3;26713:10;26706:5;26702:22;26743:7;26733:41;;26754:18;;:::i;:::-;-1:-1:-1;;26790:20:120;;26631:185;-1:-1:-1;;26631:185:120:o;26821:232::-;26920:2;26909:17;;;26890;;;;26886:41;-1:-1:-1;;26942:42:120;;-1:-1:-1;;;;;26986:37:120;;26939:85;26936:111;;;27027:18;;:::i;27058:184::-;27128:6;27181:2;27169:9;27160:7;27156:23;27152:32;27149:52;;;27197:1;27194;27187:12;27149:52;-1:-1:-1;27220:16:120;;27058:184;-1:-1:-1;27058:184:120:o;27247:1036::-;27367:6;27398:2;27441;27429:9;27420:7;27416:23;27412:32;27409:52;;;27457:1;27454;27447:12;27409:52;27490:9;27484:16;-1:-1:-1;;;;;27560:2:120;27552:6;27549:14;27546:34;;;27576:1;27573;27566:12;27546:34;27614:6;27603:9;27599:22;27589:32;;27659:7;27652:4;27648:2;27644:13;27640:27;27630:55;;27681:1;27678;27671:12;27630:55;27710:2;27704:9;27732:2;27728;27725:10;27722:36;;;27738:18;;:::i;:::-;27784:2;27781:1;27777:10;27767:20;;27807:28;27831:2;27827;27823:11;27807:28;:::i;:::-;27869:15;;;27939:11;;;27935:20;;;27900:12;;;;27967:19;;;27964:39;;;27999:1;27996;27989:12;27964:39;28023:11;;;;28043:210;28059:6;28054:3;28051:15;28043:210;;;28132:3;28126:10;28113:23;;28149:31;28174:5;28149:31;:::i;:::-;28193:18;;;28076:12;;;;28231;;;;28043:210;;;28272:5;27247:1036;-1:-1:-1;;;;;;;;27247:1036:120:o;28288:125::-;28353:9;;;28374:10;;;28371:36;;;28387:18;;:::i;29255:545::-;29357:2;29352:3;29349:11;29346:448;;;29393:1;29418:5;29414:2;29407:17;29463:4;29459:2;29449:19;29533:2;29521:10;29517:19;29514:1;29510:27;29504:4;29500:38;29569:4;29557:10;29554:20;29551:47;;;-1:-1:-1;29592:4:120;29551:47;29647:2;29642:3;29638:12;29635:1;29631:20;29625:4;29621:31;29611:41;;29702:82;29720:2;29713:5;29710:13;29702:82;;;29765:17;;;29746:1;29735:13;29702:82;;;29706:3;;;29255:545;;;:::o;29976:1206::-;-1:-1:-1;;;;;30095:3:120;30092:27;30089:53;;;30122:18;;:::i;:::-;30151:94;30241:3;30201:38;30233:4;30227:11;30201:38;:::i;:::-;30195:4;30151:94;:::i;:::-;30271:1;30296:2;30291:3;30288:11;30313:1;30308:616;;;;30968:1;30985:3;30982:93;;;-1:-1:-1;31041:19:120;;;31028:33;30982:93;-1:-1:-1;;29933:1:120;29929:11;;;29925:24;29921:29;29911:40;29957:1;29953:11;;;29908:57;31088:78;;30281:895;;30308:616;29202:1;29195:14;;;29239:4;29226:18;;-1:-1:-1;;30344:17:120;;;30445:9;30467:229;30481:7;30478:1;30475:14;30467:229;;;30570:19;;;30557:33;30542:49;;30677:4;30662:20;;;;30630:1;30618:14;;;;30497:12;30467:229;;;30471:3;30724;30715:7;30712:16;30709:159;;;30848:1;30844:6;30838:3;30832;30829:1;30825:11;30821:21;30817:34;30813:39;30800:9;30795:3;30791:19;30778:33;30774:79;30766:6;30759:95;30709:159;;;30911:1;30905:3;30902:1;30898:11;30894:19;30888:4;30881:33;30281:895;;29976:1206;;;:::o;31377:280::-;31476:6;31529:2;31517:9;31508:7;31504:23;31500:32;31497:52;;;31545:1;31542;31535:12;31497:52;31577:9;31571:16;31596:31;31621:5;31596:31;:::i;31946:128::-;32013:9;;;32034:11;;;32031:37;;;32048:18;;:::i;32079:201::-;32117:3;32145:10;32190:2;32183:5;32179:14;32217:2;32208:7;32205:15;32202:41;;32223:18;;:::i;:::-;32272:1;32259:15;;32079:201;-1:-1:-1;;;32079:201:120:o;32285:228::-;32382:2;32352:17;;;32371;;;;32348:41;-1:-1:-1;;;;;32404:36:120;;-1:-1:-1;;32442:41:120;;32401:83;32398:109;;;32487:18;;:::i;32892:172::-;32959:10;32989;;;33001;;;32985:27;;33024:11;;;33021:37;;;33038:18;;:::i;33069:148::-;33157:4;33136:12;;;33150;;;33132:31;;33175:13;;33172:39;;;33191:18;;:::i;33222:217::-;33262:1;33288;33278:132;;33332:10;33327:3;33323:20;33320:1;33313:31;33367:4;33364:1;33357:15;33395:4;33392:1;33385:15;33278:132;-1:-1:-1;33424:9:120;;33222:217::o;34854:305::-;34941:6;34949;34957;35010:2;34998:9;34989:7;34985:23;34981:32;34978:52;;;35026:1;35023;35016:12;34978:52;35055:9;35049:16;35039:26;;35105:2;35094:9;35090:18;35084:25;35074:35;;35149:2;35138:9;35134:18;35128:25;35118:35;;34854:305;;;;;:::o;36952:462::-;37047:6;37055;37063;37071;37124:3;37112:9;37103:7;37099:23;37095:33;37092:53;;;37141:1;37138;37131:12;37092:53;37170:9;37164:16;37154:26;;37223:2;37212:9;37208:18;37202:25;37271:5;37267:2;37256:21;37249:5;37246:32;37236:60;;37292:1;37289;37282:12;37236:60;37360:2;37345:18;;37339:25;37404:2;37389:18;;;37383:25;36952:462;;37315:5;;-1:-1:-1;36952:462:120;-1:-1:-1;;;36952:462:120:o;40133:450::-;40354:6;40343:9;40336:25;40397:2;40392;40381:9;40377:18;40370:30;40317:4;40423:45;40464:2;40453:9;40449:18;40441:6;40423:45;:::i;:::-;40516:9;40508:6;40504:22;40499:2;40488:9;40484:18;40477:50;40544:33;40570:6;40562;40544:33;:::i;40999:151::-;41089:4;41082:12;;;41068;;;41064:31;;41107:14;;41104:40;;;41124:18;;:::i;41155:422::-;41244:1;41287:5;41244:1;41301:270;41322:7;41312:8;41309:21;41301:270;;;41381:4;41377:1;41373:6;41369:17;41363:4;41360:27;41357:53;;;41390:18;;:::i;:::-;41440:7;41430:8;41426:22;41423:55;;;41460:16;;;;41423:55;41539:22;;;;41499:15;;;;41301:270;;;41305:3;41155:422;;;;;:::o;41582:806::-;41631:5;41661:8;41651:80;;-1:-1:-1;41702:1:120;41716:5;;41651:80;41750:4;41740:76;;-1:-1:-1;41787:1:120;41801:5;;41740:76;41832:4;41850:1;41845:59;;;;41918:1;41913:130;;;;41825:218;;41845:59;41875:1;41866:10;;41889:5;;;41913:130;41950:3;41940:8;41937:17;41934:43;;;41957:18;;:::i;:::-;-1:-1:-1;;42013:1:120;41999:16;;42028:5;;41825:218;;42127:2;42117:8;42114:16;42108:3;42102:4;42099:13;42095:36;42089:2;42079:8;42076:16;42071:2;42065:4;42062:12;42058:35;42055:77;42052:159;;;-1:-1:-1;42164:19:120;;;42196:5;;42052:159;42243:34;42268:8;42262:4;42243:34;:::i;:::-;42313:6;42309:1;42305:6;42301:19;42292:7;42289:32;42286:58;;;42324:18;;:::i;:::-;42362:20;;41582:806;-1:-1:-1;;;41582:806:120:o;42393:140::-;42451:5;42480:47;42521:4;42511:8;42507:19;42501:4;42480:47;:::i;42538:168::-;42611:9;;;42642;;42659:15;;;42653:22;;42639:37;42629:71;;42680:18;;:::i;43271:519::-;-1:-1:-1;;;;;43561:15:120;;;43543:34;;43613:15;;;43608:2;43593:18;;43586:43;43665:15;;43660:2;43645:18;;43638:43;43717:3;43712:2;43697:18;;43690:31;;;43486:4;;43738:46;;43764:19;;43756:6;43738:46;:::i;43795:510::-;-1:-1:-1;;;;;44050:32:120;;44032:51;;44119:2;44114;44099:18;;44092:30;;;-1:-1:-1;;44145:45:120;;44171:18;;44163:6;44145:45;:::i;44310:647::-;44389:6;44442:2;44430:9;44421:7;44417:23;44413:32;44410:52;;;44458:1;44455;44448:12;44410:52;44491:9;44485:16;-1:-1:-1;;;;;44516:6:120;44513:30;44510:50;;;44556:1;44553;44546:12;44510:50;44579:22;;44632:4;44624:13;;44620:27;-1:-1:-1;44610:55:120;;44661:1;44658;44651:12;44610:55;44690:2;44684:9;44715:48;44731:31;44759:2;44731:31;:::i;44715:48::-;44786:2;44779:5;44772:17;44826:7;44821:2;44816;44812;44808:11;44804:20;44801:33;44798:53;;;44847:1;44844;44837:12;44798:53;44860:67;44924:2;44919;44912:5;44908:14;44903:2;44899;44895:11;44860:67;:::i;45621:732::-;-1:-1:-1;;;;;45964:15:120;;;45946:34;;46016:15;;;46011:2;45996:18;;45989:43;46068:15;;46063:2;46048:18;;46041:43;46115:2;46100:18;;46093:34;;;46164:3;46158;46143:19;;46136:32;;;45889:4;;46191:46;;46217:19;;46209:6;46191:46;:::i;:::-;46286:9;46278:6;46274:22;46268:3;46257:9;46253:19;46246:51;46314:33;46340:6;46332;46314:33;:::i;46358:522::-;-1:-1:-1;;;;;46644:15:120;;;46626:34;;46696:15;;46691:2;46676:18;;46669:43;46759:2;46748:22;;;46743:2;46728:18;;46721:50;46807:3;46802:2;46787:18;;46780:31;;;46569:4;;46828:46;;46854:19;;46846:6;46828:46;:::i;47703:287::-;47832:3;47870:6;47864:13;47886:66;47945:6;47940:3;47933:4;47925:6;47921:17;47886:66;:::i;:::-;47968:16;;;;;47703:287;-1:-1:-1;;47703:287:120:o",
    "linkReferences": {},
    "immutableReferences": {
      "76331": [
        {
          "start": 1673,
          "length": 32
        },
        {
          "start": 4845,
          "length": 32
        },
        {
          "start": 4956,
          "length": 32
        },
        {
          "start": 5845,
          "length": 32
        },
        {
          "start": 6796,
          "length": 32
        },
        {
          "start": 7003,
          "length": 32
        },
        {
          "start": 7956,
          "length": 32
        },
        {
          "start": 8359,
          "length": 32
        },
        {
          "start": 10013,
          "length": 32
        },
        {
          "start": 11415,
          "length": 32
        },
        {
          "start": 11617,
          "length": 32
        },
        {
          "start": 11769,
          "length": 32
        },
        {
          "start": 11873,
          "length": 32
        },
        {
          "start": 12009,
          "length": 32
        },
        {
          "start": 14509,
          "length": 32
        },
        {
          "start": 14660,
          "length": 32
        },
        {
          "start": 19994,
          "length": 32
        },
        {
          "start": 20569,
          "length": 32
        }
      ],
      "88081": [
        {
          "start": 3667,
          "length": 32
        },
        {
          "start": 7724,
          "length": 32
        }
      ],
      "88084": [
        {
          "start": 2281,
          "length": 32
        },
        {
          "start": 7881,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "CONSTANT_INFLOW_NFT()": "4c5c0c85",
    "CONSTANT_OUTFLOW_NFT()": "ef43d2c6",
    "FLAT_COST_SPONSORSHIP()": "b132a50d",
    "MAX_SPONSORSHIP_LEVEL()": "b5c0b7eb",
    "MAX_SPONSORSHIP_PATH_OUTFLOW()": "f349f56a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "authorizeOperator(address)": "959b8c3f",
    "balanceOf(address)": "70a08231",
    "burn(uint256,bytes)": "fe9d9303",
    "calculateFlowRate(uint32)": "7ae058dc",
    "castrate()": "9903ad38",
    "createAgreement(bytes32,bytes32[])": "12a6a3f8",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "defaultOperators()": "06e48538",
    "downgrade(uint256)": "11bcc81e",
    "downgradeTo(address,uint256)": "83ba2525",
    "fee(uint32)": "8934c79a",
    "getAccountActiveAgreements(address)": "386fa221",
    "getAgreementData(address,bytes32,uint256)": "6c2d9f2f",
    "getAgreementStateSlot(address,address,uint256,uint256)": "4b61cc33",
    "getChainOfSponsors(address)": "21fb177a",
    "getCodeAddress()": "50d75d25",
    "getHost()": "20bc4425",
    "getProtege(address)": "099e14ce",
    "getUnderlyingToken()": "ee719bc8",
    "granularity()": "556f0dc7",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(address,uint8,string,string)": "42fe0980",
    "initialize(string,string,address)": "077f224a",
    "isAccountCritical(address,uint256)": "d9d078d6",
    "isAccountCriticalNow(address)": "79359f6f",
    "isAccountSolvent(address,uint256)": "b84cdd4a",
    "isAccountSolventNow(address)": "bb0d196e",
    "isOperatorFor(address,address)": "d95b6371",
    "isProtege(address)": "e4a472c8",
    "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": "1863e809",
    "mint(uint256)": "a0712d68",
    "name()": "06fdde03",
    "operationApprove(address,address,uint256)": "62aa5287",
    "operationDecreaseAllowance(address,address,uint256)": "c780fd82",
    "operationDowngrade(address,uint256)": "245887fc",
    "operationIncreaseAllowance(address,address,uint256)": "4b2763b3",
    "operationSend(address,address,uint256,bytes)": "ca0c1e7f",
    "operationTransferFrom(address,address,address,uint256)": "16d055d6",
    "operationUpgrade(address,uint256)": "ca789464",
    "operatorBurn(address,uint256,bytes,bytes)": "fc673c4f",
    "operatorSend(address,address,uint256,bytes,bytes)": "62ad1b83",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "realtimeBalanceOf(address,uint256)": "eb3537cc",
    "realtimeBalanceOfNow(address)": "2ec8eec7",
    "remove(address)": "29092d0e",
    "restartStream()": "57cf7acb",
    "revokeOperator(address)": "fad8b32a",
    "selfApproveFor(address,address,uint256)": "66a12fb6",
    "selfBurn(address,uint256,bytes)": "9d876741",
    "selfMint(address,uint256,bytes)": "c68d4283",
    "selfTransferFrom(address,address,address,uint256)": "41b706be",
    "send(address,uint256,bytes)": "9bd9bbc6",
    "settleBalance(address,int256)": "cf97256d",
    "sponsor(address)": "766c4f37",
    "symbol()": "95d89b41",
    "terminateAgreement(bytes32,uint256)": "27048397",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferAll(address)": "a3a7e7f3",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateAgreementData(bytes32,bytes32[])": "a1b2bf8b",
    "updateAgreementStateSlot(address,uint256,bytes32[])": "090c415e",
    "updateCode(address)": "46951954",
    "upgrade(uint256)": "45977d03",
    "upgradeTo(address,uint256,bytes)": "5b9d09cc",
    "withdraw(address,uint256)": "f3fef3a3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ISuperfluid\",\"name\":\"host\",\"type\":\"address\"},{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"},{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ALREADY_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CLUB_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CLUB_PROTEGE_CANNOT_BE_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INVALID_AMOUNT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL_REACHED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_ENOUGH_COIN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_PROTEGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_ALREADY_EXISTS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_AGREEMENT_DOES_NOT_EXIST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_BURN_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_MOVE_INSUFFICIENT_BALANCE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SF_TOKEN_ONLY_LISTED_AGREEMENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_MINT_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_NO_UNDERLYING_TOKEN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_GOV_OWNER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_HOST\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_ONLY_SELF\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"penaltyAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bondAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"AgreementLiquidatedBy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rewardAmountReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"}],\"name\":\"AgreementLiquidatedV2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"}],\"name\":\"AgreementStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bailoutAccount\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bailoutAmount\",\"type\":\"uint256\"}],\"name\":\"Bailout\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"uuid\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"name\":\"CodeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"constantInflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantInflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"constantOutflowNFT\",\"type\":\"address\"}],\"name\":\"ConstantOutflowNFTCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"PROTEGE_UPDATED\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDowngraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONSTANT_INFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantInflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONSTANT_OUTFLOW_NFT\",\"outputs\":[{\"internalType\":\"contract IConstantOutflowNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLAT_COST_SPONSORSHIP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_LEVEL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SPONSORSHIP_PATH_OUTFLOW\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"}],\"name\":\"calculateFlowRate\",\"outputs\":[{\"internalType\":\"int96\",\"name\":\"flowRate\",\"type\":\"int96\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"castrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"downgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"directProtegeCount\",\"type\":\"uint32\"}],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountActiveAgreements\",\"outputs\":[{\"internalType\":\"contract ISuperAgreement[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementData\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"agreementClass\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"getAgreementStateSlot\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getChainOfSponsors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege[]\",\"name\":\"sponsors\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCodeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"codeAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"host\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"getProtege\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"totalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"directTotalProtegeCount\",\"type\":\"uint32\"},{\"internalType\":\"int96\",\"name\":\"desiredFlowRate\",\"type\":\"int96\"}],\"internalType\":\"struct ISuperfluidClub.Protege\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUnderlyingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"underlyingToken\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"underlyingDecimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"n\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountCritical\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountCriticalNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isCritical\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"isAccountSolvent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAccountSolventNow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSolvent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"protege\",\"type\":\"address\"}],\"name\":\"isProtege\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"liquidationTypeData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"liquidatorAccount\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useDefaultRewardAccount\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"targetAccount\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"targetAccountBalanceDelta\",\"type\":\"int256\"}],\"name\":\"makeLiquidationPayoutsV2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"operationDecreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationDowngrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"operationIncreaseAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"operationSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"operationUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"realtimeBalanceOf\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"realtimeBalanceOfNow\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"availableBalance\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"deposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"owedDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oldProtege\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"restartStream\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfApproveFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"selfMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"selfTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"delta\",\"type\":\"int256\"}],\"name\":\"settleBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newProtege\",\"type\":\"address\"}],\"name\":\"sponsor\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"dataLength\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"data\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slotId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"slotData\",\"type\":\"bytes32[]\"}],\"name\":\"updateAgreementStateSlot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateCode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Contract that facilitates the operations of a superfluid club.\",\"events\":{\"AgreementCreated(address,bytes32,bytes32[])\":{\"details\":\"Agreement created event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"AgreementLiquidated(address,bytes32,address,address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAccount\":\"Account that collect the reward\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"custom:note\":\" Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\",\"details\":\"Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"bailoutAmount\":\"Amount of liquidation bailouot\",\"bondAccount\":\"Account that collect the reward or bailout accounts\",\"id\":\"Agreement ID\",\"liquidatorAccount\":\"Account of the agent that performed the liquidation.\",\"penaltyAccount\":\"Account of the agreement to be penalized\",\"rewardAmount\":\"Amount of liquidation reward\"}},\"AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)\":{\"custom:note\":\" Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAmountReceiver will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the rewardAmountReceiver will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the default reward account (governance) will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount\",\"details\":\"Agreement liquidation event v2 (including agent account)\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\",\"liquidationTypeData\":\"The encoded liquidation type data including the version (how to decode)\",\"liquidatorAccount\":\"Address of the executor of the liquidation\",\"rewardAmount\":\"The amount the reward recipient account balance should change by\",\"rewardAmountReceiver\":\"Account that collects the reward or bails out insolvent accounts\",\"targetAccount\":\"Account of the stream sender\",\"targetAccountBalanceDelta\":\"The amount the sender account balance should change by\"}},\"AgreementStateUpdated(address,address,uint256)\":{\"details\":\"Agreement account state updated event\",\"params\":{\"account\":\"Account updated\",\"agreementClass\":\"Contract address of the agreement\",\"slotId\":\"slot id of the agreement state\"}},\"AgreementTerminated(address,bytes32)\":{\"details\":\"Agreement terminated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"id\":\"Agreement ID\"}},\"AgreementUpdated(address,bytes32,bytes32[])\":{\"details\":\"Agreement updated event\",\"params\":{\"agreementClass\":\"Contract address of the agreement\",\"data\":\"Agreement data\",\"id\":\"Agreement ID\"}},\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"AuthorizedOperator(address,address)\":{\"details\":\"Emitted when `operator` is made operator for `tokenHolder`.\"},\"Bailout(address,uint256)\":{\"custom:deprecated\":\"Use AgreementLiquidatedV2 instead\",\"details\":\"System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\",\"params\":{\"bailoutAccount\":\"Account that bailout the penalty account\",\"bailoutAmount\":\"Amount of account bailout\"}},\"Burned(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `operator` destroys `amount` tokens from `account`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"ConstantInflowNFTCreated(address)\":{\"details\":\"Constant Inflow NFT proxy created event\",\"params\":{\"constantInflowNFT\":\"constant inflow nft address\"}},\"ConstantOutflowNFTCreated(address)\":{\"details\":\"Constant Outflow NFT proxy created event\",\"params\":{\"constantOutflowNFT\":\"constant outflow nft address\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Minted(address,address,uint256,bytes,bytes)\":{\"details\":\"Emitted when `amount` tokens are created by `operator` and assigned to `to`. Note that some additional user `data` and `operatorData` can be logged in the event.\"},\"RevokedOperator(address,address)\":{\"details\":\"Emitted when `operator` is revoked its operator status for `tokenHolder`.\"},\"TokenDowngraded(address,uint256)\":{\"details\":\"Token downgrade event\",\"params\":{\"account\":\"Account whose tokens are downgraded\",\"amount\":\"Amount of tokens downgraded\"}},\"TokenUpgraded(address,uint256)\":{\"details\":\"Token upgrade event\",\"params\":{\"account\":\"Account where tokens are upgraded to\",\"amount\":\"Amount of tokens upgraded (in 18 decimals)\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}.\"},\"calculateFlowRate(uint32)\":{\"details\":\"ISuperfluidClub.calculateSponsorFlowRate implementation\"},\"createAgreement(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.createAgreement implementation\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"downgrade(uint256)\":{\"details\":\"ISuperToken.downgrade implementation\"},\"downgradeTo(address,uint256)\":{\"details\":\"Downgrade SuperToken to ERC20 and transfer immediately\",\"params\":{\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\",\"to\":\"The account to receive downgraded tokens\"}},\"fee(uint32)\":{\"details\":\"ISuperfluidClub.fee implementation\"},\"getAccountActiveAgreements(address)\":{\"details\":\"ISuperfluidToken.getAccountActiveAgreements implementation\"},\"getAgreementData(address,bytes32,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementData implementation\"},\"getAgreementStateSlot(address,address,uint256,uint256)\":{\"details\":\"ISuperfluidToken.getAgreementState implementation\"},\"getChainOfSponsors(address)\":{\"details\":\"ISuperfluidClub.getChainOfSponsors implementation\"},\"getCodeAddress()\":{\"details\":\"Get current implementation code address.\"},\"getHost()\":{\"details\":\"ISuperfluidToken.getHost implementation\"},\"getProtege(address)\":{\"details\":\"ISuperfluidClub.getProtege\"},\"getUnderlyingToken()\":{\"details\":\"ISuperfluidGovernance.getUnderlyingToken implementation\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.\"},\"initialize(address,uint8,string,string)\":{\"details\":\"Initialize the Super Token proxy\"},\"initialize(string,string,address)\":{\"details\":\"ISuperfluidClub.initialize implementation\"},\"isAccountCritical(address,uint256)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is critical (should use future)\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountCriticalNow(address)\":{\"details\":\"A critical account is when availableBalance < 0\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isCritical\":\"Whether the account is critical\"}},\"isAccountSolvent(address,uint256)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\",\"timestamp\":\"The time we'd like to check if the account is solvent (should use future)\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isAccountSolventNow(address)\":{\"details\":\"An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\",\"params\":{\"account\":\"The account to check\"},\"returns\":{\"isSolvent\":\"True if the account is solvent, false otherwise\"}},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"isProtege(address)\":{\"details\":\"ISuperfluidClub.isProtege implementation\"},\"makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)\":{\"details\":\"ISuperfluidToken.makeLiquidationPayoutsV2 implementation\"},\"mint(uint256)\":{\"details\":\"ISuperfluidClub.mint implementation\"},\"operationDowngrade(address,uint256)\":{\"details\":\"Downgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be downgraded (in 18 decimals)\"}},\"operationSend(address,address,uint256,bytes)\":{\"details\":\"Perform ERC777 send by host contract.\",\"params\":{\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\",\"userData\":\"Arbitrary user inputted data\"}},\"operationTransferFrom(address,address,address,uint256)\":{\"details\":\"Perform ERC20 transferFrom by host contract.\",\"params\":{\"account\":\"The account to spend sender's funds.\",\"amount\":\"Number of tokens to be transferred.\",\"recipient\":\"The recipient of the funds.\",\"spender\":\"The account where the funds is sent from.\"}},\"operationUpgrade(address,uint256)\":{\"details\":\"Upgrade ERC20 to SuperToken by host contract.\",\"params\":{\"account\":\"The account to be changed.\",\"amount\":\"Number of tokens to be upgraded (in 18 decimals)\"}},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"proxiableUUID()\":{\"details\":\"Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT.\"},\"realtimeBalanceOf(address,uint256)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOf implementation\"},\"realtimeBalanceOfNow(address)\":{\"details\":\"ISuperfluidToken.realtimeBalanceOfNow implementation\"},\"remove(address)\":{\"details\":\"test function\"},\"restartStream()\":{\"details\":\"ISuperfluidClub.sponsor implementation - WRONG\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}.\"},\"selfApproveFor(address,address,uint256)\":{\"details\":\"Give `spender`, `amount` allowance to spend the tokens of `account`.\"},\"selfBurn(address,uint256,bytes)\":{\"details\":\"Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\"},\"settleBalance(address,int256)\":{\"details\":\"ISuperfluidToken.settleBalance implementation\"},\"sponsor(address)\":{\"details\":\"ISuperfluidClub.sponsor implementation\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"terminateAgreement(bytes32,uint256)\":{\"details\":\"ISuperfluidToken.terminateAgreement implementation\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.\",\"returns\":{\"_0\":\"Returns Success a boolean value indicating whether the operation succeeded.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAgreementData(bytes32,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementData implementation\"},\"updateAgreementStateSlot(address,uint256,bytes32[])\":{\"details\":\"ISuperfluidToken.updateAgreementState implementation\"},\"upgrade(uint256)\":{\"details\":\"ISuperToken.upgrade implementation\"},\"upgradeTo(address,uint256,bytes)\":{\"details\":\"ISuperToken.upgradeTo implementation\"},\"withdraw(address,uint256)\":{\"details\":\"ISuperfluidClub.withdraw implementation\"}},\"stateVariables\":{\"owner\":{\"details\":\"Returns the address of the current owner.\"}},\"title\":\"Superfluid Club\",\"version\":1},\"userdoc\":{\"events\":{\"PROTEGE_UPDATED(address,address,uint8,uint32,uint32)\":{\"notice\":\"Events\"}},\"kind\":\"user\",\"methods\":{\"MAX_SPONSORSHIP_LEVEL()\":{\"notice\":\"Constants\"},\"granularity()\":{\"notice\":\"ERC-777 functions\"},\"isAccountCritical(address,uint256)\":{\"notice\":\"Check if account is critical\"},\"isAccountCriticalNow(address)\":{\"notice\":\"Check if account is critical now (current host.getNow())\"},\"isAccountSolvent(address,uint256)\":{\"notice\":\"Check if account is solvent\"},\"isAccountSolventNow(address)\":{\"notice\":\"Check if account is solvent now\"},\"name()\":{\"notice\":\"ERC20 Token Info\"},\"operationApprove(address,address,uint256)\":{\"notice\":\"Superfluid Batch Operations\"},\"selfMint(address,uint256,bytes)\":{\"notice\":\"SuperToken custom token functions\"},\"totalSupply()\":{\"notice\":\"ERC20 Implementations\"},\"transferAll(address)\":{\"notice\":\"SuperToken extra functions\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SuperfluidClub.sol\":\"SuperfluidClub\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/\",\":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/\",\":custom-supertokens/=lib/custom-supertokens/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/\"]},\"sources\":{\"lib/custom-supertokens/contracts/base/SuperTokenBase.sol\":{\"keccak256\":\"0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c\",\"dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq\"]},\"lib/custom-supertokens/contracts/base/SuperTokenStorage.sol\":{\"keccak256\":\"0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26\",\"dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8\"]},\"lib/custom-supertokens/contracts/base/UUPSProxy.sol\":{\"keccak256\":\"0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa\",\"dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol\":{\"keccak256\":\"0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432\",\"dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d\",\"dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol\":{\"keccak256\":\"0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e\",\"dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol\":{\"keccak256\":\"0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590\",\"dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol\":{\"keccak256\":\"0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387\",\"dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol\":{\"keccak256\":\"0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448\",\"dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol\":{\"keccak256\":\"0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839\",\"dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol\":{\"keccak256\":\"0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42\",\"dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol\":{\"keccak256\":\"0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d\",\"dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol\":{\"keccak256\":\"0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8\",\"dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol\":{\"keccak256\":\"0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19\",\"dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol\":{\"keccak256\":\"0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06\",\"dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol\":{\"keccak256\":\"0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826\",\"dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol\":{\"keccak256\":\"0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3\",\"dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol\":{\"keccak256\":\"0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0\",\"dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol\":{\"keccak256\":\"0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7\",\"dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol\":{\"keccak256\":\"0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258\",\"dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol\":{\"keccak256\":\"0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1\",\"dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol\":{\"keccak256\":\"0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725\",\"dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol\":{\"keccak256\":\"0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb\",\"dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol\":{\"keccak256\":\"0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22\",\"dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol\":{\"keccak256\":\"0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda\",\"dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol\":{\"keccak256\":\"0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d\",\"dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol\":{\"keccak256\":\"0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6\",\"dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol\":{\"keccak256\":\"0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12\",\"dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol\":{\"keccak256\":\"0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953\",\"dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp\"]},\"lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol\":{\"keccak256\":\"0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238\",\"dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud\"]},\"src/SuperfluidClub.sol\":{\"keccak256\":\"0x2f557cabd26cdf4e57392fe8c6d02bc11a98be73a910c35c8ae5278437b15aea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6436d68b3a906bdb3754ab4ae1f881d7d0179b0cb3e467d9f5388cf5e40bf77\",\"dweb:/ipfs/QmarRrtwyD4DwmvB4EWAnHWw79evmJWpS1Li9YBpdYahJp\"]},\"src/interfaces/IOwnable.sol\":{\"keccak256\":\"0xf46b2677eaeb6f309b0831329a23eaf25ca435298d1c21b759cea1a0aaacb1a3\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://597a1a6dfbfeee598f8ab8099a74fb64561e9db48f4e28f87588f87fae9a2bf8\",\"dweb:/ipfs/QmP1bb1BNSBFGzEnFWWmyycvRMAJeTf1kttrydJAc9iJ84\"]},\"src/interfaces/ISuperfluidClub.sol\":{\"keccak256\":\"0xa8eb54bf1057b359208a97aa7f967153cbd84f238cea037fd56885671e4b0772\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://b183a7d815e0a65763c7d2eaeb5001c0a5569872894eb42aa4cd5af7f5df4dc6\",\"dweb:/ipfs/QmQky3h2X9q2RhADo5s3xBvz6ePeD6GixsRL8Yg41pEZCA\"]},\"src/superToken/SuperToken.sol\":{\"keccak256\":\"0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf\",\"license\":\"AGPLv3\",\"urls\":[\"bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9\",\"dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ISuperfluid",
              "name": "host",
              "type": "address"
            },
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address"
            },
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ALREADY_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CLUB_PROTEGE_CANNOT_BE_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "INVALID_AMOUNT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "MAX_SPONSORSHIP_LEVEL_REACHED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_ENOUGH_COIN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NOT_PROTEGE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_ALREADY_EXISTS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_AGREEMENT_DOES_NOT_EXIST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_BURN_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_MOVE_INSUFFICIENT_BALANCE"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SF_TOKEN_ONLY_LISTED_AGREEMENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_APPROVE_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_BURN_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_CALLER_IS_NOT_OPERATOR_FOR_HOLDER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_INFLATIONARY_DEFLATIONARY_NOT_SUPPORTED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_MINT_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NFT_PROXY_ADDRESS_CHANGED"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NOT_ERC777_TOKENS_RECIPIENT"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_NO_UNDERLYING_TOKEN"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_GOV_OWNER"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_HOST"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_ONLY_SELF"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_FROM_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SUPER_TOKEN_TRANSFER_TO_ZERO_ADDRESS"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ZERO_ADDRESS"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "penaltyAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "bondAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedBy",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "rewardAmountReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementLiquidatedV2",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementStateUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementTerminated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AgreementUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorizedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "bailoutAccount",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "bailoutAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Bailout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uuid",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CodeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "constantInflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantInflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "constantOutflowNFT",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "ConstantOutflowNFTCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Minted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "protege",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "level",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "uint32",
              "name": "directTotalProtegeCount",
              "type": "uint32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PROTEGE_UPDATED",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RevokedOperator",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Sent",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenDowngraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenUpgraded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_INFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantInflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONSTANT_OUTFLOW_NFT",
          "outputs": [
            {
              "internalType": "contract IConstantOutflowNFT",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "FLAT_COST_SPONSORSHIP",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_LEVEL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "totalProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateFlowRate",
          "outputs": [
            {
              "internalType": "int96",
              "name": "flowRate",
              "type": "int96"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "castrate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "defaultOperators",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "downgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "directProtegeCount",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "fee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "feeAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountActiveAgreements",
          "outputs": [
            {
              "internalType": "contract ISuperAgreement[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementData",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "agreementClass",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAgreementStateSlot",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getChainOfSponsors",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege[]",
              "name": "sponsors",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCodeAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "codeAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getHost",
          "outputs": [
            {
              "internalType": "address",
              "name": "host",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getProtege",
          "outputs": [
            {
              "internalType": "struct ISuperfluidClub.Protege",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "sponsor",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint32",
                  "name": "totalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "directTotalProtegeCount",
                  "type": "uint32"
                },
                {
                  "internalType": "int96",
                  "name": "desiredFlowRate",
                  "type": "int96"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getUnderlyingToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "granularity",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "symbol",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "underlyingToken",
              "type": "address"
            },
            {
              "internalType": "uint8",
              "name": "underlyingDecimals",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "n",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "s",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCritical",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountCriticalNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isCritical",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolvent",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAccountSolventNow",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSolvent",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenHolder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOperatorFor",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "protege",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isProtege",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "liquidationTypeData",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "liquidatorAccount",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "useDefaultRewardAccount",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "targetAccount",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "rewardAmount",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "targetAccountBalanceDelta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLiquidationPayoutsV2"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationApprove"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDecreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationDowngrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationIncreaseAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationSend"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operationUpgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "operatorData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "operatorSend"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOf",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "realtimeBalanceOfNow",
          "outputs": [
            {
              "internalType": "int256",
              "name": "availableBalance",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "deposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "owedDeposit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldProtege",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "restartStream"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfApproveFor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfBurn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "selfTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "send"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "int256",
              "name": "delta",
              "type": "int256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "settleBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newProtege",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sponsor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "dataLength",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "terminateAgreement"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "holder",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32[]",
              "name": "data",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementData"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "slotId",
              "type": "uint256"
            },
            {
              "internalType": "bytes32[]",
              "name": "slotData",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateAgreementStateSlot"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateCode"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgrade"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "upgradeTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "authorizeOperator(address)": {
            "details": "Make an account an operator of the caller. See {isOperatorFor}."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by an account (`owner`)."
          },
          "burn(uint256,bytes)": {
            "details": "Destroys `amount` tokens from the caller's account, reducing the total supply and transfers the underlying token to the caller's account. If a send hook is registered for the caller, the corresponding function will be called with `userData` and empty `operatorData`. See {IERC777Sender}."
          },
          "calculateFlowRate(uint32)": {
            "details": "ISuperfluidClub.calculateSponsorFlowRate implementation"
          },
          "createAgreement(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.createAgreement implementation"
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "defaultOperators()": {
            "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
          },
          "downgrade(uint256)": {
            "details": "ISuperToken.downgrade implementation"
          },
          "downgradeTo(address,uint256)": {
            "details": "Downgrade SuperToken to ERC20 and transfer immediately",
            "params": {
              "amount": "Number of tokens to be downgraded (in 18 decimals)",
              "to": "The account to receive downgraded tokens"
            }
          },
          "fee(uint32)": {
            "details": "ISuperfluidClub.fee implementation"
          },
          "getAccountActiveAgreements(address)": {
            "details": "ISuperfluidToken.getAccountActiveAgreements implementation"
          },
          "getAgreementData(address,bytes32,uint256)": {
            "details": "ISuperfluidToken.getAgreementData implementation"
          },
          "getAgreementStateSlot(address,address,uint256,uint256)": {
            "details": "ISuperfluidToken.getAgreementState implementation"
          },
          "getChainOfSponsors(address)": {
            "details": "ISuperfluidClub.getChainOfSponsors implementation"
          },
          "getCodeAddress()": {
            "details": "Get current implementation code address."
          },
          "getHost()": {
            "details": "ISuperfluidToken.getHost implementation"
          },
          "getProtege(address)": {
            "details": "ISuperfluidClub.getProtege"
          },
          "getUnderlyingToken()": {
            "details": "ISuperfluidGovernance.getUnderlyingToken implementation"
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}."
          },
          "initialize(address,uint8,string,string)": {
            "details": "Initialize the Super Token proxy"
          },
          "initialize(string,string,address)": {
            "details": "ISuperfluidClub.initialize implementation"
          },
          "isAccountCritical(address,uint256)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is critical (should use future)"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountCriticalNow(address)": {
            "details": "A critical account is when availableBalance < 0",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isCritical": "Whether the account is critical"
            }
          },
          "isAccountSolvent(address,uint256)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check",
              "timestamp": "The time we'd like to check if the account is solvent (should use future)"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isAccountSolventNow(address)": {
            "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
            "params": {
              "account": "The account to check"
            },
            "returns": {
              "isSolvent": "True if the account is solvent, false otherwise"
            }
          },
          "isOperatorFor(address,address)": {
            "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
          },
          "isProtege(address)": {
            "details": "ISuperfluidClub.isProtege implementation"
          },
          "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
            "details": "ISuperfluidToken.makeLiquidationPayoutsV2 implementation"
          },
          "mint(uint256)": {
            "details": "ISuperfluidClub.mint implementation"
          },
          "operationDowngrade(address,uint256)": {
            "details": "Downgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be downgraded (in 18 decimals)"
            }
          },
          "operationSend(address,address,uint256,bytes)": {
            "details": "Perform ERC777 send by host contract.",
            "params": {
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from.",
              "userData": "Arbitrary user inputted data"
            }
          },
          "operationTransferFrom(address,address,address,uint256)": {
            "details": "Perform ERC20 transferFrom by host contract.",
            "params": {
              "account": "The account to spend sender's funds.",
              "amount": "Number of tokens to be transferred.",
              "recipient": "The recipient of the funds.",
              "spender": "The account where the funds is sent from."
            }
          },
          "operationUpgrade(address,uint256)": {
            "details": "Upgrade ERC20 to SuperToken by host contract.",
            "params": {
              "account": "The account to be changed.",
              "amount": "Number of tokens to be upgraded (in 18 decimals)"
            }
          },
          "operatorBurn(address,uint256,bytes,bytes)": {
            "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `userData` and `operatorData`. See {IERC777Sender}."
          },
          "operatorSend(address,address,uint256,bytes,bytes)": {
            "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `userData` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "proxiableUUID()": {
            "details": "Proxiable UUID marker function, this would help to avoid wrong logic      contract to be used for upgrading. NOTE: The semantics of the UUID deviates from the actual UUPS standard,       where it is equivalent of _IMPLEMENTATION_SLOT."
          },
          "realtimeBalanceOf(address,uint256)": {
            "details": "ISuperfluidToken.realtimeBalanceOf implementation"
          },
          "realtimeBalanceOfNow(address)": {
            "details": "ISuperfluidToken.realtimeBalanceOfNow implementation"
          },
          "remove(address)": {
            "details": "test function"
          },
          "restartStream()": {
            "details": "ISuperfluidClub.sponsor implementation - WRONG"
          },
          "revokeOperator(address)": {
            "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}."
          },
          "selfApproveFor(address,address,uint256)": {
            "details": "Give `spender`, `amount` allowance to spend the tokens of `account`."
          },
          "selfBurn(address,uint256,bytes)": {
            "details": "Burn existing tokens for the account If `userData` is not empty, the `tokensToSend` hook is invoked according to ERC777 semantics."
          },
          "send(address,uint256,bytes)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.If send or receive hooks are registered for the caller and `recipient`,      the corresponding functions will be called with `userData` and empty      `operatorData`. See {IERC777Sender} and {IERC777Recipient}."
          },
          "settleBalance(address,int256)": {
            "details": "ISuperfluidToken.settleBalance implementation"
          },
          "sponsor(address)": {
            "details": "ISuperfluidClub.sponsor implementation"
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "terminateAgreement(bytes32,uint256)": {
            "details": "ISuperfluidToken.terminateAgreement implementation"
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`.",
            "returns": {
              "_0": "Returns Success a boolean value indicating whether the operation succeeded."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateAgreementData(bytes32,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementData implementation"
          },
          "updateAgreementStateSlot(address,uint256,bytes32[])": {
            "details": "ISuperfluidToken.updateAgreementState implementation"
          },
          "upgrade(uint256)": {
            "details": "ISuperToken.upgrade implementation"
          },
          "upgradeTo(address,uint256,bytes)": {
            "details": "ISuperToken.upgradeTo implementation"
          },
          "withdraw(address,uint256)": {
            "details": "ISuperfluidClub.withdraw implementation"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MAX_SPONSORSHIP_LEVEL()": {
            "notice": "Constants"
          },
          "granularity()": {
            "notice": "ERC-777 functions"
          },
          "isAccountCritical(address,uint256)": {
            "notice": "Check if account is critical"
          },
          "isAccountCriticalNow(address)": {
            "notice": "Check if account is critical now (current host.getNow())"
          },
          "isAccountSolvent(address,uint256)": {
            "notice": "Check if account is solvent"
          },
          "isAccountSolventNow(address)": {
            "notice": "Check if account is solvent now"
          },
          "name()": {
            "notice": "ERC20 Token Info"
          },
          "operationApprove(address,address,uint256)": {
            "notice": "Superfluid Batch Operations"
          },
          "selfMint(address,uint256,bytes)": {
            "notice": "SuperToken custom token functions"
          },
          "totalSupply()": {
            "notice": "ERC20 Implementations"
          },
          "transferAll(address)": {
            "notice": "SuperToken extra functions"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@superfluid-finance/custom-supertokens/=lib/custom-supertokens/",
        ":@superfluid-finance/ethereum-contracts/=lib/superfluid-protocol-monorepo/packages/ethereum-contracts/",
        ":custom-supertokens/=lib/custom-supertokens/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":superfluid-protocol-monorepo/=lib/superfluid-protocol-monorepo/packages/solidity-semantic-money/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SuperfluidClub.sol": "SuperfluidClub"
      },
      "libraries": {}
    },
    "sources": {
      "lib/custom-supertokens/contracts/base/SuperTokenBase.sol": {
        "keccak256": "0x20ad0c53399cd71f9e2af49c7f2f99a423bacdf7da4c64dfa65e5aca40dac571",
        "urls": [
          "bzz-raw://1c6ab8fe1ae02242871cf5d805fbd8b753f5a1df9515658802cdea7b44c3914c",
          "dweb:/ipfs/QmfWFs8zVLnpDMZBRQTTLgmT9VdSmEchZhR2SoAzrdygzq"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/SuperTokenStorage.sol": {
        "keccak256": "0x8e08c8b78f0e7fbdbcd378bf2fa2d518deba7d9591d20a9457571fceb9f95687",
        "urls": [
          "bzz-raw://5f0323df5e91e7fafd940ea9a8f808c61b5cd6f30974d6d071b25b350ce1ef26",
          "dweb:/ipfs/Qmd5qFWZsW8NGuswNJW3dLkiktNu1MymbZ26VjVRypy3A8"
        ],
        "license": "AGPLv3"
      },
      "lib/custom-supertokens/contracts/base/UUPSProxy.sol": {
        "keccak256": "0xd3e51b5fc04238364c4ed9068e31e88bd44e20546089e4fb76422ea1c2eac1ca",
        "urls": [
          "bzz-raw://041548f8c5c4bf62fcf02677272196f953f320774ff784a7a93351e4c45956aa",
          "dweb:/ipfs/QmPvKxXbCFrWcHnwbTbSdEa96j4No8DHeuzXG1ftKPHwf1"
        ],
        "license": "AGPLv3"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266",
        "urls": [
          "bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4",
          "dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777.sol": {
        "keccak256": "0x79e6094047e40d49efa3c725b7a1519e16c28c46944884b5f6d0fbe89b450f03",
        "urls": [
          "bzz-raw://2570d04d0b74df414fa33f9f7da6442419a07909ece7baeecd7147d9c7d6a432",
          "dweb:/ipfs/QmRDQM1kzddwCk8ateQgnogu495fWb4L9Xwr42DAQhHzi5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Sender.sol": {
        "keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
        "urls": [
          "bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
          "dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC1820Registry.sol": {
        "keccak256": "0x42f11bff9d625194645e74f01a3cf8f69a3979f07becfa293f75757cabb92050",
        "urls": [
          "bzz-raw://7dc35b43a667c38d0868c20d648ccb2ec4107bcc1e77ce4fc79ce4938cb51a6d",
          "dweb:/ipfs/QmbwauNDkoLnWYB2owGeZBYWz2y7ZejdC6Q3c5MPZHLnNm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol": {
        "keccak256": "0xfc49f4845cf277b157b838edfe4bdade6b680253581e6b892bc1975e9ea9445c",
        "urls": [
          "bzz-raw://3fbc5363d05bfdc1534dab7f294a33658cc9259ef7d24d767ceb81c9168c8d7e",
          "dweb:/ipfs/QmcaKhXJXyfnyxW8UkULtA4tF2erXx7t2nZA1GDt5koywN"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IConstantFlowAgreementV1.sol": {
        "keccak256": "0x26f6828c29d0a4f58d9427dabcb0ad6c0ab2e3e8b2ce97bf25846cff740a8968",
        "urls": [
          "bzz-raw://8df911f06289aa9d6f6357546a70085906696932ff0dc3a4858fc0dcb1761590",
          "dweb:/ipfs/QmNkkyVSWpLGizWgUVhVUf9yyw4QWqsrGRnuQz2VNBU4yq"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/agreements/IInstantDistributionAgreementV1.sol": {
        "keccak256": "0xac0ea75673feea931d1129ffff440390a0dd3a8f8cfa60fdb1481342652dc348",
        "urls": [
          "bzz-raw://a08777cd6701548c08f1f55d0ce86e0773a80ef28613852cd2f0552a2a24a387",
          "dweb:/ipfs/QmTgWcQE6mNs3MLUCgqtnsC5UfYYQ9x3gsjXpvJdSe2WJg"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/Definitions.sol": {
        "keccak256": "0xdb22b7d9ef9c3bcf5b5ec64b965d371ed0fa8493486d45e5cb7f52718baec7d8",
        "urls": [
          "bzz-raw://1e7500dd7267f2ebc509eb0bf7ed0a2316e44038ab60c0f4b9e1d9820c81e448",
          "dweb:/ipfs/QmaFZMARdPTQZwWmmXecdRTnqJopxF9qbt49ebZ9HJP9k2"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantInflowNFT.sol": {
        "keccak256": "0xb219bf31e236fe6c2968ecf0f6c3eb24cb6774aaf4fcc83252e9b06bba718f33",
        "urls": [
          "bzz-raw://c09b0ffff8630ba6a86cdcd17f1ac65f8ba4e5b296e0320d945943e156fdf839",
          "dweb:/ipfs/QmPkBBJBYyYg1xxM4wRKdEpGK3b1beYeKoM6THzYb3qjM7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IConstantOutflowNFT.sol": {
        "keccak256": "0x15799c1552fa7aad4c1a7197451cd02422a6c768b236ab2904e72f7158a4a2c2",
        "urls": [
          "bzz-raw://c62bb88c0c43ad162c8c226aede16a75c352738aaaf6794fa0c2881dcf59ad42",
          "dweb:/ipfs/QmeWQdFDvzbN8JrCRSRRnZEuw5EbWVzRLM2duhJ515QUXK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IFlowNFTBase.sol": {
        "keccak256": "0xa1600ee907288d7852678cc43f995498a039710a4f025a8785de288c4a4ceced",
        "urls": [
          "bzz-raw://d317bab758d3b73005ac27b87e2410a087ca8507538795f555d37bd2d97a028d",
          "dweb:/ipfs/QmSHDBjGYTC64LkDaTQj38DZUGNV9mzxhUYAAfaDLQYEmS"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolAdminNFT.sol": {
        "keccak256": "0xa821859afd2405819b70daa367c47fc08d71b4d601effc527542862068a07403",
        "urls": [
          "bzz-raw://a4596c30e866fdcabd672824dbee8cd6c24e516aa005c8d41057c686ff18c0c8",
          "dweb:/ipfs/QmSybbMVYYwWR6BVSoLwtk6YvYzts3HXZqxBYQpxKxPgCs"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/IPoolMemberNFT.sol": {
        "keccak256": "0xba6dc0dcbd8be4a96ab5f25f90977b7c71aa1eb15df1d6835ebe2b4bb46a3045",
        "urls": [
          "bzz-raw://04a7a6e769361c9cfe38751c7dede99807c5c54f50f48c1ac929bb9f5a47fd19",
          "dweb:/ipfs/QmTTAp6LoQJC2N3Ko6HKWSr55iHijRBeUAoBxpri2Uw4jr"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperAgreement.sol": {
        "keccak256": "0xba0407c47917aee8b6e7cea745332d2f7244cc3b91d249426f0105b365feb0ee",
        "urls": [
          "bzz-raw://4e8c38994af84e123476f8de8b81fe466e9a575374b13c38a4dc30bdd2d12c06",
          "dweb:/ipfs/QmfHrSyeMQN7wVn7qmD6aPH1wX4ugkhQXiR8te6xhADGaK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperApp.sol": {
        "keccak256": "0x9a1cbf6d6037aac2381e8e66a2ad89e9afe6f89b290c21cb587ff6b06d137ee2",
        "urls": [
          "bzz-raw://dc53d92d863ef2eb577b59d3c4310dc170590df95d7b7455044ce3a05329a826",
          "dweb:/ipfs/QmbEuVbV83R73w3o4CgsALUWVUitodjTUKVydK8cXSRCBk"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperToken.sol": {
        "keccak256": "0xa8a3d0d97b11244bb58331dc53b8152c03337b5e7907182b15bcfcfae355cdd7",
        "urls": [
          "bzz-raw://91758fd68a25655981be1737b232b5a7bf912ed32dfa7d6c71ebe79e07a364a3",
          "dweb:/ipfs/QmPH1ZMeuFvUL3hXt6xaNfH6aUHNFASECzQM2uFtmcrBon"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperTokenFactory.sol": {
        "keccak256": "0xbfc7fbef20c707e64adabe969ea6db4d6c26a56155961a8bf46b7e55a16a046d",
        "urls": [
          "bzz-raw://355aaac71bd3ebb260d6e6a9d35f07029a6f189a5d93c23f0dfec800630ed4c0",
          "dweb:/ipfs/QmXbE4rDRjTtVoxgDjVcJtxxdmK3WZ1ZEyG8iDMcn2mtfL"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluid.sol": {
        "keccak256": "0x6bf8494d93a4fc67d67b4a26ea9885707014f2123acd53d7cd0fd99987e30096",
        "urls": [
          "bzz-raw://93e39b9f3b7911fbe3ac17ff8872632f35b42769f9e98d39eeee98bab4be6ae7",
          "dweb:/ipfs/QmaCVVoVWa67HwrQpRK9sAtLbPjxcmnkYVbSbWUNvPuTXn"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidGovernance.sol": {
        "keccak256": "0xb9328d0977bd022c6771e679518c3d2bfcb6e29b400d2506813bb3cdab772bb4",
        "urls": [
          "bzz-raw://bbae7172f9ca6c0c8080bdb53cfdff158142413bc21c99508988037d0d99b258",
          "dweb:/ipfs/QmVGzmQivV2dXA1Wuj2jEP6pM1MqGY6qtHtJ1J3cqcfoBK"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/superfluid/ISuperfluidToken.sol": {
        "keccak256": "0x18ea972421ff57ce62103f90c820ee039f170f0189a4b3c73fd0ff09452d1dbf",
        "urls": [
          "bzz-raw://dd24799269920b4b7925362b41650b5b968bb957dc0dec50b451f5382fe573c1",
          "dweb:/ipfs/QmbL19zzZZSbVu2gYA3FtJLu4kbCtk9BybxCU7oJfpUbE7"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ERC20WithTokenInfo.sol": {
        "keccak256": "0x479247ae4308ea9f5b50ff2bdae1299e91153a2c391a60e5d77cb3c980e527b9",
        "urls": [
          "bzz-raw://649630108e202474391d729bdc76b2d928f5569bd5922e32332430bea4086725",
          "dweb:/ipfs/QmTozaRLwTWA7rXnyadKg423sojN7xVvidwJtrPdKcYTfU"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/ISETH.sol": {
        "keccak256": "0x9857ab20198ca28d75afcf2f6843a23a1052bf2199a308392f8e2d8a63914cbc",
        "urls": [
          "bzz-raw://8321dcd14869cfb65ed07c2de950f04cf79c1d0392cb2b820f0e76e2b344d1bb",
          "dweb:/ipfs/QmRbDDTwGUkpNnSNgiugGU7r4jJLTkgAFqQfRyd3zkEBXT"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/interfaces/tokens/TokenInfo.sol": {
        "keccak256": "0x5adaf0dcec7b8f91b9958c013fc3109f7b8b0efcd30391dc2bc1d98e0d406c0d",
        "urls": [
          "bzz-raw://7dcdd83f10ee1b771e8423a387cad5a1fa325c2f6f37be44dba7d45975eb6b22",
          "dweb:/ipfs/QmNhGMNgexsrxJbmGzq7ry3555t77eCgjNjeDWMD46vQrG"
        ],
        "license": "MIT"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/ERC777Helper.sol": {
        "keccak256": "0xd75c3848f98447943342c7182ce97295fcc537cde99173a80725f65c0edb4b87",
        "urls": [
          "bzz-raw://85fe4263ed625f88a4fbba987d597b0d95765836abd47e437eac6d8b455d1fda",
          "dweb:/ipfs/QmVSNNnRVyjyR4vwbD5yMK5bMqUYfGNhJzrg7Z9ae9nuny"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/EventsEmitter.sol": {
        "keccak256": "0xfe80c8aebada8bcf67a5c368add89ec32f1490c2c82a81c6d55b57194bd35328",
        "urls": [
          "bzz-raw://af76812e6f6f2eab181b0fc738e718d1e1fc6aaff466a231a8899fc69ae3d38d",
          "dweb:/ipfs/QmSKGiv3bGQpajMoJBM4KykM969EPnu28S1s6GjUYYjw8r"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/libs/FixedSizeData.sol": {
        "keccak256": "0x3103c6828e191097fa8390380a67950d54823cee2847342256558274526d1372",
        "urls": [
          "bzz-raw://b3fb3cb101bbb889b29df6f0d134c61dd89705a93265926ae4e890a17c171cc6",
          "dweb:/ipfs/QmUjZGbfEp3KWQjghSDicrJjRm8uoBgaLqTi5BLpHFxfkD"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/superfluid/SuperfluidToken.sol": {
        "keccak256": "0x67e951da1f8bb8f6a661c46bc0dffab9ed4ca76062d9998eda1a82d2649aa990",
        "urls": [
          "bzz-raw://fdad3cec4e439b56dd6b7c46dcafc549f66b87323c5e9a7f334bbade43bcfe12",
          "dweb:/ipfs/QmSuUWqzUvDnpjhY2EYTqwEfjrNN6yjmcuhYMBZVFuRc73"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol": {
        "keccak256": "0x5727ab9e11a1d76b9bde364a4239b9401d8afff8c9a6f7a9bc822b5413d0cf7a",
        "urls": [
          "bzz-raw://6bd4990aa1eb94065fcca64dc94b3493729d7407ed834106ac44c5ad25fa6953",
          "dweb:/ipfs/QmSeU3GAYTJA948HjygmpmJ1avRwGg5zJQXsGWeYrow4sp"
        ],
        "license": "AGPLv3"
      },
      "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSUtils.sol": {
        "keccak256": "0x507b0157775ffc422aee1010ab640f019dc8d653e88db6ef3c57c6486f593dc6",
        "urls": [
          "bzz-raw://a9b9c00cf8285e748baca7e61f29313965ea77342c50c31f426cd8af4b0be238",
          "dweb:/ipfs/QmWg34M9kVrXLBpwPguoyr178oZabaqRQogJebTLJp98ud"
        ],
        "license": "AGPLv3"
      },
      "src/SuperfluidClub.sol": {
        "keccak256": "0x2f557cabd26cdf4e57392fe8c6d02bc11a98be73a910c35c8ae5278437b15aea",
        "urls": [
          "bzz-raw://f6436d68b3a906bdb3754ab4ae1f881d7d0179b0cb3e467d9f5388cf5e40bf77",
          "dweb:/ipfs/QmarRrtwyD4DwmvB4EWAnHWw79evmJWpS1Li9YBpdYahJp"
        ],
        "license": "MIT"
      },
      "src/interfaces/IOwnable.sol": {
        "keccak256": "0xf46b2677eaeb6f309b0831329a23eaf25ca435298d1c21b759cea1a0aaacb1a3",
        "urls": [
          "bzz-raw://597a1a6dfbfeee598f8ab8099a74fb64561e9db48f4e28f87588f87fae9a2bf8",
          "dweb:/ipfs/QmP1bb1BNSBFGzEnFWWmyycvRMAJeTf1kttrydJAc9iJ84"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/ISuperfluidClub.sol": {
        "keccak256": "0xa8eb54bf1057b359208a97aa7f967153cbd84f238cea037fd56885671e4b0772",
        "urls": [
          "bzz-raw://b183a7d815e0a65763c7d2eaeb5001c0a5569872894eb42aa4cd5af7f5df4dc6",
          "dweb:/ipfs/QmQky3h2X9q2RhADo5s3xBvz6ePeD6GixsRL8Yg41pEZCA"
        ],
        "license": "UNLICENSED"
      },
      "src/superToken/SuperToken.sol": {
        "keccak256": "0x48413e7c9385197351f02fafb8d7e80865326c8698c893d9aa459bfe99a5c9bf",
        "urls": [
          "bzz-raw://006c472c0bdaef06d46dd1eb9b05832232584ca7b1fa159f07fccabd8810a8f9",
          "dweb:/ipfs/QmamXqAaX1qWxLFFcDE4bmNv2qdU4amMkw3b53gMFZuJZx"
        ],
        "license": "AGPLv3"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SuperfluidClub.sol",
    "id": 87865,
    "exportedSymbols": {
      "Context": [
        45757
      ],
      "IConstantInflowNFT": [
        66256
      ],
      "IConstantOutflowNFT": [
        66310
      ],
      "IERC20": [
        44622
      ],
      "ISuperToken": [
        66999
      ],
      "ISuperfluid": [
        67672
      ],
      "ISuperfluidClub": [
        88029
      ],
      "Ownable": [
        43736
      ],
      "SuperToken": [
        89793
      ],
      "SuperTokenBase": [
        167
      ],
      "SuperTokenV1Library": [
        63572
      ],
      "SuperfluidClub": [
        87864
      ],
      "UUPSProxiable": [
        77533
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11656:114",
    "nodes": [
      {
        "id": 86881,
        "nodeType": "PragmaDirective",
        "src": "32:24:114",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 86883,
        "nodeType": "ImportDirective",
        "src": "58:114:114",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/apps/SuperTokenV1Library.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 63573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86882,
              "name": "SuperTokenV1Library",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63572,
              "src": "66:19:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86886,
        "nodeType": "ImportDirective",
        "src": "173:117:114",
        "nodes": [],
        "absolutePath": "lib/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "file": "@superfluid-finance/custom-supertokens/contracts/base/SuperTokenBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 168,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86884,
              "name": "SuperTokenBase",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 167,
              "src": "181:14:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86885,
              "name": "ISuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66999,
              "src": "197:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86892,
        "nodeType": "ImportDirective",
        "src": "291:117:114",
        "nodes": [],
        "absolutePath": "src/superToken/SuperToken.sol",
        "file": "./superToken/SuperToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 89794,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86887,
              "name": "SuperToken",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 89793,
              "src": "299:10:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86888,
              "name": "ISuperfluid",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 67672,
              "src": "311:11:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86889,
              "name": "IConstantOutflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66310,
              "src": "324:19:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86890,
              "name": "IConstantInflowNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66256,
              "src": "345:18:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 86891,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44622,
              "src": "365:6:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86894,
        "nodeType": "ImportDirective",
        "src": "409:67:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 43737,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86893,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43736,
              "src": "417:7:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86896,
        "nodeType": "ImportDirective",
        "src": "477:65:114",
        "nodes": [],
        "absolutePath": "src/interfaces/ISuperfluidClub.sol",
        "file": "./interfaces/ISuperfluidClub.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 88030,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86895,
              "name": "ISuperfluidClub",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88029,
              "src": "485:15:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86898,
        "nodeType": "ImportDirective",
        "src": "543:111:114",
        "nodes": [],
        "absolutePath": "lib/superfluid-protocol-monorepo/packages/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "file": "@superfluid-finance/ethereum-contracts/contracts/upgradability/UUPSProxiable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 77534,
        "symbolAliases": [
          {
            "foreign": {
              "id": 86897,
              "name": "UUPSProxiable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 77533,
              "src": "551:13:114",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 86899,
        "nodeType": "ImportDirective",
        "src": "655:61:114",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 87865,
        "sourceUnit": 43737,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 87864,
        "nodeType": "ContractDefinition",
        "src": "824:10863:114",
        "nodes": [
          {
            "id": 86910,
            "nodeType": "UsingForDirective",
            "src": "900:42:114",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86907,
              "name": "SuperTokenV1Library",
              "nameLocations": [
                "906:19:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63572,
              "src": "906:19:114"
            },
            "typeName": {
              "id": 86909,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 86908,
                "name": "ISuperToken",
                "nameLocations": [
                  "930:11:114"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 66999,
                "src": "930:11:114"
              },
              "referencedDeclaration": 66999,
              "src": "930:11:114",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                "typeString": "contract ISuperToken"
              }
            }
          },
          {
            "id": 86912,
            "nodeType": "ErrorDefinition",
            "src": "948:39:114",
            "nodes": [],
            "errorSelector": "fa1faf0a",
            "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
            "nameLocation": "954:30:114",
            "parameters": {
              "id": 86911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:114"
            }
          },
          {
            "id": 86914,
            "nodeType": "ErrorDefinition",
            "src": "992:18:114",
            "nodes": [],
            "errorSelector": "71d78b12",
            "name": "NOT_OWNER",
            "nameLocation": "998:9:114",
            "parameters": {
              "id": 86913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:2:114"
            }
          },
          {
            "id": 86916,
            "nodeType": "ErrorDefinition",
            "src": "1015:20:114",
            "nodes": [],
            "errorSelector": "0733d548",
            "name": "NOT_PROTEGE",
            "nameLocation": "1021:11:114",
            "parameters": {
              "id": 86915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:2:114"
            }
          },
          {
            "id": 86918,
            "nodeType": "ErrorDefinition",
            "src": "1040:24:114",
            "nodes": [],
            "errorSelector": "19c00a85",
            "name": "ALREADY_PROTEGE",
            "nameLocation": "1046:15:114",
            "parameters": {
              "id": 86917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1061:2:114"
            }
          },
          {
            "id": 86920,
            "nodeType": "ErrorDefinition",
            "src": "1069:37:114",
            "nodes": [],
            "errorSelector": "0bc6c49e",
            "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
            "nameLocation": "1075:28:114",
            "parameters": {
              "id": 86919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1103:2:114"
            }
          },
          {
            "id": 86922,
            "nodeType": "ErrorDefinition",
            "src": "1111:24:114",
            "nodes": [],
            "errorSelector": "1133bf0d",
            "name": "NOT_ENOUGH_COIN",
            "nameLocation": "1117:15:114",
            "parameters": {
              "id": 86921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:2:114"
            }
          },
          {
            "id": 86924,
            "nodeType": "ErrorDefinition",
            "src": "1140:38:114",
            "nodes": [],
            "errorSelector": "a2c3d1a5",
            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
            "nameLocation": "1146:29:114",
            "parameters": {
              "id": 86923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1175:2:114"
            }
          },
          {
            "id": 86926,
            "nodeType": "ErrorDefinition",
            "src": "1183:23:114",
            "nodes": [],
            "errorSelector": "fae82791",
            "name": "INVALID_AMOUNT",
            "nameLocation": "1189:14:114",
            "parameters": {
              "id": 86925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1203:2:114"
            }
          },
          {
            "id": 86928,
            "nodeType": "ErrorDefinition",
            "src": "1211:27:114",
            "nodes": [],
            "errorSelector": "8cab1f28",
            "name": "NOT_ENOUGH_BALANCE",
            "nameLocation": "1217:18:114",
            "parameters": {
              "id": 86927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:2:114"
            }
          },
          {
            "id": 86930,
            "nodeType": "ErrorDefinition",
            "src": "1243:21:114",
            "nodes": [],
            "errorSelector": "538ba4f9",
            "name": "ZERO_ADDRESS",
            "nameLocation": "1249:12:114",
            "parameters": {
              "id": 86929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:2:114"
            }
          },
          {
            "id": 86943,
            "nodeType": "ModifierDefinition",
            "src": "1270:116:114",
            "nodes": [],
            "body": {
              "id": 86942,
              "nodeType": "Block",
              "src": "1291:95:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 86935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 86932,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1305:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 86933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1309:6:114",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1305:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 86934,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86945,
                      "src": "1319:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1305:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86940,
                  "nodeType": "IfStatement",
                  "src": "1301:68:114",
                  "trueBody": {
                    "id": 86939,
                    "nodeType": "Block",
                    "src": "1326:43:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 86936,
                            "name": "NOT_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86914,
                            "src": "1347:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 86937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1347:11:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 86938,
                        "nodeType": "RevertStatement",
                        "src": "1340:18:114"
                      }
                    ]
                  }
                },
                {
                  "id": 86941,
                  "nodeType": "PlaceholderStatement",
                  "src": "1378:1:114"
                }
              ]
            },
            "name": "onlyOwner",
            "nameLocation": "1279:9:114",
            "parameters": {
              "id": 86931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1288:2:114"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 86945,
            "nodeType": "VariableDeclaration",
            "src": "1392:20:114",
            "nodes": [],
            "baseFunctions": [
              87890
            ],
            "constant": false,
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "1407:5:114",
            "scope": 87864,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 86944,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1392:7:114",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 86951,
            "nodeType": "EventDefinition",
            "src": "1419:84:114",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
            "name": "OwnershipTransferred",
            "nameLocation": "1425:20:114",
            "parameters": {
              "id": 86950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86947,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "previousOwner",
                  "nameLocation": "1462:13:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 86951,
                  "src": "1446:29:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1446:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86949,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1493:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 86951,
                  "src": "1477:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1477:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1445:57:114"
            }
          },
          {
            "id": 86969,
            "nodeType": "FunctionDefinition",
            "src": "1509:178:114",
            "nodes": [],
            "body": {
              "id": 86968,
              "nodeType": "Block",
              "src": "1685:2:114",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 86963,
                    "name": "host",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86954,
                    "src": "1636:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67672",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  {
                    "id": 86964,
                    "name": "constantOutflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86957,
                    "src": "1642:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  {
                    "id": 86965,
                    "name": "constantInflowNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86960,
                    "src": "1662:17:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  }
                ],
                "id": 86966,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86962,
                  "name": "SuperToken",
                  "nameLocations": [
                    "1625:10:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 89793,
                  "src": "1625:10:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "1625:55:114"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 86961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86954,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "1533:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 86969,
                  "src": "1521:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISuperfluid_$67672",
                    "typeString": "contract ISuperfluid"
                  },
                  "typeName": {
                    "id": 86953,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86952,
                      "name": "ISuperfluid",
                      "nameLocations": [
                        "1521:11:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 67672,
                      "src": "1521:11:114"
                    },
                    "referencedDeclaration": 67672,
                    "src": "1521:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISuperfluid_$67672",
                      "typeString": "contract ISuperfluid"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86957,
                  "mutability": "mutable",
                  "name": "constantOutflowNFT",
                  "nameLocation": "1559:18:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 86969,
                  "src": "1539:38:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                    "typeString": "contract IConstantOutflowNFT"
                  },
                  "typeName": {
                    "id": 86956,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86955,
                      "name": "IConstantOutflowNFT",
                      "nameLocations": [
                        "1539:19:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66310,
                      "src": "1539:19:114"
                    },
                    "referencedDeclaration": 66310,
                    "src": "1539:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                      "typeString": "contract IConstantOutflowNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86960,
                  "mutability": "mutable",
                  "name": "constantInflowNFT",
                  "nameLocation": "1598:17:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 86969,
                  "src": "1579:36:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                    "typeString": "contract IConstantInflowNFT"
                  },
                  "typeName": {
                    "id": 86959,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 86958,
                      "name": "IConstantInflowNFT",
                      "nameLocations": [
                        "1579:18:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66256,
                      "src": "1579:18:114"
                    },
                    "referencedDeclaration": 66256,
                    "src": "1579:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                      "typeString": "contract IConstantInflowNFT"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1520:96:114"
            },
            "returnParameters": {
              "id": 86967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1685:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87018,
            "nodeType": "FunctionDefinition",
            "src": "1748:316:114",
            "nodes": [],
            "body": {
              "id": 87017,
              "nodeType": "Block",
              "src": "1848:216:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86981,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86976,
                        "src": "1877:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 86980,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87686,
                      "src": "1858:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 86982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1858:28:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86983,
                  "nodeType": "ExpressionStatement",
                  "src": "1858:28:114"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86984,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1896:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1901:8:114",
                      "memberName": "castrate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77467,
                      "src": "1896:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 86987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:15:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86988,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:15:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 86995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1952:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 86994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1944:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86993,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1944:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1944:10:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 86992,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44622,
                          "src": "1937:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$44622_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 86997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1937:18:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44622",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1957:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 86999,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86972,
                        "src": "1960:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 87000,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86974,
                        "src": "1966:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$44622",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 86989,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1921:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 86991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1926:10:114",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 88234,
                      "src": "1921:15:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$44622_$_t_uint8_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (contract IERC20,uint8,string memory,string memory) external"
                      }
                    },
                    "id": 87001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1921:52:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87002,
                  "nodeType": "ExpressionStatement",
                  "src": "1921:52:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87008,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2005:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1997:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87006,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1997:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1997:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030303030",
                        "id": 87010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:30:114",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        "value": "100000000000000000000000"
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2054:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "2044:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87011,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2048:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2044:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(34 digits omitted)...0000"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87003,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "1983:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1988:8:114",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89160,
                      "src": "1983:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:74:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87016,
                  "nodeType": "ExpressionStatement",
                  "src": "1983:74:114"
                }
              ]
            },
            "baseFunctions": [
              88025
            ],
            "documentation": {
              "id": 86970,
              "nodeType": "StructuredDocumentation",
              "src": "1693:50:114",
              "text": "@dev ISuperfluidClub.initialize implementation"
            },
            "functionSelector": "077f224a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1757:10:114",
            "overrides": {
              "id": 86978,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1839:8:114"
            },
            "parameters": {
              "id": 86977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86972,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1784:4:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87018,
                  "src": "1768:20:114",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86971,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1768:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86974,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1806:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87018,
                  "src": "1790:22:114",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 86973,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1790:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86976,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1822:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87018,
                  "src": "1814:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 86975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1814:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1767:64:114"
            },
            "returnParameters": {
              "id": 86979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87021,
            "nodeType": "VariableDeclaration",
            "src": "2087:49:114",
            "nodes": [],
            "baseFunctions": [
              87926
            ],
            "constant": true,
            "functionSelector": "b5c0b7eb",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_LEVEL",
            "nameLocation": "2111:21:114",
            "scope": 87864,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87019,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2087:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "36",
              "id": 87020,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2135:1:114",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "id": 87024,
            "nodeType": "VariableDeclaration",
            "src": "2142:58:114",
            "nodes": [],
            "constant": true,
            "functionSelector": "b132a50d",
            "mutability": "constant",
            "name": "FLAT_COST_SPONSORSHIP",
            "nameLocation": "2166:21:114",
            "scope": 87864,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87022,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2142:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "302e3031",
              "id": 87023,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2190:10:114",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "0.01"
            },
            "visibility": "public"
          },
          {
            "id": 87027,
            "nodeType": "VariableDeclaration",
            "src": "2206:64:114",
            "nodes": [],
            "baseFunctions": [
              87931
            ],
            "constant": true,
            "functionSelector": "f349f56a",
            "mutability": "constant",
            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
            "nameLocation": "2230:28:114",
            "scope": 87864,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 87025,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2206:7:114",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "373230",
              "id": 87026,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2261:9:114",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_720000000000000000000_by_1",
                "typeString": "int_const 720000000000000000000"
              },
              "value": "720"
            },
            "visibility": "public"
          },
          {
            "id": 87032,
            "nodeType": "VariableDeclaration",
            "src": "2300:62:114",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_proteges",
            "nameLocation": "2353:9:114",
            "scope": 87864,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
              "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
            },
            "typeName": {
              "id": 87031,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 87028,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2308:7:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2300:43:114",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                "typeString": "mapping(address => struct ISuperfluidClub.Protege)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 87030,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 87029,
                  "name": "ISuperfluidClub.Protege",
                  "nameLocations": [
                    "2319:15:114",
                    "2335:7:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 87942,
                  "src": "2319:23:114"
                },
                "referencedDeclaration": 87942,
                "src": "2319:23:114",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                  "typeString": "struct ISuperfluidClub.Protege"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 87052,
            "nodeType": "FunctionDefinition",
            "src": "2423:136:114",
            "nodes": [],
            "body": {
              "id": 87051,
              "nodeType": "Block",
              "src": "2495:64:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87041,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "2512:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87043,
                        "indexExpression": {
                          "id": 87042,
                          "name": "protege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87035,
                          "src": "2522:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2512:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87044,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2531:7:114",
                      "memberName": "sponsor",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87933,
                      "src": "2512:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2550:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2542:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87045,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2542:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2542:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2512:40:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 87040,
                  "id": 87050,
                  "nodeType": "Return",
                  "src": "2505:47:114"
                }
              ]
            },
            "baseFunctions": [
              87950
            ],
            "documentation": {
              "id": 87033,
              "nodeType": "StructuredDocumentation",
              "src": "2369:49:114",
              "text": "@dev ISuperfluidClub.isProtege implementation"
            },
            "functionSelector": "e4a472c8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isProtege",
            "nameLocation": "2432:9:114",
            "overrides": {
              "id": 87037,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2471:8:114"
            },
            "parameters": {
              "id": 87036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87035,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2450:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87052,
                  "src": "2442:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87034,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2441:17:114"
            },
            "returnParameters": {
              "id": 87040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87039,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87052,
                  "src": "2489:4:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 87038,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2489:4:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2488:6:114"
            },
            "scope": 87864,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87093,
            "nodeType": "FunctionDefinition",
            "src": "2628:336:114",
            "nodes": [],
            "body": {
              "id": 87092,
              "nodeType": "Block",
              "src": "2784:180:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87064,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "2802:1:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87092,
                      "src": "2794:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87063,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2794:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87066,
                  "initialValue": {
                    "id": 87065,
                    "name": "protege",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87055,
                    "src": "2806:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2794:19:114"
                },
                {
                  "assignments": [
                    87068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87068,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "2831:1:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87092,
                      "src": "2823:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87067,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2823:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87070,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 87069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2835:1:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2823:13:114"
                },
                {
                  "body": {
                    "id": 87090,
                    "nodeType": "Block",
                    "src": "2867:91:114",
                    "statements": [
                      {
                        "expression": {
                          "id": 87081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 87074,
                              "name": "sponsors",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87061,
                              "src": "2881:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Protege_$87942_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct ISuperfluidClub.Protege memory[] memory"
                              }
                            },
                            "id": 87077,
                            "indexExpression": {
                              "id": 87076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": false,
                              "src": "2890:3:114",
                              "subExpression": {
                                "id": 87075,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87068,
                                "src": "2890:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2881:13:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                              "typeString": "struct ISuperfluidClub.Protege memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 87078,
                              "name": "_proteges",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87032,
                              "src": "2897:9:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                              }
                            },
                            "id": 87080,
                            "indexExpression": {
                              "id": 87079,
                              "name": "p",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87064,
                              "src": "2907:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2897:12:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87942_storage",
                              "typeString": "struct ISuperfluidClub.Protege storage ref"
                            }
                          },
                          "src": "2881:28:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                            "typeString": "struct ISuperfluidClub.Protege memory"
                          }
                        },
                        "id": 87082,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:28:114"
                      },
                      {
                        "expression": {
                          "id": 87088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87083,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87064,
                            "src": "2923:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 87084,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87032,
                                "src": "2927:9:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87086,
                              "indexExpression": {
                                "id": 87085,
                                "name": "p",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87064,
                                "src": "2937:1:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2927:12:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87087,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2940:7:114",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87933,
                            "src": "2927:20:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2923:24:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87089,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:24:114"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87072,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87064,
                        "src": "2863:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87071,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87052,
                      "src": "2853:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2853:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87091,
                  "nodeType": "WhileStatement",
                  "src": "2846:112:114"
                }
              ]
            },
            "baseFunctions": [
              87960
            ],
            "documentation": {
              "id": 87053,
              "nodeType": "StructuredDocumentation",
              "src": "2565:58:114",
              "text": "@dev ISuperfluidClub.getChainOfSponsors implementation"
            },
            "functionSelector": "21fb177a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getChainOfSponsors",
            "nameLocation": "2637:18:114",
            "overrides": {
              "id": 87057,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2711:8:114"
            },
            "parameters": {
              "id": 87056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87055,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "2664:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87093,
                  "src": "2656:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2656:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2655:17:114"
            },
            "returnParameters": {
              "id": 87062,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87061,
                  "mutability": "mutable",
                  "name": "sponsors",
                  "nameLocation": "2770:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87093,
                  "src": "2737:41:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Protege_$87942_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 87059,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 87058,
                        "name": "ISuperfluidClub.Protege",
                        "nameLocations": [
                          "2737:15:114",
                          "2753:7:114"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 87942,
                        "src": "2737:23:114"
                      },
                      "referencedDeclaration": 87942,
                      "src": "2737:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                        "typeString": "struct ISuperfluidClub.Protege"
                      }
                    },
                    "id": 87060,
                    "nodeType": "ArrayTypeName",
                    "src": "2737:25:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Protege_$87942_storage_$dyn_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2736:43:114"
            },
            "scope": 87864,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87108,
            "nodeType": "FunctionDefinition",
            "src": "3010:143:114",
            "nodes": [],
            "body": {
              "id": 87107,
              "nodeType": "Block",
              "src": "3111:42:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 87103,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87032,
                      "src": "3128:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                        "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 87105,
                    "indexExpression": {
                      "id": 87104,
                      "name": "protege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87096,
                      "src": "3138:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3128:18:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87942_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "functionReturnParameters": 87102,
                  "id": 87106,
                  "nodeType": "Return",
                  "src": "3121:25:114"
                }
              ]
            },
            "baseFunctions": [
              87969
            ],
            "documentation": {
              "id": 87094,
              "nodeType": "StructuredDocumentation",
              "src": "2970:35:114",
              "text": "@dev ISuperfluidClub.getProtege"
            },
            "functionSelector": "099e14ce",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProtege",
            "nameLocation": "3019:10:114",
            "overrides": {
              "id": 87098,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3061:8:114"
            },
            "parameters": {
              "id": 87097,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87096,
                  "mutability": "mutable",
                  "name": "protege",
                  "nameLocation": "3038:7:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87108,
                  "src": "3030:15:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3030:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3029:17:114"
            },
            "returnParameters": {
              "id": 87102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87108,
                  "src": "3079:30:114",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                    "typeString": "struct ISuperfluidClub.Protege"
                  },
                  "typeName": {
                    "id": 87100,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 87099,
                      "name": "ISuperfluidClub.Protege",
                      "nameLocations": [
                        "3079:15:114",
                        "3095:7:114"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 87942,
                      "src": "3079:23:114"
                    },
                    "referencedDeclaration": 87942,
                    "src": "3079:23:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                      "typeString": "struct ISuperfluidClub.Protege"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3078:32:114"
            },
            "scope": 87864,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87157,
            "nodeType": "FunctionDefinition",
            "src": "3338:333:114",
            "nodes": [],
            "body": {
              "id": 87156,
              "nodeType": "Block",
              "src": "3412:259:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87125,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3473:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3465:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87123,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3465:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3465:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87127,
                          "name": "receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87111,
                          "src": "3480:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87119,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3446:4:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3438:7:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87117,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3438:7:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3438:13:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87116,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66999,
                            "src": "3426:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3426:26:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$66999",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3453:11:114",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61880,
                        "src": "3426:38:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66999_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3426:63:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3492:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3426:67:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 87154,
                    "nodeType": "Block",
                    "src": "3583:82:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87150,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87111,
                              "src": "3635:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87151,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87113,
                              "src": "3645:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87146,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3617:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87145,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3609:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87144,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3609:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3609:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87143,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66999,
                                "src": "3597:11:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3597:26:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3624:10:114",
                            "memberName": "createFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60485,
                            "src": "3597:37:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66999_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66999_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3597:57:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87153,
                        "nodeType": "ExpressionStatement",
                        "src": "3597:57:114"
                      }
                    ]
                  },
                  "id": 87155,
                  "nodeType": "IfStatement",
                  "src": "3422:243:114",
                  "trueBody": {
                    "id": 87142,
                    "nodeType": "Block",
                    "src": "3495:82:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87138,
                              "name": "receiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87111,
                              "src": "3547:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87139,
                              "name": "flowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87113,
                              "src": "3557:8:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87134,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3529:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87133,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3521:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87132,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3521:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3521:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87131,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66999,
                                "src": "3509:11:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3509:26:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3536:10:114",
                            "memberName": "updateFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60557,
                            "src": "3509:37:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66999_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66999_$",
                              "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                            }
                          },
                          "id": 87140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3509:57:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87141,
                        "nodeType": "ExpressionStatement",
                        "src": "3509:57:114"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 87109,
              "nodeType": "StructuredDocumentation",
              "src": "3159:174:114",
              "text": " @dev internal function to create or update a stream\n @param receiver The address of the stream receiver\n @param flowRate The rate of the stream"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createOrUpdateStream",
            "nameLocation": "3347:21:114",
            "parameters": {
              "id": 87114,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87111,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3377:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87157,
                  "src": "3369:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87110,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87113,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "3393:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87157,
                  "src": "3387:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87112,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3387:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:34:114"
            },
            "returnParameters": {
              "id": 87115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3412:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87393,
            "nodeType": "FunctionDefinition",
            "src": "3729:2783:114",
            "nodes": [],
            "body": {
              "id": 87392,
              "nodeType": "Block",
              "src": "3800:2712:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87165,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87160,
                        "src": "3824:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 87164,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87052,
                      "src": "3814:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3814:21:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87171,
                  "nodeType": "IfStatement",
                  "src": "3810:76:114",
                  "trueBody": {
                    "id": 87170,
                    "nodeType": "Block",
                    "src": "3837:49:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87167,
                            "name": "ALREADY_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86918,
                            "src": "3858:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3858:17:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87169,
                        "nodeType": "RevertStatement",
                        "src": "3851:24:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87173,
                    87175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87173,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "3956:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "3948:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3948:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87175,
                      "mutability": "mutable",
                      "name": "messiah",
                      "nameLocation": "3976:7:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "3971:12:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 87174,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3971:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87192,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87176,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3988:3:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3992:6:114",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3988:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 87178,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86945,
                            "src": "4002:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3988:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87180,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3987:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "expression": {
                            "id": 87187,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4036:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4040:6:114",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4036:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 87189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4048:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "id": 87190,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4035:19:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "id": 87191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3987:67:114",
                    "trueExpression": {
                      "components": [
                        {
                          "arguments": [
                            {
                              "id": 87183,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4020:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4012:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87181,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4012:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4012:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 87185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4027:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "id": 87186,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4011:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                        "typeString": "tuple(address,bool)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_bool_$",
                      "typeString": "tuple(address,bool)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3947:107:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4109:25:114",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 87194,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87173,
                            "src": "4120:13:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87193,
                          "name": "isProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87052,
                          "src": "4110:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 87195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4110:24:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 87198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4138:8:114",
                      "subExpression": {
                        "id": 87197,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87175,
                        "src": "4139:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4109:37:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87204,
                  "nodeType": "IfStatement",
                  "src": "4105:88:114",
                  "trueBody": {
                    "id": 87203,
                    "nodeType": "Block",
                    "src": "4148:45:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87200,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86916,
                            "src": "4169:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4169:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87202,
                        "nodeType": "RevertStatement",
                        "src": "4162:20:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87206
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87206,
                      "mutability": "mutable",
                      "name": "coinAmount",
                      "nameLocation": "4211:10:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "4203:18:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4203:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87209,
                  "initialValue": {
                    "expression": {
                      "id": 87207,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4224:3:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 87208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4228:5:114",
                    "memberName": "value",
                    "nodeType": "MemberAccess",
                    "src": "4224:9:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4203:30:114"
                },
                {
                  "assignments": [
                    87211
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87211,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "4251:9:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "4243:17:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87210,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4243:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87218,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87213,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87032,
                            "src": "4267:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87215,
                          "indexExpression": {
                            "id": 87214,
                            "name": "actualSponsor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87173,
                            "src": "4277:13:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4267:24:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4292:23:114",
                        "memberName": "directTotalProtegeCount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87939,
                        "src": "4267:48:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 87212,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87635,
                      "src": "4263:3:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (uint32) pure returns (uint256)"
                      }
                    },
                    "id": 87217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:53:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4243:73:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87219,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87206,
                      "src": "4330:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 87220,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87211,
                      "src": "4343:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4330:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87226,
                  "nodeType": "IfStatement",
                  "src": "4326:77:114",
                  "trueBody": {
                    "id": 87225,
                    "nodeType": "Block",
                    "src": "4354:49:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87222,
                            "name": "NOT_ENOUGH_COIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86922,
                            "src": "4375:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4375:17:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87224,
                        "nodeType": "RevertStatement",
                        "src": "4368:24:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87227,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87206,
                      "src": "4413:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 87228,
                      "name": "feeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87211,
                      "src": "4427:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4413:23:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 87230,
                  "nodeType": "ExpressionStatement",
                  "src": "4413:23:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87231,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "4450:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87233,
                        "indexExpression": {
                          "id": 87232,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87173,
                          "src": "4460:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4450:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4475:5:114",
                      "memberName": "level",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87935,
                      "src": "4450:30:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 87235,
                      "name": "MAX_SPONSORSHIP_LEVEL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87021,
                      "src": "4484:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4450:55:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87241,
                  "nodeType": "IfStatement",
                  "src": "4446:124:114",
                  "trueBody": {
                    "id": 87240,
                    "nodeType": "Block",
                    "src": "4507:63:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87237,
                            "name": "MAX_SPONSORSHIP_LEVEL_REACHED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86924,
                            "src": "4528:29:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4528:31:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87239,
                        "nodeType": "RevertStatement",
                        "src": "4521:38:114"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@notice: we update always the messiah total counter",
                  "expression": {
                    "id": 87249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4644:44:114",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87242,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "4644:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87247,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87245,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4662:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4654:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87243,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4654:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4654:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4644:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4669:17:114",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87937,
                      "src": "4644:42:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87250,
                  "nodeType": "ExpressionStatement",
                  "src": "4644:44:114"
                },
                {
                  "expression": {
                    "id": 87255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4699:50:114",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87251,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "4699:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87253,
                        "indexExpression": {
                          "id": 87252,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87173,
                          "src": "4709:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4699:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87254,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4724:23:114",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87939,
                      "src": "4699:48:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87256,
                  "nodeType": "ExpressionStatement",
                  "src": "4699:50:114"
                },
                {
                  "assignments": [
                    87258
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87258,
                      "mutability": "mutable",
                      "name": "lastSponsorProtegeCount",
                      "nameLocation": "4767:23:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "4760:30:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87257,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4760:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87263,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87259,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87032,
                        "src": "4793:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87261,
                      "indexExpression": {
                        "id": 87260,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87173,
                        "src": "4803:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4793:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87262,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4818:17:114",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87937,
                    "src": "4793:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4760:75:114"
                },
                {
                  "assignments": [
                    87265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87265,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4853:1:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87392,
                      "src": "4845:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87264,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4845:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87267,
                  "initialValue": {
                    "id": 87266,
                    "name": "actualSponsor",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 87173,
                    "src": "4857:13:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4845:25:114"
                },
                {
                  "body": {
                    "id": 87337,
                    "nodeType": "Block",
                    "src": "4901:836:114",
                    "statements": [
                      {
                        "assignments": [
                          87273
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87273,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "4964:16:114",
                            "nodeType": "VariableDeclaration",
                            "scope": 87337,
                            "src": "4948:32:114",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                              "typeString": "struct ISuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87272,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87271,
                                "name": "Protege",
                                "nameLocations": [
                                  "4948:7:114"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 87942,
                                "src": "4948:7:114"
                              },
                              "referencedDeclaration": 87942,
                              "src": "4948:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87277,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87274,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87032,
                            "src": "4983:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87276,
                          "indexExpression": {
                            "id": 87275,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87265,
                            "src": "4993:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4983:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4948:47:114"
                      },
                      {
                        "expression": {
                          "id": 87281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5009:36:114",
                          "subExpression": {
                            "expression": {
                              "id": 87278,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87273,
                              "src": "5009:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87280,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5026:17:114",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87937,
                            "src": "5009:34:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87282,
                        "nodeType": "ExpressionStatement",
                        "src": "5009:36:114"
                      },
                      {
                        "expression": {
                          "id": 87290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87283,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87273,
                              "src": "5059:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87285,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5076:15:114",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87941,
                            "src": "5059:32:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 87287,
                                  "name": "sponsorChainInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87273,
                                  "src": "5113:16:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                    "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                  }
                                },
                                "id": 87288,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5130:17:114",
                                "memberName": "totalProtegeCount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 87937,
                                "src": "5113:34:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87286,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87587,
                              "src": "5095:17:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5095:53:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "5059:89:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87291,
                        "nodeType": "ExpressionStatement",
                        "src": "5059:89:114"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87293,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87265,
                              "src": "5254:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 87294,
                                "name": "sponsorChainInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87273,
                                "src": "5257:16:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                  "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                }
                              },
                              "id": 87295,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5274:15:114",
                              "memberName": "desiredFlowRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87941,
                              "src": "5257:32:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_int96",
                                "typeString": "int96"
                              }
                            ],
                            "id": 87292,
                            "name": "_createOrUpdateStream",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87157,
                            "src": "5232:21:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                              "typeString": "function (address,int96)"
                            }
                          },
                          "id": 87296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5232:58:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87297,
                        "nodeType": "ExpressionStatement",
                        "src": "5232:58:114"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87299,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87032,
                                  "src": "5343:9:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87301,
                                "indexExpression": {
                                  "id": 87300,
                                  "name": "actualSponsor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87173,
                                  "src": "5353:13:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5343:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87302,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5368:7:114",
                              "memberName": "sponsor",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87933,
                              "src": "5343:32:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87303,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87265,
                              "src": "5393:1:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87304,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87032,
                                  "src": "5412:9:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87309,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87307,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5430:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5422:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87305,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5422:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5422:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5412:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87310,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5437:5:114",
                              "memberName": "level",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87935,
                              "src": "5412:30:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87311,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87032,
                                  "src": "5460:9:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87316,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87314,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5478:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5470:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87312,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5470:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87315,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5470:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5460:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87317,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5485:17:114",
                              "memberName": "totalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87937,
                              "src": "5460:42:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 87318,
                                  "name": "_proteges",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87032,
                                  "src": "5520:9:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                    "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                  }
                                },
                                "id": 87323,
                                "indexExpression": {
                                  "arguments": [
                                    {
                                      "id": 87321,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "5538:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87320,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "5530:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87319,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "5530:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87322,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5530:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5520:24:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                  "typeString": "struct ISuperfluidClub.Protege storage ref"
                                }
                              },
                              "id": 87324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5545:23:114",
                              "memberName": "directTotalProtegeCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 87939,
                              "src": "5520:48:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87298,
                            "name": "PROTEGE_UPDATED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87920,
                            "src": "5310:15:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint32_$_t_uint32_$returns$__$",
                              "typeString": "function (address,address,uint8,uint32,uint32)"
                            }
                          },
                          "id": 87325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5310:272:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87326,
                        "nodeType": "EmitStatement",
                        "src": "5305:277:114"
                      },
                      {
                        "expression": {
                          "id": 87330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87327,
                            "name": "lastSponsorProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87258,
                            "src": "5596:23:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87328,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87273,
                              "src": "5622:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87329,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5639:17:114",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87937,
                            "src": "5622:34:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "5596:60:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87331,
                        "nodeType": "ExpressionStatement",
                        "src": "5596:60:114"
                      },
                      {
                        "expression": {
                          "id": 87335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 87332,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87265,
                            "src": "5670:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 87333,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87273,
                              "src": "5674:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87334,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5691:7:114",
                            "memberName": "sponsor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87933,
                            "src": "5674:24:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5670:28:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 87336,
                        "nodeType": "ExpressionStatement",
                        "src": "5670:28:114"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87269,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87265,
                        "src": "4897:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87268,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87052,
                      "src": "4887:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87338,
                  "nodeType": "WhileStatement",
                  "src": "4880:857:114"
                },
                {
                  "expression": {
                    "id": 87346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87339,
                      "name": "lastSponsorProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87258,
                      "src": "5841:23:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 87340,
                        "name": "messiah",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87175,
                        "src": "5867:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87342,
                          "name": "lastSponsorProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87258,
                          "src": "5903:23:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 87343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5929:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5903:27:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 87345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "5867:63:114",
                      "trueExpression": {
                        "id": 87341,
                        "name": "lastSponsorProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87258,
                        "src": "5877:23:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "5841:89:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87347,
                  "nodeType": "ExpressionStatement",
                  "src": "5841:89:114"
                },
                {
                  "expression": {
                    "id": 87365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 87348,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87032,
                        "src": "5940:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87350,
                      "indexExpression": {
                        "id": 87349,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87160,
                        "src": "5950:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5940:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87352,
                          "name": "actualSponsor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87173,
                          "src": "5995:13:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 87358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 87353,
                                "name": "_proteges",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87032,
                                "src": "6029:9:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                                  "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                                }
                              },
                              "id": 87355,
                              "indexExpression": {
                                "id": 87354,
                                "name": "actualSponsor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87173,
                                "src": "6039:13:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6029:24:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage",
                                "typeString": "struct ISuperfluidClub.Protege storage ref"
                              }
                            },
                            "id": 87356,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6054:5:114",
                            "memberName": "level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87935,
                            "src": "6029:30:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 87357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6062:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6029:34:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 87359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6096:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 87360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6136:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "id": 87362,
                              "name": "lastSponsorProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87258,
                              "src": "6186:23:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 87361,
                            "name": "calculateFlowRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87587,
                            "src": "6168:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                              "typeString": "function (uint32) pure returns (int96)"
                            }
                          },
                          "id": 87363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6168:42:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        ],
                        "id": 87351,
                        "name": "Protege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87942,
                        "src": "5964:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Protege_$87942_storage_ptr_$",
                          "typeString": "type(struct ISuperfluidClub.Protege storage pointer)"
                        }
                      },
                      "id": 87364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5986:7:114",
                        "6022:5:114",
                        "6077:17:114",
                        "6111:23:114",
                        "6151:15:114"
                      ],
                      "names": [
                        "sponsor",
                        "level",
                        "totalProtegeCount",
                        "directTotalProtegeCount",
                        "desiredFlowRate"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5964:257:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege memory"
                      }
                    },
                    "src": "5940:281:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87942_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "id": 87366,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:281:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87374,
                        "name": "newProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87160,
                        "src": "6318:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87375,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87032,
                            "src": "6330:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87377,
                          "indexExpression": {
                            "id": 87376,
                            "name": "newProtege",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87160,
                            "src": "6340:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6330:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87378,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6352:15:114",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87941,
                        "src": "6330:37:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87370,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6300:4:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                  "typeString": "contract SuperfluidClub"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                  "typeString": "contract SuperfluidClub"
                                }
                              ],
                              "id": 87369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6292:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87368,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6292:7:114",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6292:13:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87367,
                          "name": "ISuperToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66999,
                          "src": "6280:11:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                            "typeString": "type(contract ISuperToken)"
                          }
                        },
                        "id": 87372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6280:26:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISuperToken_$66999",
                          "typeString": "contract ISuperToken"
                        }
                      },
                      "id": 87373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6307:10:114",
                      "memberName": "createFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60485,
                      "src": "6280:37:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66999_$_t_address_$_t_int96_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66999_$",
                        "typeString": "function (contract ISuperToken,address,int96) returns (bool)"
                      }
                    },
                    "id": 87379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6280:88:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87380,
                  "nodeType": "ExpressionStatement",
                  "src": "6280:88:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87381,
                      "name": "coinAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87206,
                      "src": "6382:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6395:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6382:14:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87391,
                  "nodeType": "IfStatement",
                  "src": "6378:128:114",
                  "trueBody": {
                    "id": 87390,
                    "nodeType": "Block",
                    "src": "6398:108:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87387,
                              "name": "coinAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87206,
                              "src": "6484:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 87384,
                              "name": "newProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87160,
                              "src": "6464:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 87386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6475:8:114",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6464:19:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 87388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6464:31:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87389,
                        "nodeType": "ExpressionStatement",
                        "src": "6464:31:114"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              87975
            ],
            "documentation": {
              "id": 87158,
              "nodeType": "StructuredDocumentation",
              "src": "3677:47:114",
              "text": "@dev ISuperfluidClub.sponsor implementation"
            },
            "functionSelector": "766c4f37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sponsor",
            "nameLocation": "3738:7:114",
            "overrides": {
              "id": 87162,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3791:8:114"
            },
            "parameters": {
              "id": 87161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87160,
                  "mutability": "mutable",
                  "name": "newProtege",
                  "nameLocation": "3762:10:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87393,
                  "src": "3746:26:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 87159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3746:15:114",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3745:28:114"
            },
            "returnParameters": {
              "id": 87163,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3800:0:114"
            },
            "scope": 87864,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87544,
            "nodeType": "FunctionDefinition",
            "src": "6518:1355:114",
            "nodes": [],
            "body": {
              "id": 87543,
              "nodeType": "Block",
              "src": "6572:1301:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 87402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6586:22:114",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 87400,
                          "name": "oldProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87395,
                          "src": "6597:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87399,
                        "name": "isProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87052,
                        "src": "6587:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 87401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6587:21:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87407,
                  "nodeType": "IfStatement",
                  "src": "6582:73:114",
                  "trueBody": {
                    "id": 87406,
                    "nodeType": "Block",
                    "src": "6610:45:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87403,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86916,
                            "src": "6631:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6631:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87405,
                        "nodeType": "RevertStatement",
                        "src": "6624:20:114"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    87409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87409,
                      "mutability": "mutable",
                      "name": "actualSponsor",
                      "nameLocation": "6672:13:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87543,
                      "src": "6664:21:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87408,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6664:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87422,
                  "initialValue": {
                    "condition": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 87413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87410,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6689:3:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6693:6:114",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6689:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 87412,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86945,
                            "src": "6703:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6689:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 87414,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6688:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "id": 87419,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6728:3:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 87420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6732:6:114",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6728:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 87421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6688:50:114",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 87417,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6720:4:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                            "typeString": "contract SuperfluidClub"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                            "typeString": "contract SuperfluidClub"
                          }
                        ],
                        "id": 87416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6712:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6712:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6712:13:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6664:74:114"
                },
                {
                  "assignments": [
                    87425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87425,
                      "mutability": "mutable",
                      "name": "protegeInfo",
                      "nameLocation": "6763:11:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87543,
                      "src": "6748:26:114",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege"
                      },
                      "typeName": {
                        "id": 87424,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 87423,
                          "name": "Protege",
                          "nameLocations": [
                            "6748:7:114"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 87942,
                          "src": "6748:7:114"
                        },
                        "referencedDeclaration": 87942,
                        "src": "6748:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                          "typeString": "struct ISuperfluidClub.Protege"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87429,
                  "initialValue": {
                    "baseExpression": {
                      "id": 87426,
                      "name": "_proteges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87032,
                      "src": "6777:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                        "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                      }
                    },
                    "id": 87428,
                    "indexExpression": {
                      "id": 87427,
                      "name": "oldProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87395,
                      "src": "6787:10:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6777:21:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Protege_$87942_storage",
                      "typeString": "struct ISuperfluidClub.Protege storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6748:50:114"
                },
                {
                  "expression": {
                    "id": 87433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "6808:28:114",
                    "subExpression": {
                      "baseExpression": {
                        "id": 87430,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87032,
                        "src": "6815:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87432,
                      "indexExpression": {
                        "id": 87431,
                        "name": "oldProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87395,
                        "src": "6825:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6815:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87434,
                  "nodeType": "ExpressionStatement",
                  "src": "6808:28:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    },
                    "id": 87449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 87444,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6919:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6911:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87442,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6911:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6911:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 87446,
                          "name": "oldProtege",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87395,
                          "src": "6926:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87438,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6892:4:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6884:7:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87436,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6884:7:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6884:13:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 87435,
                            "name": "ISuperToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66999,
                            "src": "6872:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                              "typeString": "type(contract ISuperToken)"
                            }
                          },
                          "id": 87440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6872:26:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISuperToken_$66999",
                            "typeString": "contract ISuperToken"
                          }
                        },
                        "id": 87441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6899:11:114",
                        "memberName": "getFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61880,
                        "src": "6872:38:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_int96_$attached_to$_t_contract$_ISuperToken_$66999_$",
                          "typeString": "function (contract ISuperToken,address,address) view returns (int96)"
                        }
                      },
                      "id": 87447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6872:65:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6940:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6872:69:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87465,
                  "nodeType": "IfStatement",
                  "src": "6868:164:114",
                  "trueBody": {
                    "id": 87464,
                    "nodeType": "Block",
                    "src": "6943:89:114",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 87459,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7003:4:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                    "typeString": "contract SuperfluidClub"
                                  }
                                ],
                                "id": 87458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6995:7:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 87457,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6995:7:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6995:13:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 87461,
                              "name": "oldProtege",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87395,
                              "src": "7010:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 87453,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6977:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                        "typeString": "contract SuperfluidClub"
                                      }
                                    ],
                                    "id": 87452,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6969:7:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 87451,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6969:7:114",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 87454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6969:13:114",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 87450,
                                "name": "ISuperToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66999,
                                "src": "6957:11:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                                  "typeString": "type(contract ISuperToken)"
                                }
                              },
                              "id": 87455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6957:26:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                "typeString": "contract ISuperToken"
                              }
                            },
                            "id": 87456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6984:10:114",
                            "memberName": "deleteFlow",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60629,
                            "src": "6957:37:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66999_$",
                              "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                            }
                          },
                          "id": 87462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6957:64:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 87463,
                        "nodeType": "ExpressionStatement",
                        "src": "6957:64:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 87473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "7080:44:114",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87466,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "7080:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87471,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 87469,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7098:4:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                "typeString": "contract SuperfluidClub"
                              }
                            ],
                            "id": 87468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7090:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 87467,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7090:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7090:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7080:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87472,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7105:17:114",
                      "memberName": "totalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87937,
                      "src": "7080:42:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87474,
                  "nodeType": "ExpressionStatement",
                  "src": "7080:44:114"
                },
                {
                  "expression": {
                    "id": 87480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "7135:56:114",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 87475,
                          "name": "_proteges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87032,
                          "src": "7135:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                            "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                          }
                        },
                        "id": 87478,
                        "indexExpression": {
                          "expression": {
                            "id": 87476,
                            "name": "protegeInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87425,
                            "src": "7145:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                              "typeString": "struct ISuperfluidClub.Protege memory"
                            }
                          },
                          "id": 87477,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7157:7:114",
                          "memberName": "sponsor",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87933,
                          "src": "7145:19:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7135:30:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Protege_$87942_storage",
                          "typeString": "struct ISuperfluidClub.Protege storage ref"
                        }
                      },
                      "id": 87479,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7166:23:114",
                      "memberName": "directTotalProtegeCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 87939,
                      "src": "7135:54:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 87481,
                  "nodeType": "ExpressionStatement",
                  "src": "7135:56:114"
                },
                {
                  "assignments": [
                    87483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87483,
                      "mutability": "mutable",
                      "name": "totalProtegeCount",
                      "nameLocation": "7209:17:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87543,
                      "src": "7202:24:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 87482,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7202:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87488,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 87484,
                        "name": "_proteges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87032,
                        "src": "7229:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                          "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                        }
                      },
                      "id": 87486,
                      "indexExpression": {
                        "id": 87485,
                        "name": "actualSponsor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87409,
                        "src": "7239:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7229:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_storage",
                        "typeString": "struct ISuperfluidClub.Protege storage ref"
                      }
                    },
                    "id": 87487,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7254:17:114",
                    "memberName": "totalProtegeCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87937,
                    "src": "7229:42:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7202:69:114"
                },
                {
                  "assignments": [
                    87490
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87490,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "7289:1:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87543,
                      "src": "7281:9:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87489,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7281:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87493,
                  "initialValue": {
                    "expression": {
                      "id": 87491,
                      "name": "protegeInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87425,
                      "src": "7293:11:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Protege_$87942_memory_ptr",
                        "typeString": "struct ISuperfluidClub.Protege memory"
                      }
                    },
                    "id": 87492,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7305:7:114",
                    "memberName": "sponsor",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 87933,
                    "src": "7293:19:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7281:31:114"
                },
                {
                  "body": {
                    "id": 87541,
                    "nodeType": "Block",
                    "src": "7343:524:114",
                    "statements": [
                      {
                        "assignments": [
                          87499
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 87499,
                            "mutability": "mutable",
                            "name": "sponsorChainInfo",
                            "nameLocation": "7406:16:114",
                            "nodeType": "VariableDeclaration",
                            "scope": 87541,
                            "src": "7390:32:114",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                              "typeString": "struct ISuperfluidClub.Protege"
                            },
                            "typeName": {
                              "id": 87498,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 87497,
                                "name": "Protege",
                                "nameLocations": [
                                  "7390:7:114"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 87942,
                                "src": "7390:7:114"
                              },
                              "referencedDeclaration": 87942,
                              "src": "7390:7:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 87503,
                        "initialValue": {
                          "baseExpression": {
                            "id": 87500,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87032,
                            "src": "7425:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87502,
                          "indexExpression": {
                            "id": 87501,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87490,
                            "src": "7435:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7425:12:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7390:47:114"
                      },
                      {
                        "expression": {
                          "id": 87507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "--",
                          "prefix": false,
                          "src": "7451:36:114",
                          "subExpression": {
                            "expression": {
                              "id": 87504,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87499,
                              "src": "7451:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87506,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7468:17:114",
                            "memberName": "totalProtegeCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87937,
                            "src": "7451:34:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 87508,
                        "nodeType": "ExpressionStatement",
                        "src": "7451:36:114"
                      },
                      {
                        "expression": {
                          "id": 87515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 87509,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87499,
                              "src": "7501:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "7518:15:114",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87941,
                            "src": "7501:32:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 87513,
                                "name": "totalProtegeCount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87483,
                                "src": "7555:17:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 87512,
                              "name": "calculateFlowRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87587,
                              "src": "7537:17:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_int96_$",
                                "typeString": "function (uint32) pure returns (int96)"
                              }
                            },
                            "id": 87514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7537:36:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "src": "7501:72:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          }
                        },
                        "id": 87516,
                        "nodeType": "ExpressionStatement",
                        "src": "7501:72:114"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_int96",
                            "typeString": "int96"
                          },
                          "id": 87520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 87517,
                              "name": "sponsorChainInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87499,
                              "src": "7636:16:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                "typeString": "struct ISuperfluidClub.Protege storage pointer"
                              }
                            },
                            "id": 87518,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7653:15:114",
                            "memberName": "desiredFlowRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 87941,
                            "src": "7636:32:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7672:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7636:37:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 87539,
                          "nodeType": "Block",
                          "src": "7766:91:114",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87534,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87490,
                                    "src": "7806:1:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 87535,
                                      "name": "sponsorChainInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 87499,
                                      "src": "7809:16:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Protege_$87942_storage_ptr",
                                        "typeString": "struct ISuperfluidClub.Protege storage pointer"
                                      }
                                    },
                                    "id": 87536,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7826:15:114",
                                    "memberName": "desiredFlowRate",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 87941,
                                    "src": "7809:32:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_int96",
                                      "typeString": "int96"
                                    }
                                  ],
                                  "id": 87533,
                                  "name": "_createOrUpdateStream",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87157,
                                  "src": "7784:21:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                                    "typeString": "function (address,int96)"
                                  }
                                },
                                "id": 87537,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7784:58:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 87538,
                              "nodeType": "ExpressionStatement",
                              "src": "7784:58:114"
                            }
                          ]
                        },
                        "id": 87540,
                        "nodeType": "IfStatement",
                        "src": "7632:225:114",
                        "trueBody": {
                          "id": 87532,
                          "nodeType": "Block",
                          "src": "7675:85:114",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 87528,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87490,
                                    "src": "7731:1:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 87529,
                                    "name": "oldProtege",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 87395,
                                    "src": "7734:10:114",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 87524,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "7713:4:114",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                                              "typeString": "contract SuperfluidClub"
                                            }
                                          ],
                                          "id": 87523,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7705:7:114",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 87522,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7705:7:114",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 87525,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7705:13:114",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 87521,
                                      "name": "ISuperToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 66999,
                                      "src": "7693:11:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ISuperToken_$66999_$",
                                        "typeString": "type(contract ISuperToken)"
                                      }
                                    },
                                    "id": 87526,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7693:26:114",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ISuperToken_$66999",
                                      "typeString": "contract ISuperToken"
                                    }
                                  },
                                  "id": 87527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "7720:10:114",
                                  "memberName": "deleteFlow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60629,
                                  "src": "7693:37:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ISuperToken_$66999_$_t_address_$_t_address_$returns$_t_bool_$attached_to$_t_contract$_ISuperToken_$66999_$",
                                    "typeString": "function (contract ISuperToken,address,address) returns (bool)"
                                  }
                                },
                                "id": 87530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7693:52:114",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 87531,
                              "nodeType": "ExpressionStatement",
                              "src": "7693:52:114"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "id": 87495,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87490,
                        "src": "7339:1:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87494,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87052,
                      "src": "7329:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7329:12:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87542,
                  "nodeType": "WhileStatement",
                  "src": "7322:545:114"
                }
              ]
            },
            "baseFunctions": [
              87981
            ],
            "functionSelector": "29092d0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remove",
            "nameLocation": "6527:6:114",
            "overrides": {
              "id": 87397,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6563:8:114"
            },
            "parameters": {
              "id": 87396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87395,
                  "mutability": "mutable",
                  "name": "oldProtege",
                  "nameLocation": "6542:10:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87544,
                  "src": "6534:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6534:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6533:20:114"
            },
            "returnParameters": {
              "id": 87398,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6572:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87569,
            "nodeType": "FunctionDefinition",
            "src": "7939:205:114",
            "nodes": [],
            "body": {
              "id": 87568,
              "nodeType": "Block",
              "src": "7973:171:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 87552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "7987:22:114",
                    "subExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 87549,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7998:3:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 87550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8002:6:114",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7998:10:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 87548,
                        "name": "isProtege",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87052,
                        "src": "7988:9:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 87551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7988:21:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87557,
                  "nodeType": "IfStatement",
                  "src": "7983:73:114",
                  "trueBody": {
                    "id": 87556,
                    "nodeType": "Block",
                    "src": "8011:45:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87553,
                            "name": "NOT_PROTEGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86916,
                            "src": "8032:11:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8032:13:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87555,
                        "nodeType": "RevertStatement",
                        "src": "8025:20:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 87559,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8087:3:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8091:6:114",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8087:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 87561,
                            "name": "_proteges",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87032,
                            "src": "8099:9:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Protege_$87942_storage_$",
                              "typeString": "mapping(address => struct ISuperfluidClub.Protege storage ref)"
                            }
                          },
                          "id": 87564,
                          "indexExpression": {
                            "expression": {
                              "id": 87562,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8109:3:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 87563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8113:6:114",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8109:10:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8099:21:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Protege_$87942_storage",
                            "typeString": "struct ISuperfluidClub.Protege storage ref"
                          }
                        },
                        "id": 87565,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8121:15:114",
                        "memberName": "desiredFlowRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87941,
                        "src": "8099:37:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int96",
                          "typeString": "int96"
                        }
                      ],
                      "id": 87558,
                      "name": "_createOrUpdateStream",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87157,
                      "src": "8065:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_int96_$returns$__$",
                        "typeString": "function (address,int96)"
                      }
                    },
                    "id": 87566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8065:72:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87567,
                  "nodeType": "ExpressionStatement",
                  "src": "8065:72:114"
                }
              ]
            },
            "baseFunctions": [
              87985
            ],
            "documentation": {
              "id": 87545,
              "nodeType": "StructuredDocumentation",
              "src": "7879:55:114",
              "text": "@dev ISuperfluidClub.sponsor implementation - WRONG"
            },
            "functionSelector": "57cf7acb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "restartStream",
            "nameLocation": "7948:13:114",
            "parameters": {
              "id": 87546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7961:2:114"
            },
            "returnParameters": {
              "id": 87547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7973:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87587,
            "nodeType": "FunctionDefinition",
            "src": "8219:184:114",
            "nodes": [],
            "body": {
              "id": 87586,
              "nodeType": "Block",
              "src": "8318:85:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 87584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87578,
                      "name": "flowRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87576,
                      "src": "8328:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87580,
                            "name": "MAX_SPONSORSHIP_PATH_OUTFLOW",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87027,
                            "src": "8347:28:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 87581,
                            "name": "totalProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87572,
                            "src": "8378:17:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8347:48:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 87579,
                        "name": "toInt96",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87846,
                        "src": "8339:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int96_$",
                          "typeString": "function (uint256) pure returns (int96)"
                        }
                      },
                      "id": 87583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8339:57:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_int96",
                        "typeString": "int96"
                      }
                    },
                    "src": "8328:68:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "id": 87585,
                  "nodeType": "ExpressionStatement",
                  "src": "8328:68:114"
                }
              ]
            },
            "baseFunctions": [
              87993
            ],
            "documentation": {
              "id": 87570,
              "nodeType": "StructuredDocumentation",
              "src": "8150:64:114",
              "text": "@dev ISuperfluidClub.calculateSponsorFlowRate implementation"
            },
            "functionSelector": "7ae058dc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateFlowRate",
            "nameLocation": "8228:17:114",
            "overrides": {
              "id": 87574,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8284:8:114"
            },
            "parameters": {
              "id": 87573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87572,
                  "mutability": "mutable",
                  "name": "totalProtegeCount",
                  "nameLocation": "8253:17:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87587,
                  "src": "8246:24:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87571,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8246:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8245:26:114"
            },
            "returnParameters": {
              "id": 87577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87576,
                  "mutability": "mutable",
                  "name": "flowRate",
                  "nameLocation": "8308:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87587,
                  "src": "8302:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87575,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8302:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8301:16:114"
            },
            "scope": 87864,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87635,
            "nodeType": "FunctionDefinition",
            "src": "8457:656:114",
            "nodes": [],
            "body": {
              "id": 87634,
              "nodeType": "Block",
              "src": "8546:567:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 87598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87596,
                      "name": "directProtegeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87590,
                      "src": "8560:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "3132",
                      "id": 87597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8582:2:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_12_by_1",
                        "typeString": "int_const 12"
                      },
                      "value": "12"
                    },
                    "src": "8560:24:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 87604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87602,
                        "name": "directProtegeCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87590,
                        "src": "8661:18:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3234",
                        "id": 87603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8683:2:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_24_by_1",
                          "typeString": "int_const 24"
                        },
                        "value": "24"
                      },
                      "src": "8661:24:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 87610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87608,
                          "name": "directProtegeCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87590,
                          "src": "8762:18:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 87609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8784:2:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "8762:24:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 87616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87614,
                            "name": "directProtegeCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87590,
                            "src": "8863:18:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "3438",
                            "id": 87615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8885:2:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_48_by_1",
                              "typeString": "int_const 48"
                            },
                            "value": "48"
                          },
                          "src": "8863:24:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "id": 87622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87620,
                              "name": "directProtegeCount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87590,
                              "src": "8964:18:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "3630",
                              "id": 87621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8986:2:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_60_by_1",
                                "typeString": "int_const 60"
                              },
                              "value": "60"
                            },
                            "src": "8964:24:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 87628,
                            "nodeType": "Block",
                            "src": "9061:46:114",
                            "statements": [
                              {
                                "expression": {
                                  "hexValue": "31",
                                  "id": 87626,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9082:7:114",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1"
                                },
                                "functionReturnParameters": 87595,
                                "id": 87627,
                                "nodeType": "Return",
                                "src": "9075:14:114"
                              }
                            ]
                          },
                          "id": 87629,
                          "nodeType": "IfStatement",
                          "src": "8960:147:114",
                          "trueBody": {
                            "id": 87625,
                            "nodeType": "Block",
                            "src": "8990:65:114",
                            "statements": [
                              {
                                "documentation": "[49;60]",
                                "expression": {
                                  "hexValue": "302e34",
                                  "id": 87623,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9035:9:114",
                                  "subdenomination": "ether",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_400000000000000000_by_1",
                                    "typeString": "int_const 400000000000000000"
                                  },
                                  "value": "0.4"
                                },
                                "functionReturnParameters": 87595,
                                "id": 87624,
                                "nodeType": "Return",
                                "src": "9028:16:114"
                              }
                            ]
                          }
                        },
                        "id": 87630,
                        "nodeType": "IfStatement",
                        "src": "8859:248:114",
                        "trueBody": {
                          "id": 87619,
                          "nodeType": "Block",
                          "src": "8889:65:114",
                          "statements": [
                            {
                              "documentation": "[37;48]",
                              "expression": {
                                "hexValue": "302e33",
                                "id": 87617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8934:9:114",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300000000000000000_by_1",
                                  "typeString": "int_const 300000000000000000"
                                },
                                "value": "0.3"
                              },
                              "functionReturnParameters": 87595,
                              "id": 87618,
                              "nodeType": "Return",
                              "src": "8927:16:114"
                            }
                          ]
                        }
                      },
                      "id": 87631,
                      "nodeType": "IfStatement",
                      "src": "8758:349:114",
                      "trueBody": {
                        "id": 87613,
                        "nodeType": "Block",
                        "src": "8788:65:114",
                        "statements": [
                          {
                            "documentation": "[25;36]",
                            "expression": {
                              "hexValue": "302e32",
                              "id": 87611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8833:9:114",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_200000000000000000_by_1",
                                "typeString": "int_const 200000000000000000"
                              },
                              "value": "0.2"
                            },
                            "functionReturnParameters": 87595,
                            "id": 87612,
                            "nodeType": "Return",
                            "src": "8826:16:114"
                          }
                        ]
                      }
                    },
                    "id": 87632,
                    "nodeType": "IfStatement",
                    "src": "8657:450:114",
                    "trueBody": {
                      "id": 87607,
                      "nodeType": "Block",
                      "src": "8687:65:114",
                      "statements": [
                        {
                          "documentation": "[13;24]",
                          "expression": {
                            "hexValue": "302e31",
                            "id": 87605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8732:9:114",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000_by_1",
                              "typeString": "int_const 100000000000000000"
                            },
                            "value": "0.1"
                          },
                          "functionReturnParameters": 87595,
                          "id": 87606,
                          "nodeType": "Return",
                          "src": "8725:16:114"
                        }
                      ]
                    }
                  },
                  "id": 87633,
                  "nodeType": "IfStatement",
                  "src": "8556:551:114",
                  "trueBody": {
                    "id": 87601,
                    "nodeType": "Block",
                    "src": "8586:65:114",
                    "statements": [
                      {
                        "documentation": "[0;12]",
                        "expression": {
                          "hexValue": "302e3031",
                          "id": 87599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8630:10:114",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "functionReturnParameters": 87595,
                        "id": 87600,
                        "nodeType": "Return",
                        "src": "8623:17:114"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              88001
            ],
            "documentation": {
              "id": 87588,
              "nodeType": "StructuredDocumentation",
              "src": "8409:43:114",
              "text": "@dev ISuperfluidClub.fee implementation"
            },
            "functionSelector": "8934c79a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fee",
            "nameLocation": "8466:3:114",
            "overrides": {
              "id": 87592,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8509:8:114"
            },
            "parameters": {
              "id": 87591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87590,
                  "mutability": "mutable",
                  "name": "directProtegeCount",
                  "nameLocation": "8477:18:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87635,
                  "src": "8470:25:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 87589,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8470:6:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8469:27:114"
            },
            "returnParameters": {
              "id": 87595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87594,
                  "mutability": "mutable",
                  "name": "feeAmount",
                  "nameLocation": "8535:9:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87635,
                  "src": "8527:17:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87593,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8527:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8526:19:114"
            },
            "scope": 87864,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87667,
            "nodeType": "FunctionDefinition",
            "src": "9119:295:114",
            "nodes": [],
            "body": {
              "id": 87666,
              "nodeType": "Block",
              "src": "9190:224:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87643,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87637,
                      "src": "9204:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9224:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9216:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9216:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9216:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9204:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87653,
                  "nodeType": "IfStatement",
                  "src": "9200:74:114",
                  "trueBody": {
                    "id": 87652,
                    "nodeType": "Block",
                    "src": "9228:46:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87649,
                            "name": "ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86930,
                            "src": "9249:12:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9249:14:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87651,
                        "nodeType": "RevertStatement",
                        "src": "9242:21:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 87655,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87637,
                        "src": "9297:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87654,
                      "name": "isProtege",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87052,
                      "src": "9287:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 87656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9287:19:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87661,
                  "nodeType": "IfStatement",
                  "src": "9283:87:114",
                  "trueBody": {
                    "id": 87660,
                    "nodeType": "Block",
                    "src": "9308:62:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87657,
                            "name": "CLUB_PROTEGE_CANNOT_BE_OWNER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86920,
                            "src": "9329:28:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9329:30:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87659,
                        "nodeType": "RevertStatement",
                        "src": "9322:37:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87663,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87637,
                        "src": "9398:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87662,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87686,
                      "src": "9379:18:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:28:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87665,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:28:114"
                }
              ]
            },
            "baseFunctions": [
              87896
            ],
            "functionSelector": "f2fde38b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87641,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87640,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9180:9:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86943,
                  "src": "9180:9:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "9180:9:114"
              }
            ],
            "name": "transferOwnership",
            "nameLocation": "9128:17:114",
            "overrides": {
              "id": 87639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9171:8:114"
            },
            "parameters": {
              "id": 87638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87637,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "9154:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87667,
                  "src": "9146:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87636,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9146:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9145:18:114"
            },
            "returnParameters": {
              "id": 87642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9190:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 87686,
            "nodeType": "FunctionDefinition",
            "src": "9420:177:114",
            "nodes": [],
            "body": {
              "id": 87685,
              "nodeType": "Block",
              "src": "9475:122:114",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87673,
                      "mutability": "mutable",
                      "name": "oldOwner",
                      "nameLocation": "9493:8:114",
                      "nodeType": "VariableDeclaration",
                      "scope": 87685,
                      "src": "9485:16:114",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 87672,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9485:7:114",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87675,
                  "initialValue": {
                    "id": 87674,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 86945,
                    "src": "9504:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9485:24:114"
                },
                {
                  "expression": {
                    "id": 87678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87676,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86945,
                      "src": "9519:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 87677,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87669,
                      "src": "9527:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9519:16:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 87679,
                  "nodeType": "ExpressionStatement",
                  "src": "9519:16:114"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 87681,
                        "name": "oldOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87673,
                        "src": "9571:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87682,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87669,
                        "src": "9581:8:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 87680,
                      "name": "OwnershipTransferred",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 86951,
                      "src": "9550:20:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 87683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9550:40:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87684,
                  "nodeType": "EmitStatement",
                  "src": "9545:45:114"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferOwnership",
            "nameLocation": "9429:18:114",
            "parameters": {
              "id": 87670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87669,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "9456:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87686,
                  "src": "9448:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9448:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9447:18:114"
            },
            "returnParameters": {
              "id": 87671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9475:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87737,
            "nodeType": "FunctionDefinition",
            "src": "9656:385:114",
            "nodes": [],
            "body": {
              "id": 87736,
              "nodeType": "Block",
              "src": "9736:305:114",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 87702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87697,
                      "name": "receiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87689,
                      "src": "9750:8:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 87700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9770:1:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 87699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9762:7:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 87698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9762:7:114",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 87701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9762:10:114",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9750:22:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87707,
                  "nodeType": "IfStatement",
                  "src": "9746:74:114",
                  "trueBody": {
                    "id": 87706,
                    "nodeType": "Block",
                    "src": "9774:46:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87703,
                            "name": "ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86930,
                            "src": "9795:12:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9795:14:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87705,
                        "nodeType": "RevertStatement",
                        "src": "9788:21:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 87708,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87691,
                      "src": "9833:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 87709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9843:1:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9833:11:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87715,
                  "nodeType": "IfStatement",
                  "src": "9829:65:114",
                  "trueBody": {
                    "id": 87714,
                    "nodeType": "Block",
                    "src": "9846:48:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87711,
                            "name": "INVALID_AMOUNT",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86926,
                            "src": "9867:14:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9867:16:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87713,
                        "nodeType": "RevertStatement",
                        "src": "9860:23:114"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 87722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 87718,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9915:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9907:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87716,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9907:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9907:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9921:7:114",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "9907:21:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 87721,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87691,
                      "src": "9931:6:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9907:30:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87727,
                  "nodeType": "IfStatement",
                  "src": "9903:88:114",
                  "trueBody": {
                    "id": 87726,
                    "nodeType": "Block",
                    "src": "9939:52:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87723,
                            "name": "NOT_ENOUGH_BALANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86928,
                            "src": "9960:18:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9960:20:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87725,
                        "nodeType": "RevertStatement",
                        "src": "9953:27:114"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87733,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87691,
                        "src": "10027:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 87730,
                            "name": "receiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87689,
                            "src": "10008:8:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10000:8:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 87728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10000:8:114",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10000:17:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 87732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10018:8:114",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "10000:26:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 87734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10000:34:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87735,
                  "nodeType": "ExpressionStatement",
                  "src": "10000:34:114"
                }
              ]
            },
            "baseFunctions": [
              88009
            ],
            "documentation": {
              "id": 87687,
              "nodeType": "StructuredDocumentation",
              "src": "9603:48:114",
              "text": "@dev ISuperfluidClub.withdraw implementation"
            },
            "functionSelector": "f3fef3a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87694,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "9726:9:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86943,
                  "src": "9726:9:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "9726:9:114"
              }
            ],
            "name": "withdraw",
            "nameLocation": "9665:8:114",
            "overrides": {
              "id": 87693,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9717:8:114"
            },
            "parameters": {
              "id": 87692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87689,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "9682:8:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87737,
                  "src": "9674:16:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9674:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87691,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9700:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87737,
                  "src": "9692:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9692:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9673:34:114"
            },
            "returnParameters": {
              "id": 87696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9736:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87760,
            "nodeType": "FunctionDefinition",
            "src": "10096:116:114",
            "nodes": [],
            "body": {
              "id": 87759,
              "nodeType": "Block",
              "src": "10145:67:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87750,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10177:4:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                              "typeString": "contract SuperfluidClub"
                            }
                          ],
                          "id": 87749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10169:7:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87748,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10169:7:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10169:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87752,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87740,
                        "src": "10184:6:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 87755,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10202:1:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 87754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "10192:9:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (bytes memory)"
                          },
                          "typeName": {
                            "id": 87753,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "10196:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          }
                        },
                        "id": 87756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10192:12:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 87745,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "10155:4:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SuperfluidClub_$87864",
                          "typeString": "contract SuperfluidClub"
                        }
                      },
                      "id": 87747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10160:8:114",
                      "memberName": "selfMint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 89160,
                      "src": "10155:13:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 87757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10155:50:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87758,
                  "nodeType": "ExpressionStatement",
                  "src": "10155:50:114"
                }
              ]
            },
            "baseFunctions": [
              88015
            ],
            "documentation": {
              "id": 87738,
              "nodeType": "StructuredDocumentation",
              "src": "10047:44:114",
              "text": "@dev ISuperfluidClub.mint implementation"
            },
            "functionSelector": "a0712d68",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87742,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10135:9:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86943,
                  "src": "10135:9:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "10135:9:114"
              }
            ],
            "name": "mint",
            "nameLocation": "10105:4:114",
            "parameters": {
              "id": 87741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87740,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10118:6:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87760,
                  "src": "10110:14:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10110:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10109:16:114"
            },
            "returnParameters": {
              "id": 87744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10145:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87771,
            "nodeType": "FunctionDefinition",
            "src": "10218:161:114",
            "nodes": [],
            "body": {
              "id": 87770,
              "nodeType": "Block",
              "src": "10290:89:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6f72672e7375706572666c7569642d66696e616e63652e636f6e7472616374732e636c75622e696d706c656d656e746174696f6e",
                        "id": 87767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10317:54:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        },
                        "value": "org.superfluid-finance.contracts.club.implementation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e438b61c5ae6309c126c34745a1d75e0e5b69a37085ad47b7d9802d1366b0db9",
                          "typeString": "literal_string \"org.superfluid-finance.contracts.club.implementation\""
                        }
                      ],
                      "id": 87766,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10307:9:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 87768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10307:65:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 87765,
                  "id": 87769,
                  "nodeType": "Return",
                  "src": "10300:72:114"
                }
              ]
            },
            "baseFunctions": [
              77473
            ],
            "functionSelector": "52d1902d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proxiableUUID",
            "nameLocation": "10227:13:114",
            "overrides": {
              "id": 87762,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10263:8:114"
            },
            "parameters": {
              "id": 87761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10240:2:114"
            },
            "returnParameters": {
              "id": 87765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87764,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87771,
                  "src": "10281:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 87763,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10281:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10280:9:114"
            },
            "scope": 87864,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 87806,
            "nodeType": "FunctionDefinition",
            "src": "10385:621:114",
            "nodes": [],
            "body": {
              "id": 87805,
              "nodeType": "Block",
              "src": "10453:553:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87782,
                        "name": "newAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87773,
                        "src": "10496:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 87779,
                        "name": "UUPSProxiable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77533,
                        "src": "10463:13:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UUPSProxiable_$77533_$",
                          "typeString": "type(contract UUPSProxiable)"
                        }
                      },
                      "id": 87781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10477:18:114",
                      "memberName": "_updateCodeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 77526,
                      "src": "10463:32:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 87783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:44:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87784,
                  "nodeType": "ExpressionStatement",
                  "src": "10463:44:114"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 87799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                        "typeString": "contract IConstantOutflowNFT"
                      },
                      "id": 87791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87785,
                        "name": "CONSTANT_OUTFLOW_NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88081,
                        "src": "10769:20:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 87787,
                                "name": "newAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87773,
                                "src": "10804:10:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 87786,
                              "name": "SuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89793,
                              "src": "10793:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SuperToken_$89793_$",
                                "typeString": "type(contract SuperToken)"
                              }
                            },
                            "id": 87788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10793:22:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperToken_$89793",
                              "typeString": "contract SuperToken"
                            }
                          },
                          "id": 87789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10816:20:114",
                          "memberName": "CONSTANT_OUTFLOW_NFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88081,
                          "src": "10793:43:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantOutflowNFT_$66310_$",
                            "typeString": "function () view external returns (contract IConstantOutflowNFT)"
                          }
                        },
                        "id": 87790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10793:45:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantOutflowNFT_$66310",
                          "typeString": "contract IConstantOutflowNFT"
                        }
                      },
                      "src": "10769:69:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                        "typeString": "contract IConstantInflowNFT"
                      },
                      "id": 87798,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 87792,
                        "name": "CONSTANT_INFLOW_NFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88084,
                        "src": "10858:19:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 87794,
                                "name": "newAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87773,
                                "src": "10892:10:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 87793,
                              "name": "SuperToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89793,
                              "src": "10881:10:114",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SuperToken_$89793_$",
                                "typeString": "type(contract SuperToken)"
                              }
                            },
                            "id": 87795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10881:22:114",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SuperToken_$89793",
                              "typeString": "contract SuperToken"
                            }
                          },
                          "id": 87796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10904:19:114",
                          "memberName": "CONSTANT_INFLOW_NFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 88084,
                          "src": "10881:42:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IConstantInflowNFT_$66256_$",
                            "typeString": "function () view external returns (contract IConstantInflowNFT)"
                          }
                        },
                        "id": 87797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10881:44:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IConstantInflowNFT_$66256",
                          "typeString": "contract IConstantInflowNFT"
                        }
                      },
                      "src": "10858:67:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10769:156:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87804,
                  "nodeType": "IfStatement",
                  "src": "10752:248:114",
                  "trueBody": {
                    "id": 87803,
                    "nodeType": "Block",
                    "src": "10936:64:114",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 87800,
                            "name": "CLUB_NFT_PROXY_ADDRESS_CHANGED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86912,
                            "src": "10957:30:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 87801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10957:32:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 87802,
                        "nodeType": "RevertStatement",
                        "src": "10950:39:114"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              77461
            ],
            "functionSelector": "46951954",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87777,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 87776,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "10443:9:114"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 86943,
                  "src": "10443:9:114"
                },
                "nodeType": "ModifierInvocation",
                "src": "10443:9:114"
              }
            ],
            "name": "updateCode",
            "nameLocation": "10394:10:114",
            "overrides": {
              "id": 87775,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10434:8:114"
            },
            "parameters": {
              "id": 87774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87773,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "10413:10:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87806,
                  "src": "10405:18:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10405:7:114",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10404:20:114"
            },
            "returnParameters": {
              "id": 87778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10453:0:114"
            },
            "scope": 87864,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87812,
            "nodeType": "FunctionDefinition",
            "src": "11055:38:114",
            "nodes": [],
            "body": {
              "id": 87811,
              "nodeType": "Block",
              "src": "11091:2:114",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              88028
            ],
            "documentation": {
              "id": 87807,
              "nodeType": "StructuredDocumentation",
              "src": "11012:38:114",
              "text": " @dev receive ethers"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 87809,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11082:8:114"
            },
            "parameters": {
              "id": 87808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11062:2:114"
            },
            "returnParameters": {
              "id": 87810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11091:0:114"
            },
            "scope": 87864,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87846,
            "nodeType": "FunctionDefinition",
            "src": "11245:178:114",
            "nodes": [],
            "body": {
              "id": 87845,
              "nodeType": "Block",
              "src": "11307:116:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87821,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87815,
                          "src": "11325:5:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 87828,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11354:5:114",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        },
                                        "typeName": {
                                          "id": 87827,
                                          "name": "int96",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11354:5:114",
                                          "typeDescriptions": {}
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_int96_$",
                                          "typeString": "type(int96)"
                                        }
                                      ],
                                      "id": 87826,
                                      "name": "type",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -27,
                                      "src": "11349:4:114",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 87829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11349:11:114",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_meta_type_t_int96",
                                      "typeString": "type(int96)"
                                    }
                                  },
                                  "id": 87830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "11361:3:114",
                                  "memberName": "max",
                                  "nodeType": "MemberAccess",
                                  "src": "11349:15:114",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int96",
                                    "typeString": "int96"
                                  }
                                ],
                                "id": 87825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11342:6:114",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint96_$",
                                  "typeString": "type(uint96)"
                                },
                                "typeName": {
                                  "id": 87824,
                                  "name": "uint96",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11342:6:114",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 87831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11342:23:114",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 87823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11334:7:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 87822,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11334:7:114",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 87832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11334:32:114",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11325:41:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f766572666c6f77",
                        "id": 87834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11368:10:114",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        },
                        "value": "overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e321c6a5e89c744b346245e8deb8246bab3046f6eeaf1ce5967c67a96ba1590f",
                          "typeString": "literal_string \"overflow\""
                        }
                      ],
                      "id": 87820,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11317:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11317:62:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87836,
                  "nodeType": "ExpressionStatement",
                  "src": "11317:62:114"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87841,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87815,
                            "src": "11409:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 87840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11402:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87839,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "11402:6:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11402:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11396:5:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_int96_$",
                        "typeString": "type(int96)"
                      },
                      "typeName": {
                        "id": 87837,
                        "name": "int96",
                        "nodeType": "ElementaryTypeName",
                        "src": "11396:5:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11396:20:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "functionReturnParameters": 87819,
                  "id": 87844,
                  "nodeType": "Return",
                  "src": "11389:27:114"
                }
              ]
            },
            "documentation": {
              "id": 87813,
              "nodeType": "StructuredDocumentation",
              "src": "11099:141:114",
              "text": " @dev converts a uint256 to int96\n @param value The uint256 value to convert\n @return The converted int96 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toInt96",
            "nameLocation": "11254:7:114",
            "parameters": {
              "id": 87816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87815,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11270:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87846,
                  "src": "11262:13:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11262:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11261:15:114"
            },
            "returnParameters": {
              "id": 87819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87846,
                  "src": "11300:5:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87817,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11300:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11299:7:114"
            },
            "scope": 87864,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 87863,
            "nodeType": "FunctionDefinition",
            "src": "11575:110:114",
            "nodes": [],
            "body": {
              "id": 87862,
              "nodeType": "Block",
              "src": "11639:46:114",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87858,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87849,
                            "src": "11671:5:114",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int96",
                              "typeString": "int96"
                            }
                          ],
                          "id": 87857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11664:6:114",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 87856,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "11664:6:114",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11664:13:114",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 87855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "11656:7:114",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 87854,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11656:7:114",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 87860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11656:22:114",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 87853,
                  "id": 87861,
                  "nodeType": "Return",
                  "src": "11649:29:114"
                }
              ]
            },
            "documentation": {
              "id": 87847,
              "nodeType": "StructuredDocumentation",
              "src": "11429:141:114",
              "text": " @dev converts a int96 to uint256\n @param value The int96 value to convert\n @return The converted uint256 value"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toUint256",
            "nameLocation": "11584:9:114",
            "parameters": {
              "id": 87850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87849,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "11600:5:114",
                  "nodeType": "VariableDeclaration",
                  "scope": 87863,
                  "src": "11594:11:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int96",
                    "typeString": "int96"
                  },
                  "typeName": {
                    "id": 87848,
                    "name": "int96",
                    "nodeType": "ElementaryTypeName",
                    "src": "11594:5:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int96",
                      "typeString": "int96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11593:13:114"
            },
            "returnParameters": {
              "id": 87853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87852,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 87863,
                  "src": "11630:7:114",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 87851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11630:7:114",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11629:9:114"
            },
            "scope": 87864,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86901,
              "name": "ISuperfluidClub",
              "nameLocations": [
                "851:15:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 88029,
              "src": "851:15:114"
            },
            "id": 86902,
            "nodeType": "InheritanceSpecifier",
            "src": "851:15:114"
          },
          {
            "baseName": {
              "id": 86903,
              "name": "SuperToken",
              "nameLocations": [
                "868:10:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 89793,
              "src": "868:10:114"
            },
            "id": 86904,
            "nodeType": "InheritanceSpecifier",
            "src": "868:10:114"
          },
          {
            "baseName": {
              "id": 86905,
              "name": "UUPSProxiable",
              "nameLocations": [
                "880:13:114"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 77533,
              "src": "880:13:114"
            },
            "id": 86906,
            "nodeType": "InheritanceSpecifier",
            "src": "880:13:114"
          }
        ],
        "canonicalName": "SuperfluidClub",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 86900,
          "nodeType": "StructuredDocumentation",
          "src": "718:104:114",
          "text": " @title Superfluid Club\n @dev Contract that facilitates the operations of a superfluid club."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          87864,
          77533,
          43957,
          89793,
          88029,
          87897,
          66999,
          45365,
          44622,
          68177,
          77221,
          68097
        ],
        "name": "SuperfluidClub",
        "nameLocation": "833:14:114",
        "scope": 87865,
        "usedErrors": [
          66556,
          66558,
          66560,
          66562,
          66564,
          66566,
          66568,
          66570,
          66572,
          66574,
          66576,
          66578,
          66580,
          66582,
          67818,
          67820,
          67822,
          67824,
          67826,
          67828,
          86912,
          86914,
          86916,
          86918,
          86920,
          86922,
          86924,
          86926,
          86928,
          86930
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 114
}